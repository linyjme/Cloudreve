{"version":3,"sources":["middleware/Api.js","redux/explorer/reducer.ts","utils/page.js","component/Dial/AutoHidden.js","component/Placeholder/TextLoading.js","component/Navbar/DarkModeSwitcher.js","component/FileManager/Navigator/SubActions.js","component/Dial/Save.js","component/Modals/Loading.js","component/Modals/Copy.js","component/Modals/CreateShare.js","component/Modals/Decompress.js","component/Modals/Compress.js","component/FileManager/Modals.js","middleware/Auth.ts","component/Viewer/Text.js","component/Viewer/Code.js","utils/index.js","component/Common/Snackbar.js","component/Navbar/UserAvatarPopover.js","component/Navbar/UserAvatar.js","component/Navbar/Navbar.js","component/Navbar/SearchBar.js","component/Navbar/StorageBar.js","component/Navbar/UserInfo.js","component/Navbar/FileTags.js","component/FileManager/ImgPreview.js","actions/explorer.js","actions/index.js","component/Uploader/core/types.ts","component/Uploader/core/logger.ts","component/Uploader/core/utils/pool.ts","component/Uploader/core/utils/helper.ts","component/Uploader/core/utils/validator.ts","component/Uploader/core/errors/index.ts","component/Uploader/core/utils/request.ts","component/Uploader/core/uploader/base.ts","component/Uploader/core/api/index.ts","component/Uploader/core/uploader/chunk.ts","component/Uploader/core/uploader/local.ts","component/Uploader/core/uploader/remote.ts","component/Uploader/core/index.ts","component/Dial/Create.js","component/Uploader/Popup/UploadTask.js","component/Uploader/UseUpload.js","component/Uploader/Popup/MoreActions.js","component/Uploader/Popup/TaskList.js","component/Uploader/Uploader.js","config.js","utils/datetime.js","component/FileManager/TypeIcon.js","redux/viewUpdate/action.ts","serviceWorker.js","middleware/AuthRoute.js","component/Share/NotFound.js","component/Common/ICPFooter.js","component/Placeholder/Captcha.js","hooks/normal.js","component/Login/ReCaptchaWrapper.js","component/Login/ReCaptcha.js","hooks/recaptcha.js","hooks/tcaptcha.js","hooks/useCaptcha.js","component/Login/LoginForm.js","component/FileManager/SmallIcon.js","component/FileManager/FileIcon.js","component/FileManager/Folder.js","component/FileManager/DnD/Preview.js","component/FileManager/DnD/DragLayer.js","redux/explorer/index.ts","component/FileManager/ContextMenu.js","component/FileManager/TableRow.js","component/FileManager/DnD/DropWarpper.js","component/FileManager/ObjectIcon.js","component/FileManager/Explorer.js","component/FileManager/Navigator/PathButton.js","component/FileManager/Navigator/DropDownItem.js","component/FileManager/Navigator/DropDown.js","component/FileManager/Navigator/Navigator.js","component/Placeholder/ListLoading.js","component/FileManager/Sidebar/SideDrawer.js","component/FileManager/FileManager.js","component/Viewer/Video.js","component/Share/SearchResult.js","component/Share/MyShare.js","component/Modals/SelectFile.js","component/Download/DownloadingCard.js","component/Download/FinishedCard.js","component/Dial/Aria2.js","component/Download/Download.js","component/Placeholder/PageLoading.js","component/Share/LockedFile.js","component/Share/Creator.js","component/Share/SharedFile.js","component/Share/SharedFolder.js","component/Share/SharePreload.js","component/Viewer/Doc.js","component/Modals/CreateWebDAVAccount.js","component/Setting/WebDAV.js","component/Setting/Tasks.js","component/Setting/Profile.js","component/Setting/Authn.js","component/Modals/TimeZone.js","component/Setting/UserSetting.js","component/Login/Register.js","component/Login/Activication.js","component/Login/ResetForm.js","component/Login/Reset.js","component/FileManager/MusicPlayer.js","App.js","middleware/Init.js","redux/viewUpdate/reducer.ts","reducers/index.js","component/Placeholder/ErrorBoundary.js","index.js","redux/combineReducers.ts","component/FileManager/PathSelector.js","redux/explorer/action.ts"],"names":["baseURL","getBaseURL","instance","axios","create","withCredentials","crossDomain","AppError","message","code","error","this","stack","Error","prototype","Object","constructor","interceptors","response","use","rawData","data","undefined","Auth","signout","window","location","href","msg","Promise","reject","initState","dndSignal","dndTarget","dndSource","fileList","dirList","selected","selectProps","isMultiple","withFolder","withFile","lastSelect","file","id","name","size","type","date","index","shiftSelectedIds","imgPreview","first","other","audioPreview","playingName","paused","isOpen","keywords","fileSave","sideBarOpen","checkSelectedProps","length","forEach","value","explorer","state","action","assign","target","source","list","addedSelected","targets","newSelected","fileIds","filteredSelected","filter","includes","open","currentPolicy","policy","statusHelper","isHomePage","path","isSharePage","startsWith","isAdminPage","isLoginPage","isMobile","innerWidth","AutoHidden","children","enable","hide","useState","hidden","setHidden","prev","scrollY","lastUpdate","useEffect","addEventListener","e","currentTarget","handleNavigation","in","useStyles","makeStyles","theme","loader","width","padding","breakpoints","down","MyLoader","props","backgroundColor","dark","foregroundColor","className","TextLoading","useTheme","classes","palette","icon","color","opacity","DarkModeSwitcher","position","ThemeType","useSelector","siteConfig","dispatch","useDispatch","ToggleThemeMode","useCallback","toggleDaylightMode","isDayLight","isDark","title","placement","classNames","onClick","SetPreference","sideButton","marginRight","sortOptions","SubActions","isSmall","share","inherit","viewMethod","viewUpdate","explorerViewMethod","OpenLoadingDialog","method","changeViewMethod","ChangeSortMethod","changeSortMethod","SetShareUserPopover","setShareUserPopover","anchorSort","setAnchorSort","selectedIndex","setSelectedIndex","toggleViewMethod","newMethod","fontSize","anchorEl","Boolean","onClose","map","option","key","event","0","1","2","3","4","5","handleMenuItemClick","creator","nick","style","height","src","fab","margin","top","right","bottom","left","zIndex","badge","fabProgress","green","wrapper","spacing","buttonSuccess","SaveButton","buttonClassname","clsx","status","disabled","aria-label","avatar","blue","loadingContainer","display","loading","marginTop","marginLeft","LoadingDialog","modals","text","loadingText","Dialog","aria-labelledby","DialogContent","DialogContentText","CircularProgress","contentFix","buttonProgress","secondary","light","CopyDialog","selectedPath","setSelectedPath","selectedPathName","setSelectedPathName","ToggleSnackbar","vertical","horizontal","toggleSnackbar","SetModalsLoading","setModalsLoading","RefreshFileList","refreshFileList","DialogTitle","PathSelector","presentPath","onSelect","folder","DialogActions","Button","preventDefault","dirs","items","push","API","post","src_dir","dst","then","catch","modalsLoading","widthAnimation","shareUrl","minWidth","flexCenter","alignItems","noFlex","scoreCalc","ExpansionPanel","withStyles","root","border","boxShadow","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","content","MuiExpansionPanelSummary","ExpansionPanelDetails","background","default","MuiExpansionPanelDetails","CreatShare","React","setExpanded","shareURL","setShareURL","password","downloads","expires","showPassword","values","setValues","expire","preview","shareOption","setShareOption","handleChange","prop","handleExpand","panel","isExpanded","handleCheck","setTimeout","maxWidth","fullWidth","Divider","List","onChange","aria-controls","ListItem","button","ListItemIcon","ListItemText","primary","ListItemSecondaryAction","Checkbox","checked","FormControl","variant","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","Tooltip","IconButton","Math","random","toString","substr","slice","edge","onMouseDown","on","onIcon","Visibility","offIcon","VisibilityOff","labelWidth","Select","labelId","MenuItem","Typography","TextField","onFocus","select","autoFocus","inputProps","readonly","label","submitFormBody","is_dir","DecompressDialog","filePath","CompressDialog","fileName","setFileName","ModalsCompoment","newFolderName","newFileName","newName","secretShare","sharePwd","downloadURL","remoteDownloadPathSelect","purchaseCallback","handleInputChange","setState","newNameSuffix","downloaded","UNSAFE_componentWillReceiveProps","nextProps","dndSignale","modalsStatus","rename","getSource","get","url","pathHelper","pathname","score","scoreHandler","archiveDownload","Download","dragMove","callback","reqURL","downloadPath","encodeURIComponent","put","postBody","shareInfo","refreshStorage","submitRemove","delete","submitMove","patch","DragSelectedPath","closeAllModals","doMove","openLoadingDialog","submitRename","findIndex","new_name","submitCreateNewFolder","submitCreateNewFile","submitTorrentDownload","submitDownload","setMoveTarget","remoteDownloadNext","onSubmit","createNewFolder","createNewFile","copy","move","remove","music","controls","remoteDownload","placeholder","torrentDownload","decompress","compress","Component","Modals","connect","navigator","withRouter","isAuthenticated","authenticate","cb","SetUser","GetUser","JSON","parse","localStorage","getItem","newUser","setItem","stringify","Check","anonymous","oldUser","preference","GetPreference","layout","up","player","borderRadius","overflowX","TextViewer","setContent","setStatus","setLoading","math","useRouteMatch","$vm","createRef","useLocation","query","URLSearchParams","search","useParams","SetSubTitle","changeSubTitle","split","params","requestURL","responseType","textdata","Buffer","toBase64","resolve","reader","FileReader","readAsDataURL","onload","result","onerror","save","addImg","$file","a","current","$img2Url","console","log","elevation","ref","onSave","toolbar","h1","h2","h3","h4","img","link","expand","undo","redo","subfield","MonacoEditor","lazy","editor","formControl","toobar","textAlign","CodeViewer","suffix","setSuffix","wordWrap","setWordWrap","extension","codePreviewSuffix","pop","control","Array","from","Set","keys","k","fallback","language","options","readOnly","extraEditorClassName","sizeToString","bytes","i","floor","pow","toFixed","fixUrlHash","setGetParameter","paramName","paramValue","indexOf","prefix","substring","history","pushState","allowSharePreview","allowPreview","userInfo","uid","checkGetParameters","field","changeThemeColor","document","querySelector","setAttribute","bufferDecode","Uint8Array","atob","c","charCodeAt","bufferEncode","btoa","String","fromCharCode","apply","replace","pathBack","folders","join","hex2bin","hex","parseInt","padStart","filename","randomStr","characters","charactersLength","charAt","getNumber","base","conditions","v","isMac","platform","toUpperCase","vhCheck","vh","innerHeight","documentElement","setProperty","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","main","iconVariant","Icon","aria-describedby","close","SnackbarCompoment","snackbar","toggle","handleClose","anchorOrigin","autoHideDuration","AlertBar","UserAvatarPopoverCompoment","setUserPopover","openURL","sigOut","reload","setSessionStatus","user","Popover","transformOrigin","visitorMenu","header","largeAvatarContainer","Avatar","largeAvatar","noWrap","nickname","user_name","Chip","group","UserAvatarPopover","userPopoverAnchorEl","anchor","UserAvatarCompoment","showUserInfo","returnHome","loginCheck","isLogin","mobileHidden","Grow","Home","UserAvatar","NavbarCompoment","handleDrawerToggle","mobileOpen","openDownload","signOut","finally","UploaderRef","unlisten","listen","drawer","upDrawer","minStickDrawer","iconFix","webdav","iOS","process","browser","test","userAgent","appBar","menuButton","handleDesktopToggle","desktopOpen","menuButtonDesktop","menuIcon","setSelectedTarget","subTitle","grow","sectionForFile","saveFile","isPreviewable","openPreview","allowArchiveDownload","navigateTo","openShareDialog","openRenameDialog","openMoveDialog","openRemoveDialog","changeContextMenu","audioPreviewPlayingName","audioPreviewOpen","smUp","implementation","container","paper","drawerPaper","onOpen","disableDiscovery","ModalProps","keepMounted","xsDown","drawerPaperDesktop","drawerOpen","drawerClose","Navbar","loadUploader","audioPreviewIsOpen","drawerToggleAction","openCreateFolderDialog","searchMyFile","openMusicDialog","showImgPreivew","audioPreviewSetIsOpen","withTheme","flexShrink","drawerDesktop","mixins","transition","transitions","easing","sharp","duration","enteringScreen","leavingScreen","flexGrow","nested","paddingLeft","extendedIcon","addButton","marginBottom","fabButton","badgeFix","dividerFix","folderShareIcon","verticalAlign","shareInfoContainer","textDecoration","shareAvatar","stickFooter","ownerInfo","overflowY","minHeight","configure","ignoreTags","keyMap","SEARCH","SearchBarCompoment","handlers","searchShare","blur","input","cancelSuggest","searchIcon","inputRoot","inputInput","onBlur","suggestBox","TransitionProps","timeout","square","SearchBar","shape","fade","common","white","pointerEvents","justifyContent","paddingTop","paddingRight","paddingBottom","StorageBarCompoment","percent","used","total","showExpand","firstLoad","componentDidMount","updateStatus","refresh","onMouseEnter","onMouseLeave","storageContainer","detail","bar","StorageBar","storageRefresh","textFix","overflow","textOverflow","UserInfoCompoment","userNav","flexAvatar","avatarImg","storageCircle","nickName","component","groupName","UserInfo","backgroundImage","backgroundSize","transform","hiddenButton","subMenu","overFlow","whiteSpace","icons","Circle","CircleOutline","Heart","HeartOutline","Hexagon","HexagonOutline","Hexagram","HexagramOutline","Rhombus","RhombusOutline","Square","SquareOutline","Triangle","TriangleOutline","FolderHeartOutline","AddTag","FileTag","useHistory","tagOpen","setTagOpen","addTagModal","setAddTagModal","tagHover","setTagHover","tags","setTags","SearchMyFile","NavigateTo","onSuccess","tag","newTags","iconVideo","iconImg","iconAudio","iconDoc","expression","IconComponent","getIcon","ImagPreviewComponent","photoIndex","firstOne","newImg","intro","fileType","toLowerCase","imgPreviewSuffix","images","visible","onIndexChange","n","ImgPreivew","removeSelectedTargets","addSelectedTargets","getState","router","isShare","shareDownload","previewPath","showAudioPreview","selectFile","fileIndex","ctrlKey","metaKey","shiftKey","isMacbook","begin","min","end","max","newShiftSelected","setLastSelect","setNavigator","navigatorLoading","navigateUp","pathSplit","newPath","dragAndDrop","menuType","setNavigatorLoadingStatus","setNavigatorError","openCreateFileDialog","openResaveDialog","applyThemes","openRemoteDownloadDialog","openTorrentDownloadDialog","openDecompressDialog","openCompressDialog","openGetSourceDialog","openCopyDialog","audioPreviewSetPlaying","setSiteConfig","config","PolicyType","TaskType","Logger","level","allowLevel","args","getPrintPrefix","warn","Pool","limit","queue","processing","uploader","check","item","run","release","err","processingNum","availableNum","getResumeCtxKey","task","removeResumeCtx","logger","ctxKey","removeItem","UploaderError","UploaderErrorName","RemoveCtxFailed","getResumeCtx","localInfoString","ReadCtxFailed","localInfo","InvalidCtxData","session","Date","now","CtxExpired","checkers","allowedSuffix","ext","FileValidateError","maxSize","validate","CancelToken","defaultConfig","transformResponse","requestAPI","request","isCancel","RequestCanceledError","HTTPError","Status","RETRY_ERROR_LIST","FailedCreateUploadSession","HTTPRequestFailed","LocalChunkUploadFailed","SlaveChunkUploadFailed","RequestCanceled","RETRY_CODE_LIST","i18n","InvalidFile","UnknownPolicyError","UnknownPolicyType","APIError","CreateUploadSessionError","DeleteUploadSessionError","FailedDeleteUploadSession","axiosErr","LocalChunkUploadError","chunkIndex","SlaveChunkUploadError","createUploadSession","req","cancel","cancelToken","res","localUploadChunk","sessionID","chunk","onProgress","headers","onUploadProgress","progressEvent","loaded","slaveUploadChunk","credential","Authorization","resumePolicy","local","remote","qiniu","oss","onedrive","Base","manager","child","added","subscriber","progress","subscribe","start","transit","initialized","setError","queued","pool","enqueue","preparing","cachedInfo","utils","policy_id","last_modified","lastModified","token","resumed","chunkProgress","upload","cancelUploadSession","canceled","reset","deleteUploadSession","onTransition","newStatus","onError","onMsg","Retryable","fromCache","Chunk","chunks","initBeforeUploadChunks","updateLocalCache","uploadChunk","chunkByteSize","count","ceil","chunkSize","notifyResumeProgress","getProgressInfoItem","reduce","WriteCtxFailed","Local","chunkInfo","p","updateChunkProgress","Remote","uploadURLs","UploadManager","o","NoPolicySelected","onchange","ev","files","dispatchUploader","click","cleanupSessions","cleanupResumeCtx","logLevel","concurrentLimit","createElement","multiple","body","appendChild","acceptVal","removeAttribute","UploadButton","setOpen","setQueued","OpenNewFolderDialog","OpenNewFileDialog","Queued","uploadClicked","openFileList","taskListOpen","Badge","badgeContent","invisible","Backdrop","SpeedDial","ariaLabel","tooltipTitle","SpeedDialIcon","openIcon","FabProps","SpeedDialAction","tooltipOpen","progressContent","progressContainer","listAction","wordBreak","successStatus","errorStatus","disabledBadge","fileNameContainer","UploadTask","useAvgSpeed","onCancel","lastTimeRef","useRef","startTimeRef","startLoadedRef","setProgress","useMemo","durationTotal","resAvg","speed","speedAvg","retry","useUpload","fullScreen","useMediaQuery","statusText","errMsg","Message","useSpeedAvg","displayedSpeed","getSpeedText","resumeLabel","progressBar","lighten","darken","secondaryAction","TypeIcon","isUpload","MoreActions","next","uploadManager","RefreshStorage","Menu","DeleteSweep","Transition","forwardRef","Slide","direction","rootOverwrite","flex","popup","dialog","inset","paddingZero","dialogContent","maxHeight","expandIcon","shortest","expandIconExpanded","TaskList","taskList","setAnchorEl","reason","classnames","TransitionComponent","disableEnforceFocus","hideBackdrop","disableBackdropClick","disableScrollLock","Accordion","AppBar","Toolbar","disableGutters","MoreHoriz","AccordionDetails","Uploader","uploaders","setUploaders","setTaskListOpen","enableUploader","setPolicy","tasks","u","msDocPreviewSuffix","audioPreviewSuffix","videoPreviewSuffix","pdfPreviewSuffix","editSuffix","json","php","py","bat","cpp","h","cs","css","dockerfile","go","html","ini","java","js","jsx","less","lua","sh","sql","xml","yaml","mediaType","audio","video","image","pdf","word","ppt","excel","torrent","zip","excute","android","python","policyTypeMap","upyun","cos","s3","isTorrent","isCompressFile","taskStatus","taskType","taskProgress","getTaskStatus","getTaskType","getTaskProgress","dayjs","extend","utc","timezone","preferTimeZone","timeZone","refreshTimeZone","formatLocalTime","time","format","tz","validateTimeZone","AudioIcon","VideoIcon","ImageIcon","PdfIcon","FileWordBox","FilePowerpointBox","FileExcelBox","ScriptText","MagnetOn","ZipBox","WindowRestore","Android","FileShowIcon","LanguagePhp","LanguageGo","LanguagePython","LanguageC","LanguageCpp","LanguageJavascript","fileSuffix","getColor","getColorValue","iconClassName","closeContextMenu","setSubtitle","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","isLocalhost","hostname","match","AuthRoute","rest","render","to","emptyContainer","emptyInfoBig","Notice","icp","ICPFooter","siteICPId","show","setShow","pageHelper","Link","rel","primaryColor","secondaryColor","x","y","rx","ry","captchaPlacholder","NormalCaptcha","captchaRef","useStyle","captcha","setCaptcha","captchaData","setCaptchaData","refreshCaptcha","captchaCode","captchaContainer","required","Input","autoComplete","captchaPlaceholder","alt","ReCAPTCHA","handleExpired","bind","handleErrored","handleRecaptchaRef","grecaptcha","_widgetId","getResponse","execute","_executeRequested","onExpired","onErrored","sitekey","tabindex","stoken","hl","explicitRender","delayOfCaptchaIframeRemoving","temporaryNode","firstChild","removeChild","elem","childProps","displayName","defaultProps","makeAsyncScriptLoader","callbackName","globalName","Recaptcha","reCaptchaKey","captcha_ReCaptchaKey","ReCaptcha","TCaptcha","isValidateRef","submitRef","appid","tcaptcha_captcha_app_id","onLoad","TencentCaptcha","ret","ticket","randstr","isValidate","submit","defaultValidate","useCaptcha","captchaType","captcha_type","captchaLoading","setCaptchaLoading","captchaRefreshRef","normal","captchaParamsRef","CaptchaRender","useNormalCaptcha","recaptcha","useRecaptcha","tcaptcha","useTCaptcha","flexDirection","form","buttonContainer","authnLink","LoginForm","email","setEmail","pwd","setPwd","useAuthn","setUseAuthn","twoFA","setTwoFA","faCode","setFACode","loginCaptcha","authn","ApplyThemes","SetSessionStatus","afterLogin","Paper","login","userName","Password","credentials","credentialRequestOptions","publicKey","challenge","allowCredentials","listItem","assertion","authData","authenticatorData","clientDataJSON","rawId","sig","signature","userHandle","Fingerprint","VpnKey","SmallIconCompoment","isSelected","ButtonBase","focusRipple","notSelected","onIconClick","iconSelected","iconNotSelected","isFolder","Folder","checkIcon","folderName","folderNameSelected","folderNameNotSelected","SmallIcon","divider","boxSizing","fontWeight","FileIconCompoment","showPicIcon","pic","picPreview","afterLoad","beforeLoad","loadingAnimation","previewIcon","iconBig","fileInfo","shareFix","FileIcon","objectFit","active","isActive","dragging","cardDragged","diliverIcon","object","Preview","card","layerStyles","getItemStyles","initialOffset","currentOffset","pointerOffset","WebkitTransform","CustomDragLayer","useDragLayer","monitor","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","getInitialClientOffset","isDragging","renderItem","actions","reducers","StyledListItemIcon","ContextMenuCompoment","X","Y","setPoint","clientY","clientX","openArchiveDownload","enterFolder","clickUpload","uploadButton","getElementsByClassName","contains","renderMenuItems","visibleCount","condition","dense","allowRemoteDownload","menuOpen","anchorReference","anchorPosition","source_enabled","Archive","toggleObjectInfoSidebar","InfoOutlined","propover","ContextMenu","contextType","contextOpen","TableRowCompoment","tableIcon","TableRow","pref","onContextMenu","contextMenu","handleClick","onDoubleClick","handleDoubleClick","selectedShared","TableCell","dref","scope","tableRow","hideAuto","TableItem","userSelect","FolderDropWarpper","isListView","useDrop","accept","drop","collect","isOver","canDrop","fixFlex","ObjectIcon","navigatorPath","SetSelectedTarget","NavitateTo","DragAndDrop","OpenPreview","selectFileAction","handleIconClick","stopPropagation","useDrag","dropResult","getDropResult","canDrag","drag","getEmptyImage","captureDraggingState","ExplorerCompoment","ClickAway","dataset","clickaway","DELETE_FILE","SELECT_ALL","away","showView","listView","Table","table","TableHead","TableSortLabel","sortMethod","changeSort","visuallyHidden","TableBody","normalView","flexFix","data-clickAway","typeHeader","Grid","xs","md","sm","lg","view","rootTable","rootShare","navigatorError","errorBox","errorMsg","navigatorErrorMsg","emptyIcon","emptyInfoSmall","Explorer","drawerDesktopOpen","navigateToPath","hint","upButton","clickAway","clip","expandMore","textTransform","PathButton","inputRef","more","last","DropDownItem","setActiveStatus","DropDown","timer","clearTimeout","shouldClose","element","NavigatorComponent","currentID","hiddenFolders","hiddenMode","anchorHidden","URL","searchParams","renderPath","onpopstate","apiURL","parent","updateFileList","objects","setCurrentPolicy","max_size","file_type","checkOverFlow","redresh","componentDidUpdate","prevProps","prevStates","ms","force","overflowInitLock","hasOverflowingChildren","offsetHeight","scrollHeight","offsetWidth","scrollWidth","showHiddenPath","performAction","newTarget","presentFolderMenu","disableAutoFocusItem","roundBorder","navigatorContainer","nav","rightIcon","optionContainer","Navigator","ListLoading","drawerContainer","placeContent","fileIcon","fileIconSVG","folderIcon","closeIcon","placeSelf","propsContainer","propsLabel","propsTime","propsValue","SideDrawer","SetSideBar","setSideBar","setTarget","details","setDetails","propsItem","d","t","toLocaleString","child_folder_num","child_file_num","updated_at","created_at","datetime","query_date","locale","Hidden","Clear","Drawer","gutterBottom","FileManager","DndProvider","backend","HTML5Backend","DragLayer","VideoViewer","cardContainer","shareTitle","avatarFile","avatarFolder","gird","loadMore","orderSelect","SearchResult","page","setPage","setTotal","shareList","setShareList","orderBy","setOrderBy","order","Card","CardHeader","subheader","create_date","Pagination","MyShareCompoment","showPwd","loadList","removeShare","oldList","changePermission","newPwd","shareIndex","changePreviewOption","handlePageChange","handleOrderChange","isExpired","remain_downloads","CardActions","disableActionSpacing","MyShare","SelectFileDialog","setFiles","dividers","FormGroup","row","FormControlLabel","filesCopy","iconContainer","borderInlineStart","contentSide","iconMultiple","subFileName","subFileIcon","scroll","actionButton","infoTitle","infoValue","bitmap","DownloadingCard","canvasRef","setTask","selectDialogOpen","setSelectDialogOpen","selectFileOption","setSelectFileOption","bitfield","str","canvas","context","getContext","clearRect","strokeStyle","bit","round","numPieces","beginPath","moveTo","lineTo","stroke","getPercent","completed","activeFiles","getDownloadName","bittorrent","mode","gid","indexes","newExpanded","CardContent","LinearProgress","completedLength","newIndex","newFiles","deleteFile","HighlightOff","update","uploadLength","uploadSpeed","infoHash","numSeeders","seeder","pieceLength","FinishedCard","task_status","getTaskError","task_error","RemoteDownloadButton","OpenRemoteDownloadDialog","Fab","Add","DownloadComponent","interval","previousDownloading","downloading","finishedList","continue","loadDownloading","PageLoading","LockedFileCompoment","setPassowrd","LockedFile","marginRottom","boxHeader","cursor","shareDes","Creator","userProfile","views","ImgPreview","SharedFileCompoment","scoreHandle","download","box","boxContent","fileSize","boxFooter","actionLeft","downloadButton","SharedFile","openResave","fileCotainer","buttonCotainer","ReadMe","SharedFolderComponent","handleClickAway","readmeShowed","ClickAwayListener","onClickAway","managerContainer","SharedFolder","shareUserPopoverAnchorEl","SharePreload","setShare","setPassword","locked","withPassword","DocViewer","setURL","formGroup","formIcon","CreateWebDAVAccount","setValue","pathSelectDialog","setPathSelectDialog","formContainer","LabelOutlined","FolderOpenOutlined","cardContent","tableContainer","WebDAV","tab","setTab","setCreate","accounts","setAccounts","account","ID","CreatedAt","Name","Root","Tabs","indicatorColor","textColor","newValue","Tab","Alert","severity","origin","TableContainer","align","clipboard","writeText","accountCopy","deleteAccount","footer","Tasks","setTasks","nowrap","getError","ProfileCompoment","listType","loadNext","loadPrev","avatarContainer","centered","infoContainer","infoItem","mobileHide","th","tableLink","Profile","backgroundPosition","borderRaidus","pageInfo","sectionTitle","desenList","flexContainer","Authn","setSelected","confirm","setConfirm","deleteCredential","fingerprint","credentialCreationOptions","excludeCredentials","attestationObject","add","TimeZoneDialog","timeZoneValue","setTimeZoneValue","UserSettingCompoment","avatarModal","nickModal","changePassword","oldPwd","webdavPwd","newPwdRepeat","twoFactor","authCode","changeTheme","chosenTheme","showWebDavUrl","showWebDavUserName","changeWebDavPwd","groupBackModal","changePolicy","changeTimeZone","settings","group_expires","qq","homepage","two_factor","two_fa_secret","prefer_theme","themes","changeView","loadSetting","useGravatar","changeNick","uploadAvatar","formData","FormData","append","fileInput","handleToggle","changhePwd","old","new","changheWebdavPwd","init2FA","handleAlignment","toggleThemeMode","ListItemAvatar","infoTextWithIcon","rightIconWithText","infoText","Switch","firstColor","secondColor","Brightness3","ListAlt","Schedule","uploadFromFile","userGravatar","paddingText","textField","flexContainerResponse","qrcode","desText","ToggleButtonGroup","exclusive","ToggleButton","themeBlock","UserSetting","yellow","policySelected","avatarSuccess","Register","password_repeat","setInput","emailActive","setEmailActive","regCaptcha","Activation","setSuccess","ResetForm","secret","Reset","forgetCaptcha","MusicPlayerComponent","currentIndex","currentTime","progressText","looptype","myAudioRef","newItem","handleItemClick","pause","backgroundPlay","bindEvents","ele","readyPlay","loopnext","timeUpdate","unbindEvents","removeEventListener","play","formatTime","s","isNaN","minute","second","playOrPaues","isPlay","changeLoopType","lt","handleProgress","idx","Slider","slider_root","step","justify","Repeat","RepeatOne","Shuffle","MusicPlayer","PDFViewer","App","themeConfig","prefersDarkMode","prefer","createMuiTheme","Fragment","ThemeProvider","CssBaseline","exact","Text","Code","initUserConfig","store","defaultTheme","preferListMethod","share_view_method","home_view_method","resave","doNavigate","currntPath","defaultStatus","rawStore","configCache","InitSiteConfig","QQLogin","black","contrastText","bgSelected","ErrorBoundary","hasError","errorInfo","componentStack","Admin","hash","fetch","contentType","ready","unregister","checkValidServiceWorker","createBrowserHistory","reduxEnhance","applyMiddleware","routerMiddleware","thunk","createStore","viewUpdateState","explorerState","appState","cloudreveApp","combinedState","combinedReducer","combine","namespace","reducer","invariant","combineReducers","connectRouter","UpdateSiteConfig","ReactDOM","getElementById","PathSelectorCompoment","selectedTarget","toBeLoad","back","paths","api","unshift","handleSelect","selector","primaryTypographyProps","buttonIcon","iconWhite","setFileList","setDirList","setSortMethod","sortMethodFuncs","sizePos","b","sizeRes","namePos","localeCompare","languages","numeric","ignorePunctuation","nameRev","timePos","timeRev","sortFunc","sort"],"mappings":"+HAAA,iGAGaA,EAAU,UAEVC,EAAa,WACtB,OAAOD,GAGLE,EAAWC,IAAMC,OAAO,CAC1BJ,QAASC,IACTI,iBAAiB,EACjBC,aAAa,IAGjB,SAASC,EAASC,EAASC,EAAMC,GAC7BC,KAAKF,KAAOA,EACZE,KAAKH,QAAUA,GAAW,2BAC1BG,KAAKH,SAAWE,EAAQ,IAAMA,EAAQ,GACtCC,KAAKC,OAAQ,IAAIC,OAAQD,MAE7BL,EAASO,UAAYC,OAAOX,OAAOS,MAAMC,WACzCP,EAASO,UAAUE,YAAcT,EAEjCL,EAASe,aAAaC,SAASC,KAC3B,SAAUD,GAGN,GAFAA,EAASE,QAAUF,EAASG,KAC5BH,EAASG,KAAOH,EAASG,KAAKA,UAEAC,IAA1BJ,EAASE,QAAQX,MACS,IAA1BS,EAASE,QAAQX,MACS,MAA1BS,EAASE,QAAQX,KAYjB,MAT8B,MAA1BS,EAASE,QAAQX,OACjBc,IAAKC,UACLC,OAAOC,SAASC,KAAO,UAIG,QAA1BT,EAASE,QAAQX,OACjBgB,OAAOC,SAASC,KAAO,SAErB,IAAIpB,EACNW,EAASE,QAAQQ,IACjBV,EAASE,QAAQX,KACjBS,EAASE,QAAQV,OAGzB,OAAOQ,KAEX,SAAUR,GACN,OAAOmB,QAAQC,OAAOpB,MAIfR,O,sGCfF6B,EAA2B,CACpCC,WAAW,EACXC,UAAW,KACXC,UAAW,KACXC,SAAU,GACVC,QAAS,GACTC,SAAU,GACVC,YAAa,CACTC,YAAY,EACZC,YAAY,EACZC,UAAU,GAEdC,WAAY,CACRC,KAAM,CACFC,GAAI,GACJC,KAAM,GACNC,KAAM,EACNC,KAAM,OACNC,KAAM,IAEVC,OAAQ,GAEZC,iBAAkB,GAClBC,WAAY,CACRC,MAAO,CACHR,GAAI,GACJC,KAAM,GACNC,KAAM,EACNC,KAAM,OACNC,KAAM,IAEVK,MAAO,IAEXC,aAAc,CACVF,MAAO,CACHR,GAAI,GACJC,KAAM,GACNC,KAAM,EACNC,KAAM,OACNC,KAAM,IAEVK,MAAO,GACPE,YAAa,KACbC,QAAQ,EACRC,QAAQ,GAEZC,SAAU,GACVC,UAAU,EACVC,aAAa,GAGXC,EAAqB,SAACxB,GACxB,IAAME,EAAaF,EAASyB,OAAS,EACjCtB,GAAa,EACbC,GAAW,EAQf,OAPAJ,EAAS0B,SAAQ,SAACC,GACK,QAAfA,EAAMjB,KACNP,GAAa,EACS,SAAfwB,EAAMjB,OACbN,GAAW,MAGZ,CACHF,aACAC,aACAC,aA2IOwB,UAvIE,WAGI,IAFjBC,EAEgB,uDAFOnC,EACvBoC,EACgB,uCAChB,OAAQA,EAAOpB,MACX,IAAK,gBACD,OAAOhC,OAAOqD,OAAO,GAAIF,EAAO,CAC5BlC,WAAYkC,EAAMlC,UAClBC,UAAWkC,EAAOE,OAClBnC,UAAWiC,EAAOG,SAE1B,IAAK,gBACD,OAAOvD,OAAOqD,OAAO,GAAIF,EAAO,CAC5B/B,SAAUgC,EAAOI,OAEzB,IAAK,eACD,OAAOxD,OAAOqD,OAAO,GAAIF,EAAO,CAC5B9B,QAAS+B,EAAOI,OAExB,IAAK,uBACD,IAAMC,EAAa,sBAAON,EAAM7B,UAAb,YAA0B8B,EAAOM,UACpD,OAAO1D,OAAOqD,OAAO,GAAIF,EAAO,CAC5B7B,SAAUmC,EACVlC,YAAauB,EAAmBW,KAExC,IAAK,sBACD,IAAME,EAAcP,EAAOM,QAC3B,OAAO1D,OAAOqD,OAAO,GAAIF,EAAO,CAC5B7B,SAAUqC,EACVpC,YAAauB,EAAmBa,KAExC,IAAK,yBACD,IAAQC,EAAYR,EAAZQ,QACFC,EAAmBV,EAAM7B,SAASwC,QAAO,SAAClC,GAC5C,OAAQgC,EAAQG,SAASnC,EAAKC,OAElC,OAAO7B,OAAOqD,OAAO,GAAIF,EAAO,CAC5B7B,SAAUuC,EACVtC,YAAauB,EAAmBe,KAExC,IAAK,oBACD,OAAO7D,OAAOqD,OAAO,GAAIF,EAAO,CAC5B7B,SAAU,GACVC,YAAa,CACTC,YAAY,EACZC,YAAY,EACZC,UAAU,KAGtB,IAAK,iBACD,OAAO1B,OAAOqD,OAAO,GAAIF,EAAO,CAC5B7B,SAAU,GACVC,YAAa,CACTC,YAAY,EACZC,YAAY,EACZC,UAAU,GAEdiB,SAAUS,EAAOT,WAEzB,IAAK,mBACD,OAAO3C,OAAOqD,OAAO,GAAIF,EAAO,CAC5Bf,WAAY,CACRC,MAAOe,EAAOf,MACdC,MAAOa,EAAM/B,YAGzB,IAAK,qBACD,OAAOpB,OAAOqD,OAAO,GAAIF,EAAO,CAC5BZ,aAAa,2BACNY,EAAMZ,cADD,IAERF,MAAOe,EAAOf,MACdC,MAAOa,EAAM/B,aAGzB,IAAK,4BACD,OAAOpB,OAAOqD,OAAO,GAAIF,EAAO,CAC5BZ,aAAa,2BACNY,EAAMZ,cADD,IAERG,OAAQU,EAAOV,WAG3B,IAAK,4BACD,OAAO1C,OAAOqD,OAAO,GAAIF,EAAO,CAC5BZ,aAAa,2BACNY,EAAMZ,cADD,IAERC,YAAaY,EAAOZ,YACpBC,OAAQW,EAAOX,WAG3B,IAAK,YACD,OAAO,2BACAU,GADP,IAEIP,UAAWO,EAAMP,WAEzB,IAAK,kBACD,IAAQhB,EAAgBwB,EAAhBxB,KAAMM,EAAUkB,EAAVlB,MACd,OAAO,2BACAiB,GADP,IAEIxB,WAAY,CACRC,OACAM,WAGZ,IAAK,yBACD,IAAQC,EAAqBiB,EAArBjB,iBACR,OAAO,2BACAgB,GADP,IAEIhB,qBAER,IAAK,gBACD,OAAO,2BACAgB,GADP,IAEI7B,SAAU,GACVC,YAAa,CACTC,YAAY,EACZC,YAAY,EACZC,UAAU,GAEdiB,SAAU,KAElB,IAAK,eACD,OAAO,2BACAQ,GADP,IAEIN,YAAaO,EAAOY,OAE5B,IAAK,qBACD,OAAO,2BACAb,GADP,IAEIc,cAAeb,EAAOc,SAE9B,QACI,OAAOf,K,gCCjPnB,IAAMgB,EAAe,CACjBC,WADiB,SACNC,GACP,MAAgB,UAATA,GAEXC,YAJiB,SAILD,GACR,OAAOA,GAAQA,EAAKE,WAAW,QAEnCC,YAPiB,SAOLH,GACR,OAAOA,GAAQA,EAAKE,WAAW,WAEnCE,YAViB,SAULJ,GACR,OAAOA,GAAQA,EAAKE,WAAW,WAEnCG,SAbiB,WAcb,OAAOhE,OAAOiE,WAAa,MAGpBR,O,qECmBAS,IAjCf,YAAyD,IAAnCC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,OAAwB,IAAhBC,YAAgB,SACpD,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEIC,EAAOzE,OAAO0E,QACdC,EAAa3E,OAAO0E,QA0BxB,OAvBAE,qBAAU,WAiBFR,GACApE,OAAO6E,iBAAiB,UAAU,SAACC,GAAD,OAjBb,SAACA,GACtB,IAAM9E,EAAS8E,EAAEC,cAEbN,EAAOzE,EAAO0E,QACVC,EAAa3E,EAAO0E,QAPvB,KAQGC,EAAa3E,EAAO0E,QACpBF,GAAU,IAEPC,EAAOzE,EAAO0E,SACjB1E,EAAO0E,QAAUC,EAZpB,KAaGA,EAAa3E,EAAO0E,QACpBF,GAAU,IAGlBC,EAAOzE,EAAO0E,QAG2BM,CAAiBF,QAG/D,CAACV,IAEG,kBAAC,IAAD,CAAMa,IAAKV,IAAWF,GAAOF,K,qFC7BlCe,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,OAAO,aACHC,MAAO,MACPC,QAAS,IACRH,EAAMI,YAAYC,KAAK,MAAQ,CAC5BH,MAAO,OACPC,QAAS,SAKfG,EAAW,SAACC,GAAD,OACb,kBAAC,IAAD,CACIC,gBAAiBD,EAAME,KAAO,OAAS,UACvCC,gBAAiBH,EAAME,KAAO,UAAY,OAC1CE,UAAWJ,EAAMI,aAkBVC,IAdf,WACI,IAAMZ,EAAQa,cACRC,EAAUhB,IAEhB,OACI,6BACI,kBAACQ,EAAD,CACIG,KAA6B,SAAvBT,EAAMe,QAAQ7E,KACpByE,UAAWG,EAAQb,Y,gKCrB7BH,EAAYC,aAAW,iBAAO,CAChCiB,KAAM,CACFC,MAAO,qBACPC,QAAS,YAsCFC,IAlCU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClBC,EAAYC,aACd,SAACjE,GAAD,OAAWA,EAAMkE,WAAWvB,MAAMe,QAAQ7E,QAExCsF,EAAWC,cACXC,EAAkBC,uBAAY,kBAAMH,EAASI,iBAAuB,CACtEJ,IAEEK,EAAcR,GAA2B,UAAdA,IAA2BA,EACtDS,EAAST,GAA2B,SAAdA,EAKtBP,EAAUhB,IAChB,OACI,kBAAC,IAAD,CACIiC,MAAOF,EAAa,6CAAY,6CAChCG,UAAU,UAEV,kBAAC,IAAD,CACIrB,UAAWsB,IAAW,eACjBnB,EAAQE,KAAO,SAAWI,IAE/Bc,QAdO,WACfxH,IAAKyH,cAAc,aAAcN,EAAa,OAAS,SACvDH,KAaQT,MAAM,WAELY,GAAc,kBAAC,IAAD,MACdC,GAAU,kBAAC,IAAD,U,gPCjCrBhC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCoC,WAAY,CACRjC,QAAS,MACTkC,YAAa,WAIfC,EAAc,CAAC,MAAO,MAAO,eAAM,eAAM,eAAM,gBAEtC,SAASC,EAAT,GAAkD,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAC3ClB,EAAWC,cACXkB,EAAarB,aACf,SAACjE,GAAD,OAAWA,EAAMuF,WAAWC,sBAE1BC,EAAoBnB,uBACtB,SAACoB,GAAD,OAAYvB,EAASwB,YAAiBD,MACtC,CAACvB,IAECyB,EAAmBtB,uBACrB,SAACoB,GAAD,OAAYvB,EAAS0B,2BAAiBH,MACtC,CAACvB,IAEC2B,EAAsBxB,uBACxB,SAACjC,GAAD,OAAO8B,EAAS4B,YAAoB1D,MACpC,CAAC8B,IAEL,EAAoCtC,mBAAS,MAA7C,mBAAOmE,EAAP,KAAmBC,EAAnB,KACA,EAA0CpE,mBAAS,GAAnD,mBAAOqE,EAAP,KAAsBC,EAAtB,KAkBMC,EAAmB,WACrB,IAAMC,EACa,SAAff,EACM,OACe,SAAfA,EACA,YACA,OACVjI,IAAKyH,cAAc,cAAeuB,GAClCZ,EAAkBY,IAGhB5C,EAAUhB,IAChB,OACI,oCACoB,SAAf6C,GACG,kBAAC,IAAD,CACIZ,MAAM,2BACNpB,UAAWG,EAAQsB,WACnBF,QAASuB,EACTxC,MAAOyB,EAAU,UAAY,WAE7B,kBAAC,IAAD,CAAciB,SAAUnB,EAAU,QAAU,aAGpC,SAAfG,GACG,kBAAC,IAAD,CACIZ,MAAM,iCACNpB,UAAWG,EAAQsB,WACnBF,QAASuB,EACTxC,MAAOyB,EAAU,UAAY,WAE7B,kBAAC,IAAD,CAAeiB,SAAUnB,EAAU,QAAU,aAIrC,cAAfG,GACG,kBAAC,IAAD,CACIZ,MAAM,iCACNpB,UAAWG,EAAQsB,WACnBF,QAASuB,EACTxC,MAAOyB,EAAU,UAAY,WAE7B,kBAAC,IAAD,CAAgBiB,SAAUnB,EAAU,QAAU,aAItD,kBAAC,IAAD,CACIT,MAAM,2BACNpB,UAAWG,EAAQsB,WACnBF,QAlEY,SAACxC,GACrB4D,EAAc5D,EAAEC,gBAkERsB,MAAOyB,EAAU,UAAY,WAE7B,kBAAC,IAAD,CACIiB,SAAUnB,EAAU,QAAU,aAGtC,kBAAC,IAAD,CACIzG,GAAG,YACH6H,SAAUP,EACVnF,KAAM2F,QAAQR,GACdS,QAAS,kBAAMR,EAAc,QAE5BhB,EAAYyB,KAAI,SAACC,EAAQ5H,GAAT,OACb,kBAAC,IAAD,CACI6H,IAAKD,EACLxI,SAAUY,IAAUmH,EACpBrB,QAAS,SAACgC,GAAD,OAhFD,SAACxE,EAAGtD,GAC5BoH,EAAiBpH,GASjB6G,EARqB,CACjBkB,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,EAAG,UACHC,EAAG,WAEuBpI,IAC9BkH,EAAc,MAqEsBmB,CAAoBP,EAAO9H,KAE9C4H,OAIZvB,GACG,kBAAC,IAAD,CACIV,MAAO,UAAOU,EAAMiC,QAAQC,KAAO,gBACnChE,UAAWG,EAAQsB,WACnBF,QAAS,SAACxC,GAAD,OAAOyD,EAAoBzD,EAAEC,gBACtCiF,MAAO,CAAEzE,QAAS,IAElB,kBAAC,IAAD,CACIyE,MAAO,CAAEC,OAAQ,GAAI3E,MAAO,IAC5B4E,IAAK,uBAAyBrC,EAAMiC,QAAQT,IAAM,W,uMC9HpEnE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrC+E,IAAK,CACDC,OAAQ,EACRC,IAAK,OACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,OACNC,OAAQ,EACRjE,SAAU,SAEdkE,MAAO,CACHlE,SAAU,WACV+D,OAAQ,GACRF,IAAK,OACLI,OAAQ,KACRH,MAAO,GAEXK,YAAa,CACTtE,MAAOuE,IAAM,KACbpE,SAAU,WACV6D,KAAM,EACNG,MAAO,EACPC,OAAQ,GAEZI,QAAS,CACLT,OAAQhF,EAAM0F,QAAQ,GACtBtE,SAAU,YAEduE,cAAe,CACXnF,gBAAiBgF,IAAM,KACvB,UAAW,CACPhF,gBAAiBgF,IAAM,WAKpB,SAASI,EAAWrF,GAC/B,IAAMO,EAAUhB,IACV+F,EAAkBC,YAAK,eACxBhF,EAAQ6E,cAAiC,YAAjBpF,EAAMwF,SAGnC,OACI,kBAAC,IAAD,CAAY/G,OAAQX,IAAaO,YAC7B,yBAAK+B,UAAWG,EAAQiE,KACpB,yBAAKpE,UAAWG,EAAQ2E,SACpB,kBAAC,IAAD,CAAS1D,MAAO,eAAMC,UAAW,QAC7B,kBAAC,IAAD,CACIE,QAAS3B,EAAM2B,QACfjB,MAAM,UACNN,UAAWkF,EACXG,SAA2B,YAAjBzF,EAAMwF,OAChBE,aAAW,OAEO,YAAjB1F,EAAMwF,OACH,kBAAC,IAAD,MAEA,kBAAC,IAAD,QAIM,YAAjBxF,EAAMwF,QACH,kBAAC,IAAD,CACI9J,KAAM,GACN0E,UAAWG,EAAQyE,mB,0OCnEzCzF,EAAYC,YAAW,CACzBmG,OAAQ,CACJ1F,gBAAiB2F,IAAK,KACtBlF,MAAOkF,IAAK,MAEhBC,iBAAkB,CACdC,QAAS,QAEbC,QAAS,CACLC,UAAW,GACXC,WAAY,MAIL,SAASC,IACpB,IAAM3F,EAAUhB,IACV5B,EAAOoD,aAAY,SAACjE,GAAD,OAAWA,EAAMuF,WAAW8D,OAAOJ,WACtDK,EAAOrF,aAAY,SAACjE,GAAD,OAAWA,EAAMuF,WAAW8D,OAAOE,eAE5D,OACI,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,sBAAsB5I,KAAMA,GAChD,kBAAC6I,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAmBrG,UAAWG,EAAQsF,kBAClC,kBAACa,EAAA,EAAD,CAAkBhG,MAAM,cACxB,yBAAKN,UAAWG,EAAQwF,SAAUK,M,WCbhD7G,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCkH,WAAY,CACR/G,QAAS,sBAEbsF,QAAS,CACLT,OAAQhF,EAAM0F,QAAQ,GACtBtE,SAAU,YAEd+F,eAAgB,CACZlG,MAAOjB,EAAMe,QAAQqG,UAAUC,MAC/BjG,SAAU,WACV6D,IAAK,MACLG,KAAM,MACNmB,WAAY,GACZC,YAAa,QAIN,SAASc,EAAW/G,GAC/B,MAAwCrB,mBAAS,IAAjD,mBAAOqI,EAAP,KAAqBC,EAArB,KACA,EAAgDtI,mBAAS,IAAzD,mBAAOuI,EAAP,KAAyBC,EAAzB,KAEMlG,EAAWC,cACXkG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAECuG,EAAmBpG,uBACrB,SAACoE,GACGvE,EAASwG,YAAiBjC,MAE9B,CAACvE,IAECyG,EAAkBtG,uBAAY,WAChCH,EAAS0G,iBACV,CAAC1G,IA6CEV,EAAUhB,IAEhB,OACI,kBAAC+G,EAAA,EAAD,CACI3I,KAAMqC,EAAMrC,KACZ4F,QAASvD,EAAMuD,QACfgD,kBAAgB,qBAEhB,kBAACqB,EAAA,EAAD,CAAapM,GAAG,qBAAhB,sBACA,kBAACqM,EAAA,EAAD,CACIC,YAAa9H,EAAM8H,YACnB7M,SAAU+E,EAAM/E,SAChB8M,SAvDU,SAACC,GACnB,IAAMhK,EACc,MAAhBgK,EAAOhK,KACDgK,EAAOhK,KAAOgK,EAAOvM,KACrBuM,EAAOhK,KAAO,IAAMgK,EAAOvM,KACrCwL,EAAgBjJ,GAChBmJ,EAAoBa,EAAOvM,SAoDL,KAAjBuL,GACG,kBAACR,EAAA,EAAD,CAAepG,UAAWG,EAAQoG,YAC9B,kBAACF,EAAA,EAAD,2BACQ,gCAASS,KAIzB,kBAACe,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAAS3B,EAAMuD,SAAvB,gBACA,yBAAKnD,UAAWG,EAAQ2E,SACpB,kBAACgD,EAAA,EAAD,CACIvG,QA5DD,SAACxC,GACP,MAALA,GACAA,EAAEgJ,iBAENX,GAAiB,GACjB,IAAMY,EAAO,GACTC,EAAQ,GAGmB,QAA3BrI,EAAM/E,SAAS,GAAGU,KAClByM,EAAKE,KAAKtI,EAAM/E,SAAS,GAAGO,IAE5B6M,EAAMC,KAAKtI,EAAM/E,SAAS,GAAGO,IAGjC+M,IAAIC,KAAK,eAAgB,CACrBC,QAASzI,EAAM/E,SAAS,GAAG+C,KAC3BuG,IAAK,CACD6D,KAAMA,EACNC,MAAOA,GAEXK,IAAsB,OAAjB1B,EAAwB,IAAMA,IAElC2B,MAAK,WACF3I,EAAMuD,UACNmE,IACAF,GAAiB,MAEpBoB,OAAM,SAACtP,GACJ8N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,SAC9CoO,GAAiB,OA+BT9G,MAAM,UACN+E,SAA2B,KAAjBuB,GAAuBhH,EAAM6I,eAH3C,eAMK7I,EAAM6I,eACH,kBAACnC,EAAA,EAAD,CACIhL,KAAM,GACN0E,UAAWG,EAAQqG,qB,8SC5F7CrH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCqJ,eAAgB,GAChBC,SAAU,CACNC,SAAU,SAEd9D,QAAS,CACLT,OAAQhF,EAAM0F,QAAQ,GACtBtE,SAAU,YAEd+F,eAAgB,CACZlG,MAAOjB,EAAMe,QAAQqG,UAAUC,MAC/BjG,SAAU,WACV6D,IAAK,MACLG,KAAM,OAEVoE,WAAY,CACRC,WAAY,UAEhBC,OAAQ,CACJrD,QAAS,SAEbsD,UAAW,CACPpD,UAAW,QAIbqD,GAAiBC,IAAW,CAC9BC,KAAM,CACFC,OAAQ,gCACRC,UAAW,OACX,qBAAsB,CAClBC,aAAc,GAElB,WAAY,CACR5D,QAAS,QAEb,aAAc,CACVrB,OAAQ,SAGhBkF,SAAU,IAdSL,CAepBM,KAEGC,GAAwBP,IAAW,CACrCC,KAAM,CACF3J,QAAS,EACT,aAAc,IAElBkK,QAAS,CACLrF,OAAQ,EACRqB,QAAS,UACT,aAAc,CACVrB,OAAQ,QAGhBkF,SAAU,IAZgBL,CAa3BS,KAEGC,GAAwBV,KAAW,SAAC7J,GAAD,MAAY,CACjD8J,KAAM,CACF3J,QAAS,GACTK,gBAAiBR,EAAMe,QAAQyJ,WAAWC,YAHpBZ,CAK1Ba,KAEW,SAASC,GAAWpK,GAC/B,IAAMiB,EAAWC,cACXX,EAAUhB,KAEV6H,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAGL,EAAgCoJ,IAAM1L,UAAS,GAA/C,mBAAOgL,EAAP,KAAiBW,EAAjB,KACA,EAAgCD,IAAM1L,SAAS,IAA/C,mBAAO4L,EAAP,KAAiBC,EAAjB,KACA,EAA4BH,IAAM1L,SAAS,CACvC8L,SAAU,GACVC,UAAW,EACXC,QAAS,MACTC,cAAc,IAJlB,mBAAOC,EAAP,KAAeC,EAAf,KAMA,EAAsCT,IAAM1L,SAAS,CACjD8L,UAAU,EACVM,QAAQ,EACRC,SAAS,IAHb,mBAAOC,EAAP,KAAoBC,EAApB,KAMMC,EAAe,SAACC,GAAD,OAAU,SAACzH,GAEf,aAATyH,IAC2B,KAAvBzH,EAAM1G,OAAOL,MACbsO,EAAe,2BAAKD,GAAN,IAAmBR,UAAU,KAE3CS,EAAe,2BAAKD,GAAN,IAAmBR,UAAU,MAInDK,EAAU,2BAAKD,GAAN,kBAAeO,EAAOzH,EAAM1G,OAAOL,WAoB1CyO,EAAe,SAACC,GAAD,OAAW,SAAC3H,EAAO4H,GACpCjB,IAAYiB,GAAaD,KAGvBE,EAAc,SAACJ,GAAD,OAAU,WACrBH,EAAYG,IACbC,EAAaD,EAAbC,CAAmB,MAAM,GAEhB,aAATD,GAAuBH,EAAYG,IACnCN,EAAU,2BACHD,GADE,IAELJ,SAAU,MAGlBS,EAAe,2BAAKD,GAAN,kBAAoBG,GAAQH,EAAYG,QAGpD7H,EAAU,WACZvD,EAAMuD,UACNkI,YAAW,WACPjB,EAAY,MACb,MAsCP,OACI,kBAAClE,EAAA,EAAD,CACI3I,KAAMqC,EAAMrC,KACZ4F,QAASA,EACTgD,kBAAgB,oBAChBnG,UAAWG,EAAQuI,eACnB4C,SAAS,KACTC,WAAS,GAET,kBAAC/D,EAAA,EAAD,CAAapM,GAAG,qBAAhB,wCAEc,KAAb+O,GACG,oCACI,kBAACqB,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,CACIlC,SAAuB,aAAbA,EACVmC,SAAUT,EAAa,aAEvB,kBAAC,GAAD,CACIU,gBAAc,kBACdvQ,GAAG,kBAEH,kBAACwQ,EAAA,EAAD,CAAUC,QAAM,GACZ,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,OAEJ,kBAACC,EAAA,EAAD,CAAcC,QAAQ,yCACtB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,QAAStB,EAAYR,SACrBqB,SAAUN,EAAY,iBAKtC,kBAAC,GAAD,KACI,kBAACgB,EAAA,EAAD,CACIC,QAAQ,WACR/L,MAAM,YACNiL,WAAS,GAET,kBAACe,EAAA,EAAD,CAAYC,QAAQ,6BAApB,4BAGA,kBAACC,GAAA,EAAD,CACIjB,WAAS,EACTnQ,GAAG,8BACHG,KACIkP,EAAOD,aACD,OACA,WAEVhO,MAAOiO,EAAOJ,SACdqB,SAAUX,EAAa,YACvB0B,aACI,kBAACC,GAAA,EAAD,CAAgBjM,SAAS,OACrB,kBAACkM,GAAA,EAAD,CAASvL,MAAM,4BACX,kBAACwL,GAAA,EAAD,CACItH,aAAW,6BACX/D,QAhI7B,WACnBuJ,EAAe,2BAAKD,GAAN,IAAmBR,UAAU,KAC3CK,EAAU,2BACHD,GADE,IAELJ,SAAUwC,KAAKC,SAASC,SAAS,IAAIC,OAAO,GAAGC,MAAM,EAAG,GACxDzC,cAAc,MA4H8B0C,KAAK,OAEL,kBAAC,IAAD,QAGR,kBAACN,GAAA,EAAD,CACItH,aAAW,6BACX/D,QAhJhB,WAC5BmJ,EAAU,2BAAKD,GAAN,IAAcD,cAAeC,EAAOD,iBAkJD2C,YA/IhB,SAAC5J,GAC7BA,EAAMwE,kBAiJsCmF,KAAK,OAEL,kBAAC,KAAD,CACIE,GAAI3C,EAAOD,aACX6C,OAAQ,kBAACC,EAAA,EAAD,MACRC,QACI,kBAACC,EAAA,EAAD,UAMpBC,WAAY,QAK5B,kBAAC,GAAD,CACIlE,SAAuB,WAAbA,EACVmC,SAAUT,EAAa,WAEvB,kBAAC,GAAD,CACIU,gBAAc,kBACdvQ,GAAG,kBAEH,kBAACwQ,EAAA,EAAD,CAAUC,QAAM,GACZ,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,OAEJ,kBAACC,EAAA,EAAD,CAAcC,QAAQ,6BACtB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,QAAStB,EAAYF,OACrBe,SAAUN,EAAY,eAKtC,kBAAC,GAAD,CACIpL,UAAWG,EAAQ0I,YAEnB,kBAACuD,EAAA,EAAD,CACInI,MAAO,CACHvC,YAAa,KAGjB,kBAACgM,GAAA,EAAD,CACIC,QAAQ,2BACRvS,GAAG,qBACHoB,MAAOiO,EAAOH,UACdoB,SAAUX,EAAa,cAEvB,kBAAC6C,GAAA,EAAD,CAAUpR,MAAO,GAAjB,wBACA,kBAACoR,GAAA,EAAD,CAAUpR,MAAO,GAAjB,wBACA,kBAACoR,GAAA,EAAD,CAAUpR,MAAO,GAAjB,wBACA,kBAACoR,GAAA,EAAD,CAAUpR,MAAO,GAAjB,wBACA,kBAACoR,GAAA,EAAD,CAAUpR,MAAO,GAAjB,wBACA,kBAACoR,GAAA,EAAD,CAAUpR,MAAO,IAAjB,yBAGA,kBAACoR,GAAA,EAAD,CAAUpR,MAAO,IAAjB,yBAGA,kBAACoR,GAAA,EAAD,CAAUpR,MAAO,KAAjB,4BAKR,kBAACqR,EAAA,EAAD,qBACA,kBAACzB,EAAA,EAAD,CACInI,MAAO,CACHvC,YAAa,GACbmE,WAAY,KAGhB,kBAAC6H,GAAA,EAAD,CACIC,QAAQ,2BACRvS,GAAG,qBACHoB,MAAOiO,EAAOF,QACdmB,SAAUX,EAAa,YAEvB,kBAAC6C,GAAA,EAAD,CAAUpR,MAAO,KAAjB,kBACA,kBAACoR,GAAA,EAAD,CAAUpR,MAAO,MAAjB,kBACA,kBAACoR,GAAA,EAAD,CAAUpR,MAAO,OAAjB,YAGA,kBAACoR,GAAA,EAAD,CAAUpR,MAAO,QAAjB,YAGA,kBAACoR,GAAA,EAAD,CAAUpR,MAAO,QAAjB,eAKR,kBAACqR,EAAA,EAAD,6BAGR,kBAAC,GAAD,CACItE,SAAuB,YAAbA,EACVmC,SAAUT,EAAa,YAEvB,kBAAC,GAAD,CACIU,gBAAc,kBACdvQ,GAAG,kBAEH,kBAACwQ,EAAA,EAAD,CAAUC,QAAM,GACZ,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,OAEJ,kBAACC,EAAA,EAAD,CAAcC,QAAQ,6BACtB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,QAAStB,EAAYD,QACrBc,SAAUN,EAAY,gBAKtC,kBAAC,GAAD,KACI,kBAACyC,EAAA,EAAD,sGAMZ,kBAACrC,EAAA,EAAD,OAGM,KAAbrB,GACG,kBAAC/D,EAAA,EAAD,KACI,kBAAC0H,EAAA,EAAD,CACIC,QA/MA,SAACxK,GAAD,OAAWA,EAAM1G,OAAOmR,UAgNxBC,WAAS,EACTC,WAAY,CAAEC,UAAU,GACxBC,MAAM,2BACN5R,MAAO2N,EACPkC,QAAQ,WACRd,WAAS,KAKrB,kBAAC1D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAAS4B,GAAjB,gBAEc,KAAbgH,GACG,yBAAKnK,UAAWG,EAAQ2E,SACpB,kBAACgD,EAAA,EAAD,CACIvG,QAjQJ,SAACxC,GACjBA,EAAEgJ,iBACFnI,EAAMyH,kBAAiB,GACvB,IAAMgH,EAAiB,CACnBjT,GAAIwE,EAAM/E,SAAS,GAAGO,GACtBkT,OAAmC,QAA3B1O,EAAM/E,SAAS,GAAGU,KAC1B8O,SAAUI,EAAOJ,SACjBC,UAAWO,EAAYF,OAASF,EAAOH,WAAa,EACpDK,OAAQF,EAAOF,QACfK,QAASC,EAAYD,SAGzBzC,IAAIC,KAAK,SAAUiG,GACd9F,MAAK,SAAC7O,GACH0Q,EAAY1Q,EAASG,MACrB6Q,EAAU,CACNL,SAAU,GACVC,UAAW,EACXC,QAAS,MACTC,cAAc,IAElBM,EAAe,CACXT,UAAU,EACVM,QAAQ,IAEZ/K,EAAMyH,kBAAiB,MAE1BmB,OAAM,SAACtP,GACJ8N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,SAC9C4G,EAAMyH,kBAAiB,OAqOX/G,MAAM,YACN+E,SAAUzF,EAAM6I,eAHpB,uCAMK7I,EAAM6I,eACH,kBAACnC,EAAA,EAAD,CACIhL,KAAM,GACN0E,UAAWG,EAAQqG,qB,+BClbjDrH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCkH,WAAY,CACR/G,QAAS,sBAEbsF,QAAS,CACLT,OAAQhF,EAAM0F,QAAQ,GACtBtE,SAAU,YAEd+F,eAAgB,CACZlG,MAAOjB,EAAMe,QAAQqG,UAAUC,MAC/BjG,SAAU,WACV6D,IAAK,MACLG,KAAM,MACNmB,WAAY,GACZC,YAAa,QAIN,SAAS0I,GAAiB3O,GACrC,MAAwCrB,mBAAS,IAAjD,mBAAOqI,EAAP,KAAqBC,EAArB,KACA,EAAgDtI,mBAAS,IAAzD,mBAAOuI,EAAP,KAAyBC,EAAzB,KAEMlG,EAAWC,cACXkG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAECuG,EAAmBpG,uBACrB,SAACoE,GACGvE,EAASwG,YAAiBjC,MAE9B,CAACvE,IAgCCV,EAAUhB,KAEhB,OACI,kBAAC+G,EAAA,EAAD,CACI3I,KAAMqC,EAAMrC,KACZ4F,QAASvD,EAAMuD,QACfgD,kBAAgB,qBAEhB,kBAACqB,EAAA,EAAD,CAAapM,GAAG,qBAAhB,4BACA,kBAACqM,EAAA,EAAD,CACIC,YAAa9H,EAAM8H,YACnB7M,SAAU+E,EAAM/E,SAChB8M,SAzCU,SAACC,GACnB,IAAMhK,EACc,MAAhBgK,EAAOhK,KACDgK,EAAOhK,KAAOgK,EAAOvM,KACrBuM,EAAOhK,KAAO,IAAMgK,EAAOvM,KACrCwL,EAAgBjJ,GAChBmJ,EAAoBa,EAAOvM,SAsCL,KAAjBuL,GACG,kBAACR,EAAA,EAAD,CAAepG,UAAWG,EAAQoG,YAC9B,kBAACF,EAAA,EAAD,iCACS,gCAASS,KAI1B,kBAACe,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAAS3B,EAAMuD,SAAvB,gBACA,yBAAKnD,UAAWG,EAAQ2E,SACpB,kBAACgD,EAAA,EAAD,CACIvG,QA9CD,SAACxC,GACP,MAALA,GACAA,EAAEgJ,iBAENX,GAAiB,GACjBe,IAAIC,KAAK,mBAAoB,CACzBjE,IAAKqK,aAAS5O,EAAM/E,SAAS,IAC7ByN,IAAsB,OAAjB1B,EAAwB,IAAMA,IAElC2B,MAAK,WACF3I,EAAMuD,UACN6D,EAAe,MAAO,QAAS,mDAAY,WAC3CI,GAAiB,MAEpBoB,OAAM,SAACtP,GACJ8N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,SAC9CoO,GAAiB,OA+BT9G,MAAM,UACN+E,SAA2B,KAAjBuB,GAAuBhH,EAAM6I,eAH3C,eAMK7I,EAAM6I,eACH,kBAACnC,EAAA,EAAD,CACIhL,KAAM,GACN0E,UAAWG,EAAQqG,qBClGnD,IAAMrH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCkH,WAAY,CACR/G,QAAS,qBACTK,gBAAiBR,EAAMe,QAAQyJ,WAAWC,SAE9ChF,QAAS,CACLT,OAAQhF,EAAM0F,QAAQ,GACtBtE,SAAU,YAEd+F,eAAgB,CACZlG,MAAOjB,EAAMe,QAAQqG,UAAUC,MAC/BjG,SAAU,WACV6D,IAAK,MACLG,KAAM,MACNmB,WAAY,GACZC,YAAa,QAIN,SAAS4I,GAAe7O,GACnC,MAAwCrB,mBAAS,IAAjD,mBAAOqI,EAAP,KAAqBC,EAArB,KACA,EAAgCtI,mBAAS,IAAzC,mBAAOmQ,EAAP,KAAiBC,EAAjB,KAEA,EAAgDpQ,mBAAS,IAAzD,mBAAyBwI,GAAzB,WAEMlG,EAAWC,cAEXkG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAGCuG,EAAmBpG,uBACrB,SAACoE,GACGvE,EAASwG,YAAiBjC,MAE9B,CAACvE,IAgDCV,EAAUhB,KAEhB,OACI,kBAAC+G,EAAA,EAAD,CACI3I,KAAMqC,EAAMrC,KACZ4F,QAASvD,EAAMuD,QACfgD,kBAAgB,qBAEhB,kBAACqB,EAAA,EAAD,CAAapM,GAAG,qBAAhB,sBACA,kBAACqM,EAAA,EAAD,CACIC,YAAa9H,EAAM8H,YACnB7M,SAAU+E,EAAM/E,SAChB8M,SAzDU,SAACC,GACnB,IAAMhK,EACc,MAAhBgK,EAAOhK,KACDgK,EAAOhK,KAAOgK,EAAOvM,KACrBuM,EAAOhK,KAAO,IAAMgK,EAAOvM,KACrCwL,EAAgBjJ,GAChBmJ,EAAoBa,EAAOvM,SAsDL,KAAjBuL,GACG,kBAACR,EAAA,EAAD,CAAepG,UAAWG,EAAQoG,YAC9B,kBAACF,EAAA,EAAD,KACI,kBAACyH,EAAA,EAAD,CACIpC,SAAU,SAAC3M,GAAD,OAAO4P,EAAY5P,EAAElC,OAAOL,QACtCA,MAAOkS,EACPnD,WAAS,EACT0C,WAAS,EACT7S,GAAG,iBACHgT,MAAM,qCAKtB,kBAACvG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAAS3B,EAAMuD,SAAvB,gBACA,yBAAKnD,UAAWG,EAAQ2E,SACpB,kBAACgD,EAAA,EAAD,CACIvG,QArED,SAACxC,GACP,MAALA,GACAA,EAAEgJ,iBAENX,GAAiB,GAEjB,IAAMY,EAAO,GACTC,EAAQ,GAEZrI,EAAM/E,SAASuI,KAAI,SAAC5G,GACG,QAAfA,EAAMjB,KACNyM,EAAKE,KAAK1L,EAAMpB,IAEhB6M,EAAMC,KAAK1L,EAAMpB,OAIzB+M,IAAIC,KAAK,iBAAkB,CACvBjE,IAAK,CACD6D,KAAMA,EACNC,MAAOA,GAEX5M,KAAMqT,EACNpG,IAAsB,OAAjB1B,EAAwB,IAAMA,IAElC2B,MAAK,WACF3I,EAAMuD,UACN6D,EAAe,MAAO,QAAS,6CAAW,WAC1CI,GAAiB,MAEpBoB,OAAM,SAACtP,GACJ8N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,SAC9CoO,GAAiB,OAsCT9G,MAAM,UACN+E,SACqB,KAAjBuB,GACa,KAAb8H,GACA9O,EAAM6I,eANd,eAUK7I,EAAM6I,eACH,kBAACnC,EAAA,EAAD,CACIhL,KAAM,GACN0E,UAAWG,EAAQqG,qBCnHnD,IAyDMoI,G,4MACFlS,MAAQ,CACJmS,cAAe,GACfC,YAAa,GACbC,QAAS,GACTnI,aAAc,GACdE,iBAAkB,GAClBkI,aAAa,EACbC,SAAU,GACVtG,SAAU,GACVuG,YAAa,GACbC,0BAA0B,EAC1BrS,OAAQ,GACRsS,iBAAkB,M,EAGtBC,kBAAoB,SAACtQ,GACjB,EAAKuQ,SAAL,eACKvQ,EAAElC,OAAOzB,GAAK2D,EAAElC,OAAOL,S,EAIhC+S,cAAgB,G,EAChBC,YAAa,E,EAEbC,iCAAmC,SAACC,GAChC,GAAI,EAAK9P,MAAM+P,aAAeD,EAAUC,YAIxC,GAAI,EAAK/P,MAAM+F,UAAY+J,EAAU/J,QA2BrC,GAAI,EAAK/F,MAAMgQ,aAAaC,SAAWH,EAAUE,aAAaC,OAQ1D,EAAKjQ,MAAMgQ,aAAaE,YACpBJ,EAAUE,aAAaE,YACU,IAArCJ,EAAUE,aAAaE,WAEvB3H,IAAI4H,IAAI,gBAAkB,EAAKnQ,MAAM/E,SAAS,GAAGO,IAC5CmN,MAAK,SAAC7O,GACH,EAAK4V,SAAS,CACVxS,OAAQpD,EAASG,KAAKmW,SAG7BxH,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,gBAvBhB,CACI,IAAMqC,EAAOqU,EAAU7U,SAAS,GAAGQ,KACnC,EAAKiU,SAAS,CACVP,QAAS1T,SA5Bb,IAA0B,IAAtBqU,EAAU/J,QACV,GAA8B,0BAA1B+J,EAAUzJ,YAA0B,CACpC,GACIgK,KAAWpS,YAAY,EAAK+B,MAAM1F,SAASgW,WAC3C,EAAKtQ,MAAMkC,OACX,EAAKlC,MAAMkC,MAAMqO,MAAQ,EAGzB,YADA,EAAKC,aAAa,EAAKC,iBAG3B,EAAKA,uBACF,GAA8B,4CAA1BX,EAAUzJ,YAA6B,CAC9C,GACIgK,KAAWpS,YAAY,EAAK+B,MAAM1F,SAASgW,WAC3C,EAAKtQ,MAAMkC,OACX,EAAKlC,MAAMkC,MAAMqO,MAAQ,EAGzB,YADA,EAAKC,aAAa,EAAKE,UAG3B,EAAKA,iBAzBb,EAAKC,SAASb,EAAUhV,UAAWgV,EAAUjV,Y,EA2DrD2V,aAAe,SAACI,GACZA,K,EAGJF,SAAW,WACP,IAAIG,EAAS,GACb,GAAI,EAAK7Q,MAAM/E,SAAS,GAAGyI,IAAK,CAC5B,IAAMoN,EAC8B,MAAhC,EAAK9Q,MAAM/E,SAAS,GAAG+C,KACjB,EAAKgC,MAAM/E,SAAS,GAAG+C,KAAO,EAAKgC,MAAM/E,SAAS,GAAGQ,KACrD,EAAKuE,MAAM/E,SAAS,GAAG+C,KACvB,IACA,EAAKgC,MAAM/E,SAAS,GAAGQ,KACjCoV,EACI,mBACA,EAAK7Q,MAAM/E,SAAS,GAAGyI,IACvB,SACAqN,mBAAmBD,QAEvBD,EAAS,kBAAoB,EAAK7Q,MAAM/E,SAAS,GAAGO,GAGxD+M,IAAIyI,IAAIH,GACHlI,MAAK,SAAC7O,GACHO,OAAOC,SAAS0C,OAAOlD,EAASG,MAChC,EAAKsJ,UACL,EAAKqM,YAAa,KAErBhH,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,SAEJ,EAAKmK,c,EAIjBkN,gBAAkB,WACd,IAAMrI,EAAO,GACTC,EAAQ,GACZ,EAAKrI,MAAM/E,SAASuI,KAAI,SAAC5G,GAMrB,MALmB,QAAfA,EAAMjB,KACNyM,EAAKE,KAAK1L,EAAMpB,IAEhB6M,EAAMC,KAAK1L,EAAMpB,IAEd,QAGX,IAAIqV,EAAS,gBACPI,EAAW,CACb5I,MAAOA,EACPD,KAAMA,GAENiI,KAAWpS,YAAY,EAAK+B,MAAM1F,SAASgW,YAC3CO,EAAS,kBAAoBxW,OAAO6W,UAAUxN,IAC9CuN,EAAQ,KAAW,EAAKjR,MAAM/E,SAAS,GAAG+C,MAG9CuK,IAAIC,KAAKqI,EAAQI,GACZtI,MAAK,SAAC7O,GAC2B,IAA1BA,EAASE,QAAQX,MACjB,EAAKkK,UACLlJ,OAAOC,SAAS0C,OAAOlD,EAASG,OAEhC,EAAK+F,MAAMuH,eACP,MACA,QACAzN,EAASE,QAAQQ,IACjB,WAGR,EAAK+I,UACL,EAAKvD,MAAMmR,oBAEdvI,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,SAEJ,EAAKmK,c,EAIjB6N,aAAe,SAACjS,GACZA,EAAEgJ,iBACF,EAAKnI,MAAMyH,kBAAiB,GAC5B,IAAMW,EAAO,GACTC,EAAQ,GAEZ,EAAKrI,MAAM/E,SAASuI,KAAI,SAAC5G,GACF,QAAfA,EAAMjB,KACNyM,EAAKE,KAAK1L,EAAMpB,IAEhB6M,EAAMC,KAAK1L,EAAMpB,OAGzB+M,IAAI8I,OAAO,UAAW,CAClBpX,KAAM,CACFoO,MAAOA,EACPD,KAAMA,KAGTO,MAAK,SAAC7O,GAC2B,IAA1BA,EAASE,QAAQX,MACjB,EAAKkK,UACLkI,WAAW,EAAKzL,MAAM2H,gBAAiB,MAEvC,EAAK3H,MAAMuH,eACP,MACA,QACAzN,EAASE,QAAQQ,IACjB,WAGR,EAAKwF,MAAMyH,kBAAiB,GAC5B,EAAKzH,MAAMmR,oBAEdvI,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,SAEJ,EAAK4G,MAAMyH,kBAAiB,O,EAIxC6J,WAAa,SAACnS,GACD,MAALA,GACAA,EAAEgJ,iBAEN,EAAKnI,MAAMyH,kBAAiB,GAC5B,IAAMW,EAAO,GACTC,EAAQ,GAEZ,EAAKrI,MAAM/E,SAASuI,KAAI,SAAC5G,GACF,QAAfA,EAAMjB,KACNyM,EAAKE,KAAK1L,EAAMpB,IAEhB6M,EAAMC,KAAK1L,EAAMpB,OAGzB+M,IAAIgJ,MAAM,UAAW,CACjBxU,OAAQ,OACR0L,QAAS,EAAKzI,MAAM/E,SAAS,GAAG+C,KAChCuG,IAAK,CACD6D,KAAMA,EACNC,MAAOA,GAEXK,IAAK,EAAK8I,iBACJ,EAAKA,iBACuB,OAA5B,EAAK1U,MAAMkK,aACX,IACA,EAAKlK,MAAMkK,eAEhB2B,MAAK,WACF,EAAKpF,UACL,EAAKvD,MAAM2H,kBACX,EAAK3H,MAAMyH,kBAAiB,MAE/BmB,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,SAEJ,EAAK4G,MAAMyH,kBAAiB,MAE/BkB,MAAK,WACF,EAAK3I,MAAMyR,qB,EAIvBd,SAAW,SAACzT,EAAQD,GACmB,IAA/B,EAAK+C,MAAM/E,SAASyB,SACpB,EAAKsD,MAAM/E,SAAS,GAAKiC,GAE7B,IAAIwU,GAAS,EAGb,EAAK1R,MAAM/E,SAASuI,KAAI,SAAC5G,IAEjBA,EAAMpB,KAAOyB,EAAOzB,IAAMoB,EAAMjB,OAASsB,EAAOtB,OAOhDiB,EAAMoB,OACNf,EAAOe,MAAwB,MAAhBf,EAAOe,KAAe,GAAK,KAAOf,EAAOxB,OAPxDiW,GAAS,MAcbA,IACA,EAAKF,iBACe,MAAhBvU,EAAOe,KACDf,EAAOe,KAAOf,EAAOxB,KACrBwB,EAAOe,KAAO,IAAMf,EAAOxB,KACrC,EAAKuE,MAAM2R,kBAAkB,yBAC7B,EAAKL,e,EAIbM,aAAe,SAACzS,GACZA,EAAEgJ,iBACF,EAAKnI,MAAMyH,kBAAiB,GAC5B,IAAM0H,EAAU,EAAKrS,MAAMqS,QAErB5K,EAAM,CACR6D,KAAM,GACNC,MAAO,IAGyB,QAAhC,EAAKrI,MAAM/E,SAAS,GAAGU,KACvB4I,EAAI6D,KAAK,GAAK,EAAKpI,MAAM/E,SAAS,GAAGO,GAErC+I,EAAI8D,MAAM,GAAK,EAAKrI,MAAM/E,SAAS,GAAGO,IAO9B,IAFR,EAAKwE,MAAMhF,QAAQ6W,WAAU,SAACjV,GAC1B,OAAOA,EAAMnB,OAAS0T,OAIlB,IAFR,EAAKnP,MAAMjF,SAAS8W,WAAU,SAACjV,GAC3B,OAAOA,EAAMnB,OAAS0T,MAG1B,EAAKnP,MAAMuH,eACP,MACA,QACA,+DACA,WAEJ,EAAKvH,MAAMyH,kBAAiB,IAE5Bc,IAAIC,KAAK,iBAAkB,CACvBzL,OAAQ,SACRwH,IAAKA,EACLuN,SAAU3C,IAETxG,MAAK,WACF,EAAKpF,UACL,EAAKvD,MAAM2H,kBACX,EAAK3H,MAAMyH,kBAAiB,MAE/BmB,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,SAEJ,EAAK4G,MAAMyH,kBAAiB,O,EAK5CsK,sBAAwB,SAAC5S,GACrBA,EAAEgJ,iBACF,EAAKnI,MAAMyH,kBAAiB,IAIhB,IAFR,EAAKzH,MAAMhF,QAAQ6W,WAAU,SAACjV,GAC1B,OAAOA,EAAMnB,OAAS,EAAKqB,MAAMmS,kBAGrC,EAAKjP,MAAMuH,eACP,MACA,QACA,6CACA,WAEJ,EAAKvH,MAAMyH,kBAAiB,IAE5Bc,IAAIyI,IAAI,aAAc,CAClBhT,MACyB,MAApB,EAAKgC,MAAMhC,KAAe,GAAK,EAAKgC,MAAMhC,MAC3C,IACA,EAAKlB,MAAMmS,gBAEdtG,MAAK,WACF,EAAKpF,UACL,EAAKvD,MAAM2H,kBACX,EAAK3H,MAAMyH,kBAAiB,MAE/BmB,OAAM,SAACtP,GACJ,EAAK0G,MAAMyH,kBAAiB,GAE5B,EAAKzH,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,a,EAOpB4Y,oBAAsB,SAAC7S,GACnBA,EAAEgJ,iBACF,EAAKnI,MAAMyH,kBAAiB,IAIhB,IAFR,EAAKzH,MAAMhF,QAAQ6W,WAAU,SAACjV,GAC1B,OAAOA,EAAMnB,OAAS,EAAKqB,MAAMoS,gBAGrC,EAAKlP,MAAMuH,eACP,MACA,QACA,uCACA,WAEJ,EAAKvH,MAAMyH,kBAAiB,IAE5Bc,IAAIC,KAAK,eAAgB,CACrBxK,MACyB,MAApB,EAAKgC,MAAMhC,KAAe,GAAK,EAAKgC,MAAMhC,MAC3C,IACA,EAAKlB,MAAMoS,cAEdvG,MAAK,WACF,EAAKpF,UACL,EAAKvD,MAAM2H,kBACX,EAAK3H,MAAMyH,kBAAiB,MAE/BmB,OAAM,SAACtP,GACJ,EAAK0G,MAAMyH,kBAAiB,GAE5B,EAAKzH,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,a,EAOpB6Y,sBAAwB,SAAC9S,GACrBA,EAAEgJ,iBACF,EAAKnI,MAAMyH,kBAAiB,GAC5Bc,IAAIC,KAAK,kBAAoB,EAAKxI,MAAM/E,SAAS,GAAGO,GAAI,CACpDkN,IACgC,OAA5B,EAAK5L,MAAMkK,aACL,IACA,EAAKlK,MAAMkK,eAEpB2B,MAAK,WACF,EAAK3I,MAAMuH,eACP,MACA,QACA,iCACA,WAEJ,EAAKhE,UACL,EAAKvD,MAAMyH,kBAAiB,MAE/BmB,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,SAEJ,EAAK4G,MAAMyH,kBAAiB,O,EAIxCyK,eAAiB,SAAC/S,GACdA,EAAEgJ,iBACF,EAAKnI,MAAMyH,kBAAiB,GAC5Bc,IAAIC,KAAK,aAAc,CACnB4H,IAAK,EAAKtT,MAAMwS,YAChB5G,IACgC,OAA5B,EAAK5L,MAAMkK,aACL,IACA,EAAKlK,MAAMkK,eAEpB2B,MAAK,WACF,EAAK3I,MAAMuH,eACP,MACA,QACA,iCACA,WAEJ,EAAKhE,UACL,EAAKvD,MAAMyH,kBAAiB,MAE/BmB,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,SAEJ,EAAK4G,MAAMyH,kBAAiB,O,EAIxC0K,cAAgB,SAACnK,GACb,IAAMhK,EACc,MAAhBgK,EAAOhK,KACDgK,EAAOhK,KAAOgK,EAAOvM,KACrBuM,EAAOhK,KAAO,IAAMgK,EAAOvM,KACrC,EAAKiU,SAAS,CACV1I,aAAchJ,EACdkJ,iBAAkBc,EAAOvM,Q,EAIjC2W,mBAAqB,WACjB,EAAKpS,MAAMyR,iBACX,EAAK/B,SAAS,CACVH,0BAA0B,K,EAIlChM,QAAU,WACN,EAAKmM,SAAS,CACVT,cAAe,GACfC,YAAa,GACbC,QAAS,GACTnI,aAAc,GACdE,iBAAkB,GAClBkI,aAAa,EACbC,SAAU,GACVC,YAAa,GACbvG,SAAU,GACVwG,0BAA0B,EAC1BrS,OAAQ,KAEZ,EAAKyS,cAAgB,GACrB,EAAK3P,MAAMyR,kB,EAGftG,aAAe,SAAC1P,GAAD,OAAU,SAACkI,GACtB,EAAK+L,SAAL,eAAiBjU,EAAOkI,EAAM1G,OAAOsP,Y,4CAGzC,WAAU,IAAD,OACGhM,EAAYhH,KAAKyG,MAAjBO,QAER,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC+F,EAAA,EAAD,CACI3I,KAAMpE,KAAKyG,MAAMgQ,aAAaE,UAC9B3M,QAAShK,KAAKgK,QACdgD,kBAAgB,qBAEhB,kBAACqB,EAAA,EAAD,CAAapM,GAAG,qBAAhB,wCAIA,kBAACgL,EAAA,EAAD,KACI,0BAAM6L,SAAU9Y,KAAKwY,uBACjB,kBAAC7D,EAAA,EAAD,CACIG,WAAS,EACT5J,OAAO,QACPjJ,GAAG,gBACHgT,MAAM,2BACN7S,KAAK,OACLiB,MAAOrD,KAAKuD,MAAMI,OAClByO,WAAS,MAIrB,kBAAC1D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAASpI,KAAKgK,SAAtB,kBAGR,kBAAC+C,EAAA,EAAD,CACI3I,KAAMpE,KAAKyG,MAAMgQ,aAAasC,gBAC9B/O,QAAShK,KAAKgK,QACdgD,kBAAgB,qBAEhB,kBAACqB,EAAA,EAAD,CAAapM,GAAG,qBAAhB,kCAEA,kBAACgL,EAAA,EAAD,KACI,0BAAM6L,SAAU9Y,KAAKwY,uBACjB,kBAAC7D,EAAA,EAAD,CACIG,WAAS,EACT5J,OAAO,QACPjJ,GAAG,gBACHgT,MAAM,iCACN7S,KAAK,OACLiB,MAAOrD,KAAKuD,MAAMmS,cAClBnD,SAAU,SAAC3M,GAAD,OAAO,EAAKsQ,kBAAkBtQ,IACxCwM,WAAS,MAIrB,kBAAC1D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAASpI,KAAKgK,SAAtB,gBACA,yBAAKnD,UAAWG,EAAQ2E,SACpB,kBAACgD,EAAA,EAAD,CACIvG,QAASpI,KAAKwY,sBACdrR,MAAM,UACN+E,SACiC,KAA7BlM,KAAKuD,MAAMmS,eACX1V,KAAKyG,MAAM6I,eALnB,eASKtP,KAAKyG,MAAM6I,eACR,kBAACnC,EAAA,EAAD,CACIhL,KAAM,GACN0E,UAAWG,EAAQqG,qBAQ3C,kBAACN,EAAA,EAAD,CACI3I,KAAMpE,KAAKyG,MAAMgQ,aAAauC,cAC9BhP,QAAShK,KAAKgK,QACdgD,kBAAgB,qBAEhB,kBAACqB,EAAA,EAAD,CAAapM,GAAG,qBAAhB,4BAEA,kBAACgL,EAAA,EAAD,KACI,0BAAM6L,SAAU9Y,KAAKyY,qBACjB,kBAAC9D,EAAA,EAAD,CACIG,WAAS,EACT5J,OAAO,QACPjJ,GAAG,cACHgT,MAAM,2BACN7S,KAAK,OACLiB,MAAOrD,KAAKuD,MAAMoS,YAClBpD,SAAU,SAAC3M,GAAD,OAAO,EAAKsQ,kBAAkBtQ,IACxCwM,WAAS,MAIrB,kBAAC1D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAASpI,KAAKgK,SAAtB,gBACA,yBAAKnD,UAAWG,EAAQ2E,SACpB,kBAACgD,EAAA,EAAD,CACIvG,QAASpI,KAAKyY,oBACdtR,MAAM,UACN+E,SAC+B,KAA3BlM,KAAKuD,MAAMoS,aACX3V,KAAKyG,MAAM6I,eALnB,eASKtP,KAAKyG,MAAM6I,eACR,kBAACnC,EAAA,EAAD,CACIhL,KAAM,GACN0E,UAAWG,EAAQqG,qBAQ3C,kBAACN,EAAA,EAAD,CACI3I,KAAMpE,KAAKyG,MAAMgQ,aAAaC,OAC9B1M,QAAShK,KAAKgK,QACdgD,kBAAgB,oBAChBmF,SAAS,KACTC,WAAW,GAEX,kBAAC/D,EAAA,EAAD,CAAapM,GAAG,qBAAhB,sBACA,kBAACgL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,oBACO,IACH,gCACoC,IAA/BlN,KAAKyG,MAAM/E,SAASyB,OACfnD,KAAKyG,MAAM/E,SAAS,GAAGQ,KACvB,IACA,IANd,kCASA,0BAAM4W,SAAU9Y,KAAKqY,cACjB,kBAAC1D,EAAA,EAAD,CACIG,WAAS,EACT5J,OAAO,QACPjJ,GAAG,UACHgT,MAAM,qBACN7S,KAAK,OACLiB,MAAOrD,KAAKuD,MAAMqS,QAClBrD,SAAU,SAAC3M,GAAD,OAAO,EAAKsQ,kBAAkBtQ,IACxCwM,WAAS,MAIrB,kBAAC1D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAASpI,KAAKgK,SAAtB,gBACA,yBAAKnD,UAAWG,EAAQ2E,SACpB,kBAACgD,EAAA,EAAD,CACIvG,QAASpI,KAAKqY,aACdlR,MAAM,UACN+E,SAC2B,KAAvBlM,KAAKuD,MAAMqS,SACX5V,KAAKyG,MAAM6I,eALnB,eASKtP,KAAKyG,MAAM6I,eACR,kBAACnC,EAAA,EAAD,CACIhL,KAAM,GACN0E,UAAWG,EAAQqG,qBAO3C,kBAACG,EAAD,CACIpJ,KAAMpE,KAAKyG,MAAMgQ,aAAawC,KAC9BjP,QAAShK,KAAKgK,QACduE,YAAavO,KAAKyG,MAAMhC,KACxB/C,SAAU1B,KAAKyG,MAAM/E,SACrB4N,cAAetP,KAAKyG,MAAM6I,gBAG9B,kBAACvC,EAAA,EAAD,CACI3I,KAAMpE,KAAKyG,MAAMgQ,aAAayC,KAC9BlP,QAAShK,KAAKgK,QACdgD,kBAAgB,qBAEhB,kBAACqB,EAAA,EAAD,CAAapM,GAAG,qBAAhB,sBACA,kBAACqM,EAAA,EAAD,CACIC,YAAavO,KAAKyG,MAAMhC,KACxB/C,SAAU1B,KAAKyG,MAAM/E,SACrB8M,SAAUxO,KAAK4Y,gBAGU,KAA5B5Y,KAAKuD,MAAMkK,cACR,kBAACR,EAAA,EAAD,CAAepG,UAAWG,EAAQoG,YAC9B,kBAACF,EAAA,EAAD,0BACQ,IACJ,gCAASlN,KAAKuD,MAAMoK,oBAIhC,kBAACe,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAASpI,KAAKgK,SAAtB,gBACA,yBAAKnD,UAAWG,EAAQ2E,SACpB,kBAACgD,EAAA,EAAD,CACIvG,QAASpI,KAAK+X,WACd5Q,MAAM,UACN+E,SACgC,KAA5BlM,KAAKuD,MAAMkK,cACXzN,KAAKyG,MAAM6I,eALnB,eASKtP,KAAKyG,MAAM6I,eACR,kBAACnC,EAAA,EAAD,CACIhL,KAAM,GACN0E,UAAWG,EAAQqG,qBAO3C,kBAACN,EAAA,EAAD,CACI3I,KAAMpE,KAAKyG,MAAMgQ,aAAa0C,OAC9BnP,QAAShK,KAAKgK,QACdgD,kBAAgB,qBAEhB,kBAACqB,EAAA,EAAD,CAAapM,GAAG,qBAAhB,4BAEA,kBAACgL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,sCAEoC,IAA/BlN,KAAKyG,MAAM/E,SAASyB,QACjB,oCAAUnD,KAAKyG,MAAM/E,SAAS,GAAGQ,KAAjC,KAEHlC,KAAKyG,MAAM/E,SAASyB,OAAS,GAC1B,uCACMnD,KAAKyG,MAAM/E,SAASyB,OAD1B,sBANR,iBAaJ,kBAACuL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAASpI,KAAKgK,SAAtB,gBACA,yBAAKnD,UAAWG,EAAQ2E,SACpB,kBAACgD,EAAA,EAAD,CACIvG,QAASpI,KAAK6X,aACd1Q,MAAM,UACN+E,SAAUlM,KAAKyG,MAAM6I,eAHzB,eAMKtP,KAAKyG,MAAM6I,eACR,kBAACnC,EAAA,EAAD,CACIhL,KAAM,GACN0E,UAAWG,EAAQqG,qBAQ3C,kBAACwD,GAAD,CACIzM,KAAMpE,KAAKyG,MAAMgQ,aAAa9N,MAC9BqB,QAAShK,KAAKgK,QACdsF,cAAetP,KAAKyG,MAAM6I,cAC1BpB,iBAAkBlO,KAAKyG,MAAMyH,iBAC7BxM,SAAU1B,KAAKyG,MAAM/E,WAGzB,kBAACqL,EAAA,EAAD,CACI3I,KAAMpE,KAAKyG,MAAMgQ,aAAa2C,MAC9BpP,QAAShK,KAAKgK,QACdgD,kBAAgB,qBAEhB,kBAACqB,EAAA,EAAD,CAAapM,GAAG,qBAAhB,4BAEA,kBAACgL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACoC,IAA/BlN,KAAKyG,MAAM/E,SAASyB,QACjB,2BACIkW,UAAQ,EACRrO,IACI8L,KAAWpS,YACP1E,KAAKyG,MAAM1F,SAASgW,UAElB1X,IACA,kBACAW,KAAKyG,MAAM/E,SAAS,GAAGyI,KACtBnK,KAAKyG,MAAM/E,SAAS,GAAGyI,IAClB,SACAqN,mBAEkB,MADdxX,KAAKyG,MAAM/E,SAAS,GACf+C,KACCzE,KAAKyG,MACA/E,SAAS,GACT+C,KACDzE,KAAKyG,MACA/E,SAAS,GACTQ,KACTlC,KAAKyG,MACA/E,SAAS,GACT+C,KACD,IACAzE,KAAKyG,MACA/E,SAAS,GACTQ,MAEnB,IACN7C,IACA,iBACAW,KAAKyG,MAAM/E,SAAS,GAAGO,OAMjD,kBAACyM,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAASpI,KAAKgK,SAAtB,kBAGR,kBAAC+C,EAAA,EAAD,CACI3I,KAAMpE,KAAKyG,MAAMgQ,aAAa6C,eAC9BtP,QAAShK,KAAKgK,QACdgD,kBAAgB,oBAChBoF,WAAS,GAET,kBAAC/D,EAAA,EAAD,CAAapM,GAAG,qBAAhB,oDAIA,kBAACgL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACyH,EAAA,EAAD,CACIM,MAAM,2BACNH,WAAS,EACT1C,WAAS,EACTnQ,GAAG,cACHsQ,SAAUvS,KAAKkW,kBACfqD,YAAY,wGAIxB,kBAAC7K,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAASpI,KAAKgK,SAAtB,gBACA,kBAAC2E,EAAA,EAAD,CACIvG,QAASpI,KAAK6Y,mBACd1R,MAAM,UACN+E,SACIlM,KAAKyG,MAAM6I,eACgB,KAA3BtP,KAAKuD,MAAMwS,aALnB,wBAYR,kBAAChJ,EAAA,EAAD,CACI3I,KAAMpE,KAAKuD,MAAMyS,yBACjBhM,QAAShK,KAAKgK,QACdgD,kBAAgB,qBAEhB,kBAACqB,EAAA,EAAD,CAAapM,GAAG,qBAAhB,wCAGA,kBAACqM,EAAA,EAAD,CACIC,YAAavO,KAAKyG,MAAMhC,KACxB/C,SAAU1B,KAAKyG,MAAM/E,SACrB8M,SAAUxO,KAAK4Y,gBAGU,KAA5B5Y,KAAKuD,MAAMkK,cACR,kBAACR,EAAA,EAAD,CAAepG,UAAWG,EAAQoG,YAC9B,kBAACF,EAAA,EAAD,0BACQ,IACJ,gCAASlN,KAAKuD,MAAMoK,oBAIhC,kBAACe,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAASpI,KAAKgK,SAAtB,gBACA,yBAAKnD,UAAWG,EAAQ2E,SACpB,kBAACgD,EAAA,EAAD,CACIvG,QAASpI,KAAK2Y,eACdxR,MAAM,UACN+E,SACgC,KAA5BlM,KAAKuD,MAAMkK,cACXzN,KAAKyG,MAAM6I,eALnB,2BASKtP,KAAKyG,MAAM6I,eACR,kBAACnC,EAAA,EAAD,CACIhL,KAAM,GACN0E,UAAWG,EAAQqG,qBAO3C,kBAACN,EAAA,EAAD,CACI3I,KAAMpE,KAAKyG,MAAMgQ,aAAa+C,gBAC9BxP,QAAShK,KAAKgK,QACdgD,kBAAgB,qBAEhB,kBAACqB,EAAA,EAAD,CAAapM,GAAG,qBAAhB,wCAGA,kBAACqM,EAAA,EAAD,CACIC,YAAavO,KAAKyG,MAAMhC,KACxB/C,SAAU1B,KAAKyG,MAAM/E,SACrB8M,SAAUxO,KAAK4Y,gBAGU,KAA5B5Y,KAAKuD,MAAMkK,cACR,kBAACR,EAAA,EAAD,CAAepG,UAAWG,EAAQoG,YAC9B,kBAACF,EAAA,EAAD,0BACQ,IACJ,gCAASlN,KAAKuD,MAAMoK,oBAIhC,kBAACe,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAASpI,KAAKgK,SAAtB,gBACA,yBAAKnD,UAAWG,EAAQ2E,SACpB,kBAACgD,EAAA,EAAD,CACIvG,QAASpI,KAAK0Y,sBACdvR,MAAM,UACN+E,SACgC,KAA5BlM,KAAKuD,MAAMkK,cACXzN,KAAKyG,MAAM6I,eALnB,2BASKtP,KAAKyG,MAAM6I,eACR,kBAACnC,EAAA,EAAD,CACIhL,KAAM,GACN0E,UAAWG,EAAQqG,qBAQ3C,kBAAC+H,GAAD,CACIhR,KAAMpE,KAAKyG,MAAMgQ,aAAagD,WAC9BzP,QAAShK,KAAKgK,QACduE,YAAavO,KAAKyG,MAAMhC,KACxB/C,SAAU1B,KAAKyG,MAAM/E,SACrB4N,cAAetP,KAAKyG,MAAM6I,gBAE9B,kBAACgG,GAAD,CACIlR,KAAMpE,KAAKyG,MAAMgQ,aAAaiD,SAC9B1P,QAAShK,KAAKgK,QACduE,YAAavO,KAAKyG,MAAMhC,KACxB/C,SAAU1B,KAAKyG,MAAM/E,SACrB4N,cAAetP,KAAKyG,MAAM6I,qB,GAt+BhBqK,aAi/BxBC,GAASC,aAxhCS,SAACtW,GACrB,MAAO,CACHkB,KAAMlB,EAAMuW,UAAUrV,KACtB/C,SAAU6B,EAAMD,SAAS5B,SACzB+U,aAAclT,EAAMuF,WAAW8D,OAC/B0C,cAAe/L,EAAMuF,WAAWwG,cAChC7N,QAAS8B,EAAMD,SAAS7B,QACxBD,SAAU+B,EAAMD,SAAS9B,SACzBgV,WAAYjT,EAAMD,SAASjC,UAC3BC,UAAWiC,EAAMD,SAAShC,UAC1BC,UAAWgC,EAAMD,SAAS/B,UAC1BiL,QAASjJ,EAAMuF,WAAW8D,OAAOJ,QACjCM,YAAavJ,EAAMuF,WAAW8D,OAAOE,gBAIlB,SAACpF,GACxB,MAAO,CACHwQ,eAAgB,WACZxQ,EAASwQ,gBAEblK,eAAgB,SAACF,EAAUC,EAAY9M,EAAKkG,GACxCO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,KAEvD+G,iBAAkB,SAACjC,GACfvE,EAASwG,YAAiBjC,KAE9BmC,gBAAiB,WACb1G,EAAS0G,gBAEbwJ,eAAgB,WACZlQ,EAASkQ,gBAEbQ,kBAAmB,SAACvL,GAChBnF,EAAS0Q,YAAkBvL,QAs/BxBgN,CAGb9J,aA7iCa,SAAC7J,GAAD,MAAY,CACvByF,QAAS,CACLT,OAAQhF,EAAM0F,QAAQ,GACtBtE,SAAU,YAEd+F,eAAgB,CACZlG,MAAOjB,EAAMe,QAAQqG,UAAUC,MAC/BjG,SAAU,WACV6D,IAAK,MACLG,KAAM,MACNmB,WAAY,GACZC,YAAa,IAEjBU,WAAY,CACR/G,QAAS,yBA+hCf0J,CAAmBgK,aAAWtE,MAEjBmE,c,gCC/kCf,IAAMhZ,EAAO,CACToZ,iBAAiB,EACjBC,aAFS,SAEIC,GACTtZ,EAAKuZ,QAAQD,GACbtZ,EAAKoZ,iBAAkB,GAE3BI,QANS,WAOL,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SAAW,SAEtDL,QATS,SASDM,GACJF,aAAaG,QAAQ,OAAQL,KAAKM,UAAUF,KAEhDG,MAZS,WAaL,QAAIha,EAAKoZ,iBAG4B,OAAjCO,aAAaC,QAAQ,UACb5Z,EAAKwZ,UAAUS,WAI/Bha,QArBS,WAsBLD,EAAKoZ,iBAAkB,EACvB,IAAMc,EAAUla,EAAKwZ,UACrBU,EAAQ7Y,GAAK,EACbsY,aAAaG,QAAQ,OAAQL,KAAKM,UAAUG,KAEhDzS,cA3BS,SA2BK8B,EAAa9G,GACvB,IAAI0X,EAAaV,KAAKC,MAClBC,aAAaC,QAAQ,oBAAsB,OAE/CO,EAA2B,MAAdA,EAAqB,GAAKA,GAC5B5Q,GAAO9G,EAClBkX,aAAaG,QAAQ,kBAAmBL,KAAKM,UAAUI,KAE3DC,cAnCS,SAmCK7Q,GACV,IAAM4Q,EAAaV,KAAKC,MACpBC,aAAaC,QAAQ,oBAAsB,MAE/C,OAAIO,GAAcA,EAAW5Q,GAClB4Q,EAAW5Q,GAEf,OAIAvJ,O,8OClCToF,EAAYC,aAAW,SAACC,GAAD,YAAY,CACrC+U,QAAM,GACF7U,MAAO,OACPqG,UAAW,OACXC,WAAYxG,EAAM0F,QAAQ,GAC1BrD,YAAarC,EAAM0F,QAAQ,IAJzB,cAKD1F,EAAMI,YAAY4U,GAAG,KAA0B,EAAnBhV,EAAM0F,QAAQ,IAAU,CACjDxF,MAAO,KACPsG,WAAY,OACZnE,YAAa,SARf,6BAUY,IAVZ,GAYN4S,OAAQ,CACJC,aAAc,OAElBpL,KAAM,CACFtJ,gBAAiB,QACjB0U,aAAc,OAElB,UAAW,CACP,eAAgB,CACZC,UAAW,uBASR,SAASC,IACpB,MAA8BlW,mBAAS,IAAvC,mBAAOmL,EAAP,KAAgBgL,EAAhB,KACA,EAA4BnW,mBAAS,IAArC,mBAAO6G,EAAP,KAAeuP,EAAf,KACA,EAA8BpW,oBAAS,GAAvC,mBAAOoH,EAAP,KAAgBiP,EAAhB,KACMC,EAAOC,cACPC,EAAM9K,IAAM+K,YACZ9a,EAAW+a,cACXC,EAVC,IAAIC,gBAAgBF,cAAcG,QAWjCha,EAAOia,cAAPja,GAEFyF,EAAWC,cACXwU,EAActU,uBAChB,SAACI,GAAD,OAAWP,EAAS0U,YAAenU,MACnC,CAACP,IAECmG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAGLhC,qBAAU,WACN,GAAKoR,IAAWpS,YAAY3D,EAASgW,UAIjCoF,EAAYJ,EAAMnF,IAAI,aAJsB,CAC5C,IAAMnS,EAAOsX,EAAMnF,IAAI,KAAKyF,MAAM,KAClCF,EAAY1X,EAAKA,EAAKtB,OAAS,OAKpC,CAACuY,EAAKY,OAAO,GAAIvb,IAEpB2E,qBAAU,WACN,IAAI6W,EAAa,iBAAmBR,EAAMnF,IAAI,MAC1CE,IAAWpS,YAAY3D,EAASgW,YAChCwF,EAAa,kBAAoBta,EACD,KAA5B8Z,EAAMnF,IAAI,gBACV2F,GACI,SAAW/E,mBAAmBuE,EAAMnF,IAAI,iBAIpD6E,GAAW,GACXzM,IAAI4H,IAAI2F,EAAY,CAAEC,aAAc,gBAC/BpN,MAAK,SAAC7O,GACH,IACMkc,EADS,IAAIC,EAAOnc,EAASE,QAAS,UACpBmT,WACxB2H,EAAWkB,MAEdpN,OAAM,SAACtP,GACJ8N,EACI,MACA,QACA,yDAAc9N,EAAMF,QACpB,YAGPuP,MAAK,WACFqM,GAAW,QAGpB,CAACC,EAAKY,OAAO,KAEhB,IAAMK,EAAW,SAAC3a,GAAD,OACb,IAAId,SAAQ,SAAC0b,EAASzb,GAClB,IAAM0b,EAAS,IAAIC,WACnBD,EAAOE,cAAc/a,GACrB6a,EAAOG,OAAS,kBAAMJ,EAAQC,EAAOI,SACrCJ,EAAOK,QAAU,SAACnd,GAAD,OAAWoB,EAAOpB,QAGrCod,EAAO,WACT3B,EAAU,WACVxM,IAAIyI,IAAI,gBAAkBsE,EAAMnF,IAAI,MAAOrG,GACtCnB,MAAK,WACFoM,EAAU,WACVtJ,YAAW,kBAAMsJ,EAAU,MAAK,QAEnCnM,OAAM,SAACtP,GACJyb,EAAU,IACV3N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,aAIpDud,EAAM,uCAAG,WAAOC,GAAP,SAAAC,EAAA,kEACX1B,EAAI2B,QADO,KACUF,EAAMnb,KADhB,SAC4Bya,EAASU,GADrC,wBACCG,SADD,qBAEXC,QAAQC,IAAIL,GAFD,2CAAH,sDAKNrW,EAAUhB,IAChB,OACI,yBAAKa,UAAWG,EAAQiU,QACpB,kBAAC,IAAD,CAAOpU,UAAWG,EAAQgJ,KAAM2N,UAAW,GACtCnR,GAAW,kBAAC,IAAD,OACVA,GACE,kBAAC,IAAD,CACIoR,IAAKhC,EACLvY,MAAOkN,EACPsN,OAAQ,kBAAMV,KACdC,OAAQ,SAACC,GAAD,OAAWD,EAAOC,IAC1B9K,SAAU,SAAClP,GAAD,OAAWkY,EAAWlY,IAChCya,QAAS,CACLC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,IAAI,EACJC,KAAK,EACLC,MAAM,EACNte,MAAM,EACN2R,SAAS,EACT4M,QAAQ,EAERC,MAAM,EACNC,MAAM,EACNpB,MAAM,EAENqB,UAAU,OAKxB1H,IAAWpS,YAAY3D,EAASgW,WAC9B,kBAAC,IAAD,CAAY3O,QAAS+U,EAAMlR,OAAQA,Q,qSClJ7CwS,EAAe3N,IAAM4N,MAAK,kBAC5B,4DAGE1Y,EAAYC,aAAW,SAACC,GAAD,YAAY,CACrC+U,QAAM,GACF7U,MAAO,OACPqG,UAAW,OACXC,WAAYxG,EAAM0F,QAAQ,GAC1BrD,YAAarC,EAAM0F,QAAQ,IAJzB,cAKD1F,EAAMI,YAAY4U,GAAG,KAA0B,EAAnBhV,EAAM0F,QAAQ,IAAU,CACjDxF,MAAO,KACPsG,WAAY,OACZnE,YAAa,SARf,6BAUY,IAVZ,GAYNoW,OAAQ,CACJvD,aAAc,OAElB,UAAW,CACP,kBAAmB,CACfA,aAAc,kBAGtBwD,YAAa,CACT1T,OAAQ,qBAEZ2T,OAAQ,CACJC,UAAW,aAQJ,SAASC,IACpB,MAA8B3Z,mBAAS,IAAvC,mBAAOmL,EAAP,KAAgBgL,EAAhB,KACA,EAA4BnW,mBAAS,IAArC,mBAAO6G,EAAP,KAAeuP,EAAf,KACA,EAA8BpW,oBAAS,GAAvC,mBAAOoH,EAAP,KAAgBiP,EAAhB,KACA,EAA4BrW,mBAAS,cAArC,mBAAO4Z,EAAP,KAAeC,EAAf,KACA,EAAgC7Z,mBAAS,OAAzC,mBAAO8Z,EAAP,KAAiBC,EAAjB,KAEMzD,EAAOC,cACP5a,EAAW+a,cACXC,EAZC,IAAIC,gBAAgBF,cAAcG,QAajCha,EAAOia,cAAPja,GACFiE,EAAQa,cAERW,EAAWC,cACXwU,EAActU,uBAChB,SAACI,GAAD,OAAWP,EAAS0U,YAAenU,MACnC,CAACP,IAECmG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAGLhC,qBAAU,WACN,GAAKoR,IAAWpS,YAAY3D,EAASgW,UAK9B,CACH,IAAMqI,EAAYrD,EAAMnF,IAAI,QAAQyF,MAAM,KAC1C4C,EAAUI,IAAkBD,EAAUE,QACtCnD,EAAYJ,EAAMnF,IAAI,aARsB,CAC5C,IAAMnS,EAAOsX,EAAMnF,IAAI,KAAKyF,MAAM,KAC5B+C,EAAYrD,EAAMnF,IAAI,KAAKyF,MAAM,KACvC4C,EAAUI,IAAkBD,EAAUE,QACtCnD,EAAY1X,EAAKA,EAAKtB,OAAS,OAOpC,CAACuY,EAAKY,OAAO,GAAIvb,IAEpB2E,qBAAU,WACN,IAAI6W,EAAa,iBAAmBR,EAAMnF,IAAI,MAC1CE,IAAWpS,YAAY3D,EAASgW,YAChCwF,EAAa,kBAAoBta,EACD,KAA5B8Z,EAAMnF,IAAI,gBACV2F,GACI,SAAW/E,mBAAmBuE,EAAMnF,IAAI,iBAIpD6E,GAAW,GACXzM,IAAI4H,IAAI2F,EAAY,CAAEC,aAAc,gBAC/BpN,MAAK,SAAC7O,GACH,IACMkc,EADS,IAAIC,EAAOnc,EAASE,QAAS,UACpBmT,WACxB2H,EAAWkB,MAEdpN,OAAM,SAACtP,GACJ8N,EACI,MACA,QACA,yDAAc9N,EAAMF,QACpB,YAGPuP,MAAK,WACFqM,GAAW,QAGpB,CAACC,EAAKY,OAAO,KAEhB,IAaMtV,EAAUhB,IACVtB,EAAcoS,IAAWpS,YAAY3D,EAASgW,UACpD,OACI,yBAAKlQ,UAAWG,EAAQiU,QACpB,kBAAC,IAAD,CAAOpU,UAAWG,EAAQgJ,KAAM2N,UAAW,GACvC,yBAAK9W,UAAWG,EAAQ6X,QACpB,kBAAC,IAAD,CAAahY,UAAWG,EAAQ4X,aAC5B,kBAAC,IAAD,CAAkBW,QACd,kBAAC,IAAD,CACIhN,SAAU,SAAC3M,GAAD,OAAOuZ,EAAYvZ,EAAElC,OAAOsP,QAAU,KAAO,UAE7DiC,MAAM,8BAEZ,kBAAC,IAAD,CAAapO,UAAWG,EAAQ4X,aAC5B,kBAAC,IAAD,CACIpK,QAAQ,2BACRvS,GAAG,qBACHoB,MAAO2b,EACPzM,SAAU,SAAC3M,GAAD,OAAOqZ,EAAUrZ,EAAElC,OAAOL,SAEnCmc,MAAMC,KACH,IAAIC,IACAtf,OAAOuf,KAAKN,KAAmBpV,KAAI,SAAC2V,GAChC,OAAOP,IAAkBO,QAGnC3V,KAAI,SAACmV,EAAW9c,GAAZ,OACF,kBAAC,IAAD,CAAUe,MAAO+b,EAAWjV,IAAK7H,GAC5B8c,SAMrB,kBAAC,IAAD,MACC5S,GAAW,kBAAC,IAAD,OACVA,GACE,kBAAC,WAAD,CAAUqT,SAAU,kBAAC,IAAD,OAChB,kBAACpB,EAAD,CACI1T,OAAO,MACP+U,SAAUd,EACV9Y,MAC2B,SAAvBA,EAAMe,QAAQ7E,KAAkB,UAAY,KAEhDiB,MAAOkN,EACPwP,QAAS,CACLC,SAAUtb,EACVub,qBAAsBjZ,EAAQ2X,OAC9BO,SAAUA,GAEd3M,SAAU,SAAClP,GAAD,OAAWkY,EAAWlY,SAK9CqB,GAAe,kBAAC,IAAD,CAAY0D,QApExB,WACToT,EAAU,WACVxM,IAAIyI,IAAI,gBAAkBsE,EAAMnF,IAAI,MAAOrG,GACtCnB,MAAK,WACFoM,EAAU,WACVtJ,YAAW,kBAAMsJ,EAAU,MAAK,QAEnCnM,OAAM,SAACtP,GACJyb,EAAU,IACV3N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,aA2DNoM,OAAQA,Q,0DChMhE,giBAAO,IAAMiU,EAAe,SAACC,GACzB,GAAc,IAAVA,GAAyB,MAAVA,EAAe,MAAO,MACzC,IAEMC,EAAI1M,KAAK2M,MAAM3M,KAAKgK,IAAIyC,GAASzM,KAAKgK,IAFlC,OAGV,OAAQyC,EAAQzM,KAAK4M,IAHX,KAGkBF,IAAIG,QAAQ,GAAK,IAF/B,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAELH,IAGhDI,EAAa,SAAC/b,GACvB,OAAOA,GAWEgc,EAAkB,SAACC,EAAWC,GACvC,IAAI9J,EAAM/V,OAAOC,SAASC,KAE1B,GAAI6V,EAAI+J,QAAQF,EAAY,MAAQ,EAAG,CACnC,IAAMG,EAAShK,EAAIiK,UAAU,EAAGjK,EAAI+J,QAAQF,IACxC1B,EAASnI,EAAIiK,UAAUjK,EAAI+J,QAAQF,IAMvC7J,EAAMgK,EAASH,EAAY,IAAMC,GAJjC3B,GADAA,EAASA,EAAO8B,UAAU9B,EAAO4B,QAAQ,KAAO,IAErCA,QAAQ,MAAQ,EACjB5B,EAAO8B,UAAU9B,EAAO4B,QAAQ,MAChC,SAGN/J,EAAI+J,QAAQ,KAAO,EAAG/J,GAAO,IAAM6J,EAAY,IAAMC,EACpD9J,GAAO,IAAM6J,EAAY,IAAMC,EAEpC9J,IAAQ/V,OAAOC,SAASC,MAG5BF,OAAOigB,QAAQC,UAAU,KAAM,KAAMnK,IAG5BoK,EAAoB,WAC7B,OAAKngB,OAAO4D,cAGR5D,OAAO4D,cACH5D,OAAO6W,UAAUuJ,eAGQ,IAAzBpgB,OAAOqgB,SAASC,SAJxB,IAWSC,EAAqB,SAACC,GAC/B,IAAMzK,EAAM/V,OAAOC,SAASC,KAC5B,OAAwC,IAApC6V,EAAI+J,QAAQ,IAAMU,EAAQ,OACe,IAApCzK,EAAI+J,QAAQ,IAAMU,EAAQ,MAI1BC,EAAmB,SAACpa,GACNrG,OAAO0gB,SAASC,cACnC,0BAEWC,aAAa,UAAWva,IAsCpC,SAASwa,EAAate,GACzB,OAAOue,WAAWnC,KAAKoC,KAAKxe,IAAQ,SAACye,GAAD,OAAOA,EAAEC,WAAW,MAIrD,SAASC,EAAa3e,GACzB,OAAO4e,KAAKC,OAAOC,aAAaC,MAAM,KAAM,IAAIR,WAAWve,KACtDgf,QAAQ,MAAO,KACfA,QAAQ,MAAO,KACfA,QAAQ,KAAM,IAGhB,SAASC,EAAS7d,GACrB,IAAM8d,EACO,OAAT9d,EACMA,EAAKoP,OAAO,GAAGwI,MAAM,KACrBrc,KAAKyG,MAAMhC,KAAKoP,OAAO,GAAGwI,MAAM,KAC1C,MAAO,IAAMkG,EAAQzO,MAAM,EAAGyO,EAAQpf,OAAS,GAAGqf,KAAK,KAGpD,SAASnN,EAASrT,GACrB,MAAqB,MAAdA,EAAKyC,KACNzC,EAAKyC,KAAOzC,EAAKE,KACjBF,EAAKyC,KAAO,IAAMzC,EAAKE,KAG1B,SAASugB,EAAQC,GACpB,OAAOC,SAASD,EAAK,IAAI9O,SAAS,GAAGgP,SAAS,EAAG,KAuB9C,SAASC,EAASpe,GAErB,OADiBA,EAAK4X,MAAM,KACZiD,MAGb,SAASwD,EAAU3f,GAKtB,IAJA,IAAI8Z,EAAS,GACP8F,EACF,iEACEC,EAAmBD,EAAW5f,OAC3Bid,EAAI,EAAGA,EAAIjd,EAAQid,IACxBnD,GAAU8F,EAAWE,OACjBvP,KAAK2M,MAAM3M,KAAKC,SAAWqP,IAGnC,OAAO/F,EAGJ,SAASiG,EAAUC,EAAMC,GAM5B,OALAA,EAAWhgB,SAAQ,SAACigB,GACZA,GACAF,OAGDA,EAGJ,IAAMG,EAAQ,WACjB,OAAOxJ,UAAUyJ,SAASC,cAAc5C,QAAQ,QAAU,GAGvD,SAAS6C,IACZ,IAAMC,EAAK5iB,OAAO6iB,YAClBnC,SAASoC,gBAAgB9Y,MAAM+Y,YAAY,OAA3C,UAAsDH,EAAtD,S,iTC/JEI,EAAc,CAChBC,QAASC,IACTC,QAASC,IACTnkB,MAAOokB,IACPC,KAAMC,KAwEV,IAAMC,EAA2BvU,aArEjB,SAAC7J,GAAD,MAAY,CACxB6d,QAAS,CACLrd,gBAAiBR,EAAMe,QAAQ8c,QAAQQ,MAE3CxkB,MAAO,CACH2G,gBAAiBR,EAAMe,QAAQlH,MAAM4G,MAEzCyd,KAAM,CACF1d,gBAAiBR,EAAMe,QAAQmd,KAAKG,MAExCN,QAAS,CACLvd,gBAAiBR,EAAMe,QAAQgd,QAAQM,MAE3Crd,KAAM,CACF2C,SAAU,IAEd2a,YAAa,CACTpd,QAAS,GACTmB,YAAarC,EAAM0F,QAAQ,IAE/B/L,QAAS,CACL0M,QAAS,OACToD,WAAY,aA+CaI,EA3CjC,SAA2BtJ,GACvB,IAAQO,EAA4DP,EAA5DO,QAASH,EAAmDJ,EAAnDI,UAAWhH,EAAwC4G,EAAxC5G,QAASmK,EAA+BvD,EAA/BuD,QAASkJ,EAAsBzM,EAAtByM,QAAYxQ,EAA1D,YAAoE+D,EAApE,GACMge,EAAOX,EAAY5Q,GAEzB,OACI,kBAAC,IAAD,eACIrM,UAAWsB,IAAWnB,EAAQkM,GAAUrM,GACxC6d,mBAAiB,kBACjB7kB,QACI,0BAAMoC,GAAG,kBAAkB4E,UAAWG,EAAQnH,SAC1C,kBAAC4kB,EAAD,CACI5d,UAAWsB,IACPnB,EAAQE,KACRF,EAAQwd,eAGf3kB,GAGT2D,OAAQ,CACJ,kBAAC,IAAD,CACI2G,IAAI,QACJgC,aAAW,QACXhF,MAAM,UACNN,UAAWG,EAAQ2d,MACnBvc,QAAS4B,GAET,kBAAC,IAAD,CAAWnD,UAAWG,EAAQE,UAGlCxE,OAmBVkiB,E,4MACFrhB,MAAQ,CACJa,MAAM,G,EAGVkS,iCAAmC,SAACC,GAC5BA,EAAUsO,SAASC,SAAW,EAAKre,MAAMoe,SAASC,QAClD,EAAK3O,SAAS,CAAE/R,MAAM,K,EAI9B2gB,YAAc,WACV,EAAK5O,SAAS,CAAE/R,MAAM,K,4CAG1B,WACI,OACI,kBAAC,IAAD,CACI4gB,aAAc,CACVlX,SAAU9N,KAAKyG,MAAMoe,SAAS/W,SAC9BC,WAAY/N,KAAKyG,MAAMoe,SAAS9W,YAEpC3J,KAAMpE,KAAKuD,MAAMa,KACjB6gB,iBAAkB,IAClBjb,QAAShK,KAAK+kB,aAEd,kBAACT,EAAD,CACIta,QAAShK,KAAK+kB,YACd7R,QAASlT,KAAKyG,MAAMoe,SAAS1d,MAC7BtH,QAASG,KAAKyG,MAAMoe,SAAS5jB,W,GA7BjB0Y,aAoC1BuL,EAAWrL,aAhIO,SAACtW,GACrB,MAAO,CACHshB,SAAUthB,EAAMuF,WAAW+b,aAIR,WACvB,MAAO,KAyHMhL,CAGf9J,aA5Ca,SAAC7J,GAAD,MAAY,CACvBgF,OAAQ,CACJA,OAAQhF,EAAM0F,QAAQ,OA0C5BmE,CAAmB6U,IAENM,O,0OC/ETC,E,4MACFJ,YAAc,WACV,EAAKte,MAAM2e,eAAe,O,EAG9BC,QAAU,SAACxO,GACP/V,OAAOC,SAASC,KAAO6V,G,EAG3ByO,OAAS,WACLtW,IAAI8I,OAAO,kBACN1I,MAAK,WACF,EAAK3I,MAAMuH,eACP,MACA,QACA,uCACA,WAEJpN,IAAKC,UACLC,OAAOC,SAASwkB,SAChB,EAAK9e,MAAM+e,kBAAiB,MAE/BnW,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,cAGPuP,MAAK,WACF,EAAK2V,kB,4CAIjB,WAAU,IAAD,OACG/d,EAAYhH,KAAKyG,MAAjBO,QACFye,EAAO7kB,IAAKwZ,UACZxV,EAAckS,IAAWlS,YAC3B5E,KAAKyG,MAAM1F,SAASgW,UAGxB,OACI,kBAAC2O,EAAA,EAAD,CACIthB,KAA8B,OAAxBpE,KAAKyG,MAAMqD,SACjBE,QAAShK,KAAK+kB,YACdjb,SAAU9J,KAAKyG,MAAMqD,SACrBkb,aAAc,CACVlX,SAAU,SACVC,WAAY,SAEhB4X,gBAAiB,CACb7X,SAAU,MACVC,WAAY,WAGdnN,IAAKga,SACH,yBAAK/T,UAAWG,EAAQ4e,aACpB,kBAACvT,EAAA,EAAD,MACA,kBAACoC,EAAA,EAAD,CACIrM,QAAS,kBAAM,EAAK3B,MAAMsa,QAAQhS,KAAK,YAEvC,kBAAC4D,EAAA,EAAD,KACI,kBAAC,IAAD,OAJR,gBAQA,kBAAC8B,EAAA,EAAD,CACIrM,QAAS,kBAAM,EAAK3B,MAAMsa,QAAQhS,KAAK,aAEvC,kBAAC4D,EAAA,EAAD,KACI,kBAAC,IAAD,OAJR,iBAUP/R,IAAKga,SACF,6BACI,yBAAK/T,UAAWG,EAAQ6e,QACpB,yBAAKhf,UAAWG,EAAQ8e,sBACpB,kBAACC,EAAA,EAAD,CACIlf,UAAWG,EAAQgf,YACnBhb,IACI,uBAAyBya,EAAKxjB,GAAK,QAI/C,yBAAK4E,UAAWG,EAAQod,MACpB,kBAAC1P,EAAA,EAAD,CAAYuR,QAAM,GAAER,EAAKS,UACzB,kBAACxR,EAAA,EAAD,CACIvN,MAAM,gBACN2D,MAAO,CACHjB,SAAU,YAEdoc,QAAM,GAELR,EAAKU,WAEV,kBAACC,EAAA,EAAD,CACIvf,UAAWG,EAAQwE,MACnBrE,MACsB,IAAlBse,EAAKY,MAAMpkB,GACL,YACA,UAEVgT,MAAOwQ,EAAKY,MAAMnkB,SAI9B,6BACI,kBAACmQ,EAAA,EAAD,OACEzN,GACE,kBAAC6P,EAAA,EAAD,CACI3J,MAAO,CACHzE,QAAS,wBAEb+B,QAAS,WACL,EAAK2c,cACL,EAAKte,MAAMsa,QAAQhS,KACf,YAAc0W,EAAKxjB,MAI3B,kBAAC0Q,EAAA,EAAD,KACI,kBAAC,IAAD,OAZR,4BAiBe,IAAlB8S,EAAKY,MAAMpkB,IACR,kBAACwS,EAAA,EAAD,CACI3J,MAAO,CACHzE,QAAS,wBAEb+B,QAAS,WACL,EAAK2c,cACL,EAAKte,MAAMsa,QAAQhS,KAAK,iBAG5B,kBAAC4D,EAAA,EAAD,KACI,kBAAC,IAAD,OAVR,4BAgBJ,kBAAC8B,EAAA,EAAD,CACI3J,MAAO,CACHzE,QAAS,wBAEb+B,QAASpI,KAAKslB,QAEd,kBAAC3S,EAAA,EAAD,KACI,kBAAC,IAAD,OAPR,mC,GAnJagH,aA+K1B2M,EALWzM,aAtNF,SAACtW,GACrB,MAAO,CACHuG,SAAUvG,EAAMuF,WAAWyd,wBAIR,SAAC7e,GACxB,MAAO,CACH0d,eAAgB,SAACoB,GACb9e,EAAS0d,YAAeoB,KAE5BxY,eAAgB,SAACF,EAAUC,EAAY9M,EAAKkG,GACxCO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,KAEvDqe,iBAAkB,SAACvZ,GACfvE,EAAS8d,YAAiBvZ,QAuMZ4N,CAGxB9J,aAtMa,iBAAO,CAClB3D,OAAQ,CACJhG,MAAO,OACP2E,OAAQ,QAEZ8a,OAAQ,CACJtZ,QAAS,OACTlG,QAAS,uBAEb2f,YAAa,CACTjb,OAAQ,OACR3E,MAAO,QAEXge,KAAM,CACF1X,WAAY,OACZtG,MAAO,SAEXoF,MAAO,CACHiB,UAAW,QAEfmZ,YAAa,CACTxf,MAAO,QAiLb2J,CAAmBgK,YAAWoL,K,2CClL1BsB,E,4MACFljB,MAAQ,CACJuG,SAAU,M,EAGd4c,aAAe,SAAC9gB,GACZ,EAAKa,MAAM2e,eAAexf,EAAEC,gB,EAGhCkf,YAAc,WACV,EAAK5O,SAAS,CACVrM,SAAU,Q,EAIlBub,QAAU,SAACxO,GACP/V,OAAOC,SAASC,KAAO6V,G,EAG3B8P,WAAa,WACT7lB,OAAOC,SAASC,KAAO,S,4CAG3B,WAAU,IAAD,OACGgG,EAAYhH,KAAKyG,MAAjBO,QACF4f,EAAahmB,IAAKga,MAAM5a,KAAKyG,MAAMogB,SACnCpB,EAAO7kB,IAAKwZ,QAAQpa,KAAKyG,MAAMogB,SAC/BjiB,EAAckS,IAAWlS,YAC3B5E,KAAKyG,MAAM1F,SAASgW,UAGxB,OACI,yBAAKlQ,UAAWG,EAAQ8f,cACpB,kBAACC,EAAA,EAAD,CACIhhB,GACI/F,KAAKyG,MAAM/E,SAASyB,QAAU,MAC3BnD,KAAKyG,MAAM7E,YAAc5B,KAAKyG,MAAM3E,WAG3C,8BACM8C,GACE,oCACI,kBAACyC,EAAA,EAAD,CAAkBC,SAAS,QAC1Bsf,GACG,oCACI,kBAACpT,EAAA,EAAD,CACIvL,MAAO,eACPC,UAAU,UAEV,kBAACuL,EAAA,EAAD,CACIrL,QAAS,kBACL,EAAK3B,MAAMsa,QAAQhS,KACf,cAGR5H,MAAM,WAEN,kBAAC,IAAD,UAOvBvC,GACG,kBAAC4O,EAAA,EAAD,CAASvL,MAAO,2BAAQC,UAAU,UAC9B,kBAACuL,EAAA,EAAD,CACItM,MAAM,UACNiB,QAASpI,KAAK2mB,YAEd,kBAACK,EAAA,EAAD,QAIZ,kBAACvT,EAAA,EAAD,CAAYtM,MAAM,UAAUiB,QAASpI,KAAK0mB,eACpCE,GAAc,kBAAC,IAAD,MACfA,GACG,kBAACb,EAAA,EAAD,CACI/a,IACI,uBAAyBya,EAAKxjB,GAAK,KAEvC4E,UAAWG,EAAQoF,UAGjB,MAGtB,kBAAC,EAAD,W,GAvFkBuN,aAiG5BsN,EAAapN,aAlJK,SAACtW,GACrB,MAAO,CACH7B,SAAU6B,EAAMD,SAAS5B,SACzBE,WAAY2B,EAAMD,SAAS3B,YAAYC,WACvCC,WAAY0B,EAAMD,SAAS3B,YAAYE,WACvCC,SAAUyB,EAAMD,SAAS3B,YAAYG,SACrC+kB,QAAStjB,EAAMuF,WAAW+d,YAIP,SAACnf,GACxB,MAAO,CACH0d,eAAgB,SAACoB,GACb9e,EAAS0d,YAAeoB,QAqIjB3M,CAGjB9J,aAnIa,SAAC7J,GAAD,YAAY,CACvB4gB,cAAY,mBACP5gB,EAAMI,YAAYC,KAAK,MAAQ,CAC5BgG,QAAS,SAFL,2BAII,UAJJ,GAMZH,OAAQ,CACJhG,MAAO,OACP2E,OAAQ,QAEZ8a,OAAQ,CACJtZ,QAAS,OACTlG,QAAS,uBAEb2f,YAAa,CACTjb,OAAQ,OACR3E,MAAO,QAEXge,KAAM,CACF1X,WAAY,OACZtG,MAAO,SAEXoF,MAAO,CACHiB,UAAW,QAEfmZ,YAAa,CACTxf,MAAO,QAwGb2J,CAAmBgK,YAAW0M,KAEjBQ,O,qoBCjGfxD,cACA,IAsNMyD,G,kDACF,WAAYzgB,GAAQ,IAAD,8BACf,cAAMA,IAyBV6P,iCAAmC,SAACC,IAE3B,EAAK9P,MAAM/E,SAASyB,QAAU,MACxB,EAAKsD,MAAM7E,YAAc,EAAK6E,MAAM3E,cAC1CyU,EAAU7U,SAASyB,QAAU,MACvBoT,EAAU3U,YAAc2U,EAAUzU,YAEzCyf,YAEQ,EAAK9a,MAAM/E,SAASyB,QAAU,IAC3B,EAAKsD,MAAM7E,aAAc,EAAK6E,MAAM3E,WAEH,SAAlC,EAAK2E,MAAMP,MAAMe,QAAQ7E,KAGzB,EAAKqE,MAAMP,MAAMe,QAAQyJ,WAAWC,QADhC,EAAKlK,MAAMP,MAAMe,QAAQ4L,QAAQ0R,OAxCpC,EA8CnB4C,mBAAqB,WACjB,EAAKhR,UAAS,SAAC5S,GAAD,MAAY,CAAE6jB,YAAa7jB,EAAM6jB,gBA/ChC,EAkDnBC,aAAe,WACNpG,cASL,EAAKxa,MAAM2R,kBAAkB,2CARzB,EAAK3R,MAAMuH,eACP,MACA,QACA,yDACA,YAxDO,EA+DnBkJ,gBAAkB,WACd,EAAKzQ,MAAM2R,kBAAkB,0BAhEd,EAmEnBkP,QAAU,WACNtY,KAAI8I,OAAO,kBACN1I,MAAK,WACF,EAAK3I,MAAMuH,eACP,MACA,QACA,uCACA,WAEJpN,KAAKC,UACLC,OAAOC,SAASwkB,SAChB,EAAK9e,MAAM+e,kBAAiB,MAE/BnW,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,cAGP0nB,SAAQ,WACL,EAAKxC,kBAvFb,EAAKxhB,MAAQ,CACT6jB,YAAY,GAEhB,EAAKI,YAAc1W,IAAM+K,YALV,E,6DAQnB,WAA6B,IAAD,OACxB7b,KAAKynB,SAAWznB,KAAKyG,MAAMsa,QAAQ2G,QAAO,WACtC,EAAKvR,UAAS,iBAAO,CAAEiR,YAAY,W,kCAG3C,WACIpnB,KAAKynB,a,+BAGT,WACIlG,YACIvhB,KAAKyG,MAAM/E,SAASyB,QAAU,IACvBnD,KAAKyG,MAAM7E,aAAc5B,KAAKyG,MAAM3E,UACrC9B,KAAKyG,MAAMP,MAAMe,QAAQ4L,QAAQ0R,KACjCvkB,KAAKyG,MAAMP,MAAMe,QAAQyJ,WAAWC,W,oBAuElD,WAAU,IAAD,SACG3J,EAAYhH,KAAKyG,MAAjBO,QACFye,EAAO7kB,KAAKwZ,QAAQpa,KAAKyG,MAAMogB,SAC/BriB,EAAasS,IAAWtS,WAAWxE,KAAKyG,MAAM1F,SAASgW,UACvDrS,EAAcoS,IAAWpS,YAC3B1E,KAAKyG,MAAM1F,SAASgW,UAGlB4Q,EACF,yBAAK1lB,GAAG,YAAY4E,UAAWG,EAAQ4gB,UAClC9Q,IAAWhS,YAAc,kBAAC,IAAD,MAEzBlE,KAAKga,MAAM5a,KAAKyG,MAAMogB,UACnB,oCACI,yBAAKhgB,UAAWG,EAAQ6gB,gBACpB,kBAAC,KAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CACInV,QAAM,EACNvI,IAAI,2BACJ/B,QAAS,kBACL,EAAK3B,MAAMsa,QAAQhS,KAAK,cAG5B,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIlI,UAAWG,EAAQ8gB,WAG3B,kBAAC,IAAD,CAAcjV,QAAQ,8BAE1B,kBAAC,IAAD,CACIH,QAAM,EACNvI,IAAI,2BACJ/B,QAAS,kBACL,EAAK3B,MAAMsa,QAAQhS,KAAK,aAG5B,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIlI,UAAWG,EAAQ8gB,WAG3B,kBAAC,IAAD,CAAcjV,QAAQ,8BAEzB4S,EAAKY,MAAM0B,QACR,kBAAC,IAAD,CACIrV,QAAM,EACNvI,IAAI,SACJ/B,QAAS,kBACL,EAAK3B,MAAMsa,QAAQhS,KAAK,cAG5B,kBAAC,IAAD,KACI,kBAAC,KAAD,CACIlI,UAAWG,EAAQ8gB,WAG3B,kBAAC,IAAD,CAAcjV,QAAQ,YAI9B,kBAAC,IAAD,CACIH,QAAM,EACNvI,IAAI,2BACJ/B,QAAS,kBACL,EAAK3B,MAAMsa,QAAQhS,KAAK,aAG5B,kBAAC,IAAD,KACI,kBAAC,KAAD,CACIlI,UAAWG,EAAQ8gB,WAG3B,kBAAC,IAAD,CAAcjV,QAAQ,gCAKjCiE,IAAWhS,YACR,oCACI,kBAAC,KAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CACI4N,QAAM,EACNvI,IAAI,2BACJ/B,QAAS,kBACL,EAAK3B,MAAMsa,QAAQhS,KAAK,eAG5B,kBAAC,IAAD,KACI,kBAAC,KAAD,CACIlI,UAAWG,EAAQ8gB,WAG3B,kBAAC,IAAD,CAAcjV,QAAQ,8BAG1B,kBAAC,IAAD,CACIH,QAAM,EACNvI,IAAI,2BACJ/B,QAASpI,KAAKsnB,SAEd,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIzgB,UAAWG,EAAQ8gB,WAG3B,kBAAC,IAAD,CAAcjV,QAAQ,gCAKtC,6BACI,kBAAC,IAAD,SAKVjS,KAAKga,MAAM5a,KAAKyG,MAAMogB,UACpB,6BACI,kBAAC,IAAD,CACInU,QAAM,EACNvI,IAAI,eACJ/B,QAAS,kBAAM,EAAK3B,MAAMsa,QAAQhS,KAAK,YAEvC,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIlI,UAAWG,EAAQ8gB,WAG3B,kBAAC,IAAD,CAAcjV,QAAQ,kBAE1B,kBAAC,IAAD,CACIH,QAAM,EACNvI,IAAI,eACJ/B,QAAS,kBAAM,EAAK3B,MAAMsa,QAAQhS,KAAK,aAEvC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAalI,UAAWG,EAAQ8gB,WAEpC,kBAAC,IAAD,CAAcjV,QAAQ,oBAMpCmV,EACFC,EAAQC,SAAW,mBAAmBC,KAAKrO,UAAUsO,WACzD,OACI,6BACI,kBAAC,IAAD,CACI9gB,SAAS,QACTT,UAAWG,EAAQqhB,OACnBlhB,MACsC,SAAlCnH,KAAKyG,MAAMP,MAAMe,QAAQ7E,MACzBpC,KAAKyG,MAAM/E,SAASyB,QAAU,IAC3BnD,KAAKyG,MAAM7E,aAAc5B,KAAKyG,MAAM3E,UACjC,UACA,WAGV,kBAAC,IAAD,KACK9B,KAAKyG,MAAM/E,SAASyB,QAAU,MAEtBnD,KAAKyG,MAAM7E,YAAc5B,KAAKyG,MAAM3E,WAErC,kBAAC,IAAD,CACIqF,MAAM,UACNgF,aAAW,cACX/D,QAASpI,KAAKmnB,mBACdtgB,UAAWG,EAAQshB,YAEnB,kBAAC,IAAD,OAGXtoB,KAAKyG,MAAM/E,SAASyB,QAAU,MAEtBnD,KAAKyG,MAAM7E,YAAc5B,KAAKyG,MAAM3E,WAErC,kBAAC,IAAD,CACIqF,MAAM,UACNgF,aAAW,cACX/D,QAAS,kBACL,EAAK3B,MAAM8hB,qBACN,EAAK9hB,MAAM+hB,cAGpB3hB,UAAWG,EAAQyhB,mBAEnB,kBAAC,IAAD,QAGVzoB,KAAKyG,MAAM/E,SAASyB,OAAS,IACzBnD,KAAKyG,MAAM7E,YAAc5B,KAAKyG,MAAM3E,YACrC0C,GACGsS,IAAWpS,YACP1E,KAAKyG,MAAM1F,SAASgW,YAExB,kBAAC,IAAD,CACIhR,GACI/F,KAAKyG,MAAM/E,SAASyB,OAAS,IAC3BnD,KAAKyG,MAAM7E,YACT5B,KAAKyG,MAAM3E,UAGnB,kBAAC,IAAD,CACIqF,MAAM,UACNN,UAAWG,EAAQ0hB,SACnBtgB,QAAS,kBACL,EAAK3B,MAAMkiB,kBAAkB,MAGjC,kBAAC,IAAD,QAIf3oB,KAAKyG,MAAM/E,SAASyB,QAAU,MAEtBnD,KAAKyG,MAAM7E,YAAc5B,KAAKyG,MAAM3E,WAErC,kBAAC,KAAD,CACIoR,QAAQ,KACR/L,MAAM,UACN8e,QAAM,EACN7d,QAAS,WACL,EAAK3B,MAAMsa,QAAQhS,KAAK,OAG3B/O,KAAKyG,MAAMmiB,SACN5oB,KAAKyG,MAAMmiB,SACX5oB,KAAKyG,MAAMwB,QAI3BjI,KAAKyG,MAAM7E,YACT5B,KAAKyG,MAAM3E,WACVgV,IAAWhS,YACR,kBAAC,KAAD,CAAYoO,QAAQ,KAAK/L,MAAM,UAAU8e,QAAM,GAC1CjmB,KAAKyG,MAAM/E,SAAS,GAAGQ,KAAM,KAC5BsC,GACEsS,IAAWpS,YACP1E,KAAKyG,MAAM1F,SAASgW,YAExB,IACImJ,YACIlgB,KAAKyG,MAAM/E,SAAS,GAAGS,MAE3B,KAInBnC,KAAKyG,MAAM/E,SAASyB,OAAS,IACzB2T,IAAWhS,YACR,kBAAC,KAAD,CAAYoO,QAAQ,KAAK/L,MAAM,UAAU8e,QAAM,GAC1CjmB,KAAKyG,MAAM/E,SAASyB,OADzB,sBAIPnD,KAAKyG,MAAM/E,SAASyB,QAAU,MAEtBnD,KAAKyG,MAAM7E,YAAc5B,KAAKyG,MAAM3E,WACpC,kBAAC,IAAD,MACT,yBAAK+E,UAAWG,EAAQ6hB,QACtB7oB,KAAKyG,MAAM/E,SAASyB,OAAS,IACzBnD,KAAKyG,MAAM7E,YAAc5B,KAAKyG,MAAM3E,YACrC0C,IACAsS,IAAWpS,YACR1E,KAAKyG,MAAM1F,SAASgW,WAExBnW,KAAKga,MAAM5a,KAAKyG,MAAMogB,WACrBxF,YAAmB,UAChB,yBAAKxa,UAAWG,EAAQ8hB,gBACpB,kBAAC,KAAD,CAAS7gB,MAAM,gBACX,kBAAC,IAAD,CACId,MAAM,UACNiB,QAAS,kBACL,EAAK3B,MAAMsiB,aAGf,kBAAC,IAAD,UAKlB/oB,KAAKyG,MAAM/E,SAASyB,OAAS,IACzBnD,KAAKyG,MAAM7E,YAAc5B,KAAKyG,MAAM3E,YACrC0C,GAAcE,IACX,yBAAKmC,UAAWG,EAAQ8hB,iBAClB9oB,KAAKyG,MAAM7E,YACT5B,KAAKyG,MAAM3E,UACXknB,YACIhpB,KAAKyG,MAAM/E,SAAS,GAAGQ,OAEvB,kBAAC,IAAD,CACI6D,IACK/F,KAAKyG,MAAM7E,YACZ5B,KAAKyG,MAAM3E,UACXknB,YACIhpB,KAAKyG,MAAM/E,SAAS,GACfQ,OAIb,kBAAC,KAAD,CAAS+F,MAAM,gBACX,kBAAC,IAAD,CACId,MAAM,UACNiB,QAAS,kBACL,EAAK3B,MAAMwiB,gBAGf,kBAAC,IAAD,UAKlBjpB,KAAKyG,MAAM7E,YACT5B,KAAKyG,MAAM3E,UACP,kBAAC,IAAD,CACIiE,IACK/F,KAAKyG,MAAM7E,YACZ5B,KAAKyG,MAAM3E,UAGf,kBAAC,KAAD,CAASmG,MAAM,gBACX,kBAAC,IAAD,CACId,MAAM,UACNiB,QAAS,kBACL,EAAKif,iBAGT,kBAAC,IAAD,UAKlBrnB,KAAKyG,MAAM7E,YACT5B,KAAKyG,MAAM5E,aACX4jB,EAAKY,MAAM6C,sBACP,kBAAC,IAAD,CACInjB,IACK/F,KAAKyG,MAAM7E,YACR5B,KAAKyG,MACA5E,aACT4jB,EAAKY,MACA6C,sBAGT,kBAAC,KAAD,CAASjhB,MAAM,4BACX,kBAAC,IAAD,CACId,MAAM,UACNiB,QAAS,kBACL,EAAK8O,oBAGT,kBAAC,IAAD,UAMlBlX,KAAKyG,MAAM7E,YACT5B,KAAKyG,MAAM5E,YACP,kBAAC,IAAD,CACIkE,IACK/F,KAAKyG,MAAM7E,YACZ5B,KAAKyG,MAAM5E,YAGf,kBAAC,KAAD,CAASoG,MAAM,4BACX,kBAAC,IAAD,CACId,MAAM,UACNiB,QAAS,kBACL,EAAK3B,MAAM0iB,WAGH,MAFJ,EAAK1iB,MACAhC,KAEC,EAAKgC,MACAhC,KACD,EACKgC,MACA/E,SAAS,GACTQ,KACT,EAAKuE,MACAhC,KACD,IACA,EACKgC,MACA/E,SAAS,GACTQ,QAIvB,kBAAC,IAAD,UAKlBlC,KAAKyG,MAAM7E,aACRkV,IAAWhS,aACXJ,GACG,kBAAC,IAAD,CAAMqB,IAAK/F,KAAKyG,MAAM7E,YAClB,kBAAC,KAAD,CAASqG,MAAM,gBACX,kBAAC,IAAD,CACId,MAAM,UACNiB,QAAS,kBACL,EAAK3B,MAAM2iB,oBAGf,kBAAC,IAAD,UAKlBppB,KAAKyG,MAAM7E,aAAe8C,GACxB,kBAAC,IAAD,CAAMqB,IAAK/F,KAAKyG,MAAM7E,YAClB,kBAAC,KAAD,CAASqG,MAAM,sBACX,kBAAC,IAAD,CACId,MAAM,UACNiB,QAAS,kBACL,EAAK3B,MAAM4iB,qBAGf,kBAAC,IAAD,UAKd3kB,GACE,yBAAKoG,MAAO,CAAEyB,QAAS,UACjBuK,IAAWhS,YACT,kBAAC,IAAD,CACIiB,GAEoB,IADhB/F,KAAKyG,MAAM/E,SACNyB,SACJ2T,IAAWhS,YAGhB,kBAAC,KAAD,CAASmD,MAAM,gBACX,kBAAC,IAAD,CACId,MAAM,UACNiB,QAAS,kBACL,EAAK3B,MAAM6iB,mBAGf,kBAAC,IAAD,SAMhB,kBAAC,IAAD,CACIvjB,GAEoB,IADhB/F,KAAKyG,MAAM/E,SACNyB,QAGT,kBAAC,KAAD,CAAS8E,MAAM,gBACX,kBAAC,IAAD,CACId,MAAM,UACNiB,QAAS,kBACL,EAAK3B,MAAM8iB,qBAGf,kBAAC,IAAD,SAKXzS,IAAWhS,YACR,kBAAC,IAAD,CACIiB,GAEoB,IADhB/F,KAAKyG,MAAM/E,SACNyB,QACL2T,IAAWhS,YAGf,kBAAC,KAAD,CAASmD,MAAM,4BACX,kBAAC,IAAD,CACId,MAAM,UACNiB,QAAS,kBACL,EAAK3B,MAAM+iB,kBACP,QACA,KAIR,kBAAC,KAAD,WASnCxpB,KAAKyG,MAAM/E,SAASyB,QAAU,MACxBnD,KAAKyG,MAAM7E,YAAc5B,KAAKyG,MAAM3E,WACD,MAAtC9B,KAAKyG,MAAMgjB,yBACP,kBAAC,IAAD,CACIxhB,MAAM,eACNpB,UAAWG,EAAQsB,WACnBF,QAASpI,KAAKyG,MAAMijB,iBACpBviB,MAAO,WAEP,kBAAC,IAAD,CAAW0C,SAAU,aAIhC7J,KAAKyG,MAAM/E,SAASyB,QAAU,MAEtBnD,KAAKyG,MAAM7E,YAAc5B,KAAKyG,MAAM3E,WACpC,kBAAC,IAAD,MACR9B,KAAKyG,MAAM/E,SAASyB,QAAU,MACxBnD,KAAKyG,MAAM7E,YAAc5B,KAAKyG,MAAM3E,WACvC0C,GACAsS,IAAWhS,YAAc,kBAAC,KAAD,CAAY8D,SAAO,MAGxD,kBAAC,IAAD,MAEA,kBAAC,KAAD,CAAQ+gB,MAAI,EAACC,eAAe,OACxB,kBAAC,KAAD,CACIC,UAAW7pB,KAAKyG,MAAMojB,UACtB3W,QAAQ,YACRlM,QAAS,CACL8iB,MAAO9iB,EAAQ+iB,aAEnBvD,OAAO,OACPpiB,KAAMpE,KAAKuD,MAAM6jB,WACjBpd,QAAShK,KAAKmnB,mBACd6C,OAAQ,kBACJ,EAAK7T,UAAS,iBAAO,CAAEiR,YAAY,OAEvC6C,iBAAkBjC,EAClBkC,WAAY,CACRC,aAAa,IAGhBxC,IAGT,kBAAC,KAAD,CAAQyC,QAAM,EAACR,eAAe,OAC1B,kBAAC,KAAD,CACI5iB,QAAS,CACL8iB,MAAO9iB,EAAQqjB,oBAEnBxjB,UAAWsB,IAAWnB,EAAQ2gB,QAAT,mBAChB3gB,EAAQsjB,WAAatqB,KAAKyG,MAAM+hB,aADhB,cAEhBxhB,EAAQujB,aAAevqB,KAAKyG,MAAM+hB,aAFlB,IAIrBtV,QAAQ,aACRsT,OAAO,OACPpiB,KAAMpE,KAAKyG,MAAM+hB,aAEjB,yBAAK3hB,UAAWG,EAAQ8W,UACvB6J,S,GAzoBKhO,aAqpBxB6Q,GAAS3Q,aAx2BS,SAACtW,GACrB,MAAO,CACHilB,YAAajlB,EAAMuF,WAAW1E,KAC9B1C,SAAU6B,EAAMD,SAAS5B,SACzBE,WAAY2B,EAAMD,SAAS3B,YAAYC,WACvCC,WAAY0B,EAAMD,SAAS3B,YAAYE,WACvCC,SAAUyB,EAAMD,SAAS3B,YAAYG,SACrC2C,KAAMlB,EAAMuW,UAAUrV,KACtB1B,SAAUQ,EAAMD,SAASP,SACzBkF,MAAO1E,EAAMkE,WAAWQ,MACxB2gB,SAAUrlB,EAAMuF,WAAW8f,SAC3B6B,aAAclnB,EAAMuF,WAAW2hB,aAC/B5D,QAAStjB,EAAMuF,WAAW+d,QAC1B4C,wBAAyBlmB,EAAMD,SAASX,aAAaC,YACrD8nB,mBAAoBnnB,EAAMD,SAASX,aAAaG,WAI7B,SAAC4E,GACxB,MAAO,CACH6gB,oBAAqB,SAACnkB,GAClBsD,EAASijB,YAAmBvmB,KAEhCukB,kBAAmB,SAAC7kB,GAChB4D,EAASihB,YAAkB7kB,KAE/BqlB,WAAY,SAAC1kB,GACTiD,EAASyhB,YAAW1kB,KAExBmmB,uBAAwB,WACpBljB,EAASkjB,gBAEbpB,kBAAmB,SAACpnB,EAAMgC,GACtBsD,EAAS8hB,YAAkBpnB,EAAMgC,KAErCymB,aAAc,SAAC9nB,GACX2E,EAASmjB,YAAa9nB,KAE1BgmB,SAAU,WACNrhB,EAASqhB,gBAEb+B,gBAAiB,WACbpjB,EAASojB,gBAEbC,eAAgB,SAACtoB,GACbiF,EAASqjB,YAAetoB,KAE5BuL,eAAgB,SAACF,EAAUC,EAAY9M,EAAKkG,GACxCO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,KAEvDkiB,iBAAkB,WACd3hB,EAAS2hB,gBAEbC,eAAgB,WACZ5hB,EAAS4hB,gBAEbC,iBAAkB,WACd7hB,EAAS6hB,gBAEbH,gBAAiB,WACb1hB,EAAS0hB,gBAEbhR,kBAAmB,SAACvL,GAChBnF,EAAS0Q,YAAkBvL,KAE/B2Y,iBAAkB,WACd9d,EAAS8d,gBAEbyD,YAAa,WACTvhB,EAASuhB,gBAEbS,iBAAkB,WACdhiB,EAASsjB,aAAsB,QAgyB5BnR,CAGboR,aAAUlb,cA9xBG,SAAC7J,GAAD,cAAY,CACvBmiB,QAAM,GACF3b,WAlFY,KAiFV,cAEDxG,EAAMI,YAAYC,KAAK,MAAQ,CAC5BmG,WAnFc,MAgFhB,uBAKMxG,EAAMqF,OAAOoc,OAAS,GAL5B,2BAMU,2BANV,GASNA,OAAQ,CACJvhB,MAAO,EACP8kB,WAAY,GAEhBC,cAAe,CACX/kB,MA/FY,IAgGZ8kB,WAAY,GAEhBhkB,KAAM,CACFqB,YAAarC,EAAM0F,QAAQ,IAE/B0c,WAAW,aACP/f,YAAa,IACZrC,EAAMI,YAAY4U,GAAG,MAAQ,CAC1B3O,QAAS,SAGjBkc,kBAAkB,aACdlgB,YAAa,IACZrC,EAAMI,YAAYC,KAAK,MAAQ,CAC5BgG,QAAS,SAGjBmc,SAAU,CACNngB,YAAa,IAEjBuV,QAAS5X,EAAMklB,OAAOtN,QACtBiM,YAAa,CACT3jB,MArHkB,KAuHtBikB,mBAAoB,CAChBjkB,MAzHY,KA2HhBwhB,SAAU,CACNvM,UAAW,UAEfiP,WAAY,CACRlkB,MA/HY,IAgIZilB,WAAYnlB,EAAMolB,YAAY7rB,OAAO,QAAS,CAC1C8rB,OAAQrlB,EAAMolB,YAAYC,OAAOC,MACjCC,SAAUvlB,EAAMolB,YAAYG,SAASC,kBAG7CnB,YAAa,CACTc,WAAYnlB,EAAMolB,YAAY7rB,OAAO,QAAS,CAC1C8rB,OAAQrlB,EAAMolB,YAAYC,OAAOC,MACjCC,SAAUvlB,EAAMolB,YAAYG,SAASE,gBAEzCtQ,UAAW,SACXjV,MAAO,GAEXmK,QAAS,CACLqb,SAAU,EACVvlB,QAASH,EAAM0F,QAAQ,IAE3Bid,KAAM,CACF+C,SAAU,GAEdpgB,MAAO,CACHL,IAAK,EACLC,OAAQ,IAEZygB,OAAQ,CACJC,YAAa5lB,EAAM0F,QAAQ,IAE/Bkd,eAAgB,CACZvc,QAAS,QAEbwf,aAAc,CACVxjB,YAAarC,EAAM0F,QAAQ,IAE/BogB,UAAW,CACPtf,WAAY,OACZD,UAAW,OACXwf,aAAc,QAElBC,UAAW,CACP9Q,aAAc,SAElB+Q,SAAU,CACN/gB,MAAO,QAEX0c,QAAS,CACLpb,WAAY,QAEhB0f,WAAY,CACR3f,UAAW,OAEf4f,gBAAiB,CACbC,cAAe,MACf/jB,YAAa,OAEjBgkB,mBAAoB,CAChBhgB,QAAS,OACTE,UAAW,OACXwf,aAAc,OACdvf,WAAY,OACZ8f,eAAgB,QAEpBC,YAAa,CACTrmB,MAAO,OACP2E,OAAQ,QAEZ2hB,YAAa,CACTrhB,OAAQ,MACR/D,SAAU,WACVZ,gBAAiBR,EAAMe,QAAQyJ,WAAWoZ,MAC1C1jB,MAAO,QAEXumB,UAAW,CACPjgB,WAAY,OACZtG,MAAO,SAEXyhB,gBAAc,GACV+E,UAAW,QADD,cAET1mB,EAAMI,YAAY4U,GAAG,MAAQ,CAC1BnQ,OAAQ,mCAHF,cAMT7E,EAAMI,YAAYC,KAAK,MAAQ,CAC5BsmB,UAAW,mCAPL,MAmqBN9c,CAAmBgK,YAAWmN,OAE3BsD,S,gSCn6BfsC,oBAAU,CACNC,WAAY,KAGhB,IAgEMC,EAAS,CACXC,OAAQ,SAGNC,E,kDACF,WAAYzmB,GAAQ,IAAD,8BACf,cAAMA,IAOV0mB,SAAW,CACPF,OAAQ,SAACrnB,GACDkR,IAAWtS,WAAW,EAAKiC,MAAM1F,SAASgW,UAC1C,EAAK8T,eAEL,EAAKuC,cAETxnB,EAAElC,OAAO2pB,SAfE,EAmBnBzb,aAAe,SAACxH,GACZ,IAAQvE,EAAkBuE,EAAlBvE,cACR,EAAKynB,MAAQljB,EAAM1G,OAAOL,MAC1B,EAAK8S,SAAS,CACVrM,SAAUjE,EACVynB,MAAOljB,EAAM1G,OAAOL,SAxBT,EA4BnBkqB,cAAgB,WACZ,EAAKpX,SAAS,CACVmX,MAAO,MA9BI,EAkCnBzC,aAAe,WACX,EAAKpkB,MAAMokB,aAAa,YAAc,EAAKyC,QAnC5B,EAsCnBF,YAAc,WACV,EAAK3mB,MAAMsa,QAAQhS,KACf,oBAAsByI,mBAAmB,EAAK8V,SAtClD,EAAK/pB,MAAQ,CACTuG,SAAU,KACVwjB,MAAO,IAJI,E,0CA4CnB,WAAU,IAAD,OACGtmB,EAAYhH,KAAKyG,MAAjBO,QACA8C,EAAa9J,KAAKuD,MAAlBuG,SACF7H,EAA0B,KAArBjC,KAAKuD,MAAM+pB,MAAe,gBAAkB,KACjD9oB,EAAasS,IAAWtS,WAAWxE,KAAKyG,MAAM1F,SAASgW,UAE7D,OACI,yBAAKlQ,UAAWG,EAAQiV,QACpB,yBAAKpV,UAAWG,EAAQwmB,YACpB,kBAAC,IAAD,OAEJ,kBAAC,UAAD,CAASR,OAAQA,EAAQG,SAAUntB,KAAKmtB,UACpC,kBAAC,IAAD,CACI5T,YAAY,kBACZvS,QAAS,CACLgJ,KAAMhJ,EAAQymB,UACdH,MAAOtmB,EAAQ0mB,YAEnBnb,SAAUvS,KAAK4R,aACf+b,OAAQ3tB,KAAKutB,cACblqB,MAAOrD,KAAKuD,MAAM+pB,SAG1B,kBAAC,IAAD,CACIrrB,GAAIA,EACJmC,KAA2B,KAArBpE,KAAKuD,MAAM+pB,MACjBxjB,SAAUA,EACVjD,UAAWG,EAAQ4mB,WACnBvC,YAAU,IAET,gBAAGwC,EAAH,EAAGA,gBAAH,OACG,kBAAC,IAAD,iBAAUA,EAAV,CAA2BC,QAAS,MAChC,kBAAC,IAAD,CAAOC,QAAQ,GACVvpB,GACG,kBAAC,IAAD,CAAU4D,QAAS,EAAKyiB,cACpB,kBAAC,IAAD,CAAchkB,UAAWG,EAAQE,MAC7B,kBAAC,IAAD,OAEJ,kBAAC,IAAD,CACIF,QAAS,CACL6L,QAAS7L,EAAQ6L,SAErBA,QACI,kBAAC,IAAD,CAAYoT,QAAM,GAAlB,mDACa,IACT,gCACK,EAAK1iB,MAAM+pB,WAQpC,kBAAC,IAAD,CAAUllB,QAAS,EAAKglB,aACpB,kBAAC,IAAD,CAAcvmB,UAAWG,EAAQE,MAC7B,kBAAC,IAAD,OAEJ,kBAAC,IAAD,CACIF,QAAS,CAAE6L,QAAS7L,EAAQ6L,SAC5BA,QACI,kBAAC,IAAD,CAAYoT,QAAM,GAAlB,mDACa,IACT,gCACK,EAAK1iB,MAAM+pB,qB,GA7G/B3T,aAgI3BqU,EAAYnU,aApMM,WACpB,MAAO,MAGgB,SAACnS,GACxB,MAAO,CACHmjB,aAAc,SAAC9nB,GACX2E,EAASmjB,YAAa9nB,QA6LhB8W,CAGhB9J,aA3La,SAAC7J,GAAD,YAAY,CACvB+V,QAAM,mBACD/V,EAAMI,YAAYC,KAAK,MAAQ,CAC5BgG,QAAS,SAFX,yBAIQ,YAJR,6BAKYrG,EAAM+nB,MAAM7S,cALxB,gCAMe8S,eAAKhoB,EAAMe,QAAQknB,OAAOC,MAAO,MANhD,cAOF,UAAW,CACP1nB,gBAAiBwnB,eAAKhoB,EAAMe,QAAQknB,OAAOC,MAAO,OARpD,4BAUWloB,EAAM0F,QAAQ,IAVzB,2BAWU,GAXV,sBAYK,QAZL,cAaD1F,EAAMI,YAAY4U,GAAG,MAAQ,CAC1BxO,WAAYxG,EAAM0F,QAAQ,KAC1BxF,MAAO,SAfT,GAkBNonB,WAAY,CACRpnB,MAAOF,EAAM0F,QAAQ,GACrBb,OAAQ,OACRzD,SAAU,WACV+mB,cAAe,OACf9hB,QAAS,OACToD,WAAY,SACZ2e,eAAgB,UAEpBb,UAAW,CACPtmB,MAAO,UACPf,MAAO,QAEXsnB,WAAW,aACPa,WAAYroB,EAAM0F,QAAQ,GAC1B4iB,aAActoB,EAAM0F,QAAQ,GAC5B6iB,cAAevoB,EAAM0F,QAAQ,GAC7BkgB,YAAa5lB,EAAM0F,QAAQ,GAC3Byf,WAAYnlB,EAAMolB,YAAY7rB,OAAO,SACrC2G,MAAO,QACNF,EAAMI,YAAY4U,GAAG,MAAQ,CAC1B9U,MAAO,IACP,UAAW,CACPA,MAAO,OAInBwnB,WAAY,CACRriB,OAAQ,OACRnF,MAAO,QA2Ib2J,CAAmBgK,YAAWmT,KAEjBc,O,uMC9JTU,E,4MACFnrB,MAAQ,CACJorB,QAAS,EACTC,KAAM,KACNC,MAAO,KACPC,YAAY,G,EAGhBC,WAAY,E,EAEZC,kBAAoB,WACZ,EAAKD,WAAa,EAAKtoB,MAAMogB,UAC7B,EAAKkI,WAAa,EAAKA,UACvB,EAAKE,iB,EAQb3Y,iCAAmC,SAACC,IAE3B,EAAK9P,MAAMogB,SAAW,EAAKpgB,MAAMyoB,UAAY3Y,EAAU2Y,SACvD,EAAKzoB,MAAMogB,UAAYtQ,EAAUsQ,SAAWtQ,EAAUsQ,UAEvD,EAAKoI,gB,EAIbA,aAAe,WACX,IAAIN,EAAU,EACd3f,IAAI4H,IAAI,iBACHxH,MAAK,SAAC7O,GACCA,EAASG,KAAKkuB,KAAOruB,EAASG,KAAKmuB,OAAS,GAC5CF,EAAU,IACV,EAAKloB,MAAMuH,eACP,MACA,QACA,2KACA,YAGJ2gB,EAAWpuB,EAASG,KAAKkuB,KAAOruB,EAASG,KAAKmuB,MAAS,IAE3D,EAAK1Y,SAAS,CACVwY,QAASA,EACTC,KAAM1O,YAAa3f,EAASG,KAAKkuB,MACjCC,MAAO3O,YAAa3f,EAASG,KAAKmuB,YAIzCxf,OAAM,gB,0DAnCf,WACIrP,KAAK+uB,WAAY,I,oBAqCrB,WAAU,IAAD,OACG/nB,EAAYhH,KAAKyG,MAAjBO,QACR,OACI,yBACImoB,aAAc,kBAAM,EAAKhZ,SAAS,CAAE2Y,YAAY,KAChDM,aAAc,kBAAM,EAAKjZ,SAAS,CAAE2Y,YAAY,KAChDjoB,UAAWG,EAAQ0lB,aAEnB,kBAAC,IAAD,MACA,kBAAC,IAAD,KACI,yBAAK7lB,UAAWG,EAAQqoB,kBACpB,kBAAC,IAAD,CAAaxoB,UAAWG,EAAQ8gB,UAChC,yBAAKjhB,UAAWG,EAAQsoB,QAAxB,2BACS,MACL,kBAAC,IAAD,CACIzoB,UAAWG,EAAQuoB,IACnBpoB,MAAM,YACN+L,QAAQ,cACR7P,MAAOrD,KAAKuD,MAAMorB,UAEtB,yBAAK9nB,UAAWG,EAAQod,MACpB,kBAAC,IAAD,CACInc,MACI,uBACqB,OAApBjI,KAAKuD,MAAMqrB,KACN,OACA5uB,KAAKuD,MAAMqrB,MACjB,aACsB,OAArB5uB,KAAKuD,MAAMsrB,MACN,OACA7uB,KAAKuD,MAAMsrB,OAErB3mB,UAAU,OAEV,kBAAC,IAAD,CACIgL,QAAQ,UACR+S,QAAM,EACN9e,MAAM,iBAEe,OAApBnH,KAAKuD,MAAMqrB,KACN,OACA5uB,KAAKuD,MAAMqrB,KAChB,MACqB,OAArB5uB,KAAKuD,MAAMsrB,MACN,OACA7uB,KAAKuD,MAAMsrB,iB,GApGvBlV,aAoH5B6V,EAAa3V,aAzKK,SAACtW,GACrB,MAAO,CACH2rB,QAAS3rB,EAAMuF,WAAW2mB,eAC1B5I,QAAStjB,EAAMuF,WAAW+d,YAIP,SAACnf,GACxB,MAAO,CACHsG,eAAgB,SAACF,EAAUC,EAAY9M,EAAKkG,GACxCO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,QA+J5C0S,CAGjB9J,aA7Ja,SAAC7J,GAAD,YAAY,CACvB4hB,QAAS,CACLpb,WAAY,OACZnE,YAAa,OACbpB,MAAOjB,EAAMe,QAAQ4F,KAAKS,UAC1Bb,UAAW,OAEfijB,QAAS,CACLrpB,QAAS,eAEbgpB,iBAAkB,CACd9iB,QAAS,OACTE,UAAW,OACXqS,UAAW,OACXmN,aAAc,QAElBqD,OAAQ,CACJlpB,MAAO,OACPmC,YAAa,QAEjB6b,MAAI,GACAhe,MAAO,QACPupB,SAAU,SACVC,aAAc,YAHd,cAIC1pB,EAAMI,YAAYC,KAAK,MAAQ,CAC5BH,MAAO,UALX,0BAOW,OAPX,GASJmpB,IAAK,CACD9iB,UAAW,OAEfigB,YAAa,CACThmB,gBAAiBR,EAAMe,QAAQyJ,WAAWoZ,UA4HhD/Z,CAAmBgK,YAAW2U,KAEjBc,O,4ICrGTK,E,4MACFnJ,aAAe,SAAC9gB,GACZ,EAAKa,MAAM2e,eAAexf,EAAEC,gB,4CAGhC,WACI,IAAQmB,EAAYhH,KAAKyG,MAAjBO,QACF6f,EAAUjmB,IAAKga,MAAM5a,KAAKyG,MAAMogB,SAChCpB,EAAO7kB,IAAKwZ,QAAQpa,KAAKyG,MAAMogB,SAErC,OACI,yBAAKhgB,UAAWG,EAAQ8oB,SACpB,yBAAKjpB,UAAWG,EAAQ+oB,YAEpB,uBAAG3nB,QAASpI,KAAK0mB,aAAc7f,UAAWG,EAAQoF,QAC7Cya,GACG,kBAAC,IAAD,CACI7b,IAAK,uBAAyBya,EAAKxjB,GAAK,KACxC4E,UAAWG,EAAQgpB,aAGzBnJ,GACE,kBAAC,IAAD,CACI7b,IAAK,0BACLnE,UAAWG,EAAQgpB,aAI/B,kBAAC,IAAD,CAAkB1oB,SAAS,UAE/B,yBAAKT,UAAWG,EAAQipB,eACpB,kBAAC,IAAD,CACIppB,UAAWG,EAAQkpB,SACnBC,UAAU,KACVlK,QAAM,GAELY,EAAUpB,EAAKS,SAAW,sBAE/B,kBAAC,IAAD,CACIrf,UAAWG,EAAQopB,UACnBD,UAAU,KACVhpB,MAAM,gBACN8e,QAAM,GAELY,EAAUpB,EAAKY,MAAMnkB,KAAO,sB,GA5CrByX,aAwD1B0W,EAAWxW,aA1IO,SAACtW,GACrB,MAAO,CACHsjB,QAAStjB,EAAMuF,WAAW+d,YAIP,SAACnf,GACxB,MAAO,CACH0d,eAAgB,SAACoB,GACb9e,EAAS0d,YAAeoB,QAiInB3M,CAGf9J,aA/Ha,SAAC7J,GAAD,MAAY,CACvB4pB,QAAS,CACL/kB,OAAQ,QACRrE,gBAAiBR,EAAMe,QAAQ4L,QAAQ0R,KACvCle,QAAS,gBACTiqB,gBACI,gHACApqB,EAAMe,QAAQ4L,QAAQtF,MAAM8U,QAAQ,IAAK,OACzC,2DACAnc,EAAMe,QAAQ4L,QAAQlM,KAAK0b,QAAQ,IAAK,OACxC,6DACAnc,EAAMe,QAAQqG,UAAUiX,KAAKlC,QAAQ,IAAK,OAC1C,0DACAnc,EAAMe,QAAQqG,UAAU3G,KAAK0b,QAAQ,IAAK,OAC1C,0DACAnc,EAAMe,QAAQqG,UAAUC,MAAM8U,QAAQ,IAAK,OAC3C,4DACAnc,EAAMe,QAAQqG,UAAUiX,KAAKlC,QAAQ,IAAK,OAC1C,6DACAnc,EAAMe,QAAQ4L,QAAQlM,KAAK0b,QAAQ,IAAK,OACxC,0DACAnc,EAAMe,QAAQ4L,QAAQ0R,KAAKlC,QAAQ,IAAK,OACxC,0DACAnc,EAAMe,QAAQqG,UAAUC,MAAM8U,QAAQ,IAAK,OAC3C,6DACAnc,EAAMe,QAAQqG,UAAU3G,KAAK0b,QAAQ,IAAK,OAC1C,6DACAnc,EAAMe,QAAQqG,UAAUiX,KAAKlC,QAAQ,IAAK,OAC1C,2DACAnc,EAAMe,QAAQqG,UAAU3G,KAAK0b,QAAQ,IAAK,OAC1C,uDACJkO,eAAgB,SAEpBnkB,OAAQ,CACJG,QAAS,QACTnG,MAAO,OACP2E,OAAQ,OACRkF,OAAQ,kBACRmL,aAAc,MACduU,SAAU,SACVzf,UACI,+DAER8f,UAAW,CACP5pB,MAAO,OACP2E,OAAQ,QAEZmlB,SAAU,CACN/oB,MAAO,OACPuF,WAAY,OACZD,UAAW,OACX5C,SAAU,QAEdkmB,WAAY,CACRxjB,QAAS,OACT+hB,eAAgB,gBAChB3e,WAAY,OAEhBygB,UAAW,CACP1jB,WAAY,OACZvF,MAAO,UACPC,QAAS,QAEb6oB,cAAe,CACX7pB,MAAO,YA+Db2J,CAAmB8f,IAENQ,O,6ZCxGTvgB,EAAiBC,YAAW,CAC9BC,KAAM,CACFmC,SAAU,OACVjC,UAAW,OACX,qBAAsB,CAClBC,aAAc,GAElB,WAAY,CACR5D,QAAS,QAEb,aAAc,CAAErB,OAAQ,IAE5BkF,SAAU,IAZSL,CAapBM,KAEGC,EAAwBP,YAAW,CACrCC,KAAM,CACF6c,UAAW,EACXxmB,QAAS,EAET,aAAc,CACVwmB,UAAW,IAGnBtc,QAAS,CACL4B,SAAU,OACVjH,OAAQ,EACRqB,QAAS,QACT,aAAc,CACVrB,OAAQ,MAGhBkF,SAAU,IAjBgBL,CAkB3BS,KAEGC,EAAwBV,aAAW,SAAC7J,GAAD,MAAY,CACjD8J,KAAM,CACFzD,QAAS,QACTlG,QAASH,EAAM0F,QAAQ,OAHDmE,CAK1Ba,KAEE5K,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCmY,OAAQ,CACJ9R,QAAS,OACT8e,WAAY,wBAEhBjb,SAAU,CACN7D,QAAS,QACTikB,UAAW,iBAEf1I,QAAS,CACLpb,WAAY,QAEhB+jB,aAAc,CACVlkB,QAAS,QAEbmkB,QAAS,CACLhkB,WAAYxG,EAAM0F,QAAQ,IAE9B+kB,SAAU,CACNC,WAAY,SACZjB,SAAU,SACVC,aAAc,gBAIhBiB,EAAQ,CACVC,OAAQA,IACRC,cAAeA,IACfC,MAAOA,IACPC,aAAcA,IACdC,QAASA,IACTC,eAAgBA,IAChBC,SAAUA,IACVC,gBAAiBA,IACjBC,QAASA,IACTC,eAAgBA,IAChBC,OAAQA,IACRC,cAAeA,IACfC,SAAUA,IACVC,gBAAiBA,IACjBC,mBAAoBA,KAGlBC,EAAS/gB,IAAM4N,MAAK,kBAAM,mCAEjB,SAASoT,IAAW,IAAD,EACxB9qB,EAAUhB,IAEVjF,EAAW+a,cACXiF,EAAUgR,cAEVvtB,EAAasS,IAAWtS,WAAWzD,EAASgW,UAElD,EAA8B3R,oBAAS,GAAvC,mBAAO4sB,EAAP,KAAgBC,EAAhB,KACA,EAAsC7sB,oBAAS,GAA/C,mBAAO8sB,EAAP,KAAoBC,EAApB,KACA,EAAgC/sB,mBAAS,MAAzC,mBAAOgtB,EAAP,KAAiBC,EAAjB,KACA,EAAwBjtB,mBACpBxE,IAAKwZ,UAAUkY,KAAO1xB,IAAKwZ,UAAUkY,KAAO,IADhD,mBAAOA,EAAP,KAAaC,GAAb,KAIM7qB,GAAWC,cACX6qB,GAAe3qB,uBAAY,SAAC+X,GAAD,OAAOlY,GAASmjB,YAAajL,MAAK,CAC/DlY,KAEE+qB,GAAa5qB,uBAAY,SAAC+X,GAAD,OAAOlY,GAASyhB,YAAWvJ,MAAK,CAAClY,KAE1DmG,GAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,GAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,KA8CL,OACI,oCACI,kBAAC,WAAD,CAAUmY,SAAU,IAChB,kBAACgS,EAAD,CACIa,UA5BM,SAACC,GACnB,IAAMC,EAAO,sBAAON,GAAP,CAAaK,IAC1BJ,GAAQK,GACR,IAAMnN,EAAO7kB,IAAKwZ,UAClBqL,EAAK6M,KAAOM,EACZhyB,IAAKuZ,QAAQsL,IAwBDrhB,KAAM8tB,EACNloB,QAAS,kBAAMmoB,GAAe,OAGtC,kBAACriB,EAAD,CACIie,QAAM,EACN3d,SAAU4hB,GAAWxtB,EACrB+N,SAAU,kBAAM/N,GAAcytB,GAAYD,KAE1C,kBAAC1hB,EAAD,CACIkC,gBAAc,kBACdvQ,GAAG,kBAEH,kBAAC,IAAD,CACIyQ,QAAM,EACNvI,IAAI,2BACJ/B,QAAS,kBACJ5D,GAAcuc,EAAQhS,KAAK,oBAGhC,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIlI,UAAWsB,KAAU,mBAEZnB,EAAQoJ,SACL4hB,GAAWxtB,GAHF,cAIZwC,EAAQ8gB,SAAU,GAJN,GAMjB9gB,EAAQqX,YAGb2T,GAAWxtB,IACV,kBAAC,IAAD,CAAcqC,UAAWG,EAAQ8gB,WAGzC,kBAAC,IAAD,CAAcjV,QAAQ,8BAE1B,kBAAC,IAAD,OAGJ,kBAACpC,EAAD,KACI,kBAAC,IAAD,CAAM2e,aAAc,kBAAMiD,EAAY,QAClC,kBAAC,IAAD,CACI3f,QAAM,EACNzQ,GAAG,YACH4E,UAAWG,EAAQypB,cAEnB,kBAAC,IAAD,KACI,kBAAC,IAAD,OAEJ,kBAAC,IAAD,OAEJ,kBAAC,IAAD,CACI/d,QAAM,EACNzQ,GAAG,aACH4E,UAAWG,EAAQypB,cAEnB,kBAAC,IAAD,KACI,kBAAC,IAAD,OAEJ,kBAAC,IAAD,OAEH,CACG,CACItmB,IAAK,eACLlI,GAAI,QACJiF,KACI,kBAAC,IAAD,CACIL,UAAW,CACPG,EAAQ8gB,QACR9gB,EAAQ6rB,cAKxB,CACI1oB,IAAK,eACLlI,GAAI,QACJiF,KACI,kBAAC,IAAD,CACIL,UAAW,CACPG,EAAQ8gB,QACR9gB,EAAQ8rB,YAKxB,CACI3oB,IAAK,eACLlI,GAAI,QACJiF,KACI,kBAAC,IAAD,CACIL,UAAW,CACPG,EAAQ8gB,QACR9gB,EAAQ+rB,cAKxB,CACI5oB,IAAK,eACLlI,GAAI,MACJiF,KACI,kBAAC,IAAD,CACIL,UAAW,CACPG,EAAQ8gB,QACR9gB,EAAQgsB,aAK1B/oB,KAAI,SAACoZ,GAAD,OACF,kBAAC,IAAD,CACI3Q,QAAM,EACNvI,IAAKkZ,EAAElZ,IACP/B,QAAS,kBAAMoqB,GAAanP,EAAEphB,GAAK,eAEnC,kBAAC,IAAD,CAAc4E,UAAWG,EAAQ0pB,SAC5BrN,EAAEnc,MAEP,kBAAC,IAAD,CAAc2L,QAASwQ,EAAElZ,UAGhCmoB,EAAKroB,KAAI,SAACoZ,GAAD,OACN,kBAAC,IAAD,CACI3Q,QAAM,EACNvI,IAAKkZ,EAAEphB,GACPktB,aAAc,kBAAMkD,EAAYhP,EAAEphB,KAClCmG,QAAS,WACU,IAAXib,EAAEjhB,KACFowB,GAAa,OAASnP,EAAEphB,IAExBwwB,GAAWpP,EAAE4P,cAIrB,kBAAC,IAAD,CAAcpsB,UAAWG,EAAQ0pB,SAxL7C,SAACxpB,EAAMC,GACnB,GAAI0pB,EAAM3pB,GAAO,CACb,IAAMgsB,EAAgBrC,EAAM3pB,GAC5B,OACI,kBAACgsB,EAAD,CACIrsB,UAAW,CAACG,EAAQ8gB,SACpBhd,MACI3D,EACM,CACIA,MAAOA,GAEX,KAKtB,OAAO,kBAAC,IAAD,CAAQN,UAAW,CAACG,EAAQ8gB,WAyKNqL,CACc,IAAX9P,EAAEjhB,KACIihB,EAAEnc,KACF,qBACK,IAAXmc,EAAEjhB,KAAaihB,EAAElc,MAAQ,OAGjC,kBAAC,IAAD,CACIN,UAAWG,EAAQ2pB,SACnB9d,QAASwQ,EAAEnhB,OAGdkwB,IAAa/O,EAAEphB,IACZ,kBAAC,IAAD,CACImG,QAAS,kBA5KvBnG,EA4K0CohB,EAAEphB,QA3K9D+M,IAAI8I,OAAO,QAAU7V,GAChBmN,MAAK,WACF,IAAMwjB,EAAUN,EAAKpuB,QAAO,SAACmf,GACzB,OAAOA,EAAEphB,KAAOA,KAEpBswB,GAAQK,GACR,IAAMnN,EAAO7kB,IAAKwZ,UAClBqL,EAAK6M,KAAOM,EACZhyB,IAAKuZ,QAAQsL,MAEhBpW,OAAM,SAACtP,GACJ8N,GAAe,MAAO,QAAS9N,EAAMF,QAAS,YAZrC,IAACoC,IA8Kc,kBAAC,IAAD,CACIE,KAAM,QACN4R,KAAK,MACL5H,aAAW,UAEX,kBAAC,IAAD,YAOpB,kBAAC,IAAD,CAAUuG,QAAM,EAACtK,QAAS,kBAAM+pB,GAAe,KAC3C,kBAAC,IAAD,CAActrB,UAAWG,EAAQ0pB,SAC7B,kBAAC,IAAD,CAAS7pB,UAAWG,EAAQ8gB,WAEhC,kBAAC,IAAD,CAAcjV,QAAS,kCAEvB,IACR,kBAAC,IAAD,W,6KChWdugB,E,4MACF7vB,MAAQ,CACJuL,MAAO,GACPukB,WAAY,EACZvwB,QAAQ,G,EAGZwT,iCAAmC,SAACC,GAChC,IAAMzH,EAAQ,GACVwkB,EAAW,EACf,GAA2B,KAAvB/c,EAAU9T,MAAMR,GAAW,CAC3B,GACI6U,IAAWpS,YAAY,EAAK+B,MAAM1F,SAASgW,YAC1CR,EAAU9T,MAAMgC,KACnB,CACE,IAAM8uB,EAAS,CACXC,MAAOjd,EAAU9T,MAAMP,KACvB8I,IAAK3L,IAAU,kBAAoBkX,EAAU9T,MAAM0H,KASvD,OAPAmpB,EAAW,EACXxkB,EAAMC,KAAKwkB,QACX,EAAKpd,SAAS,CACVkd,WAAYC,EACZxkB,MAAOA,EACPhM,QAAQ,IAKhByT,EAAU7T,MAAMuH,KAAI,SAAC5G,GACjB,IAAMowB,EAAWpwB,EAAMnB,KAAKma,MAAM,KAAKiD,MAAMoU,cAC7C,IAA4C,IAAxCC,IAAiB/S,QAAQ6S,GAAkB,CAC3C,IAAIzoB,EAAM,GAGNA,EAFA8L,IAAWpS,YAAY,EAAK+B,MAAM1F,SAASgW,WAC3C/L,EAAM3L,IAAU,kBAAoBgE,EAAM8G,KAGtC,SACAqN,mBACmB,MAAfnU,EAAMoB,KACApB,EAAMoB,KAAOpB,EAAMnB,KACnBmB,EAAMoB,KAAO,IAAMpB,EAAMnB,MAGjC7C,IAAU,iBAAmBgE,EAAMpB,GAE7C,IAAMsxB,EAAS,CACXC,MAAOnwB,EAAMnB,KACb8I,IAAKA,GAGL3H,EAAMoB,OAAS8R,EAAU9T,MAAMgC,MAC/BpB,EAAMnB,OAASqU,EAAU9T,MAAMP,OAE/BoxB,EAAWxkB,EAAM3L,QAErB2L,EAAMC,KAAKwkB,OAGnB,EAAKpd,SAAS,CACVkd,WAAYC,EACZxkB,MAAOA,EACPhM,QAAQ,M,EAKpBiiB,YAAc,WACV,EAAKte,MAAMskB,eAAeznB,YAAmBd,WAAWC,OACxD,EAAK0T,SAAS,CACVrT,QAAQ,K,4CAIhB,WAAU,IAAD,OACL,EAAsC9C,KAAKuD,MAAnC8vB,EAAR,EAAQA,WAAYvwB,EAApB,EAAoBA,OAAQgM,EAA5B,EAA4BA,MAE5B,OACI,6BACKhM,GACG,kBAAC,IAAD,CACI8wB,OAAQ9kB,EACR+kB,QAAS/wB,EACTkH,QAAS,kBAAM,EAAK+a,eACpBziB,MAAO+wB,EACPS,cAAe,SAACC,GAAD,OACX,EAAK5d,SAAS,CACVkd,WAAYU,Y,GAvFTpa,aAqG7Bqa,EAAana,aApHK,SAACtW,GACrB,MAAO,CACHd,MAAOc,EAAMD,SAASd,WAAWC,MACjCC,MAAOa,EAAMD,SAASd,WAAWE,UAId,SAACgF,GACxB,MAAO,CACHqjB,eAAgB,SAACtoB,GACbiF,EAASqjB,YAAetoB,QA0GjBoX,CAGjB9J,aAzHa,iBAAO,KAyHpBA,CAAmBgK,YAAWqZ,KAEjBY,a,2EC3HFC,EAAwB,SAACjwB,GAClC,MAAO,CACH5B,KAAM,yBACN4B,YAIKkwB,EAAqB,SAACpwB,GAC/B,MAAO,CACH1B,KAAM,uBACN0B,YAIK6kB,EAAoB,SAAC7kB,GAC9B,MAAO,CACH1B,KAAM,sBACN0B,YAmBKmlB,EAAc,WACvB,OAAO,SAACvhB,EAAUysB,GACd,MAKIA,IAJYzyB,EADhB,EACI4B,SAAY5B,SAEIqV,EAHpB,EAEIqd,OACIrzB,SAAYgW,SAGdsd,EAAUvd,IAAWpS,YAAYqS,GACvC,GAAIsd,EAAS,CACT,IAAM5O,EAAO7kB,IAAKwZ,UAClB,IAAKxZ,IAAKga,SAAW6K,IAASA,EAAKY,MAAMiO,cAGrC,OAFA5sB,EAASsG,EAAe,MAAO,QAAS,2BAAQ,iBAChDtG,EAAS8hB,EAAkB,QAAQ,IAK3C9hB,EAAS8hB,EAAkB,QAAQ,IACnC,IAAM+K,EACmB,MAArB7yB,EAAS,GAAG+C,KACN/C,EAAS,GAAG+C,KAAO/C,EAAS,GAAGQ,KAC/BR,EAAS,GAAG+C,KAAO,IAAM/C,EAAS,GAAGQ,KAC/C,OAAQ8mB,YAActnB,EAAS,GAAGQ,OAC9B,IAAK,MAED,YADAwF,EAASqjB,EAAerpB,EAAS,KAErC,IAAK,QACD,OAAI2yB,OACA3sB,EACIqH,YACIrN,EAAS,GAAGyI,IACR,aACAqN,mBAAmB9V,EAAS,GAAGQ,MAC/B,eACAsV,mBAAmB+c,UAKnC7sB,EACIqH,YACI,UACIyI,mBAAmB+c,GACnB,OACA7yB,EAAS,GAAGO,KAI5B,IAAK,QAMD,YAFIyF,EAAS8sB,EAAiB9yB,EAAS,KAG3C,IAAK,QACD,OAAI2yB,OACA3sB,EACIqH,YACIrN,EAAS,GAAGyI,IACR,eACAqN,mBAAmB9V,EAAS,GAAGQ,MAC/B,eACAsV,mBAAmB+c,UAKnC7sB,EACIqH,YACI,YACIyI,mBAAmB+c,GACnB,OACA7yB,EAAS,GAAGO,KAI5B,IAAK,MACD,OAAIoyB,OACA3sB,EACIqH,YACIrN,EAAS,GAAGyI,IACR,aACAqN,mBAAmB9V,EAAS,GAAGQ,MAC/B,eACAsV,mBAAmB+c,UAKnC7sB,EACIqH,YACI,UACIyI,mBAAmB+c,GACnB,OACA7yB,EAAS,GAAGO,KAI5B,IAAK,OACD,OAAIoyB,OACA3sB,EACIqH,YACIrN,EAAS,GAAGyI,IACR,cACAqN,mBAAmB9V,EAAS,GAAGQ,MAC/B,eACAsV,mBAAmB+c,UAKnC7sB,EACIqH,YACI,WACIyI,mBAAmB+c,GACnB,OACA7yB,EAAS,GAAGO,KAI5B,IAAK,OACD,OAAIoyB,OACA3sB,EACIqH,YACIrN,EAAS,GAAGyI,IACR,cACAqN,mBAAmB9V,EAAS,GAAGQ,MAC/B,eACAsV,mBAAmB+c,UAKnC7sB,EACIqH,YACI,WACIyI,mBAAmB+c,GACnB,OACA7yB,EAAS,GAAGO,KAI5B,QAEI,YADAyF,EAAS0Q,EAAkB,+CAM9Bqc,EAAa,SAACzyB,EAAMoI,EAAOsqB,GACpC,IAAQC,EAA+BvqB,EAA/BuqB,QAASC,EAAsBxqB,EAAtBwqB,QAASC,EAAazqB,EAAbyqB,SAC1B,OAAO,SAACntB,EAAUysB,GAEd,KAAI,CAACQ,EAASC,EAASC,GAAU3wB,OAAO6F,SAAS5G,OAAS,GAA1D,CAGA,IAAM2xB,EAAYxR,cACVhgB,EAAa6wB,IAAb7wB,SACA5B,EAA4C4B,EAA5C5B,SAAUK,EAAkCuB,EAAlCvB,WAAYN,EAAsB6B,EAAtB7B,QAASD,EAAa8B,EAAb9B,SACvC,GACIqzB,IACCF,IACAC,GACmB,IAApBlzB,EAASyB,QAETnB,EAAKI,OAASL,EAAWC,KAAKI,KAChC,CAGEsF,EAASusB,EAAsBvyB,EAASuI,KAAI,SAACoZ,GAAD,OAAOA,EAAEphB,QAErD,IAAM8yB,EAAQrhB,KAAKshB,IAAIjzB,EAAWO,MAAOoyB,GACnCO,EAAMvhB,KAAKwhB,IAAInzB,EAAWO,MAAOoyB,GAEjCS,GADqB,QAAdnzB,EAAKI,KAAiBX,EAAUD,GACfsS,MAAMihB,EAAOE,EAAM,GACjD,OAAOvtB,EAASwsB,EAAmBiB,IAIvC,OAFAztB,EAlMqB,SAAC1F,EAAMM,GAChC,MAAO,CACHF,KAAM,kBACNJ,OACAM,SA8LS8yB,CAAcpzB,EAAM0yB,IAC7BhtB,EA1LG,CACHtF,KAAM,yBACNG,iBAwL6B,KACxBoyB,IAAYG,GAAeF,GAAWE,EAM5BptB,GADW,IAHDhG,EAAS4W,WAAU,SAACjV,GACrC,OAAOA,EAAMpB,KAAOD,EAAKC,MAGTgyB,EAAsB,CAACjyB,EAAKC,KAEhCiyB,EAAmB,CAAClyB,KAGjC0F,EAASihB,EAAkB,CAAC3mB,QCjP3C,s7CAEO,IAAMqzB,EAAe,SAAC5wB,EAAM6wB,GAC/B,MAAO,CACHlzB,KAAM,gBACNqC,OACA6wB,qBAIKnM,EAAa,SAAC1kB,GACvB,OAAO,SAACiD,EAAUysB,GACd,IAAM5wB,EAAQ4wB,IACRmB,EAAmB7wB,IAASlB,EAAMuW,UAAUrV,KAClDiD,EAAS2tB,EAAa5wB,EAAM6wB,MAIvBC,EAAa,WACtB,OAAO,SAAC7tB,EAAUysB,GACd,IAAM5wB,EAAQ4wB,IACRqB,EAAYjyB,EAAMuW,UAAUrV,KAAK4X,MAAM,KAC7CmZ,EAAUlW,MACV,IAAMmW,EAA+B,IAArBD,EAAUryB,OAAe,IAAMqyB,EAAUhT,KAAK,KACxD8S,EAAmBG,IAAYlyB,EAAMuW,UAAUrV,KACrDiD,EAAS2tB,EAAaI,EAASH,MAI1B3K,EAAqB,SAACvmB,GAC/B,MAAO,CACHhC,KAAM,gBACNgC,KAAMA,IAIDsxB,EAAc,SAAC/xB,EAAQD,GAChC,MAAO,CACHtB,KAAM,gBACNuB,OAAQA,EACRD,OAAQA,IAIHwF,EAAmB,SAACD,GAC7B,MAAO,CACH7G,KAAM,qBACN6G,OAAQA,IAIHnB,EAAqB,WAC9B,MAAO,CACH1F,KAAM,yBAIDonB,EAAoB,SAACpnB,EAAMgC,GACpC,MAAO,CACHhC,KAAM,sBACNuzB,SAAUvzB,EACVgC,KAAMA,IAIDwxB,EAA4B,SAAC3pB,GACtC,MAAO,CACH7J,KAAM,+BACN6J,OAAQA,IAIH4pB,EAAoB,SAAC5pB,EAAQhL,GACtC,MAAO,CACHmB,KAAM,sBACN6J,OAAQA,EACRhL,IAAKA,IAIA2pB,EAAyB,WAClC,MAAO,CACHxoB,KAAM,8BAID0zB,EAAuB,WAChC,MAAO,CACH1zB,KAAM,4BAIDgjB,EAAiB,SAACoB,GAC3B,MAAO,CACHpkB,KAAM,mBACNokB,OAAQA,IAIHld,EAAsB,SAACkd,GAChC,MAAO,CACHpkB,KAAM,yBACNokB,OAAQA,IAIH6C,EAAmB,WAC5B,MAAO,CACHjnB,KAAM,uBAID2zB,EAAmB,SAAC5rB,GAC7B,MAAO,CACH/H,KAAM,qBACN+H,IAAKA,IAIAmf,EAAiB,WAC1B,MAAO,CACHlnB,KAAM,qBAIDmnB,EAAmB,WAC5B,MAAO,CACHnnB,KAAM,uBAIDgnB,EAAkB,WAC3B,MAAO,CACHhnB,KAAM,sBAID4zB,EAAc,SAAC9vB,GACxB,MAAO,CACH9D,KAAM,cACN8D,MAAOA,IAIFsf,EAAmB,SAACvZ,GAC7B,MAAO,CACH7J,KAAM,qBACN6J,OAAQA,IAIH6e,EAAkB,WAC3B,MAAO,CACH1oB,KAAM,sBAID6zB,EAA2B,WACpC,MAAO,CACH7zB,KAAM,gCAID8zB,EAA4B,WACrC,MAAO,CACH9zB,KAAM,iCAID+zB,EAAuB,WAChC,MAAO,CACH/zB,KAAM,2BAIDg0B,EAAqB,WAC9B,MAAO,CACHh0B,KAAM,yBAIDi0B,EAAsB,WAC/B,MAAO,CACHj0B,KAAM,2BAIDk0B,EAAiB,WAC1B,MAAO,CACHl0B,KAAM,qBAIDgW,EAAoB,SAACvL,GAC9B,MAAO,CACHzK,KAAM,sBACNyK,KAAMA,IAIDqL,EAAiB,WAC1B,MAAO,CACH9V,KAAM,qBAID4L,EAAiB,SAACF,EAAUC,EAAY9M,EAAKkG,GACtD,MAAO,CACH/E,KAAM,kBACN0L,SAAUA,EACVC,WAAYA,EACZ9M,IAAKA,EACLkG,MAAOA,IAUF+G,EAAmB,SAACjC,GAC7B,MAAO,CACH7J,KAAM,qBACN6J,OAAQA,IAIHmC,EAAkB,WAC3B,MAAO,CACHhM,KAAM,sBAIDyoB,EAAe,SAAC9nB,GACzB,MAAO,CACHX,KAAM,iBACNW,SAAUA,IAILgoB,EAAiB,SAACtoB,GAC3B,MAAO,CACHL,KAAM,mBACNK,MAAOA,IAIF+xB,EAAmB,SAAC/xB,GAC7B,MAAO,CACHL,KAAM,qBACNK,MAAOA,IAIFuoB,EAAwB,SAACloB,GAClC,MAAO,CACHV,KAAM,4BACNU,WAIKyzB,EAAyB,SAAC3zB,EAAaC,GAChD,MAAO,CACHT,KAAM,4BACNQ,cACAC,WAIK+U,EAAiB,WAC1B,MAAO,CACHxV,KAAM,oBAID2mB,EAAW,WACpB,MAAO,CACH3mB,KAAM,cAIDo0B,EAAgB,SAACC,GAC1B,MAAO,CACHr0B,KAAM,kBACNq0B,OAAQA,K,qCC5RJC,EAgBAC,E,yDAhBAD,K,cAAAA,E,gBAAAA,E,UAAAA,E,cAAAA,E,qBAAAA,M,cAgBAC,O,eAAAA,I,oBAAAA,M,SChBSC,E,WACjB,aAIG,IAHQC,EAGT,uDAH2B,MACjBhW,EAEV,uDAFmB,SACT5e,EACV,uDADuB,EACvB,yBAHS40B,QAGT,KAFUhW,SAEV,KADU5e,K,kDAGZ,SAAuB40B,GACnB,MAAM,uBAAN,OAA8BA,EAA9B,aAAwC72B,KAAK6gB,OAA7C,YAAuD7gB,KAAKiC,GAA5D,Q,kBAGJ,WACI,IAAM60B,EAAyB,CAAC,QAChC,GAAIA,EAAW3yB,SAASnE,KAAK62B,OAAQ,KAAC,IAAD,qBAFjCE,EAEiC,yBAFjCA,EAEiC,iBAEjC,EAAAtZ,SAAQC,IAAR,SAAY1d,KAAKg3B,eAAe,SAAhC,OAA4CD,O,kBAIpD,WACI,IAAMD,EAAyB,CAAC,OAAQ,QACxC,GAAIA,EAAW3yB,SAASnE,KAAK62B,OAAQ,KAAC,IAAD,qBAFjCE,EAEiC,yBAFjCA,EAEiC,iBAEjC,EAAAtZ,SAAQwZ,KAAR,SAAaj3B,KAAKg3B,eAAe,SAAjC,OAA6CD,O,mBAIrD,WACI,IAAMD,EAAyB,CAAC,OAAQ,OAAQ,SAChD,GAAIA,EAAW3yB,SAASnE,KAAK62B,OAAQ,KAAC,IAAD,qBAFhCE,EAEgC,yBAFhCA,EAEgC,iBAEjC,EAAAtZ,SAAQ1d,MAAR,SAAcC,KAAKg3B,eAAe,UAAlC,OAA+CD,S,sCCzB9CG,EAAb,WAII,WAAoBC,GAAgB,yBAAhBA,QAAe,KAHnCC,MAA6B,GAGM,KAFnCC,WAAkC,GAFtC,2CAMI,SAAQC,GAAiB,IAAD,OACpB,OAAO,IAAIp2B,SAAc,SAAC0b,EAASzb,GAC/B,EAAKi2B,MAAMroB,KAAK,CACZuoB,WACA1a,UACAzb,WAEJ,EAAKo2B,aAbjB,qBAiBI,SAAQC,GACJx3B,KAAKq3B,WAAar3B,KAAKq3B,WAAWnzB,QAAO,SAACmf,GAAD,OAAOA,IAAMmU,KACtDx3B,KAAKu3B,UAnBb,iBAsBI,SAAIC,GAAqB,IAAD,OACpBx3B,KAAKo3B,MAAQp3B,KAAKo3B,MAAMlzB,QAAO,SAACmf,GAAD,OAAOA,IAAMmU,KAC5Cx3B,KAAKq3B,WAAWtoB,KAAKyoB,GACrBA,EAAKF,SAASG,MAAMroB,MAChB,WACIooB,EAAK5a,UACL,EAAK8a,QAAQF,MAEjB,SAACG,GACGH,EAAKr2B,OAAOw2B,GACZ,EAAKD,QAAQF,QAhC7B,mBAqCI,WAAS,IAAD,OACEI,EAAgB53B,KAAKq3B,WAAWl0B,OAChC00B,EAAe73B,KAAKm3B,MAAQS,EAClC53B,KAAKo3B,MAAMtjB,MAAM,EAAG+jB,GAAcz0B,SAAQ,SAACo0B,GACvC,EAAKC,IAAID,UAzCrB,KCqCO,SAASM,EAAgBC,GAC5B,MAAM,GAAN,OAHoB,iBAGpB,gBAAiCA,EAAK/1B,KAAKE,KAA3C,gBAAuD61B,EAAK5oB,IAA5D,iBAAwE4oB,EAAK/1B,KAAKG,KAAlF,mBAAiG41B,EAAKzzB,OAAOrC,IAiB1G,SAAS+1B,EAAgBD,EAAYE,GACxC,IAAMC,EAASJ,EAAgBC,GAC/B,IACIxd,aAAa4d,WAAWD,GAC1B,MAAOP,GACLM,EAAOhB,KACH,IAAImB,EACAC,EAAkBC,gBADtB,uCAEoCJ,MAwBzC,SAASK,EAAaR,EAAYE,GACrC,IAAMC,EAASJ,EAAgBC,GAC3BS,EAAiC,KACrC,IACIA,EAAkBje,aAAaC,QAAQ0d,GACzC,SACED,EAAOhB,KACH,IAAImB,EACAC,EAAkBI,cADtB,oCAEiCP,KAKzC,GAAuB,MAAnBM,EACA,OAAO,KAGX,IAAIE,EAAyB,KAC7B,IACIA,EAAYre,KAAKC,MAAMke,GACzB,SAEER,EAAgBD,EAAME,GACtBA,EAAOhB,KACH,IAAImB,EACAC,EAAkBM,eADtB,6CAE0CT,KAKlD,OACIQ,GACAA,EAAUE,SACVF,EAAUE,QAAQxnB,QAAUsC,KAAK2M,MAAMwY,KAAKC,MAAQ,MAEpDd,EAAgBD,EAAME,GACtBA,EAAOhB,KACH,IAAImB,EACAC,EAAkBU,WADtB,4CAEyCL,EAAUE,QAAQxnB,QAF3D,kBAE4E8mB,KAGzE,MAGJQ,ECtIX,IAAMM,EAA6B,CAC/B,SAAkBh3B,EAAYsC,GAC1B,QAC4B3D,GAAxB2D,EAAO20B,eACP30B,EAAO20B,cAAc91B,OAAS,EAChC,CACE,IAAM+1B,EAAG,OAAGl3B,QAAH,IAAGA,OAAH,EAAGA,EAAME,KAAKma,MAAM,KAAKiD,MAClC,GAAY,OAAR4Z,IAAiBA,IAAQ50B,EAAO20B,cAAc90B,SAAS+0B,GACvD,MAAM,IAAIC,EACN,qCACA,SACA70B,KAKhB,SAAmBtC,EAAYsC,GAC3B,GAAIA,EAAO80B,QAAU,GACbp3B,EAAKG,KAAOmC,EAAO80B,QACnB,MAAM,IAAID,EACN,mCACA,OACA70B,KAUb,SAAS+0B,EAASr3B,EAAYsC,GACjC00B,EAAS51B,SAAQ,SAAC0e,GAAD,OAAOA,EAAE9f,EAAMsC,M,ICtCxB+zB,E,yBCCGiB,EAAgB95B,IAAhB85B,YAGTC,EAAgB,CAClBl6B,QAAS,UACTK,iBAAiB,EACjB85B,kBAAmB,CAAC,SAACj5B,GAAD,OAAmB8Z,KAAKC,MAAM/Z,MAG/C,SAASk5B,EAAoB5iB,EAAa4f,GAC7C,OAAOj3B,IACFk6B,QADE,uCACwBH,GAAkB9C,GAD1C,IACkD5f,SACpDxH,OAAM,SAACsoB,GACJ,GAAIn4B,IAAMm6B,SAAShC,GACf,MAAM,IAAIiC,EAGd,MAAM,IAAIC,EAAUlC,EAAK9gB,O,SDlBzBwhB,K,0BAAAA,E,oCAAAA,E,sCAAAA,E,sDAAAA,E,sDAAAA,E,sCAAAA,E,gDAAAA,E,gDAAAA,E,gCAAAA,E,kCAAAA,E,8BAAAA,E,gCAAAA,E,wBAAAA,E,mCAAAA,M,KAiBZ,IETYyB,EFSNC,EAAmB,CACrB1B,EAAkB2B,0BAClB3B,EAAkB4B,kBAClB5B,EAAkB6B,uBAClB7B,EAAkB8B,uBAClB9B,EAAkB+B,iBAGhBC,EAAkB,EAAE,GAEbjC,EAAb,WAEI,WAAmBl2B,EAAgCrC,GAAkB,yBAAlDqC,OAAiD,KAAjBrC,UAAiB,KAD7DI,WAC6D,EAChED,KAAKC,OAAQ,IAAIC,OAAQD,MAHjC,2CAMI,SAAeq6B,GACX,OAAOt6B,KAAKH,UAPpB,uBAUI,WACI,OAAOk6B,EAAiB51B,SAASnE,KAAKkC,UAX9C,KAgBai3B,EAAb,kDAOI,WAAYt5B,EAAiByhB,EAA0Bhd,GAAiB,IAAD,8BACnE,cAAM+zB,EAAkBkC,YAAa16B,IANlCyhB,WAKgE,IAFhEhd,YAEgE,EAEnE,EAAKgd,MAAQA,EACb,EAAKhd,OAASA,EAHqD,EAP3E,2CAaI,SAAeg2B,GACX,MAAkB,QAAdt6B,KAAKshB,MACC,mGAAN,OFxDgB,SAACnB,GACzB,GAAc,IAAVA,EAAa,MAAO,MACxB,IAEMC,EAAI1M,KAAK2M,MAAM3M,KAAKgK,IAAIyC,GAASzM,KAAKgK,IAFlC,OAGV,OAAQyC,EAAQzM,KAAK4M,IAHX,KAGkBF,IAAIG,QAAQ,GAAK,IAF/B,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAELH,GEmDvBF,CACtBlgB,KAAKsE,OAAO80B,SADhB,UAKE,uIAAN,OACIp5B,KAAKsE,OAAO20B,cACNj5B,KAAKsE,OAAO20B,cAAczW,KAAK,KAC/B,IAHV,cApBR,GAAuC4V,GA6B1BoC,EAAb,kDAII,WAAY36B,EAAiByE,GAAiB,IAAD,8BACzC,cAAM+zB,EAAkBoC,kBAAmB56B,IAHxCyE,YAEsC,EAEzC,EAAKA,OAASA,EAF2B,EAJjD,uBAAwC8zB,GAW3BsC,EAAb,kDACI,WACIx4B,EACArC,EACUU,GACX,IAAD,8BACE,cAAM2B,EAAMrC,IAFFU,WACZ,EALN,2CASI,SAAe+5B,GACX,IAAIr5B,EAAG,UAAMjB,KAAKH,QAAX,aAAuBG,KAAKO,SAASU,KAK5C,OAJIjB,KAAKO,SAASR,QACdkB,GAAG,YAASjB,KAAKO,SAASR,MAAvB,MAGAkB,IAff,uBAkBI,WACI,OACI,mEAAqBo5B,EAAgBl2B,SAASnE,KAAKO,SAAST,UApBxE,GAA8Bs4B,GA0BjBuC,EAAb,kDACI,WAAYp6B,GAA0B,uCAC5B83B,EAAkB2B,0BAA2B,GAAIz5B,GAF/D,2CAKI,SAAe+5B,GAEX,OADAt6B,KAAKH,QAAU,mDACR,+DAAcy6B,OAP7B,GAA8CI,GAYjCE,EAAb,kDACI,WAAYr6B,GAA0B,uCAC5B83B,EAAkBwC,0BAA2B,GAAIt6B,GAF/D,2CAKI,SAAe+5B,GAEX,OADAt6B,KAAKH,QAAU,mDACR,+DAAcy6B,OAP7B,GAA8CI,GAYjCb,EAAb,kDACI,WAAsBiB,EAA2BjkB,GAAc,IAAD,8BAC1D,cAAMwhB,EAAkB4B,kBAAmBa,EAASj7B,UADlCi7B,WAAwC,EAAbjkB,MAAa,EADlE,2CAKI,SAAeyjB,GACX,MAAM,6BAAN,OAAgBt6B,KAAK86B,SAArB,aAAkC96B,KAAK6W,IAAvC,SANR,GAA+BuhB,GAWlB2C,EAAb,kDACI,WAAYx6B,EAAmCy6B,GAAqB,IAAD,8BAC/D,cAAM3C,EAAkB6B,uBAAwB,GAAI35B,IADTy6B,aAAoB,EADvE,2CAKI,SAAeV,GAEX,OADAt6B,KAAKH,QAAL,wBAAsBG,KAAKg7B,WAA3B,8BACO,+DAAcV,OAP7B,GAA2CI,GAY9Bd,EAAb,kDACI,aAAe,uCACLvB,EAAkB+B,gBAAiB,oBAFjD,uBAA0ChC,GAO7B6C,EAAb,kDACI,WAAY16B,EAAmCy6B,GAAqB,IAAD,8BAC/D,cAAM3C,EAAkB8B,uBAAwB,GAAI55B,IADTy6B,aAAoB,EADvE,2CAKI,SAAeV,GAEX,OADAt6B,KAAKH,QAAL,wBAAsBG,KAAKg7B,WAA3B,8BACO,+DAAcV,OAP7B,GAA2CI,G,yBG1JpC,SAAeQ,EAAtB,oC,4CAAO,WACHC,EACAC,GAFG,eAAA9d,EAAA,sEAIemc,EAA6B,cAAe,CAC1DxwB,OAAQ,MACRvI,KAAMy6B,EACNE,YAAaD,IAPd,UAUmB,KANhBE,EAJH,QAUK56B,KAAKZ,KAVV,sBAWO,IAAI66B,EAAyBW,EAAI56B,MAXxC,gCAcI46B,EAAI56B,KAAKA,MAdb,4C,kEAiBA,WAAmCuB,GAAnC,eAAAqb,EAAA,sEACemc,EAAU,sBAAkCx3B,GAAM,CAChEgH,OAAQ,WAFT,UAKmB,KAJhBqyB,EADH,QAKK56B,KAAKZ,KALV,sBAMO,IAAI86B,EAAyBU,EAAI56B,MANxC,gCASI46B,EAAI56B,KAAKA,MATb,4C,sBAYA,SAAe66B,EAAtB,wC,4CAAO,WACHC,EACAC,EACAC,EACAN,GAJG,eAAA9d,EAAA,sEAMemc,EAAU,sBACT+B,EADS,YACIC,EAAMn5B,OAClC,CACI2G,OAAQ,OACR0yB,QAAS,CAAE,eAAgB,4BAC3Bj7B,KAAM+6B,EAAMA,MACZG,iBAAkB,SAACC,GACfH,EAAW,CACPI,OAAQD,EAAcC,OACtBjN,MAAOgN,EAAchN,SAG7BwM,YAAaD,IAlBlB,UAsBmB,KAhBhBE,EANH,QAsBK56B,KAAKZ,KAtBV,sBAuBO,IAAIi7B,EAAsBO,EAAI56B,KAAM+6B,EAAMn5B,OAvBjD,gCA0BIg5B,EAAI56B,KAAKA,MA1Bb,4C,sBA6BA,SAAeq7B,EAAtB,0C,4CAAO,WACHllB,EACAmlB,EACAP,EACAC,EACAN,GALG,eAAA9d,EAAA,sEAOemc,EAAU,UAAS5iB,EAAT,kBAAsB4kB,EAAMn5B,OAAS,CAC7D2G,OAAQ,OACR0yB,QAAS,CACL,eAAgB,2BAChBM,cAAeD,GAEnBt7B,KAAM+6B,EAAMA,MACZG,iBAAkB,SAACC,GACfH,EAAW,CACPI,OAAQD,EAAcC,OACtBjN,MAAOgN,EAAchN,SAG7BwM,YAAaD,EACb17B,iBAAiB,IArBlB,UAwBmB,KAjBhB47B,EAPH,QAwBK56B,KAAKZ,KAxBV,sBAyBO,IAAIm7B,EAAsBK,EAAI56B,KAAM+6B,EAAMn5B,OAzBjD,gCA4BIg5B,EAAI56B,KAAKA,MA5Bb,4C,gCD3DKo5B,O,iBAAAA,I,6BAAAA,I,mBAAAA,I,yBAAAA,I,2BAAAA,I,yBAAAA,I,uBAAAA,I,iBAAAA,I,wBAAAA,M,KAoCZ,IAAMoC,EAAe,CACjBxF,EAAWyF,MACXzF,EAAW0F,OACX1F,EAAW2F,MACX3F,EAAW4F,IACX5F,EAAW6F,UAIeC,E,WAc1B,WAAmBzE,EAAsB0E,GAAyB,IAAD,gCAA9C1E,OAA8C,KAAxB0E,UAAwB,KAb1DC,WAa0D,OAZ1DzwB,OAAiB6tB,EAAO6C,MAYkC,KAX1D58B,WAW0D,OAT1DkC,KAAOu6B,EAAKv6B,GAS8C,KANvDg2B,YAMuD,OALvD2E,gBAKuD,OAHvDvB,YAAiC/B,EAAY31B,SAGU,KAFvDk5B,cAEuD,OAkB1DC,UAAY,SAAC3P,GAChB,EAAKyP,WAAazP,GAnB2C,KAsB1D4P,MAtB0D,sBAsBlD,sBAAAzf,EAAA,sDACX,EAAK2a,OAAO7T,KAAK,2BACjB,EAAK4Y,QAAQlD,EAAOmD,aAFT,SAKP5D,EAAS,EAAKtB,KAAK/1B,KAAM,EAAK+1B,KAAKzzB,QAL5B,uDAOP,EAAK2zB,OAAOl4B,MAAM,mCAAlB,MACA,EAAKm9B,SAAL,MARO,2BAYX,EAAKjF,OAAO7T,KAAK,4BACjB,EAAK4Y,QAAQlD,EAAOqD,QACpB,EAAKV,QAAQW,KAAKC,QAAQ,GAAMhuB,OAAM,SAACzJ,GACnC,EAAKqyB,OAAO7T,KAAK,iCAAkCxe,GACnD,EAAKs3B,SAASt3B,MAhBP,yDAtBkD,KA0C1D6xB,IA1C0D,sBA0CpD,4BAAAna,EAAA,yDACT,EAAK2a,OAAO7T,KAAK,+CACjB,EAAK4Y,QAAQlD,EAAOwD,WAEF,OADZC,EAAaC,EAAmB,EAAKzF,KAAM,EAAKE,SAH7C,iCAKqBiD,EACtB,CACIz2B,KAAM,EAAKszB,KAAK5oB,IAChBhN,KAAM,EAAK41B,KAAK/1B,KAAKG,KACrBD,KAAM,EAAK61B,KAAK/1B,KAAKE,KACrBu7B,UAAW,EAAK1F,KAAKzzB,OAAOrC,GAC5By7B,cAAe,EAAK3F,KAAK/1B,KAAK27B,cAElC,EAAKtC,YAAYuC,OAbhB,OAKL,EAAK7F,KAAKa,QALL,OAeL,EAAKX,OAAO7T,KAAK,0BAA2B,EAAK2T,KAAKa,SAfjD,wBAiBL,EAAKb,KAAKa,QAAU2E,EAAW3E,QAC/B,EAAKb,KAAK8F,SAAU,EACpB,EAAK9F,KAAK+F,cAAgBP,EAAWO,cACrC,EAAK7F,OAAO7T,KAAK,iCAAkCmZ,GApB9C,eAuBT,EAAKP,QAAQlD,EAAOzC,YAvBX,UAwBH,EAAK0G,SAxBF,4CA1CoD,KAuE1D3C,OAvE0D,sBAuEjD,sBAAA9d,EAAA,6DACZ,EAAK+d,YAAYD,SADL,SAEN,EAAK4C,sBAFC,OAGZ,EAAKhB,QAAQlD,EAAOmE,UAHR,2CAvEiD,KA6E1DC,MAAQ,WACX,EAAK7C,YAAc77B,IAAM85B,YAAY31B,SACrC,EAAKk5B,SAAW,CACZhO,MAAO,CACH1sB,KAAM,EACN25B,OAAQ,EACRnN,QAAS,KAnF4C,KAwGvDqP,oBAAsB,WAC5B,OAAO,IAAI98B,SAAc,SAAC0b,GACtB4gB,EAAsB,EAAKzF,KAAM,EAAKE,QAClC,EAAKF,KAAKa,QACV1mB,YAAW,WAAO,IAAD,GCrJ1B,SAAP,mCDsJoBisB,CAAmB,UAAC,EAAKpG,KAAKa,eAAX,aAAC,EAAoB4C,WACnCnsB,OAAM,SAACzJ,GACJ,EAAKqyB,OAAOhB,KACR,oCACArxB,MAGP2hB,SAAQ,WACL3K,SArIK,KAyIjBA,QAxHR5c,KAAKi4B,OAAS,IAAIrB,EACd52B,KAAKy8B,QAAQxE,OAAOpB,MACpB,WACA72B,KAAKiC,IAETjC,KAAKi4B,OAAO7T,KAAK,qCAAsC2T,GAEvD/3B,KAAK48B,WAAa,CAEdwB,aAAc,SAACC,KACfC,QAAS,SAAC3G,KACV+D,WAAY,SAACh7B,KACb69B,MAAO,SAACt9B,EAAKkG,M,4CA2ErB,SAAmBvB,GAETA,aAAawyB,GAAiBxyB,EAAE44B,aACjCtC,EAAa/3B,SAASnE,KAAK+3B,KAAKzzB,OAAOlC,QAExCpC,KAAKi4B,OAAOhB,KAAK,mDACjBj3B,KAAKg+B,uBAGHp4B,aAAag0B,IACf55B,KAAKiM,OAAS6tB,EAAO/5B,MACrBC,KAAKD,MAAQ6F,EACb5F,KAAK48B,WAAW0B,QAAQ14B,M,qBA0BhC,SAAkBqG,GACdjM,KAAKiM,OAASA,EACdjM,KAAK48B,WAAWwB,aAAanyB,K,iCAGjC,SACI6vB,EACA35B,EACAs8B,GAEA,OAAO,aACHt8B,OACA25B,SACAnN,QAAUmN,EAAS35B,EAAQ,KACV,MAAbs8B,EAAoB,GAAK,CAAEA,kB,KA1JbjC,EAMXv6B,GAAK,E,IEjDMy8B,G,4MAChBC,Y,IAEHZ,O,sBAAS,4BAAAzgB,EAAA,sDACZ,EAAK2a,OAAO7T,KAAK,oCACjB,EAAKwa,yBAEL,EAAK3G,OAAO7T,KAAK,kCAAmC,EAAKua,QACzD,EAAKE,mBACIze,EAAI,EAND,YAMIA,EAAI,EAAKue,OAAOx7B,QANpB,sBAQJ,EAAK40B,KAAK+F,cAAc1d,GAAG0b,OAAS,EAAK6C,OAAOve,GAAGje,MAC5B,GAAvB,EAAKw8B,OAAOve,GAAGje,MATX,iCAWE,EAAK28B,YAAY,CAAErD,MAAO,EAAKkD,OAAOve,GAAI9d,MAAO8d,IAXnD,OAYJ,EAAK6X,OAAO7T,KAAZ,iBAA2BhE,EAA3B,gBACA,EAAKye,mBAbD,QAM4Bze,IAN5B,uBAiBZod,EAAsB,EAAKzF,KAAM,EAAKE,QAjB1B,4C,4DAoBhB,WAAkC,IAAD,EAC7Bj4B,KAAK2+B,ONvBN,SACH38B,EACA+8B,KAGKA,GAAiBA,EAAgB/8B,EAAKG,MAAyB,GAAjB48B,KAC/CA,EAAgB/8B,EAAKG,MAKzB,IAFA,IAAMw8B,EAAiB,GACjBK,EAAQtrB,KAAKurB,KAAKj9B,EAAKG,KAAO48B,GAC3B3e,EAAI,EAAGA,EAAI4e,EAAO5e,IAAK,CAC5B,IAAMqb,EAAQz5B,EAAK8R,MACfirB,EAAgB3e,EAChBA,IAAM4e,EAAQ,EAAIh9B,EAAKG,KAAO48B,GAAiB3e,EAAI,IAEvDue,EAAO5vB,KAAK0sB,GAMhB,OAHqB,GAAjBkD,EAAOx7B,QACPw7B,EAAO5vB,KAAK/M,EAAK8R,MAAM,IAEpB6qB,EMCWnB,CACVx9B,KAAK+3B,KAAK/1B,KADA,UAEVhC,KAAK+3B,KAAKa,eAFA,aAEV,EAAmBsG,WAGL,MADC1B,EAAmBx9B,KAAK+3B,KAAM/3B,KAAKi4B,UAElDj4B,KAAK+3B,KAAK+F,cAAgB99B,KAAK2+B,OAAO10B,KAClC,SAAC5G,EAAOf,GAAR,MAAkC,CAC9Bw5B,OAAQ,EACRx5B,aAKZtC,KAAKm/B,yB,iCAKT,SAA8BrD,EAAgBx5B,GAC1CtC,KAAK+3B,KAAK+F,cAAcx7B,GAAOw5B,OAASA,EACxC97B,KAAKm/B,yB,kCAGT,WAAgC,INtBXv7B,EMsBU,OAC3B5D,KAAK68B,SAAW,CACZhO,MAAO7uB,KAAKo/B,qBNxBCx7B,EMyBM5D,KAAK+3B,KAAK+F,cNxB9Bl6B,EAAKy7B,QAAO,SAAC3+B,EAAMo7B,GAAP,OAAkBp7B,EAAOo7B,EAAOA,SAAQ,IMyB/C97B,KAAK+3B,KAAK/1B,KAAKG,KAAO,GAE1Bw8B,OAAQ3+B,KAAK2+B,OAAO10B,KAAI,SAACwxB,EAAOn5B,GAC5B,OAAO,EAAK88B,oBACR,EAAKrH,KAAK+F,cAAcx7B,GAAOw5B,OAC/BL,EAAMt5B,MACN,OAIZnC,KAAK48B,WAAWlB,WAAW17B,KAAK68B,Y,8BAGpC,YN7BG,SAAsB9E,EAAYE,GACrC,IAAMC,EAASJ,EAAgBC,GAC/B,IACIxd,aAAaG,QAAQwd,EAAQ7d,KAAKM,UAAUod,IAC9C,MAAOJ,GACLM,EAAOhB,KACH,IAAImB,EACAC,EAAkBiH,eADtB,+BAE4BpH,MMsBhCsF,CAAmBx9B,KAAK+3B,KAAM/3B,KAAKi4B,Y,GAlECuE,GCVvB+C,G,wMACjB,WAA4BC,GAA5B,uGACWjE,EAAgB,UACnBv7B,KAAK+3B,KAAKa,eADS,aACnB,EAAmB4C,UACnBgE,GACA,SAACC,GACG,EAAKC,oBAAoBD,EAAE3D,OAAQ0D,EAAUl9B,SAEjDtC,KAAKq7B,YAAYuC,QAPzB,gD,4DAD+Bc,ICAdiB,G,wMACjB,WAA4BH,GAA5B,yGACWzD,EAAiB,GAAD,iBAChB/7B,KAAK+3B,KAAKa,eADM,aAChB,EAAmBgH,WAAW,IADd,UAEnB5/B,KAAK+3B,KAAKa,eAFS,aAEnB,EAAmBoD,WACnBwD,GACA,SAACC,GACG,EAAKC,oBAAoBD,EAAE3D,OAAQ0D,EAAUl9B,SAEjDtC,KAAKq7B,YAAYuC,QARzB,gD,4DADgCc,ICWfmB,G,WAWjB,WAAYC,GAAY,IAAD,gCAVhB7H,YAUgB,OARhBmF,UAQgB,OALf94B,YAKe,OAJfgpB,WAIe,OAFfrrB,KAAO49B,EAAc59B,GAEN,KA0DhB4S,OAAS,SAAC1F,GACb,OAAO,IAAIjO,SAAgB,SAAC0b,GACxB,QAAmBjc,GAAf,EAAK2D,OAIL,MAHA,EAAK2zB,OAAOhB,KAAZ,gDAGM,IAAImB,EACNC,EAAkB0H,iBAClB,uBAIR,EAAKzS,MAAM0S,SAAW,SAACC,GACnB,IAAMv8B,EAASu8B,EAAGv8B,OACbu8B,GAAOv8B,GAAWA,EAAOw8B,OAC1Bx8B,EAAOw8B,MAAM/8B,OAAS,GACtByZ,EACI4C,MAAMC,KAAK/b,EAAOw8B,OAAOj2B,KACrB,SAACjI,GAAD,OACI,EAAKm+B,iBAAiB,CAClB/9B,KAAMu0B,EAAS30B,KACfsC,OAAQ,EAAKA,OACb6K,IAAKA,EACLnN,KAAMA,EACNE,KAAMF,EAAKE,KACX47B,cAAe,GACfD,SAAS,SAOjC,EAAKvQ,MAAMjqB,MAAQ,GACnB,EAAKiqB,MAAM8S,YA5FI,KAgGhBC,gBAAkB,YT5CtB,SAA0BpI,GAC7B,IAAK,IAAI7X,EAAI,EAAGA,EAAI7F,aAAapX,OAAQid,IAAK,CAC1C,IAAMjW,EAAMoQ,aAAapQ,IAAIiW,GAC7B,GAAIjW,GAAOA,EAAIxF,WArCC,kBAsCZ,IACI4V,aAAa4d,WAAWhuB,GAC1B,MAAOwtB,GACLM,EAAOhB,KACH,IAAImB,EACAC,EAAkBC,gBADtB,uCAEoCnuB,OSmChDm2B,CAAiB,EAAKrI,SAhGtBj4B,KAAKi4B,OAAS,IAAIrB,EAAOkJ,EAAES,SAAU,WACrCvgC,KAAKi4B,OAAO7T,KAAZ,sCAAgD0b,EAAES,WAElDvgC,KAAKo9B,KAAO,IAAIlG,EAAK4I,EAAEU,iBAEvB,IAAMlT,EAAQ9L,SAASif,cAAc,SACrCnT,EAAMlrB,KAAO,OACbkrB,EAAMrrB,GAAN,uBAA2BjC,KAAKiC,IAChCqrB,EAAMoT,UAAW,EACjBpT,EAAMjoB,QAAS,EACfmc,SAASmf,KAAKC,YAAYtT,GAC1BttB,KAAKstB,MAAQA,E,oDAGjB,SAAiByK,GAKb,OAJIA,EAAK31B,KAAQu0B,EAASloB,OAIlBspB,EAAKzzB,OAAOlC,MAChB,KAAKs0B,EAAWyF,MACZ,OAAO,IAAIoD,GAAMxH,EAAM/3B,MAC3B,KAAK02B,EAAW0F,OACZ,OAAO,IAAIuD,GAAO5H,EAAM/3B,MAC5B,QACI,MAAM,IAAIw6B,EACN,uBACAzC,EAAKzzB,W,uBAMrB,SAAiBm7B,GAEb,GADAz/B,KAAKsE,OAASm7B,OACL9+B,GAAL8+B,EAOJ,GAFAz/B,KAAKi4B,OAAO7T,KAAZ,uBAAyCqb,QAElB9+B,GAAnB8+B,EAAExG,eAA8BwG,EAAExG,cAAc91B,OAAS,EAAG,CAC5D,IAAM09B,EAAYpB,EAAExG,cACfhvB,KAAI,SAACoZ,GACF,MAAO,IAAMA,KAEhBb,KAAK,KACVxiB,KAAKi4B,OAAO7T,KAAZ,qCAA+Cyc,IAC/C7gC,KAAKstB,MAAM5L,aAAa,SAAUmf,QAElC7gC,KAAKi4B,OAAO7T,KAAZ,gCACApkB,KAAKstB,MAAMwT,gBAAgB,eAhB3B9gC,KAAKi4B,OAAO7T,KAAZ,oC,KAhDSyb,GAKF59B,GAAK,E,0JCDlB+D,GAAYC,cAAW,iBAAO,CAChCgF,IAAK,CACDC,OAAQ,EACRC,IAAK,OACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,OACNC,OAAQ,EACRjE,SAAU,SAEdkE,MAAO,CACHlE,SAAU,WACV+D,OAAQ,GACRF,IAAK,OACLI,OAAQ,KACRH,MAAO,GAEX,UAAW,CACP,yCAA0C,CACtChF,MAAO,UAKJ,SAAS26B,GAAat6B,GACjC,MAAwBrB,oBAAS,GAAjC,mBAAOhB,EAAP,KAAa48B,EAAb,KACA,EAA4B57B,mBAAS,GAArC,mBAAO+3B,EAAP,KAAe8D,EAAf,KACMj6B,EAAUhB,KACV0B,EAAWC,eAMXu5B,GALiBr5B,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,aAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAEuBG,uBACxB,kBAAMH,EAASkjB,kBACf,CAACljB,KAECy5B,EAAoBt5B,uBACtB,kBAAMH,EAASouB,kBACf,CAACpuB,IAGLhC,qBAAU,WACNu7B,EAAUx6B,EAAM26B,UACjB,CAAC36B,EAAM26B,SAEV,IAAMC,EAAgB,WACdj9B,IACe,IAAX+4B,EACA12B,EAAM66B,eAEN76B,EAAMguB,eAalB,OACI,kBAACzvB,GAAA,EAAD,CAAYE,QAAM,EAACC,KAAMsB,EAAM86B,cAC3B,kBAACC,GAAA,EAAD,CACIC,aAActE,EACdn2B,QAAS,CACLwE,MAAOxE,EAAQwE,OAEnB3E,UAAWG,EAAQiE,IACnBy2B,UAAsB,IAAXvE,EACXh2B,MAAM,WAEN,kBAACw6B,GAAA,EAAD,CAAUv9B,KAAMA,GAAQG,KAAaO,aACrC,kBAAC88B,GAAA,EAAD,CACIC,UAAU,6BACVx8B,QAAQ,EACRy8B,aAAa,2BACb56B,KACI,kBAAC66B,GAAA,EAAD,CACIC,UACKz9B,KAAaO,YAAc,kBAAC,KAAD,QAIxCkF,QA3BI,WAChBg3B,GAAQ,IA2BIiB,SAAU,CACN75B,QAAS,kBACJ7D,KAAaO,YAAcu8B,KAChCl6B,MAAO,aAEX6iB,OArCG,WACfgX,GAAQ,IAqCI58B,KAAMA,GAELG,KAAaO,YACV,kBAACo9B,GAAA,EAAD,CACI/3B,IAAI,aACJjD,KAAM,kBAAC,KAAD,MACNi7B,aAAW,EACXL,aAAa,2BACb15B,QAAS,kBAAMi5B,KACfp5B,MAAO,8BAGb1D,KAAaO,YACX,kBAACo9B,GAAA,EAAD,CACI/3B,IAAI,eACJjD,KAAM,kBAAC,KAAD,MACNi7B,aAAW,EACXL,aAAa,2BACb15B,QAAS,kBAAM3B,EAAMguB,cACrBxsB,MAAO,6BAGf,kBAACi6B,GAAA,EAAD,CACI/3B,IAAI,YACJjD,KAAM,kBAAC,KAAD,MACNi7B,aAAW,EACXL,aAAa,2BACb15B,QAAS,kBAAM84B,KACfj5B,MAAO,6BAEX,kBAACi6B,GAAA,EAAD,CACI/3B,IAAI,UACJjD,KAAM,kBAAC,KAAD,MACNi7B,aAAW,EACXL,aAAa,2BACb15B,QAAS,kBAAM+4B,KACfl5B,MAAO,gC,yWC/HzBjC,GAAYC,cAAW,SAACC,GAAD,MAAY,CACrCk8B,gBAAiB,CACb96B,SAAU,WACViE,OAAQ,GAEZsxB,SAAU,CACNxR,WAAY,mBACZ9f,OAAQ,EACRR,OAAQ,OACRzD,SAAU,WACVgE,KAAM,EACNH,IAAK,GAETk3B,kBAAmB,CACf/6B,SAAU,YAEdg7B,WAAY,CACR51B,WAAY,GACZnE,YAAa,IAEjBgN,SAAS,cACLgtB,UAAW,aACVr8B,EAAMI,YAAY4U,GAAG,MAAQ,CAC1B0V,WAAY,SACZjB,SAAU,SACVC,aAAc,aAGtB4S,cAAe,CACXr7B,MAAOjB,EAAMe,QAAQ8c,QAAQQ,MAEjCke,YAAa,CACTt7B,MAAOjB,EAAMe,QAAQgd,QAAQM,KAC7Bge,UAAW,aAEfG,cAAe,CACXh2B,WAAYxG,EAAM0F,QAAQ,GAC1Bb,OAAQ,IAEZ+M,OAAQ,CACJvM,OAAQ,GAEZo3B,kBAAmB,CACfp2B,QAAS,OACToD,WAAY,cAaL,SAASizB,GAAT,GAA0D,IAApCtL,EAAmC,EAAnCA,SAAUuL,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,SAClD97B,EAAUhB,KACVE,EAAQa,eACd,EC7EG,SAAmBuwB,GACtB,IAAMyL,EAAcC,iBAAO,MACrBC,EAAeD,iBAAO,MACtBE,EAAiBF,iBAAO,GAC9B,EAA4B59B,mBAASkyB,EAASrrB,QAA9C,mBAAOA,EAAP,KAAeuP,EAAf,KACA,EAA0BpW,mBAASkyB,EAASv3B,OAA5C,mBAAOA,EAAP,KAAcm9B,EAAd,KACA,EAAgC93B,mBAAS,MAAzC,mBAAOy3B,EAAP,KAAiBsG,EAAjB,KACMz7B,EAAWC,eAEXkG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,aAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAGLhC,qBAAU,WACNq9B,EAAYxlB,QAAUsb,KAAKC,MAC3BmK,EAAa1lB,QAAUsb,KAAKC,MAE5BxB,EAASwF,UAAU,CACfsB,aAAc,SAACC,GACX7iB,EAAU6iB,IAEdC,QAAS,SAAC3G,GACNuF,EAASvF,GACTnc,EAAU8b,EAASrrB,SAEvByvB,WAAY,SAACh7B,GACTyiC,EAAYziC,IAEhB69B,MAAO,SAACt9B,EAAKkG,GACT0G,EAAe,MAAO,QAAS5M,EAAKkG,MAIxC8E,IAAW6tB,EAAO6C,OAClBrF,EAASyF,UAEd,IAGH,MAA0BjsB,IAAMsyB,SAAQ,WACpC,GACgB,MAAZvG,GACkB,MAAlBA,EAAShO,OACgB,MAAzBgO,EAAShO,MAAMiN,OAEf,MAAO,CAAC,EAAG,GACf,IAAMrQ,GAAYoN,KAAKC,OAASiK,EAAYxlB,SAAW,IAAM,IACvD8lB,GAAiBxK,KAAKC,OAASmK,EAAa1lB,SAAW,IAAM,IAC7D+d,EACFuB,EAAShO,MAAMiN,OAASoH,EAAe3lB,QACjC7J,KAAK2M,OACAwc,EAAShO,MAAMiN,OAASoH,EAAe3lB,SACpCkO,GAER,EACJ6X,EACFzG,EAAShO,MAAMiN,OAAS,EAClBpoB,KAAK2M,MAAMwc,EAAShO,MAAMiN,OAASuH,GACnC,EAIV,OAFAH,EAAe3lB,QAAUsf,EAAShO,MAAMiN,OACxCiH,EAAYxlB,QAAUsb,KAAKC,MACpB,CAACwC,EAAKgI,KACd,CAACzG,EAAUkG,EAAaE,IAxB3B,mBAAOM,EAAP,KAAcC,EAAd,KAiCA,MAAO,CAAEv3B,SAAQlM,QAAO88B,WAAU0G,QAAOC,WAAUC,MAPrC,WACVnM,EAAS4G,QACT6E,EAAYxlB,QAAUsb,KAAKC,MAC3BmK,EAAa1lB,QAAUsb,KAAKC,MAC5BxB,EAASyF,UDM+C2G,CACxDpM,GADIrrB,EAAR,EAAQA,OAAQlM,EAAhB,EAAgBA,MAAO88B,EAAvB,EAAuBA,SAAU0G,EAAjC,EAAiCA,MAAOC,EAAxC,EAAwCA,SAAUC,EAAlD,EAAkDA,MAG5CE,EAAaC,aAAc19B,EAAMI,YAAYC,KAAK,OACxD,EAA8BnB,oBAAS,GAAvC,mBAAOoH,EAAP,KAAgBiP,EAAhB,KAEMooB,EAAaT,mBAAQ,WACvB,IAAIU,EACJ,OAAQ73B,GACJ,KAAK6tB,EAAOwD,UACR,OAAO,sDACX,KAAKxD,EAAO/5B,MAMR,OALA+jC,EAAS/jC,EAAMF,QACXE,aAAiBq4B,IACjB0L,EAAS/jC,EAAMgkC,QAAQ,KAIvB,yBAAKl9B,UAAWG,EAAQy7B,aACnBqB,EACD,8BAGZ,KAAKhK,EAAOzC,WACR,GAAIwF,EACA,OACI,uCAtCH,SAAC0G,EAAOC,EAAUQ,GACnC,IAAIC,EAAiBT,EAKrB,OAJKQ,IACDC,EAAiBV,GAGf,GAAN,OAAUrjB,aAAa+jB,GAAkC,GAAzD,OAiC4BC,CACAX,EACAC,EACAX,GAJR,+BAKa3iB,aACL2c,EAAShO,MAAMiN,QANvB,qBAOa5b,aACL2c,EAAShO,MAAM1sB,MARvB,cASW06B,EAAShO,MAAMF,QAAQpO,QAAQ,GAT1C,MAaR,MACJ,QACI,OAAO,gDAEhB,CAACtU,EAAQlM,EAAO88B,EAAU0G,EAAOC,EAAUX,IAExCsB,EAAcf,mBAChB,kBACI9L,EAASS,KAAK8F,UAAY8F,EACtB,kBAACvd,GAAA,EAAD,CACIvf,UAAWG,EAAQ07B,cACnBvgC,KAAK,QACL8S,MAAO,6BAEX,OACR,CAAChJ,EAAQ03B,IAGPS,EAAchB,mBAChB,kBACIn3B,IAAW6tB,EAAOzC,YAAcwF,EAC5B,yBACI/xB,MAAO,CACHpE,gBAC2B,UAAvBR,EAAMe,QAAQ7E,KACRiiC,mBAAQn+B,EAAMe,QAAQ4L,QAAQ0R,KAAM,IACpC+f,kBAAOp+B,EAAMe,QAAQyJ,WAAWoZ,MAAO,IACjD1jB,MAAOy2B,EAAShO,MAAMF,QAAU,KAEpC9nB,UAAWG,EAAQ61B,WAEvB,OACR,CAAC5wB,EAAQ4wB,EAAU32B,IAWjBq+B,EAAkBnB,mBAAQ,WAC5B,OAAIn3B,IAAW6tB,EAAO/5B,MAEd,kBAACyT,GAAA,EAAD,CAASvL,MAAO,gBACZ,kBAACwL,GAAA,EAAD,CAAYtH,aAAW,SAAS/D,QAAS,kBAAMq7B,MAC3C,kBAAC,KAAD,QAOZ,kBAACjwB,GAAA,EAAD,CAASvL,MAAO,kCACZ,kBAACwL,GAAA,EAAD,CACItH,aAAW,SACXD,SAAUM,EACVpE,QAAS,kBAvBrBqT,GAAW,QACX6b,EAAS8D,SAAShsB,MAAK,WACnBqM,GAAW,GACXqnB,EAASxL,QAsBD,kBAAC,KAAD,UAIb,CAACrrB,EAAQO,IAEZ,OACI,oCACI,yBAAK3F,UAAWG,EAAQq7B,mBACnB+B,EACD,kBAAC3xB,GAAA,EAAD,CAAU5L,UAAWG,EAAQo7B,gBAAiB1vB,QAAM,GAChD,kBAAC8xB,GAAA,EAAD,CAAUjvB,SAAU+hB,EAASS,KAAK71B,KAAMuiC,UAAQ,IAChD,kBAAC7xB,GAAA,EAAD,CACI/L,UAAWG,EAAQs7B,WACnBzvB,QACI,yBAAKhM,UAAWG,EAAQ27B,mBACpB,yBAAK97B,UAAWG,EAAQuO,UACnB+hB,EAASS,KAAK71B,MAEnB,6BAAMiiC,IAGd72B,UAAWu2B,IAEf,kBAAC/wB,GAAA,EAAD,CAAyBjM,UAAWG,EAAQ8Q,QACvCysB,KAIb,kBAAClyB,GAAA,EAAD,O,gEEtMNrM,GAAYC,cAAW,SAACC,GAAD,MAAY,MAQ1B,SAASw+B,GAAT,GAA4D,IAYhDC,EAZW76B,EAAoC,EAApCA,SAAUE,EAA0B,EAA1BA,QAAS46B,EAAiB,EAAjBA,cAE/Cl9B,GADU1B,KACC2B,gBACXkG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,aAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAECm9B,EAAiBh9B,uBAAY,kBAAMH,EAASkQ,kBAAmB,CACjElQ,IA6BEtD,EAAO2F,QAAQD,GACf7H,EAAKmC,EAAO,+BAA4BzD,EAE9C,OACI,kBAACmkC,GAAA,EAAD,CAAM7iC,GAAIA,EAAImC,KAAMA,EAAM0F,SAAUA,EAAUE,QAASA,GACnD,kBAACwJ,GAAA,EAAD,CAASvL,MAAO,8FACZ,kBAACwM,GAAA,EAAD,CAAUrM,SAhCCu8B,EAgCsB,kBA1BzCC,EAAcvE,uBACdrxB,KAAI8I,OAAO,gBACN1I,MAAK,SAAC7O,GAC2B,IAA1BA,EAASE,QAAQX,KACjB+N,EAAe,MAAO,QAAS,6CAAW,WAE1CA,EACI,MACA,QACAtN,EAASE,QAAQQ,IACjB,WAGR4jC,OAEHx1B,OAAM,SAACtP,GACJ8N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,aAtB1B,WAC5BmK,IACA26B,OA+BY,kBAAChyB,GAAA,EAAD,KACI,kBAACoyB,GAAA,EAAD,CAAal7B,SAAS,WAF9B,sDCxChB,IAAMm7B,GAAal0B,IAAMm0B,YAAW,SAAoBx+B,EAAOmX,GAC3D,OAAO,kBAACsnB,GAAA,EAAD,eAAOC,UAAU,KAAKvnB,IAAKA,GAASnX,OAGzCT,GAAYC,cAAW,SAACC,GAAD,YAAY,CACrCk/B,cAAe,CACXj6B,IAAK,iBACLG,KAAM,kBAEV+c,OAAQ,CACJ/gB,SAAU,YAEd+9B,KAAM,CACFA,KAAM,GAEVC,MAAO,CACH31B,WAAY,WACZ2e,eAAgB,YAEpBiX,OAAQ,CACJr6B,OAAQ,EACRE,MAAO,GACPC,OAAQ,GACRE,OAAQ,KACRjE,SAAU,QACVk+B,MAAO,gBAEXC,YAAa,CACTp/B,QAAS,GAEbq/B,eAAa,oBACRx/B,EAAMI,YAAY4U,GAAG,MAAQ,CAC1B9U,MAAO,IACPu/B,UAAW,wBAHN,yBAKA,GALA,4BAMG,eANH,GAQbC,WAAY,CACRpV,UAAW,eACXnF,WAAYnlB,EAAMolB,YAAY7rB,OAAO,YAAa,CAC9CgsB,SAAUvlB,EAAMolB,YAAYG,SAASoa,YAG7CC,mBAAoB,CAChBtV,UAAW,kBAEf1S,QAAS,CACLgO,YAAa5lB,EAAM0F,QAAQ,GAC3B4iB,aAActoB,EAAM0F,QAAQ,QAIrB,SAASm6B,GAAT,GAOX,IAAD,EANC3hC,EAMD,EANCA,KACA4F,EAKD,EALCA,QACAyqB,EAID,EAJCA,WACAuR,EAGD,EAHCA,SACAlD,EAED,EAFCA,SACA8B,EACD,EADCA,cAEM59B,EAAUhB,KACVE,EAAQa,eACR48B,EAAaC,aAAc19B,EAAMI,YAAYC,KAAK,OACxD,EAAgCnB,oBAAS,GAAzC,mBAAOgL,EAAP,KAAiBW,EAAjB,KACA,EAAsC3L,oBAAS,GAA/C,mBAAOy9B,EAAP,KACA,GADA,KACgC/xB,IAAM1L,SAAS,OAA/C,mBAAO0E,EAAP,KAAiBm8B,EAAjB,KAUMthB,EAAQ,SAAC/e,EAAGsgC,GACC,kBAAXA,EACAl8B,IAEA+G,GAAY,IAOpB,OACI,oCACI,kBAAC2zB,GAAD,CACI16B,QAlBc,WACtBi8B,EAAY,OAkBJrB,cAAeA,EACf96B,SAAUA,IAEd,kBAACiD,GAAA,EAAD,CACI/F,QAAS,CACL6iB,UAAW7iB,EAAQs+B,MACnBt1B,KAAMm2B,KAAW,gBACZn/B,EAAQo+B,eAAiBzB,KAGlC98B,UAAWs/B,KAAW,gBACjBn/B,EAAQu+B,QAAU5B,IAEvBA,WAAYA,EACZv/B,KAAMA,EACN4F,QAAS2a,EACTyhB,oBAAqBpB,GACrBqB,qBAAsBj2B,EACtBk2B,cAAel2B,EACfm2B,sBAAuBn2B,EACvBo2B,mBAAoBp2B,GAEpB,kBAACq2B,GAAA,EAAD,CACIr2B,SAAUA,GAAYuzB,EACtBpxB,SAhCU,SAACnI,EAAO4H,GAC9BjB,EAAYiB,KAiCA,kBAAC00B,GAAA,EAAD,CAAQ7/B,UAAWG,EAAQqhB,QACvB,kBAACse,GAAA,EAAD,CAASC,gBAAc,EAAC//B,UAAWG,EAAQ8W,SACvC,kBAACtK,GAAA,EAAD,CAASvL,MAAO,4BACZ,kBAACwL,GAAA,EAAD,CACItM,MAAM,UACNiB,QAASuc,EACTxY,aAAW,SAEX,kBAAC,KAAD,QAGR,kBAACuI,GAAA,EAAD,CACIxB,QAAQ,KACR/L,MAAM,UACNN,UAAWG,EAAQq+B,MAHvB,4BAOA,kBAAC7xB,GAAA,EAAD,CAASvL,MAAO,4BACZ,kBAACwL,GAAA,EAAD,CACItM,MAAM,UACNiB,QAtEN,SAACgC,GACvB67B,EAAY77B,EAAMvE,iBAuEU,kBAACghC,GAAA,EAAD,QAGR,kBAACrzB,GAAA,EAAD,CAASvL,MAAO,kCACZ,kBAACwL,GAAA,EAAD,CACItM,MAAM,UACNiB,QAASqsB,GAET,kBAAC,KAAD,SAGNkP,GACE,kBAACnwB,GAAA,EAAD,CAASvL,MAAO,yCACZ,kBAACwL,GAAA,EAAD,CACItM,MAAM,UACNiB,QAAS,kBAAM2I,GAAaX,KAE5B,kBAAC,KAAD,CACIvJ,UAAWs/B,MAAU,oBAChBn/B,EAAQ8+B,mBAAqB11B,GADb,eAEhBpJ,EAAQ4+B,YAAa,GAFL,UAU7C,kBAACkB,GAAA,EAAD,CAAkBjgC,UAAWG,EAAQy+B,aACjC,kBAACx4B,GAAA,EAAD,CAAepG,UAAWG,EAAQ0+B,eAC9B,kBAACpzB,GAAA,EAAD,CAAMzL,UAAWG,EAAQy+B,aACpBO,EAAS/7B,KAAI,SAACqtB,GAAD,OACV,kBAACsL,GAAD,CACIE,SAAUA,EACV34B,IAAKmtB,EAASr1B,GACd4gC,YAAaA,EACbvL,SAAUA,aC/LnC,SAASyP,KACpB,MAAkC3hC,mBAAS,IAA3C,mBAAO4hC,EAAP,KAAkBC,EAAlB,KACA,EAAwC7hC,oBAAS,GAAjD,mBAAOm8B,EAAP,KAAqB2F,EAArB,KACMnkC,EAAWyE,cAAY,SAACjE,GAAD,OAAWA,EAAMD,SAASP,YACjDuB,EAASkD,cAAY,SAACjE,GAAD,OAAWA,EAAMD,SAASe,iBAC/CwiB,EAAUrf,cAAY,SAACjE,GAAD,OAAWA,EAAMuF,WAAW+d,WAClDpiB,EAAO+C,cAAY,SAACjE,GAAD,OAAWA,EAAMuW,UAAUrV,QAC9C1D,EAAW+a,eACXpU,EAAWC,eACXkG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,aAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAGCy/B,EAAiB/D,mBACnB,kBACItsB,KAAWtS,WAAWzD,EAASgW,WAC/B8P,GACa,KAAb9jB,IACJ,CAAChC,EAASgW,SAAU8P,EAAS9jB,IAG3B6hC,EAAgBxB,mBAAQ,WAC1B,OAAO,IAAIvD,GAAc,CACrBU,SAAU,OACVC,gBAAiB,MAEtB,IAEH96B,qBAAU,WACNk/B,EAAcwC,UAAU9iC,KACzB,CAACA,IAEJ,IAIMmwB,EAAa,WACfyS,GAAgB,GAGhBtC,EACK/vB,OAAOpQ,GACP2K,MAAK,SAACi4B,GACHH,GAAgB,GAChBD,GAAa,SAACD,GAAD,4BAAmBA,GAAnB,YAAiCK,UAEjDh4B,OAAM,SAACzJ,GACAA,aAAawyB,EACbvqB,EAAe,MAAO,QAASjI,EAAEm+B,QAAQ,IAAK,WAE9Cl2B,EACI,MACA,QACA,6CAAYjI,EAAE/F,QACd,aAYpB,OACI,oCACKsnC,GACG,oCACI,kBAACpG,GAAD,CACIQ,aAAcA,EACd9M,WAAYA,EACZ2M,OAAQ4F,EAAU7jC,OAClBm+B,aAAc,kBAAM4F,GAAgB,MAExC,kBAACnB,GAAD,CACInB,cAAeA,EACfoB,SAAUgB,EACV5iC,KAAMm9B,EACNuB,SApBD,SAACxL,GAChB2P,GAAa,SAACD,GAAD,OACTA,EAAU9iC,QAAO,SAACojC,GAAD,OAAOA,EAAErlC,IAAMq1B,EAASr1B,UAmB7BwyB,WAAYA,EACZzqB,QAAS,kBAAMk9B,GAAgB,Q,oEC9FvD,sXAAO,IAAMvT,EAAmB,CAC5B,MACA,MACA,MACA,MACA,OACA,MACA,QAES4T,EAAqB,CAC9B,MACA,OACA,MACA,MACA,OACA,OACA,OAESC,EAAqB,CAAC,MAAO,MAAM,QACnCC,EAAqB,CAAC,MAAO,MAAO,QACpCC,EAAmB,CAAC,OACpBC,EAAa,CAAC,KAAM,OACpBtoB,EAAoB,CAC7BuoB,KAAM,OACNC,IAAK,MACLC,GAAI,SACJC,IAAK,MACLC,IAAK,MACLlmB,EAAG,MACHmmB,EAAG,MACHC,GAAI,SACJC,IAAK,MACLC,WAAY,aACZC,GAAI,KACJC,KAAM,OACNC,IAAK,MACLC,KAAM,OACNC,GAAI,aACJC,IAAK,aACLC,KAAM,OACNC,IAAK,MACLC,GAAI,QACJC,IAAK,MACLC,IAAK,MACLC,KAAM,QAEGC,EAAY,CACrBC,MAAO,CAAC,MAAO,OAAQ,MAAO,MAAO,MAAO,OAC5CC,MAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,KAAM,OAAQ,MAAO,OAChEC,MAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,QACjEC,IAAK,CAAC,OACNC,KAAM,CAAC,MAAO,QACdC,IAAK,CAAC,MAAO,QACbC,MAAO,CAAC,MAAO,OAAQ,OACvB38B,KAAM,CAAC,MAAO,KAAM,QACpB48B,QAAS,CAAC,WACVC,IAAK,CAAC,MAAO,KAAM,MAAO,MAAO,MACjCC,OAAQ,CAAC,OACTC,QAAS,CAAC,OACV/B,IAAK,CAAC,OACNQ,GAAI,CAAC,MACLwB,OAAQ,CAAC,MACT7B,IAAK,CAAC,OACNlmB,EAAG,CAAC,KACJ2mB,GAAI,CAAC,KAAM,QAEFqB,EAAgB,CACzB3N,MAAO,eACPC,OAAQ,eACRC,MAAO,eACP0N,MAAO,qBACPzN,IAAK,yBACL0N,IAAK,qBACLzN,SAAU,WACV0N,GAAI,aAEKjhB,EAAgB,SAAC9mB,GAC1B,IAAM8c,EAAS9c,EAAKma,MAAM,KAAKiD,MAAMoU,cACrC,OAA0C,IAAtCC,EAAiB/S,QAAQ5B,GAClB,OACwC,IAAxCuoB,EAAmB3mB,QAAQ5B,GAC3B,SACwC,IAAxCwoB,EAAmB5mB,QAAQ5B,GAC3B,SACwC,IAAxCyoB,EAAmB7mB,QAAQ5B,GAC3B,SACgC,IAAhC2oB,EAAW/mB,QAAQ5B,GACnB,QACsC,IAAtC0oB,EAAiB9mB,QAAQ5B,GACzB,OACoD,IAApD5e,OAAOuf,KAAKN,GAAmBuB,QAAQ5B,IACvC,QAIFkrB,EAAY,SAAChoC,GACtB,IAAM8c,EAAS9c,EAAKma,MAAM,KAAKiD,MAAMoU,cACrC,OAA2C,IAAvCuV,EAAUQ,QAAQ7oB,QAAQ5B,IAMrBmrB,EAAiB,SAACjoC,GAE3B,MAAkB,QADHA,EAAKma,MAAM,KAAKiD,MAAMoU,eAInC0W,EAAa,CAAC,qBAAO,qBAAO,eAAM,eAAM,sBACxCC,EAAW,CAAC,eAAM,qBAAO,2BAAQ,wCACjCC,EAAe,CACjB,qBACA,qBACA,2BACA,qBACA,qBACA,qBACA,sBAGSC,EAAgB,SAACt+B,GAC1B,OAAOm+B,EAAWn+B,IAGTu+B,EAAc,SAACv+B,GACxB,OAAOo+B,EAASp+B,IAGPw+B,EAAkB,SAACroC,EAAM6J,GAClC,OAAa,IAAT7J,EACO,uBAAU6J,EAAS,GAAK,sBAE5Bq+B,EAAar+B,K,gCCpIxB,0MAIAy+B,IAAMC,OAAOC,KACbF,IAAMC,OAAOE,KAEb,IACMC,EAAiBlqC,IAAKoa,cAAc,YAC/B+vB,EAAWD,GAFE,gBAIjB,SAASE,IAEZD,GADAA,EAAWnqC,IAAKoa,cAAc,cALV,gBASjB,SAASiwB,EAAgBC,EAAMC,GAClC,OAAOT,IAAMQ,GAAME,GAAGL,GAAUI,OAAOA,GAGpC,SAASE,EAAiBnpC,GAC7B,IACIwoC,MAAQU,GAAGlpC,GAAMipC,SACnB,MAAOvlC,GACL,OAAO,EAEX,OAAO,I,gCC1BX,IA6GIuB,EA7GJ,6JA2BM0pB,EAAQ,CACVqY,MAAO,CACH/hC,MAAO,UACPD,KAAMokC,KAEVnC,MAAO,CACHhiC,MAAO,UACPD,KAAMqkC,KAEVnC,MAAO,CACHjiC,MAAO,UACPD,KAAMskC,KAEVnC,IAAK,CACDliC,MAAO,UACPD,KAAMukC,KAEVnC,KAAM,CACFniC,MAAO,UACPD,KAAMwkC,KAEVnC,IAAK,CACDpiC,MAAO,mBACPD,KAAMykC,KAEVnC,MAAO,CACHriC,MAAO,UACPD,KAAM0kC,KAEV/+B,KAAM,CACF1F,MAAO,UACPD,KAAM2kC,KAEVpC,QAAS,CACLtiC,MAAO,UACPD,KAAM4kC,KAEVpC,IAAK,CACDviC,MAAO,UACPD,KAAM6kC,KAEVpC,OAAQ,CACJxiC,MAAO,UACPD,KAAM8kC,KAEVpC,QAAS,CACLziC,MAAO,UACPD,KAAM+kC,KAEVjqC,KAAM,CACFmF,MAAO,UACPD,KAAMglC,KAEVrE,IAAK,CACD1gC,MAAO,UACPD,KAAMilC,KAEV9D,GAAI,CACAlhC,MAAO,UACPD,KAAMklC,KAEVvC,OAAQ,CACJ1iC,MAAO,UACPD,KAAMmlC,KAEVvqB,EAAG,CACC3a,MAAO,UACPD,KAAMolC,KAEVtE,IAAK,CACD7gC,MAAO,UACPD,KAAMqlC,KAEV9D,GAAI,CACAthC,MAAO,UACPD,KAAMslC,MAsDChI,IA7CE,SAAC/9B,GACd,IAAMP,EAAQa,MAER0lC,EAAahmC,EAAM8O,SAAS8G,MAAM,KAAKiD,MAAMoU,cAC/CD,EAAW,OACfrzB,OAAOuf,KAAKspB,KAAW7lC,SAAQ,SAACwc,IACc,IAAtCqpB,IAAUrpB,GAAGgB,QAAQ6rB,KACrBhZ,EAAW7T,MAGnB,IAAMsT,EAAgBrC,EAAM4C,GAAUvsB,KAMtC,OALAC,EAhBa,SAACjB,EAAOiB,GAAR,MACU,UAAvBjB,EAAMe,QAAQ7E,KAAmB+E,EAAQk9B,YAAQl9B,EAAO,IAehDulC,CAASxmC,EAAO2qB,EAAM4C,GAAUtsB,OACpCV,EAAMkmC,eACNlmC,EAAMkmC,cAAcxlC,GAIpB,oCACKV,EAAMg+B,UACH,kBAAC,IAAD,CACI59B,UAAWJ,EAAMI,UACjBiE,MAAO,CACHpE,gBAAiBS,IAGrB,kBAAC+rB,EAAD,CACIrsB,UAAWJ,EAAMmmC,cACjB9hC,MAAO,CACH3D,MAAOjB,EAAMe,QAAQyJ,WAAWoZ,WAK9CrjB,EAAMg+B,UACJ,kBAACvR,EAAD,CACIrsB,UAAWJ,EAAMI,UACjBiE,MAAO,CACH3D,MAAOA,Q,gCC7I/B,oEAAO,IAOM0lC,EAAmB,WAC5B,MAAO,CACHzqC,KAAM,uBAIDga,EAAiB,SAC1BnU,GAEA,OAAO,SAACP,EAAUysB,GACd,IAAM5wB,EAAQ4wB,IACd3S,SAASvZ,MACK,OAAVA,QAA4BtH,IAAVsH,EACZ1E,EAAMkE,WAAWQ,MACjBA,EAAQ,MAAQ1E,EAAMkE,WAAWQ,MAC3CP,EAtBmB,SAACO,GACxB,MAAO,CACH7F,KAAM,eACN6F,SAmBS6kC,CAAY7kC,O,sHClB7B,SAAS8kC,EAAgBC,EAAOvW,GAC5B3c,UAAUmzB,cACLC,SAASF,GACT59B,MAAK,SAAC+9B,GACHA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACE,cAA3BF,EAAiB9pC,QACbuW,UAAUmzB,cAAcO,YAIxB/vB,QAAQC,IACJ,iHAKA+Y,GAAUA,EAAOgX,UACjBhX,EAAOgX,SAASN,KAMpB1vB,QAAQC,IAAI,sCAGR+Y,GAAUA,EAAO/D,WACjB+D,EAAO/D,UAAUya,WAOxC99B,OAAM,SAACtP,GACJ0d,QAAQ1d,MAAM,4CAA6CA,MAiCvE,IAAM2tC,EAAc3jC,QACa,cAA7BjJ,OAAOC,SAAS4sC,UAEiB,UAA7B7sC,OAAOC,SAAS4sC,UAEhB7sC,OAAOC,SAAS4sC,SAASC,MACrB,2D,6EClEGC,MApBf,YAA2C,IAAtB5oC,EAAqB,EAArBA,SAAa6oC,EAAQ,iBACtC,OACI,kBAAC,IAAD,iBACQA,EADR,CAEIC,OAAQ,gBAAGhtC,EAAH,EAAGA,SAAH,OACJH,IAAKga,MAAMkzB,EAAKjnB,SACZ5hB,EAEA,kBAAC,IAAD,CACI+oC,GAAI,CACAj3B,SAAU,SACVxT,MAAO,CAAEkc,KAAM1e,W,oGCXrCiF,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCgB,KAAM,CACF2C,SAAU,SAEdokC,eAAgB,CACZ5iC,OAAQ,IACRN,OAAQ,QACRG,OAAQ,YACR9E,MAAO,QACPe,MAAOk9B,YAAQn+B,EAAMe,QAAQ4F,KAAKX,SAAU,IAC5C4S,UAAW,SACXyP,WAAY,QAEhB2f,aAAc,CACVrkC,SAAU,OACV1C,MAAOk9B,YAAQn+B,EAAMe,QAAQ4F,KAAKX,SAAU,SAIrC,SAASiiC,EAAO1nC,GAC3B,IAAMO,EAAUhB,IAChB,OACI,yBAAKa,UAAWG,EAAQinC,gBACpB,kBAAC,IAAD,CAA+BpnC,UAAWG,EAAQE,OAClD,yBAAKL,UAAWG,EAAQknC,cAAeznC,EAAMxF,M,oLCtBnD+E,EAAYC,aAAW,iBAAO,CAChCmoC,IAAK,CACD/nC,QAAS,WACTiB,SAAU,WACV+D,OAAQ,OAIHgjC,EAAY,WACrB,IAAMC,EAAY9mC,aAAY,SAACjE,GAAD,OAAWA,EAAMkE,WAAW6mC,aACpDtnC,EAAUhB,IACVjF,EAAW+a,cACjB,EAAwB1W,oBAAS,GAAjC,mBAAOmpC,EAAP,KAAaC,EAAb,KASA,OAPA9oC,qBAAU,WAEN,IAAMhB,EAAc+pC,IAAW/pC,YAAY3D,EAASgW,UAC9ClS,EAAc4pC,IAAW5pC,YAAY9D,EAASgW,UACpDy3B,EAAQF,IAAc5pC,GAAeG,MACtC,CAACypC,EAAWvtC,IAEVwtC,EAID,yBAAK1nC,UAAWG,EAAQonC,KAAxB,uBAEI,kBAACM,EAAA,EAAD,CACI1tC,KAAK,6BACL2tC,IAAI,sBACJjrC,OAAO,UAEN4qC,IAVF,sC,QCzBT9nC,GAAW,kBACb,kBAAC,IAAD,CACIuE,OAAQ,GACR3E,MAAO,IACPm9B,MAAO,EACPqL,aAAa,UACbC,eAAe,WAEf,0BAAMC,EAAE,IAAIC,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAI7oC,MAAM,MAAM2E,OAAO,UAQ5CmkC,OAJf,WACI,OAAO,kBAAC,GAAD,OCFLC,GAAgBlK,sBAAW,WAE7BrnB,GACD,IAFGwxB,EAEJ,EAFIA,WAAY3zB,EAEhB,EAFgBA,WAGRzU,EAAUqoC,KAEhB,EAA8BjqC,mBAAS,IAAvC,mBAAOkqC,EAAP,KAAgBC,EAAhB,KACA,EAAsCnqC,mBAAS,MAA/C,mBAAOoqC,EAAP,KAAoBC,EAApB,KAEM/nC,EAAWC,cACXkG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAGCgoC,EAAiB,WACnB1gC,IAAI4H,IAAI,iBACHxH,MAAK,SAAC7O,GACHkvC,EAAelvC,EAASG,MACxB+a,GAAW,MAEdpM,OAAM,SAACtP,GACJ8N,EACI,MACA,QACA,mDAAa9N,EAAMF,QACnB,aAchB,OATA6F,qBAAU,WACNkY,EAAIL,QAAUmyB,EACdA,MACD,IAEHhqC,qBAAU,WACN0pC,EAAW7xB,QAAQoyB,YAAcL,IAClC,CAACA,IAGA,yBAAKzoC,UAAWG,EAAQ4oC,kBACpB,kBAAC38B,EAAA,EAAD,CAAa/H,OAAO,SAAS2kC,UAAQ,EAACz9B,WAAS,GAC3C,kBAACe,EAAA,EAAD,CAAYC,QAAQ,WAApB,sBACA,kBAAC08B,EAAA,EAAD,CACI5tC,KAAK,UACLqQ,SAAU,SAAC3M,GAAD,OAAO2pC,EAAW3pC,EAAElC,OAAOL,QACrCjB,KAAK,OACLH,GAAG,UACHoB,MAAOisC,EACPS,cAAY,KAEL,IACf,6BACqB,OAAhBP,GACG,yBAAK3oC,UAAWG,EAAQgpC,oBACpB,kBAAC,GAAD,OAGS,OAAhBR,GACG,yBACIxkC,IAAKwkC,EACLS,IAAI,UACJ7nC,QAASsnC,S,wKC3EZQ,G,oDACjB,aAAe,IAAD,+BACV,gBACKC,cAAgB,EAAKA,cAAcC,KAAnB,iBACrB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,iBACrB,EAAKx+B,aAAe,EAAKA,aAAaw+B,KAAlB,iBACpB,EAAKE,mBAAqB,EAAKA,mBAAmBF,KAAxB,iBALhB,E,6CAQd,WACI,OAAIpwC,KAAKyG,MAAM8pC,iBAAiC5vC,IAAnBX,KAAKwwC,UACvBxwC,KAAKyG,MAAM8pC,WAAWE,YAAYzwC,KAAKwwC,WAE3C,O,yBAGX,WACI,OAAIxwC,KAAKyG,MAAM8pC,iBAAiC5vC,IAAnBX,KAAKwwC,UACvBxwC,KAAKwwC,UAET,O,qBAGX,WACI,IAAQD,EAAevwC,KAAKyG,MAApB8pC,WAER,GAAIA,QAAiC5vC,IAAnBX,KAAKwwC,UACnB,OAAOD,EAAWG,QAAQ1wC,KAAKwwC,WAE/BxwC,KAAK2wC,mBAAoB,I,mBAIjC,WACQ3wC,KAAKyG,MAAM8pC,iBAAiC5vC,IAAnBX,KAAKwwC,WAC9BxwC,KAAKyG,MAAM8pC,WAAWrS,MAAMl+B,KAAKwwC,a,2BAIzC,WACQxwC,KAAKyG,MAAMmqC,UACX5wC,KAAKyG,MAAMmqC,YAEX5wC,KAAK4R,aAAa,Q,2BAI1B,WACQ5R,KAAKyG,MAAMoqC,WAAW7wC,KAAKyG,MAAMoqC,c,0BAGzC,SAAajT,GACL59B,KAAKyG,MAAM8L,UAAUvS,KAAKyG,MAAM8L,SAASqrB,K,4BAGjD,WACI,GACI59B,KAAKyG,MAAM8pC,YACXvwC,KAAKyG,MAAM8pC,WAAWxC,aACHptC,IAAnBX,KAAKwwC,UACP,CACE,IAAM7kC,EAAU6V,SAASif,cAAc,OACvCzgC,KAAKwwC,UAAYxwC,KAAKyG,MAAM8pC,WAAWxC,OAAOpiC,EAAS,CACnDmlC,QAAS9wC,KAAKyG,MAAMqqC,QACpBz5B,SAAUrX,KAAK4R,aACf1L,MAAOlG,KAAKyG,MAAMP,MAClB9D,KAAMpC,KAAKyG,MAAMrE,KACjB2uC,SAAU/wC,KAAKyG,MAAMsqC,SACrB,mBAAoB/wC,KAAKmwC,cACzB,iBAAkBnwC,KAAKqwC,cACvBluC,KAAMnC,KAAKyG,MAAMtE,KACjB6uC,OAAQhxC,KAAKyG,MAAMuqC,OACnBC,GAAIjxC,KAAKyG,MAAMwqC,GACfzlC,MAAOxL,KAAKyG,MAAM+E,QAEtBxL,KAAKsvC,QAAQ1O,YAAYj1B,GAGzB3L,KAAK2wC,mBACL3wC,KAAKyG,MAAM8pC,iBACQ5vC,IAAnBX,KAAKwwC,YAELxwC,KAAK2wC,mBAAoB,EACzB3wC,KAAK0wC,a,+BAIb,WACI1wC,KAAKkxC,mB,gCAGT,WACIlxC,KAAKkxC,mB,kCAGT,gBAC2BvwC,IAAnBX,KAAKwwC,YACLxwC,KAAKmxC,+BACLnxC,KAAKk+B,W,0CAIb,WACI,IAAMkT,EAAgB5vB,SAASif,cAAc,OAK7C,IAJAjf,SAASmf,KAAKC,YAAYwQ,GAC1BA,EAActmC,MAAMyB,QAAU,OAGvBvM,KAAKsvC,QAAQ+B,YAChBD,EAAcxQ,YAAY5gC,KAAKsvC,QAAQ+B,YAI3Cn/B,YAAW,WACPsP,SAASmf,KAAK2Q,YAAYF,KAC3B,O,gCAGP,SAAmBG,GACfvxC,KAAKsvC,QAAUiC,I,oBAGnB,WAII,MAcIvxC,KAAKyG,MADF+qC,GAbP,EACIV,QADJ,EAEIv+B,SAFJ,EAGIrM,MAHJ,EAII9D,KAJJ,EAKI2uC,SALJ,EAMIH,UANJ,EAOIC,UAPJ,EAQI1uC,KARJ,EASI6uC,OATJ,EAUIT,WAVJ,EAWI/kC,MAXJ,EAYIylC,GAZJ,mBAgBA,OAAO,yCAASO,EAAT,CAAqB5zB,IAAK5d,KAAKswC,0B,GA9IPx/B,IAAM6I,WAkJ7Cu2B,GAAUuB,YAAc,YAexBvB,GAAUwB,aAAe,CAErBn/B,SAAU,aACVrM,MAAO,QACP9D,KAAM,QACN2uC,SAAU,EACV5uC,KAAM,SACNqJ,MAAO,e,cChKImmC,qBALf,WAEI,MAAM,WAAN,OADiB,gBACjB,oCALiB,iBAKjB,sBAGyC,CACzCC,aATiB,iBAUjBC,WATe,cAOJF,CAGZzB,ICRG4B,GAAY,SAAC,GAAgC,IAA9B1C,EAA6B,EAA7BA,WAAY3zB,EAAiB,EAAjBA,WACvBzU,EAAUqoC,KAEhB,EAA8BjqC,mBAAS,IAAvC,mBAAOkqC,EAAP,KAAgBC,EAAhB,KAEMwC,EAAevqC,aACjB,SAACjE,GAAD,OAAWA,EAAMkE,WAAWuqC,wBAShC,OANAtsC,qBAAU,WACN0pC,EAAW7xB,QAAQoyB,YAAcL,IAClC,CAACA,IAEJ5pC,qBAAU,kBAAM+V,GAAW,KAAQ,IAG/B,yBAAK5U,UAAWG,EAAQ4oC,kBACpB,kBAAC38B,EAAA,EAAD,CAAa/H,OAAO,SAAS2kC,UAAQ,EAACz9B,WAAS,GAC3C,6BACI,kBAAC6/B,GAAD,CACInnC,MAAO,CACHyB,QAAS,gBAEbukC,QAASiB,EACTx/B,SAAU,SAAClP,GAAD,OAAWksC,EAAWlsC,IAChCpB,GAAG,UACHC,KAAK,cAGF,M,yBC/BrBgwC,GAAWjN,sBAAW,WAExBrnB,GACD,IAFGwxB,EAEJ,EAFIA,WAAY3zB,EAEhB,EAFgBA,WAAY02B,EAE5B,EAF4BA,cAAeC,EAE3C,EAF2CA,UAGnCC,EAAQ7qC,aACV,SAACjE,GAAD,OAAWA,EAAMkE,WAAW6qC,2BAqBhC,OACI,kBAAC,KAAD,CACIz7B,IAAK,yCACL07B,OAtBO,WACX,IACI30B,EAAIL,QAAU,IAAIzc,OAAO0xC,eAAeH,GAAO,SAAU/W,GACrC,IAAZA,EAAImX,KACJrD,EAAW7xB,QAAQm1B,OAASpX,EAAIoX,OAChCtD,EAAW7xB,QAAQo1B,QAAUrX,EAAIqX,QAEjCR,EAAc50B,QAAQq1B,YAAa,EACnCR,EAAU70B,QAAQs1B,SAClBp1B,QAAQC,IAAI00B,IAEZA,EAAU70B,QAAQ9B,YAAW,MAGvC,MAAO7V,GACL6X,QAAQ1d,MAAM6F,GAElB6V,GAAW,SCrBZ,IAAM4zB,GAAWppC,aAAW,SAACC,GAAD,MAAY,CAC3C0pC,iBAAiB,aACbrjC,QAAS,OACTE,UAAW,QACVvG,EAAMI,YAAYC,KAAK,MAAQ,CAC5BgG,QAAS,cAMRumC,GAAkB,SAACD,EAAQp3B,KAE3Bs3B,GAAa,WACtB,IAAMC,EAAcxrC,aAAY,SAACjE,GAAD,OAAWA,EAAMkE,WAAWwrC,gBAE5D,EAA4C7tC,oBAAS,GAArD,mBAAO8tC,EAAP,KAAuBC,EAAvB,KAEMC,EAAoBpQ,kBAAO,eAE3BqQ,EL2DK,SAA0BD,EAAmB33B,GACxD,IAAMm3B,EAAa5P,iBAAO,CACtB4P,YAAY,IAGVU,EAAmBtQ,iBAAO,CAC5B2M,YAAa,KAGX4D,EAAgB1rC,uBAClB,WACI,OACI,kBAAC,GAAD,CACIunC,WAAYkE,EACZ11B,IAAKw1B,EACL33B,WAAYA,MAIxB,CAAC63B,EAAkBF,EAAmB33B,IAG1C,MAAO,CACHm3B,aACAvZ,SAAUyZ,GACVQ,mBACAC,iBKrFWC,CAAiBJ,EAAmBD,GAC7CM,EFYK,SAAsBh4B,GACjC,IAAMm3B,EAAa5P,iBAAO,CACtB4P,YAAY,IAGVU,EAAmBtQ,iBAAO,CAC5B2M,YAAa,KAGX4D,EAAgB1rC,uBAClB,WACI,OACI,kBAAC,GAAD,CACIunC,WAAYkE,EACZ73B,WAAYA,MAIxB,CAAC63B,EAAkB73B,IAGvB,MAAO,CACHm3B,aACAvZ,SAAUyZ,GACVQ,mBACAC,iBErCcG,CAAaP,GACzBQ,EDSK,SAAqBl4B,GAChC,IAAMm3B,EAAa5P,iBAAO,CACtB4P,YAAY,IAEVU,EAAmBtQ,iBAAO,CAC5B0P,OAAQ,GACRC,QAAS,KAEPP,EAAYpP,iBAAO,CAErB6P,OAAQ,aAERp3B,WAAY,eAGV2zB,EAAapM,mBAEbuQ,EAAgB1rC,uBAClB,WACI,OACI,kBAAC,GAAD,CACIunC,WAAYkE,EACZ73B,WAAYA,EACZ02B,cAAeS,EACfR,UAAWA,EACXx0B,IAAKwxB,MAIjB,CAACkE,EAAkB73B,EAAYm3B,EAAYR,EAAWhD,IAG1D,MAAO,CACHwD,WAAYA,EACZvZ,SAAU,SAACwZ,EAAQp3B,GACf22B,EAAU70B,QAAQs1B,OAASA,EAC3BT,EAAU70B,QAAQ9B,WAAaA,EAC/B2zB,EAAW7xB,QAAQgxB,QAEvB+E,mBACAC,iBCjDaK,CAAYT,GAE7B,OAAQH,GACJ,IAAK,SACD,OAAO,2BAAKK,GAAZ,IAAoBD,oBAAmBF,mBAC3C,IAAK,YACD,OAAO,2BAAKO,GAAZ,IAAuBL,oBAAmBF,mBAC9C,IAAK,WACD,OAAO,2BAAKS,GAAZ,IAAsBP,oBAAmBF,mBAC7C,QACI,OAAO,2BAAKG,GAAZ,IAAoBD,oBAAmBF,qBCT7CltC,GAAYC,aAAW,SAACC,GAAD,YAAY,CACrC+U,QAAM,GACF7U,MAAO,OACPqG,UAAW,QACXC,WAAYxG,EAAM0F,QAAQ,GAC1BrD,YAAarC,EAAM0F,QAAQ,IAJzB,cAKD1F,EAAMI,YAAY4U,GAAG,MAAQ,CAC1B9U,MAAO,IACPsG,WAAY,OACZnE,YAAa,SARf,6BAUY,KAVZ,GAYNuhB,MAAO,CACHrd,UAAWvG,EAAM0F,QAAQ,GACzBW,QAAS,OACTsnC,cAAe,SACflkC,WAAY,SACZtJ,QAAQ,GAAD,OAAKH,EAAM0F,QAAQ,GAAnB,cAA2B1F,EAAM0F,QAAQ,GAAzC,cAAiD1F,EAAM0F,QAC1D,GADG,OAIXQ,OAAQ,CACJlB,OAAQhF,EAAM0F,QAAQ,GACtBlF,gBAAiBR,EAAMe,QAAQqG,UAAUiX,MAE7CuvB,KAAM,CACF1tC,MAAO,OACPqG,UAAWvG,EAAM0F,QAAQ,IAE7BinC,OAAQ,CACJpmC,UAAWvG,EAAM0F,QAAQ,IAE7BwS,KAAM,CACF3R,UAAW,OACXF,QAAS,OACTnG,MAAO,OACPkoB,eAAgB,iBAEpBshB,iBAAiB,aACbrjC,QAAS,OACTE,UAAW,QACVvG,EAAMI,YAAYC,KAAK,MAAQ,CAC5BgG,QAAS,UAGjByjC,mBAAoB,CAChB5pC,MAAO,KAEX2tC,gBAAiB,CACbxnC,QAAS,QAEbynC,UAAW,CACPl1B,UAAW,SACXrS,UAAW,QA8VJwnC,OAtVf,WACI,MAA0B7uC,mBAAS,IAAnC,mBAAO8uC,EAAP,KAAcC,EAAd,KACA,EAAsB/uC,mBAAS,IAA/B,mBAAOgvC,EAAP,KAAYC,EAAZ,KACA,EAA8BjvC,oBAAS,GAAvC,mBAAOoH,EAAP,KAAgBiP,EAAhB,KACA,EAAgCrW,oBAAS,GAAzC,mBAAOkvC,EAAP,KAAiBC,EAAjB,KACA,EAA0BnvC,oBAAS,GAAnC,mBAAOovC,EAAP,KAAcC,EAAd,KACA,EAA4BrvC,mBAAS,IAArC,mBAAOsvC,EAAP,KAAeC,EAAf,KAEMC,EAAeptC,aAAY,SAACjE,GAAD,OAAWA,EAAMkE,WAAWmtC,gBACvD3sC,EAAQT,aAAY,SAACjE,GAAD,OAAWA,EAAMkE,WAAWQ,SAChD4sC,EAAQrtC,aAAY,SAACjE,GAAD,OAAWA,EAAMkE,WAAWotC,SAEhDntC,EAAWC,cACXkG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAECotC,EAAcjtC,uBAAY,SAAC3B,GAAD,OAAWwB,EAASsuB,YAAY9vB,MAAS,CACrEwB,IAEEqtC,GAAmBltC,uBACrB,SAACoE,GAAD,OAAYvE,EAAS8d,YAAiBvZ,MACtC,CAACvE,IAGCqZ,GAAUgR,cACVhxB,GAAW+a,cACjB,GAOIi3B,KANAG,GADJ,GACIA,eACAN,GAFJ,GAEIA,WACAvZ,GAHJ,GAGIA,SACAka,GAJJ,GAIIA,cACAH,GALJ,GAKIA,kBACAE,GANJ,GAMIA,iBAEEv3B,GAvCC,IAAIC,gBAAgBF,cAAcG,QAyCnCjV,GAAUhB,KAEhBN,qBAAU,WACNyuC,EAASp4B,GAAMnF,IAAI,eACpB,CAAC7V,KAEJ,IAAMi0C,GAAa,SAACt0C,GAChBE,IAAKqZ,aAAavZ,GAGc,KAA5BA,EAAI,iBACJo0C,EAAYp0C,EAAI,iBAIpBq0C,IAAiB,GAEjBh0B,GAAQhS,KAAK,SACblB,EAAe,MAAO,QAAS,2BAAQ,WAEvC0M,aAAa4d,WAAW,oBA2G5B,OACI,yBAAKtxB,UAAWG,GAAQiU,SAClBu5B,GACE,oCACI,kBAACS,EAAA,EAAD,CAAOpuC,UAAWG,GAAQ8iB,OACtB,kBAAC/D,EAAA,EAAD,CAAQlf,UAAWG,GAAQoF,QACvB,kBAAC,IAAD,OAEJ,kBAACsI,EAAA,EAAD,CAAYyb,UAAU,KAAKjd,QAAQ,MAAnC,gBACQjL,IAENqsC,GACE,0BAAMztC,UAAWG,GAAQ8sC,KAAMh7B,SAvDzC,SAARo8B,EAAStvC,GACXA,EAAEgJ,iBACF6M,GAAW,GACNm3B,GAAWr1B,QAAQq1B,aAAcgC,EAItC5lC,IAAIC,KAAK,gBAAT,aACIkmC,SAAUjB,EACVkB,SAAUhB,GACPd,GAAiB/1B,UAEnBnO,MAAK,SAAC7O,GACHkb,GAAW,GACmB,MAA1Blb,EAASE,QAAQX,KACjB20C,GAAS,GAETO,GAAWz0C,EAASG,SAG3B2O,OAAM,SAACtP,GACJ0b,GAAW,GACX5N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,WAC9CuzC,GAAkB71B,aAnBtB8b,IAAS,kBAAM6b,EAAMtvC,KAAI6V,KAoDL,kBAACxI,EAAA,EAAD,CAAa/H,OAAO,SAAS2kC,UAAQ,EAACz9B,WAAS,GAC3C,kBAACe,EAAA,EAAD,CAAYC,QAAQ,SAApB,4BAGA,kBAAC08B,EAAA,EAAD,CACI7tC,GAAG,QACHG,KAAK,QACLF,KAAK,QACLqQ,SAAU,SAAC3M,GAAD,OACNuuC,EAASvuC,EAAElC,OAAOL,QAEtB0sC,cAAY,EACZ1sC,MAAO6wC,EACPp/B,WAAS,KAGjB,kBAAC7B,EAAA,EAAD,CAAa/H,OAAO,SAAS2kC,UAAQ,EAACz9B,WAAS,GAC3C,kBAACe,EAAA,EAAD,CAAYC,QAAQ,YAApB,gBAGA,kBAAC08B,EAAA,EAAD,CACI5tC,KAAK,WACLqQ,SAAU,SAAC3M,GAAD,OAAOyuC,EAAOzuC,EAAElC,OAAOL,QACjCjB,KAAK,WACLH,GAAG,WACHoB,MAAO+wC,EACPrE,cAAY,KAGnB6E,GAAgB,kBAACrB,GAAD,MAEjB,kBAAC5kC,EAAA,EAAD,CACIvM,KAAK,SACLgQ,WAAS,EACTc,QAAQ,YACR/L,MAAM,UACN+E,SACIM,KACCooC,GAAe1B,GAEpBrsC,UAAWG,GAAQ6rC,QATvB,iBAePyB,GACG,0BAAMztC,UAAWG,GAAQ8sC,MACrB,kBAAC7gC,EAAA,EAAD,CAAa/H,OAAO,SAAS2kC,UAAQ,EAACz9B,WAAS,GAC3C,kBAACe,EAAA,EAAD,CAAYC,QAAQ,SAApB,4BAGA,kBAAC08B,EAAA,EAAD,CACI7tC,GAAG,QACHG,KAAK,QACLF,KAAK,QACLqQ,SAAU,SAAC3M,GAAD,OACNuuC,EAASvuC,EAAElC,OAAOL,QAEtB0sC,cAAY,EACZ1sC,MAAO6wC,EACPp/B,WAAS,KAGjB,kBAACnG,EAAA,EAAD,CACIvM,KAAK,SACLgQ,WAAS,EACTc,QAAQ,YACR/L,MAAM,UACN+E,SAAUM,EACVpE,QA3Lb,SAACxC,GAChBA,EAAEgJ,iBACGkL,UAAUu7B,aAMf55B,GAAW,GAEXzM,IAAI4H,IAAI,eAAiBs9B,GACpB9kC,MAAK,SAAC7O,GACH,IAAM+0C,EAA2B/0C,EAASG,KAW1C,OAVA+c,QAAQC,IAAI43B,GACZA,EAAyBC,UAAUC,UAAY7zB,YAC3C2zB,EAAyBC,UAAUC,WAEvCF,EAAyBC,UAAUE,iBAAiBryC,SAChD,SAAUsyC,GACNA,EAASzzC,GAAK0f,YAAa+zB,EAASzzC,OAIrC6X,UAAUu7B,YAAYz+B,IAAI,CAC7B2+B,UAAWD,EAAyBC,eAG3CnmC,MAAK,SAACumC,GACH,IAAMC,EAAWD,EAAUp1C,SAASs1C,kBAC9BC,EAAiBH,EAAUp1C,SAASu1C,eACpCC,EAAQJ,EAAUI,MAClBC,EAAML,EAAUp1C,SAAS01C,UACzBC,EAAaP,EAAUp1C,SAAS21C,WAEtC,OAAOlnC,IAAIC,KACP,sBAAwBilC,EACxB75B,KAAKM,UAAU,CACX1Y,GAAI0zC,EAAU1zC,GACd8zC,MAAO/zB,YAAa+zB,GACpB3zC,KAAMuzC,EAAUvzC,KAChB7B,SAAU,CACNs1C,kBAAmB7zB,YAAa4zB,GAChCE,eAAgB9zB,YAAa8zB,GAC7BG,UAAWj0B,YAAag0B,GACxBE,WAAYl0B,YAAak0B,UAKxC9mC,MAAK,SAAC7O,GACHy0C,GAAWz0C,EAASG,SAEvB2O,OAAM,SAACtP,GACJ0d,QAAQC,IAAI3d,GACZ8N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,cAEjDuP,MAAK,WACFqM,GAAW,OAtDf5N,EAAe,MAAO,QAAS,qEAAe,YAyLtBhH,UAAWG,GAAQ6rC,QAPvB,uBAaR,kBAACxgC,EAAA,EAAD,MACA,yBAAKxL,UAAWG,GAAQoX,MACpB,6BACI,kBAACswB,EAAA,EAAD,CAAM1tC,KAAM,WAAZ,6BAEJ,6BACI,kBAAC0tC,EAAA,EAAD,CAAM1tC,KAAM,WAAZ,8BAIR,kBAAC,EAAD,OAGH6zC,GACG,yBAAKhuC,UAAWG,GAAQgtC,WACpB,kBAACrlC,EAAA,EAAD,CACIxH,MAAM,UACNiB,QAAS,kBAAMmsC,GAAaD,MAE1BA,GACE,oCACI,kBAAC6B,EAAA,EAAD,CACIrrC,MAAO,CACHvC,YAAa,KAHzB,0DASH+rC,GACG,oCACI,kBAAC8B,EAAA,EAAD,CACItrC,MAAO,CACHvC,YAAa,KAHzB,2CAcvBisC,GACG,kBAACS,EAAA,EAAD,CAAOpuC,UAAWG,GAAQ8iB,OACtB,kBAAC/D,EAAA,EAAD,CAAQlf,UAAWG,GAAQoF,QACvB,kBAAC,IAAD,OAEJ,kBAACsI,EAAA,EAAD,CAAYyb,UAAU,KAAKjd,QAAQ,MAAnC,4BAGA,0BAAMrM,UAAWG,GAAQ8sC,KAAMh7B,SA9J5B,SAAClT,GAChBA,EAAEgJ,iBACF6M,GAAW,GACXzM,IAAIC,KAAK,YAAa,CAClBnP,KAAM40C,IAELtlC,MAAK,SAAC7O,GACHkb,GAAW,GACXu5B,GAAWz0C,EAASG,SAEvB2O,OAAM,SAACtP,GACJ0b,GAAW,GACX5N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,gBAmJtC,kBAACoT,EAAA,EAAD,CAAa/H,OAAO,SAAS2kC,UAAQ,EAACz9B,WAAS,GAC3C,kBAACe,EAAA,EAAD,CAAYC,QAAQ,QAApB,sEAGA,kBAAC08B,EAAA,EAAD,CACI7tC,GAAG,OACHG,KAAK,SACLF,KAAK,OACLqQ,SAAU,SAACnI,GAAD,OACNuqC,EAAUvqC,EAAM1G,OAAOL,QAE3B0sC,cAAY,EACZ1sC,MAAOqxC,EACP5/B,WAAS,KAGjB,kBAACnG,EAAA,EAAD,CACIvM,KAAK,SACLgQ,WAAS,EACTc,QAAQ,YACR/L,MAAM,UACN+E,SAAUM,EACV3F,UAAWG,GAAQ6rC,QANvB,4BASU,KACN,IACR,kBAACxgC,EAAA,EAAD,S,0IChVdgkC,G,+MACF9yC,MAAQ,G,6CAER,WAAU,IAAD,aACGyD,EAAYhH,KAAKyG,MAAjBO,QACFsvC,GAGM,IAFRt2C,KAAKyG,MAAM/E,SAAS4W,WAAU,SAACjV,GAC3B,OAAOA,IAAU,EAAKoD,MAAMzE,QAE9B8C,EAAWP,IAAaO,WAE9B,OACI,kBAACyxC,GAAA,EAAD,CACIC,aAAW,EACX3vC,UAAWsB,MAAU,mBAEZnB,EAAQtF,SAAW40C,GAFP,cAGZtvC,EAAQyvC,aAAeH,GAHX,GAKjBtvC,EAAQ0L,SAGZ,yBACItK,QAASpI,KAAKyG,MAAMiwC,YACpB7vC,UAAWsB,KAAWnB,EAAQE,MAAT,mBAChBF,EAAQ2vC,aAAeL,GADP,cAEhBtvC,EAAQ4vC,iBAAmBN,GAFX,OAKlBA,IAAexxC,IACd,oCACK9E,KAAKyG,MAAMowC,UAAY,kBAACC,GAAA,EAAD,OACtB92C,KAAKyG,MAAMowC,UACT,kBAACrS,GAAA,EAAD,CAAUjvB,SAAUvV,KAAKyG,MAAMzE,KAAKE,QAI/Co0C,GAAcxxC,GACX,kBAACiiB,GAAA,EAAD,CAAMhhB,GAAIuwC,GAAcxxC,GACpB,kBAAC,KAAD,CACI+B,UAAWG,EAAQ+vC,cAKnC,kBAACvjC,GAAA,EAAD,CACIvL,MAAOjI,KAAKyG,MAAMzE,KAAKE,KACvBiK,aAAYnM,KAAKyG,MAAMzE,KAAKE,MAE5B,kBAACwS,EAAA,EAAD,CACI7N,UAAWsB,KAAWnB,EAAQgwC,YAAT,mBAChBhwC,EAAQiwC,mBAAqBX,GADb,cAEhBtvC,EAAQkwC,uBAAyBZ,GAFjB,IAIrBpjC,QAAQ,SAEPlT,KAAKyG,MAAMzE,KAAKE,Y,GAxDRyX,aA0ElBw9B,GALGt9B,aA/EM,SAACtW,GACrB,MAAO,CACH7B,SAAU6B,EAAMD,SAAS5B,aAIN,WACvB,MAAO,KAwEOmY,CAGhB9J,cAjJa,SAAC7J,GAAD,MAAY,CACvB2jB,UAAW,CACPxjB,QAAS,OAGb3E,SAAU,CACN,UAAW,CACPuO,OAAQ,qBAEZvJ,gBAAiBwnB,YACbhoB,EAAMe,QAAQ4L,QAAQ0R,KACC,SAAvBre,EAAMe,QAAQ7E,KAAkB,GAAM,MAG9Cq0C,YAAa,CACT,UAAW,CACP/vC,gBAAiBR,EAAMe,QAAQyJ,WAAWC,QAC1CV,OAAQ,qBAEZvJ,gBAAiBR,EAAMe,QAAQyJ,WAAWoZ,OAG9CpX,OAAQ,CACJ3H,OAAQ,OACRkF,OAAQ,aAAe/J,EAAMe,QAAQmwC,QACrChxC,MAAO,OACPgV,aAAc,MACdi8B,UAAW,aACXhsB,WACI,0JACJ9e,QAAS,OACT+hB,eAAgB,OAChB3e,WAAY,WAEhBzI,KAAM,CACFgE,OAAQ,sBACRH,OAAQ,OACR0E,SAAU,OACV/I,gBAAiBR,EAAMe,QAAQyJ,WAAWoZ,MAC1C1O,aAAc,MACdmT,WAAY,MACZpnB,MAAOjB,EAAMe,QAAQ4F,KAAKS,WAE9B2pC,mBAAoB,CAChB9vC,MAC2B,SAAvBjB,EAAMe,QAAQ7E,KAAkB,OAAS8D,EAAMe,QAAQ4L,QAAQlM,KACnE2wC,WAAY,OAEhBJ,sBAAuB,CACnB/vC,MAAOjB,EAAMe,QAAQ4F,KAAKS,WAE9B0pC,WAAY,CACRvqC,UAAW,OACXmjB,aAAc,WACdgB,WAAY,SACZjB,SAAU,SACVpnB,YAAa,QAEjBwuC,UAAW,CACP5vC,MAAOjB,EAAMe,QAAQ4L,QAAQ0R,SAsFnCxU,CAAmBsmC,K,UC7BfkB,G,+MAKFh0C,MAAQ,CACJiJ,SAAS,EACTgrC,aAAa,G,6CAGjB,WAAU,IAAD,eACGxwC,EAAYhH,KAAKyG,MAAjBO,QACFsvC,GAGM,IAFRt2C,KAAKyG,MAAM/E,SAAS4W,WAAU,SAACjV,GAC3B,OAAOA,IAAU,EAAKoD,MAAMzE,QAE9B0C,EAAcoS,IAAWpS,YAC3B1E,KAAKyG,MAAM1F,SAASgW,UAElBjS,EAAWP,IAAaO,WAE9B,OACI,yBAAK+B,UAAWG,EAAQ6iB,WACpB,kBAAC0sB,GAAA,EAAD,CACIC,aAAW,EACX3vC,UAAWsB,MAAU,mBAEZnB,EAAQtF,SAAW40C,GAFP,cAGZtvC,EAAQyvC,aAAeH,GAHX,GAKjBtvC,EAAQ0L,SAGa,KAAxB1S,KAAKyG,MAAMzE,KAAKy1C,MACZz3C,KAAKuD,MAAMi0C,aACY,MAAxBx3C,KAAKyG,MAAMzE,KAAKy1C,KACQ,cAAxBz3C,KAAKyG,MAAMzE,KAAKy1C,KACZ,yBAAK5wC,UAAWG,EAAQyK,SACpB,kBAAC,iBAAD,CACI5K,UAAWsB,MAAU,mBAChBnB,EAAQ7B,KAAOnF,KAAKuD,MAAMiJ,SADV,cAEhBxF,EAAQ0wC,YAAc13C,KAAKuD,MACvBiJ,SAHY,IAKrBxB,IACI3L,KACCqF,EACK,gBACA5D,OAAO6W,UAAUxN,IACjB,IACAnK,KAAKyG,MAAMzE,KAAKC,GAChB,SACAuV,mBACIxX,KAAKyG,MAAMzE,KAAKyC,MAEpB,eACAzE,KAAKyG,MAAMzE,KAAKC,IAE1B01C,UAAW,kBACP,EAAKxhC,SAAS,CAAE3J,SAAS,KAE7BorC,WAAY,kBACR,EAAKzhC,SAAS,CAAE3J,SAAS,KAE7B8xB,QAAS,kBACL,EAAKnoB,SAAS,CAAEqhC,aAAa,OAGrC,kBAAC,IAAD,CACIzsC,OAAQ,IACR3E,MAAO,IACPS,UAAWsB,KAAW,eAEbnB,EAAQ7B,MAAQnF,KAAKuD,MAAMiJ,SAEhCxF,EAAQ6wC,mBAGZ,0BACI/I,EAAE,IACFC,EAAE,IACF3oC,MAAM,OACN2E,OAAO,WAKD,KAAxB/K,KAAKyG,MAAMzE,KAAKy1C,KACdz3C,KAAKuD,MAAMi0C,aACa,MAAxBx3C,KAAKyG,MAAMzE,KAAKy1C,KACQ,cAAxBz3C,KAAKyG,MAAMzE,KAAKy1C,MAChB,yBAAK5wC,UAAWG,EAAQ8wC,aACpB,kBAACtT,GAAA,EAAD,CACI39B,UAAWG,EAAQ+wC,QACnBxiC,SAAUvV,KAAKyG,MAAMzE,KAAKE,SAIZ,KAAxBlC,KAAKyG,MAAMzE,KAAKy1C,KACdz3C,KAAKuD,MAAMi0C,aACa,MAAxBx3C,KAAKyG,MAAMzE,KAAKy1C,KACQ,cAAxBz3C,KAAKyG,MAAMzE,KAAKy1C,MAAwB,kBAACplC,EAAA,EAAD,MAC5C,yBAAKxL,UAAWG,EAAQgxC,WAClBh4C,KAAKyG,MAAMkC,OACT,yBACIP,QAASpI,KAAKyG,MAAMiwC,YACpB7vC,UAAWsB,KAAWnB,EAAQE,MAAT,mBAChBF,EAAQ2vC,aAAeL,GADP,cAEhBtvC,EAAQ4vC,iBAAmBN,GAFX,OAKlBA,IAAexxC,IACd,kBAAC0/B,GAAA,EAAD,CAAUjvB,SAAUvV,KAAKyG,MAAMzE,KAAKE,OAEvCo0C,GAAcxxC,GACX,kBAACiiB,GAAA,EAAD,CAAMhhB,GAAIuwC,GAAcxxC,GACpB,kBAAC,KAAD,CACI+B,UAAWG,EAAQ+vC,cAMvC,kBAACvjC,GAAA,EAAD,CACIvL,MAAOjI,KAAKyG,MAAMzE,KAAKE,KACvBiK,aAAYnM,KAAKyG,MAAMzE,KAAKE,MAE5B,kBAACwS,EAAA,EAAD,CACIxB,QAAQ,QACRrM,UAAWsB,KAAWnB,EAAQgwC,YAAT,mBAChBhwC,EAAQiwC,mBAAqBX,GADb,cAEhBtvC,EAAQkwC,uBAAyBZ,GAFjB,cAGhBtvC,EAAQixC,SAAWj4C,KAAKyG,MAAMkC,OAHd,KAMpB3I,KAAKyG,MAAMzE,KAAKE,c,GAvIjByX,aAA1B49B,GACK7F,aAAe,CAClB/oC,OAAO,GAoJf,IAKeuvC,GALEr+B,aAjKO,SAACtW,GACrB,MAAO,CACHkB,KAAMlB,EAAMuW,UAAUrV,KACtB/C,SAAU6B,EAAMD,SAAS5B,aAIN,WACvB,MAAO,KAyJMmY,CAGf9J,cAxQa,SAAC7J,GAAD,MAAY,CACvB2jB,UAAW,CACPxjB,QAAS,OAGb3E,SAAU,CACN,UAAW,CACPuO,OAAQ,qBAEZvJ,gBAAiBwnB,YACbhoB,EAAMe,QAAQ4L,QAAQ0R,KACC,SAAvBre,EAAMe,QAAQ7E,KAAkB,GAAM,MAI9Cq0C,YAAa,CACT,UAAW,CACP/vC,gBAAiBR,EAAMe,QAAQyJ,WAAWC,QAC1CV,OAAQ,qBAEZvJ,gBAAiBR,EAAMe,QAAQyJ,WAAWoZ,OAG9CpX,OAAQ,CACJzC,OAAQ,aAAe/J,EAAMe,QAAQmwC,QACrChxC,MAAO,OACPgV,aAAc,MACdi8B,UAAW,aACXhsB,WACI,0JACJ1b,WAAY,UACZpD,QAAS,WAEb0qC,mBAAoB,CAChB9vC,MAC2B,SAAvBjB,EAAMe,QAAQ7E,KAAkB,OAAS8D,EAAMe,QAAQ4L,QAAQlM,KACnE2wC,WAAY,OAEhBJ,sBAAuB,CACnB/vC,MAAOjB,EAAMe,QAAQ4F,KAAKS,WAE9B0pC,WAAY,CACRvqC,UAAW,OACXmjB,aAAc,WACdgB,WAAY,SACZjB,SAAU,SACVpnB,YAAa,QAEjBkJ,QAAS,CACLke,SAAU,SACV5kB,OAAQ,QACR3E,MAAO,OACPgV,aAAc,cACd1U,gBAAiBR,EAAMe,QAAQyJ,WAAWC,SAE9CmnC,YAAa,CACTnoB,SAAU,SACV5kB,OAAQ,QACR3E,MAAO,OACPgV,aAAc,cACd1U,gBAAiBR,EAAMe,QAAQyJ,WAAWoZ,MAC1CyE,WAAY,QAEhBwpB,QAAS,CACLluC,SAAU,IAEd6tC,WAAY,CACRS,UAAW,QACX/xC,MAAO,OACP2E,OAAQ,QAEZitC,SAAU,CACNjtC,OAAQ,OACRwB,QAAS,QAEbrF,KAAM,CACFgE,OAAQ,sBACRH,OAAQ,OACR0E,SAAU,OACV/I,gBAAiBR,EAAMe,QAAQyJ,WAAWoZ,MAC1C1O,aAAc,MACdmT,WAAY,MACZpnB,MAAOjB,EAAMe,QAAQ4F,KAAKS,WAE9BnI,KAAM,CACFoH,QAAS,QAEbsrC,iBAAkB,CACdz8B,aAAc,cACdrQ,OAAQ,OACR3E,MAAO,QAEX6xC,SAAU,CACNvrC,WAAY,QAEhBqqC,UAAW,CACP5vC,MAAOjB,EAAMe,QAAQ4L,QAAQ0R,SAwKnCxU,CAAmBgK,YAAWw9B,M,oBChR1BvxC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC2jB,UAAW,CACPxjB,QAAS,OAGb3E,SAAU,CACN,UAAW,CACPuO,OAAQ,qBAEZvJ,gBAAiBwnB,YACbhoB,EAAMe,QAAQ4L,QAAQ0R,KACC,SAAvBre,EAAMe,QAAQ7E,KAAkB,GAAM,MAI9Cq0C,YAAa,CACT,UAAW,CACP/vC,gBAAiBR,EAAMe,QAAQyJ,WAAWC,QAC1CV,OAAQ,qBAEZvJ,gBAAiBR,EAAMe,QAAQyJ,WAAWoZ,OAG9CpX,OAAQ,CACJ3H,OAAQ,OACRkF,OAAQ,aAAe/J,EAAMe,QAAQmwC,QACrChxC,MAAO,OACPgV,aAAc,MACdi8B,UAAW,aACXhsB,WACI,4GACJ9e,QAAS,OACT+hB,eAAgB,OAChB3e,WAAY,WAEhBzI,KAAM,CACFgE,OAAQ,sBACRH,OAAQ,OACR0E,SAAU,OACV/I,gBAAiBR,EAAMe,QAAQyJ,WAAWoZ,MAC1C1O,aAAc,MACdmT,WAAY,MACZpnB,MAAOjB,EAAMe,QAAQ4F,KAAKS,WAE9B2pC,mBAAoB,CAChB9vC,MAC2B,SAAvBjB,EAAMe,QAAQ7E,KAAkB,OAAS8D,EAAMe,QAAQ4L,QAAQlM,KACnE2wC,WAAY,OAEhBJ,sBAAuB,CACnB/vC,MAAOjB,EAAMe,QAAQ4F,KAAKS,WAE9B0pC,WAAY,CACRvqC,UAAW,OACXmjB,aAAc,WACdgB,WAAY,SACZjB,SAAU,SACVpnB,YAAa,QAEjB6vC,OAAQ,CACJloC,UAAW,aAAehK,EAAMe,QAAQ4L,QAAQtF,OAEpDwpC,UAAW,CACP5vC,MAAOjB,EAAMe,QAAQ4L,QAAQ0R,UAItB,SAASuyB,GAAT,GAAoD,IAAD,MAAjCroC,EAAiC,EAAjCA,OAAQ4pC,EAAyB,EAAzBA,SAAU3B,EAAe,EAAfA,YACzCh1C,EAAW8F,aAAY,SAACjE,GAAD,OAAWA,EAAMD,SAAS5B,YACjDsF,EAAUhB,KACVlB,EAAWP,IAAaO,WACxBwxC,GAGM,IAFR50C,EAAS4W,WAAU,SAACjV,GAChB,OAAOA,IAAUoL,KAGzB,OACI,kBAAC8nC,GAAA,EAAD,CACIC,aAAW,EACX3vC,UAAWsB,MAAU,mBAEZnB,EAAQtF,SAAW40C,GAFP,cAGZtvC,EAAQyvC,aAAeH,GAHX,cAIZtvC,EAAQoxC,OAASC,GAJL,GAMjBrxC,EAAQ0L,SAGZ,yBACItK,QAASsuC,EACT7vC,UAAWsB,KAAWnB,EAAQE,MAAT,mBAChBF,EAAQ2vC,aAAeL,GADP,cAEhBtvC,EAAQ4vC,iBAAmBN,GAFX,OAKlBA,IAAexxC,IAAa,kBAAC,KAAD,MAC9BwxC,GAAcxxC,GACX,kBAAC,KAAD,CAAwB+B,UAAWG,EAAQ+vC,aAGnD,kBAACvjC,GAAA,EAAD,CAASvL,MAAOwG,EAAOvM,KAAMiK,aAAYsC,EAAOvM,MAC5C,kBAACwS,EAAA,EAAD,CACIxB,QAAQ,QACRrM,UAAWsB,KAAWnB,EAAQgwC,YAAT,mBAChBhwC,EAAQiwC,mBAAqBX,GADb,cAEhBtvC,EAAQkwC,uBAAyBZ,GAFjB,KAKpB7nC,EAAOvM,QCpH5B,IAAM8D,GAAYC,aAAW,iBAAO,CAChCqyC,SAAU,CACNlyC,MAAO,SAEXmyC,YAAa,CACTjxC,SAAU,WACV,mBAAoB,mBAItBkxC,GAAc,SAACC,EAAQ5vC,EAAY7B,GACrC,MAAoB,QAAhByxC,EAAOr2C,KAEH,yBAAKyE,UAAWG,EAAQsxC,UACpB,kBAAC,GAAD,CAAWt2C,KAAMy2C,EAAQ5B,UAAQ,KAIzB,SAAhB4B,EAAOr2C,MAAkC,SAAfyG,EAEtB,yBAAKhC,UAAWG,EAAQsxC,UACpB,kBAAC,GAAD,CAAUt2C,KAAMy2C,KAKP,SAAhBA,EAAOr2C,MAAkC,cAAfyG,GACZ,SAAfA,EAGI,yBAAKhC,UAAWG,EAAQsxC,UACpB,kBAAC,GAAD,CAAWt2C,KAAMy2C,UAN7B,GAyCWC,GA7BC,SAACjyC,GACb,IAAM/E,EAAW8F,aAAY,SAACjE,GAAD,OAAWA,EAAMD,SAAS5B,YACjDmH,EAAarB,aACf,SAACjE,GAAD,OAAWA,EAAMuF,WAAWC,sBAE1B/B,EAAUhB,KAChB,OACI,oCACyB,IAApBtE,EAASyB,QACNq1C,GAAY/xC,EAAMgyC,OAAQ5vC,EAAY7B,GACzCtF,EAASyB,OAAS,GACf,oCACKzB,EAASoS,MAAM,EAAG,GAAG7J,KAAI,SAAC0uC,EAAMv4B,GAAP,OACtB,yBACIjW,IAAKwuC,EAAK12C,GACV4E,UAAWG,EAAQuxC,YACnBztC,MAAO,CACHS,OAAQ7J,EAASyB,OAASid,EAC1BoQ,UAAU,WAAD,OAAkB,KAAJpQ,EAAd,UAGZo4B,GAAYG,EAAM9vC,EAAY7B,UC7DrD4xC,GAAc,CAChBtxC,SAAU,QACV+mB,cAAe,OACf9iB,OAAQ,IACRD,KAAM,EACNH,IAAK,EACL/E,MAAO,OACP2E,OAAQ,QAGZ,SAAS8tC,GACLC,EACAC,EACAC,EACAnwC,GAEA,IAAKiwC,IAAkBC,EACnB,MAAO,CACHxsC,QAAS,QAGjB,IAAMuiC,EAASiK,EAATjK,EAAGC,EAAMgK,EAANhK,EACU,SAAflmC,IACAimC,GAAKkK,EAAclK,EAAIgK,EAAchK,EACrCC,GAAKiK,EAAcjK,EAAI+J,EAAc/J,GAGzC,IAAMve,EAAS,oBAAgBse,EAAhB,eAAwBC,EAAxB,OACf,MAAO,CACH3nC,QAAS,GACTopB,YACAyoB,gBAAiBzoB,GAGzB,IA6Ce0oB,GA7CS,SAACzyC,GACrB,MAOI0yC,cAAa,SAACC,GAAD,MAAc,CAC3B5hB,KAAM4hB,EAAQ5+B,UACd6+B,SAAUD,EAAQE,cAClBR,cAAeM,EAAQG,+BACvBR,cAAeK,EAAQI,wBACvBR,cAAeI,EAAQK,yBACvBC,WAAYN,EAAQM,iBAZpBL,EADJ,EACIA,SACAK,EAFJ,EAEIA,WACAliB,EAHJ,EAGIA,KACAshB,EAJJ,EAIIA,cACAC,EALJ,EAKIA,cACAC,EANJ,EAMIA,cASEnwC,EAAarB,aACf,SAACjE,GAAD,OAAWA,EAAMuF,WAAWC,sBAUhC,OAAK2wC,EAID,yBAAK5uC,MAAO8tC,IACR,yBACI9tC,MAAO+tC,GACHC,EACAC,EACAC,EACAnwC,IAlBhB,WACI,OAAQwwC,GACJ,IAAK,SACD,OAAO,kBAAC,GAAD,CAASZ,OAAQjhB,EAAKihB,SACjC,QACI,OAAO,MAgBNkB,KAZF,M,mJC/DA,IACXC,WACAC,a,4UCgEEC,GAAqB/pC,aAAW,CAClCC,KAAM,CACFP,SAAU,KAFSM,CAIxB4C,MAyFGonC,G,+MACFC,EAAI,E,EACJC,EAAI,E,EAEJ12C,MAAQ,G,EAERyrB,kBAAoB,WAChBluB,OAAO0gB,SAAS7b,iBAAiB,YAAa,EAAKu0C,W,EAGvDA,SAAW,SAACt0C,GACR,EAAKq0C,EAAIr0C,EAAEu0C,QACX,EAAKH,EAAIp0C,EAAEw0C,S,EAGfC,oBAAsB,WAClB,EAAK5zC,MAAM+iB,kBAAkB,QAAQ,GACrC,EAAK/iB,MAAM2R,kBAAkB,0B,EAGjCiP,aAAe,WACX,IAAKpG,cAQD,OAPA,EAAKxa,MAAMuH,eACP,MACA,QACA,yDACA,gBAEJ,EAAKvH,MAAM+iB,kBAAkB,QAAQ,GAGzC,EAAK/iB,MAAM+iB,kBAAkB,QAAQ,GACrC,EAAK/iB,MAAM2R,kBAAkB,4C,EAGjCkiC,YAAc,WACV,EAAK7zC,MAAM0iB,WACa,MAApB,EAAK1iB,MAAMhC,KACL,EAAKgC,MAAMhC,KAAO,EAAKgC,MAAM/E,SAAS,GAAGQ,KACzC,EAAKuE,MAAMhC,KAAO,IAAM,EAAKgC,MAAM/E,SAAS,GAAGQ,O,EAI7Dq4C,YAAc,SAACt4C,GACX,EAAKwE,MAAM+iB,kBAAkB,SAAS,GACtC,IAAMgxB,EAAeh5B,SAASi5B,uBAAuBx4C,GAAI,GACrDuf,SAASmf,KAAK+Z,SAASF,GACvBA,EAAapa,QAEb,EAAK35B,MAAMuH,eACP,MACA,QACA,+DACA,Y,EAOZ2sC,gBAAkB,SAAC7rC,GACf,IAAMwsB,EAAM,GACRnxB,EAAM,EA0BV,MAxBA,CAAC,MAAO,SAAU,UAAU/G,SAAQ,SAACkE,GACjC,IAAIszC,EAAe,EACnB9rC,EAAMxH,GAAUlE,SAAQ,SAACo0B,GACjBA,EAAKqjB,YACLvf,EAAIvsB,KACA,kBAAC0F,GAAA,EAAD,CAAUqmC,OAAK,EAAC3wC,IAAKA,EAAK/B,QAASovB,EAAKpvB,SACpC,kBAACuK,GAAA,EAAD,KAAe6kB,EAAKtwB,MACpB,kBAACwN,EAAA,EAAD,CAAYxB,QAAQ,WACfskB,EAAK3qB,QAIlB1C,IACAywC,QAGJA,EAAe,GAAiB,UAAZtzC,IACpBg0B,EAAIvsB,KACA,kBAACsD,EAAA,EAAD,CAASlI,IAAKA,EAAKtD,UAAW,EAAKJ,MAAMO,QAAQowC,WAErDjtC,QAIDmxB,G,6CAGX,WAAU,IAAD,OACGt0B,EAAYhH,KAAKyG,MAAjBO,QACFye,EAAO7kB,IAAKwZ,UACZ5V,EAAasS,IAAWtS,WAAWxE,KAAKyG,MAAM1F,SAASgW,UAY1C,KAQA,KAMA,KAII0O,EAAKY,MAAM00B,oBAEf,KAQA,KAMA,KAMnB,OACI,6BACI,kBAACjW,GAAA,EAAD,CACI3a,aAAW,EACX/lB,KAAMpE,KAAKyG,MAAMu0C,SACjBhxC,QAAS,kBACL,EAAKvD,MAAM+iB,kBAAkB,EAAK/iB,MAAMkvB,UAAU,IAEtDslB,gBAAgB,iBAChBC,eAAgB,CAAE/vC,IAAKnL,KAAKi6C,EAAG3uC,KAAMtL,KAAKg6C,GAC1Ch1B,aAAc,CACVlX,SAAU,MACVC,WAAY,QAEhB4X,gBAAiB,CACb7X,SAAU,MACVC,WAAY,SAGS,UAAxB/N,KAAKyG,MAAMkvB,UACR,6BACI,kBAAClhB,GAAA,EAAD,CACIqmC,OAAK,EACL1yC,QAAS,WACL,EAAK3B,MAAM2H,kBACX,EAAK3H,MAAM+iB,kBACP,EAAK/iB,MAAMkvB,UACX,KAIR,kBAACmkB,GAAD,KACI,kBAAC,KAAD,OAEJ,kBAACplC,EAAA,EAAD,CAAYxB,QAAQ,WAApB,iBAEJ,kBAACb,EAAA,EAAD,CAASxL,UAAWG,EAAQowC,UAC5B,kBAAC3iC,GAAA,EAAD,CACIqmC,OAAK,EACL1yC,QAAS,kBACL,EAAKmyC,YAAY,oBAGrB,kBAACT,GAAD,KACI,kBAAC,KAAD,OAEJ,kBAACplC,EAAA,EAAD,CAAYxB,QAAQ,WAApB,6BAIJ,kBAACuB,GAAA,EAAD,CACIqmC,OAAK,EACL1yC,QAAS,kBACL,EAAKmyC,YAAY,sBAGrB,kBAACT,GAAD,KACI,kBAAC,KAAD,OAEJ,kBAACplC,EAAA,EAAD,CAAYxB,QAAQ,WAApB,6BAIHuS,EAAKY,MAAM00B,qBACR,kBAACtmC,GAAA,EAAD,CACIqmC,OAAK,EACL1yC,QAAS,kBACL,EAAK3B,MAAMwvB,6BAGf,kBAAC6jB,GAAD,KACI,kBAAC,KAAD,OAEJ,kBAACplC,EAAA,EAAD,CAAYxB,QAAQ,WAApB,6BAMR,kBAACb,EAAA,EAAD,CAASxL,UAAWG,EAAQowC,UAC5B,kBAAC3iC,GAAA,EAAD,CACIqmC,OAAK,EACL1yC,QAAS,kBACL,EAAK3B,MAAMmkB,2BAGf,kBAACkvB,GAAD,KACI,kBAAC,KAAD,OAEJ,kBAACplC,EAAA,EAAD,CAAYxB,QAAQ,WAApB,mCAIJ,kBAACuB,GAAA,EAAD,CACIqmC,OAAK,EACL1yC,QAAS,kBACL,EAAK3B,MAAMqvB,yBAGf,kBAACgkB,GAAD,KACI,kBAAC,KAAD,OAEJ,kBAACplC,EAAA,EAAD,CAAYxB,QAAQ,WAApB,8BAMa,UAAxBlT,KAAKyG,MAAMkvB,UACR,8BACM31B,KAAKyG,MAAM7E,YAAc5B,KAAKyG,MAAM5E,YAClC,6BACI,kBAAC4S,GAAA,EAAD,CAAUqmC,OAAK,EAAC1yC,QAASpI,KAAKs6C,aAC1B,kBAACR,GAAD,KACI,kBAAC,KAAD,OAEJ,kBAACplC,EAAA,EAAD,CAAYxB,QAAQ,WAApB,iBAIH1O,GACG,kBAAC6N,EAAA,EAAD,CAASxL,UAAWG,EAAQowC,YAItCp3C,KAAKyG,MAAM7E,YACT5B,KAAKyG,MAAM3E,YACT9B,KAAKyG,MAAMkC,OACT3I,KAAKyG,MAAMkC,MAAM8I,UACrBuX,aAAchpB,KAAKyG,MAAM/E,SAAS,GAAGQ,OACjC,6BACI,kBAACuS,GAAA,EAAD,CACIqmC,OAAK,EACL1yC,QAAS,kBACL,EAAK3B,MAAMwiB,gBAGf,kBAAC6wB,GAAD,KACI,kBAAC,KAAD,OAEJ,kBAACplC,EAAA,EAAD,CAAYxB,QAAQ,WAApB,mBAOdlT,KAAKyG,MAAM7E,YAAc5B,KAAKyG,MAAM3E,UAClC,6BACI,kBAAC2S,GAAA,EAAD,CACIqmC,OAAK,EACL1yC,QAAS,kBAAM,EAAKif,iBAEpB,kBAACyyB,GAAD,KACI,kBAAC,KAAD,OAEJ,kBAACplC,EAAA,EAAD,CAAYxB,QAAQ,WAApB,iBAIH1O,GACG,kBAAC6N,EAAA,EAAD,CAASxL,UAAWG,EAAQowC,YAKtCp3C,KAAKyG,MAAM7E,YAAc5B,KAAKyG,MAAM5E,cACjC4jB,EAAKY,MAAM6C,uBACP1kB,IACD,kBAACiQ,GAAA,EAAD,CACIqmC,OAAK,EACL1yC,QAAS,kBACL,EAAKiyC,wBAGT,kBAACP,GAAD,KACI,kBAAC,KAAD,OAEJ,kBAACplC,EAAA,EAAD,CAAYxB,QAAQ,WAApB,8BAMVlT,KAAKyG,MAAM7E,YACT5B,KAAKyG,MAAM3E,UACX0C,GACAxE,KAAKyG,MAAM/E,SAAS,GAAGy5C,gBACnB,kBAAC1mC,GAAA,EAAD,CACIqmC,OAAK,EACL1yC,QAAS,kBACL,EAAK3B,MAAM4vB,wBAGf,kBAACyjB,GAAD,KACI,kBAAC,KAAD,OAEJ,kBAACplC,EAAA,EAAD,CAAYxB,QAAQ,WAApB,8BAMVlT,KAAKyG,MAAM7E,YACT4C,GACAihB,EAAKY,MAAM00B,qBACX/6C,KAAKyG,MAAM3E,UACXooC,aAAUlqC,KAAKyG,MAAM/E,SAAS,GAAGQ,OAC7B,kBAACuS,GAAA,EAAD,CACIqmC,OAAK,EACL1yC,QAAS,kBACL,EAAK3B,MAAMyvB,8BAGf,kBAAC4jB,GAAD,KACI,kBAAC,KAAD,OAEJ,kBAACplC,EAAA,EAAD,CAAYxB,QAAQ,WAApB,sDAKVlT,KAAKyG,MAAM7E,YACT4C,GACAihB,EAAKY,MAAM3M,UACX1Z,KAAKyG,MAAM3E,UACXqoC,aAAenqC,KAAKyG,MAAM/E,SAAS,GAAGQ,OAClC,kBAACuS,GAAA,EAAD,CACIqmC,OAAK,EACL1yC,QAAS,kBACL,EAAK3B,MAAM0vB,yBAGf,kBAAC2jB,GAAD,KACI,kBAAC,KAAD,OAEJ,kBAACplC,EAAA,EAAD,CAAYxB,QAAQ,WAApB,uBAMX1O,GAAcihB,EAAKY,MAAM3M,UACtB,kBAACjF,GAAA,EAAD,CACIqmC,OAAK,EACL1yC,QAAS,kBACL,EAAK3B,MAAM2vB,uBAGf,kBAAC0jB,GAAD,KACI,kBAACsB,GAAA,EAAD,OAEJ,kBAAC1mC,EAAA,EAAD,CAAYxB,QAAQ,WAApB,0CAMNlT,KAAKyG,MAAM7E,YAAc4C,GACvB,kBAACiQ,GAAA,EAAD,CACIqmC,OAAK,EACL1yC,QAAS,kBAAM,EAAK3B,MAAM2iB,oBAE1B,kBAAC0wB,GAAD,KACI,kBAAC,KAAD,OAEJ,kBAACplC,EAAA,EAAD,CAAYxB,QAAQ,WAApB,0CAMNlT,KAAKyG,MAAM7E,YAAc4C,GACvB,kBAACiQ,GAAA,EAAD,CACIqmC,OAAK,EACL1yC,QAAS,kBACL,EAAK3B,MAAM40C,yBAAwB,KAGvC,kBAACvB,GAAD,KACI,kBAACwB,GAAA,EAAD,OAEJ,kBAAC5mC,EAAA,EAAD,CAAYxB,QAAQ,WAApB,8BAMNlT,KAAKyG,MAAM7E,YAAc4C,GACvB,kBAAC6N,EAAA,EAAD,CAASxL,UAAWG,EAAQowC,WAG9Bp3C,KAAKyG,MAAM7E,YAAc4C,GACvB,6BACI,kBAACiQ,GAAA,EAAD,CACIqmC,OAAK,EACL1yC,QAAS,kBACL,EAAK3B,MAAM4iB,qBAGf,kBAACywB,GAAD,KACI,kBAAC,KAAD,OAEJ,kBAACplC,EAAA,EAAD,CAAYxB,QAAQ,WAApB,uBAIqB,KAAxBlT,KAAKyG,MAAM1D,UACR,kBAAC0R,GAAA,EAAD,CACIqmC,OAAK,EACL1yC,QAAS,kBACL,EAAK3B,MAAM6vB,mBAGf,kBAACwjB,GAAD,KACI,kBAAC,KAAD,OAEJ,kBAACplC,EAAA,EAAD,CAAYxB,QAAQ,WAApB,kBAOf1O,GACG,6BAC6B,KAAxBxE,KAAKyG,MAAM1D,UACR,kBAAC0R,GAAA,EAAD,CACIqmC,OAAK,EACL1yC,QAAS,kBACL,EAAK3B,MAAM6iB,mBAGf,kBAACwwB,GAAD,KACI,kBAAC,KAAD,OAEJ,kBAACplC,EAAA,EAAD,CAAYxB,QAAQ,WAApB,iBAMR,kBAACb,EAAA,EAAD,CAASxL,UAAWG,EAAQowC,UAC5B,kBAAC3iC,GAAA,EAAD,CACIqmC,OAAK,EACLj0C,UAAWG,EAAQu0C,SACnBnzC,QAAS,kBACL,EAAK3B,MAAM8iB,qBAGf,kBAACuwB,GAAD,KACI,kBAAC,KAAD,OAEJ,kBAACplC,EAAA,EAAD,CAAYxB,QAAQ,WAApB,yB,GAnfLyG,aA2gBpB6hC,GALK3hC,aA7lBI,SAACtW,GACrB,MAAO,CACHoyB,SAAUpyB,EAAMuF,WAAW2yC,YAC3BT,SAAUz3C,EAAMuF,WAAW4yC,YAC3B95C,WAAY2B,EAAMD,SAAS3B,YAAYC,WACvCC,WAAY0B,EAAMD,SAAS3B,YAAYE,WACvCC,SAAUyB,EAAMD,SAAS3B,YAAYG,SACrC2C,KAAMlB,EAAMuW,UAAUrV,KACtB/C,SAAU6B,EAAMD,SAAS5B,SACzBqB,SAAUQ,EAAMD,SAASP,aAIN,SAAC2E,GACxB,MAAO,CACH8hB,kBAAmB,SAACpnB,EAAMgC,GACtBsD,EAAS8hB,YAAkBpnB,EAAMgC,KAErCwxB,0BAA2B,SAAC3pB,GACxBvE,EAASkuB,YAA0B3pB,KAEvC0c,kBAAmB,SAAC7kB,GAChB4D,EAASihB,YAAkB7kB,KAE/BqlB,WAAY,SAAC1kB,GACTiD,EAASyhB,YAAW1kB,KAExBmmB,uBAAwB,WACpBljB,EAASkjB,gBAEbkL,qBAAsB,WAClBpuB,EAASouB,gBAEbzM,iBAAkB,WACd3hB,EAAS2hB,gBAEbC,eAAgB,WACZ5hB,EAAS4hB,gBAEbC,iBAAkB,WACd7hB,EAAS6hB,gBAEbH,gBAAiB,WACb1hB,EAAS0hB,gBAEb2B,eAAgB,SAACtoB,GACbiF,EAASqjB,YAAetoB,KAE5BqoB,gBAAiB,WACbpjB,EAASojB,gBAEb9c,eAAgB,SAACF,EAAUC,EAAY9M,EAAKkG,GACxCO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,KAEvD8uB,yBAA0B,WACtBvuB,EAASuuB,gBAEbC,0BAA2B,WACvBxuB,EAASwuB,gBAEbG,oBAAqB,WACjB3uB,EAAS2uB,gBAEbC,eAAgB,WACZ5uB,EAAS4uB,gBAEble,kBAAmB,SAACvL,GAChBnF,EAAS0Q,YAAkBvL,KAE/BspB,qBAAsB,WAClBzuB,EAASyuB,gBAEbC,mBAAoB,WAChB1uB,EAAS0uB,gBAEbhoB,gBAAiB,WACb1G,EAAS0G,gBAEb6a,YAAa,WACTvhB,EAASuhB,gBAEboyB,wBAAyB,SAACj3C,GACtBsD,EAAS2zC,mCAAwBj3C,QA2gBzByV,CAGlB9J,cA9mBa,iBAAO,CAClBwrC,SAAU,GACVnE,QAAS,CACL3qC,UAAW,EACXwf,aAAc,MA0mBpBlc,CAAmBgK,YAAWggC,M,iDChlB1B4B,G,+MACFp4C,MAAQ,G,6CAER,WAAU,IAAD,QAID2D,EAJC,OACGF,EAAYhH,KAAKyG,MAAjBO,QACFqtB,EAAUvd,IAAWpS,YAAY1E,KAAKyG,MAAM1F,SAASgW,UAIvD7P,EADyB,QAAzBlH,KAAKyG,MAAMzE,KAAKI,KACT,kBAAC,KAAD,CAAYyE,UAAWG,EAAQE,OACN,OAAzBlH,KAAKyG,MAAMzE,KAAKI,KAChB,kBAAC,KAAD,CAAoByE,UAAWG,EAAQE,OAG1C,kBAACs9B,GAAA,EAAD,CACI39B,UAAWG,EAAQ40C,UACnBrmC,SAAUvV,KAAKyG,MAAMzE,KAAKE,OAItC,IAAMo0C,GAGM,IAFRt2C,KAAKyG,MAAM/E,SAAS4W,WAAU,SAACjV,GAC3B,OAAOA,IAAU,EAAKoD,MAAMzE,QAE9B8C,EAAWP,IAAaO,WAE9B,OACI,kBAAC+2C,GAAA,EAAD,CACIj+B,IAAK5d,KAAKyG,MAAMq1C,KAChBC,cAAe/7C,KAAKyG,MAAMu1C,YAC1B5zC,QAASpI,KAAKyG,MAAMw1C,YACpBC,cAAel8C,KAAKyG,MAAM01C,kBAAkB/L,KAAKpwC,MACjD6G,UAAWsB,MAAU,mBAChBnB,EAAQtF,SAAW40C,IAAejiB,GADlB,cAEhBrtB,EAAQo1C,eAAiB9F,GAAcjiB,GAFvB,cAGhBrtB,EAAQyvC,aAAeH,GAHP,cAIhBtvC,EAAQoxC,OAASp4C,KAAKyG,MAAM4xC,UAJZ,KAOrB,kBAACgE,GAAA,EAAD,CACIz+B,IAAK5d,KAAKyG,MAAM61C,KAChBnsB,UAAU,KACVosB,MAAM,MACN11C,UAAWG,EAAQw1C,UAEnB,kBAAC9nC,EAAA,EAAD,CACIxB,QAAQ,QACRrM,UAAWsB,KAAWnB,EAAQgwC,YAAT,mBAChBhwC,EAAQiwC,mBAAqBX,GADb,cAEhBtvC,EAAQkwC,uBAAyBZ,GAFjB,KAKrB,yBACIluC,QAC6B,OAAzBpI,KAAKyG,MAAMzE,KAAKI,KACVpC,KAAKyG,MAAMiwC,YACX,QAGPJ,IAAexxC,IAAaoC,EAC9BovC,GAAcxxC,GACX,kBAACiiB,GAAA,EAAD,CAAMhhB,GAAIuwC,GAAcxxC,GACpB,kBAAC,KAAD,CACI+B,UAAWsB,KACPnB,EAAQ+vC,UACR/vC,EAAQE,UAM3BlH,KAAKyG,MAAMzE,KAAKE,OAGzB,kBAACm6C,GAAA,EAAD,CACIx1C,UAAWsB,KAAWnB,EAAQy1C,SAAUz1C,EAAQw1C,WAEhD,kBAAC9nC,EAAA,EAAD,CACIxB,QAAQ,QACRrM,UAAWsB,KAAWnB,EAAQgwC,YAAT,mBAChBhwC,EAAQiwC,mBAAqBX,GADb,cAEhBtvC,EAAQkwC,uBAAyBZ,GAFjB,KAKpB,IACyB,QAAzBt2C,KAAKyG,MAAMzE,KAAKI,MACY,OAAzBpC,KAAKyG,MAAMzE,KAAKI,MAChB8d,YAAalgB,KAAKyG,MAAMzE,KAAKG,QAGzC,kBAACk6C,GAAA,EAAD,CACIx1C,UAAWsB,KAAWnB,EAAQy1C,SAAUz1C,EAAQw1C,WAEhD,kBAAC9nC,EAAA,EAAD,CACIxB,QAAQ,QACRrM,UAAWsB,KAAWnB,EAAQgwC,YAAT,mBAChBhwC,EAAQiwC,mBAAqBX,GADb,cAEhBtvC,EAAQkwC,uBAAyBZ,GAFjB,KAKpB,IACArL,aACGjrC,KAAKyG,MAAMzE,KAAKK,KAChB,6B,GAvGIsX,aA0HjB+iC,GALG7iC,aA/HM,SAACtW,GACrB,MAAO,CACH7B,SAAU6B,EAAMD,SAAS5B,aAIN,WACvB,MAAO,KAwHOmY,CAGhB9J,cA1La,SAAC7J,GAAD,MAAY,CACvBxE,SAAU,CACN,UAAW,GACXgF,gBAAiBwnB,YAAKhoB,EAAMe,QAAQ4L,QAAQ0R,KAAM,MAGtD63B,eAAgB,CACZ,UAAW,GACX11C,gBAAiBwnB,YAAKhoB,EAAMe,QAAQ4L,QAAQ0R,KAAM,MAGtDkyB,YAAa,CACT,UAAW,CACP/vC,gBAAiBR,EAAMe,QAAQyJ,WAAWC,UAGlDzJ,KAAM,CACFolB,cAAe,SACf/jB,YAAa,OACbpB,MAAOjB,EAAMe,QAAQ4F,KAAKS,WAE9BsuC,UAAW,CACPrzC,YAAa,OACb+jB,cAAe,UAEnB2qB,mBAAoB,CAChB9vC,MAC2B,SAAvBjB,EAAMe,QAAQ7E,KAAkB,OAAS8D,EAAMe,QAAQ4L,QAAQlM,KACnE2wC,WAAY,MACZqF,WAAY,QAEhBzF,sBAAuB,CACnB/vC,MAAOjB,EAAMe,QAAQ4F,KAAKS,UAC1BqvC,WAAY,QAEhB3F,WAAY,CACRzuC,YAAa,OACbgE,QAAS,OACToD,WAAY,UAEhB8sC,SAAS,eACJv2C,EAAMI,YAAYC,KAAK,MAAQ,CAC5BgG,QAAS,SAGjBiwC,SAAU,CACNn2C,QAAS,aAEb0wC,UAAW,CACP5vC,MAAOjB,EAAMe,QAAQ4L,QAAQ0R,MAEjC6zB,OAAQ,CACJ1xC,gBAAiBwnB,YAAKhoB,EAAMe,QAAQ4L,QAAQ0R,KAAM,QAsIxDxU,CAAmBgK,YAAW4hC,M,gCC9MjB,SAASiB,GAAT,GASX,IARAC,EAQD,EARCA,WACApuC,EAOD,EAPCA,OACAioC,EAMD,EANCA,YACAsF,EAKD,EALCA,YACAC,EAID,EAJCA,YACAE,EAGD,EAHCA,kBACAt1C,EAED,EAFCA,UACAi1C,EACD,EADCA,KAEA,EAAoCgB,aAAQ,CACxCC,OAAQ,SACRC,KAAM,iBAAO,CAAEvuC,WACfwuC,QAAS,SAAC7D,GAAD,MAAc,CACnB8D,OAAQ9D,EAAQ8D,SAChBC,QAAS/D,EAAQ+D,cALzB,0BAASA,EAAT,EAASA,QAASD,EAAlB,EAAkBA,OAAUF,EAA5B,KAQM3E,EAAW8E,GAAWD,EAC5B,OAAKL,EAYD,kBAAC,GAAD,CACIf,KAAMA,EACNQ,KAAMU,EACNn2C,UAAWA,EACX6vC,YAAaA,EACbsF,YAAaA,EACbC,YAAaA,EACbE,kBAAmBA,EACnBn6C,KAAMyM,EACN4pC,SAAUA,IAnBV,yBAAKz6B,IAAKo/B,GACN,kBAAC,GAAD,CACIvuC,OAAQA,EACRioC,YAAaA,EACb2B,SAAUA,KCF9B,IAAMryC,GAAYC,aAAW,iBAAO,CAChC4jB,UAAW,CACPxjB,QAAS,OAEb+2C,QAAS,CACL3tC,SAAU,GAEd6oC,SAAU,CACNlxC,QAAS,QAIF,SAASi2C,GAAW52C,GAAQ,IAAD,EAChChC,EAAO+C,aAAY,SAACjE,GAAD,OAAWA,EAAMuW,UAAUrV,QAC9C/C,EAAW8F,aAAY,SAACjE,GAAD,OAAWA,EAAMD,SAAS5B,YACjDmH,EAAarB,aACf,SAACjE,GAAD,OAAWA,EAAMuF,WAAWC,sBAE1Bu0C,EAAgB91C,aAAY,SAACjE,GAAD,OAAWA,EAAMuW,UAAUrV,QACvD1D,EAAW+a,cAEXpU,EAAWC,cACX6zC,EAAc3zC,uBAChB,SAACzF,EAAMgC,GAAP,OAAgBsD,EAAS8hB,YAAkBpnB,EAAMgC,MACjD,CAACsD,IAEC61C,EAAoB11C,uBACtB,SAAC/D,GAAD,OAAa4D,EAASihB,YAAkB7kB,MACxC,CAAC4D,IAGC81C,EAAa31C,uBAAY,SAAC/D,GAAD,OAAa4D,EAASyhB,YAAWrlB,MAAW,CACvE4D,IAEEmG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAEC+1C,EAAc51C,uBAChB,SAAClE,EAAQD,GAAT,OAAoBgE,EAASguB,YAAY/xB,EAAQD,MACjD,CAACgE,IAECsB,EAAoBnB,uBACtB,SAACgF,GAAD,OAAUnF,EAAS0Q,YAAkBvL,MACrC,CAACnF,IAECg2C,EAAc71C,uBAAY,kBAAMH,EAASuhB,iBAAgB,CAACvhB,IAE1DV,EAAUhB,KAEVg2C,EAAc,SAACp2C,GACO,OAApBa,EAAMzE,KAAKI,OAGfwD,EAAEgJ,kBAIU,IAFRlN,EAAS4W,WAAU,SAACjV,GAChB,OAAOA,IAAUoD,EAAMzE,SAG3Bu7C,EAAkB,CAAC92C,EAAMzE,OAE7Bw5C,EAAY,QAAQ,KAGlB/mB,EAAa,SAAC7uB,GAChB8B,EAASi2C,YAAiBl3C,EAAMzE,KAAM4D,EAAGa,EAAMnE,SAE7Cg4C,EAAc,WAChBkD,EACa,MAAT/4C,EAAeA,EAAOgC,EAAMzE,KAAKE,KAAOuC,EAAO,IAAMgC,EAAMzE,KAAKE,OAGlE+5C,EAAc,SAACr2C,GAIjB,GAHwB,OAApBa,EAAMzE,KAAKI,MACXo7C,EAAWl7B,YAASg7B,IAGpB/4C,IAAaO,YACbP,IAAaG,YAAY3D,EAASgW,WAGlC,GADA0d,EAAW7uB,GACa,QAApBa,EAAMzE,KAAKI,OAAmBwD,EAAE+uB,QAEhC,YADA2lB,SAIJ7lB,EAAW7uB,IAIbu2C,EAAoB,WACtB,GAAwB,OAApB11C,EAAMzE,KAAKI,KAGf,GAAwB,QAApBqE,EAAMzE,KAAKI,KAAf,CAKA,GADgBmC,IAAaG,YAAY3D,EAASgW,UACrC,CACT,IAAM0O,EAAO7kB,IAAKwZ,UAClB,IAAKxZ,IAAKga,SAAW6K,IAASA,EAAKY,MAAMiO,cAErC,YADAzmB,EAAe,MAAO,QAAS,2BAAQ,YAI3C/M,OAAO6W,WAAc7W,OAAO6W,UAAUlG,QAK1CisC,IAJI10C,EAAkB,gDAZlBsxC,KAmBFsD,EAAkB,SAACh4C,GACrB,GAAIrB,IAAaO,WAIb,OAHAc,EAAEi4C,kBACFj4C,EAAE+uB,SAAU,EACZF,EAAW7uB,IACJ,GAIf,EAAwCk4C,aAAQ,CAC5CtmB,KAAM,CACFihB,OAAQhyC,EAAMzE,KACdI,KAAM,SACNV,SAAS,aAAKA,GACdmH,WAAYA,GAEhBosB,IAAK,SAACuC,EAAM4hB,GACR,IAAM2E,EAAa3E,EAAQ4E,gBACvBxmB,GAAQumB,GACJA,EAAWtvC,SAEP+oB,EAAKihB,OAAOx2C,KAAO87C,EAAWtvC,OAAOxM,IACrCu1B,EAAKihB,OAAOr2C,OAAS27C,EAAWtvC,OAAOrM,MAEvCq7C,EAAYjmB,EAAKihB,OAAQsF,EAAWtvC,UAKpDwvC,QAAS,WACL,OACK15C,IAAaO,YACdP,IAAaC,WAAWzD,EAASgW,WAGzCkmC,QAAS,SAAC7D,GAAD,MAAc,CACnBM,WAAYN,EAAQM,iBA3B5B,mBAASA,EAAT,KAASA,WAAcwE,EAAvB,KAA6BzsC,EAA7B,KAoCA,OALA/L,qBAAU,WACN+L,EAAQ0sC,eAAiB,CAAEC,sBAAsB,MAElD,IAEgB,SAAfv1C,EAEI,oCACyB,QAApBpC,EAAMzE,KAAKI,MACR,kBAAC,GAAD,CACIy6C,YAAY,EACZf,KAAMoC,EACNr3C,UAAWsB,KAAWnB,EAAQ6iB,UAAT,eAChB7iB,EAAQsxC,SAAWoB,IAExBhD,YAAakH,EACb5B,YAAaA,EACbC,YAAaA,EACbE,kBAAmBA,EAAkB/L,KAAKpwC,MAC1CyO,OAAQhI,EAAMzE,OAGD,QAApByE,EAAMzE,KAAKI,MACR,kBAAC,GAAD,CACI05C,KAAMoC,EACNr3C,UAAWsB,KAAWnB,EAAQ6iB,UAAT,eAChB7iB,EAAQsxC,SAAWoB,IAExBhD,YAAakH,EACb5B,YAAaA,EACbC,YAAaA,EACbE,kBAAmBA,EAAkB/L,KAAKpwC,MAC1CgC,KAAMyE,EAAMzE,QAQ5B,yBACI4b,IAAKsgC,EACLr3C,UAAWsB,MAAU,mBAChBnB,EAAQ6iB,UAA2B,SAAfhhB,GADJ,cAEhB7B,EAAQsxC,SAAWoB,GAFH,KAKrB,yBACI7yC,UAAWG,EAAQo2C,QACnBrB,cAAeC,EACf5zC,QAAS6zC,EACTC,cAAeC,EAAkB/L,KAAKpwC,OAEjB,QAApByG,EAAMzE,KAAKI,MAAiC,SAAfyG,GAC1B,kBAAC,GAAD,CACIg0C,YAAY,EACZnG,YAAakH,EACbnvC,OAAQhI,EAAMzE,OAGD,SAApByE,EAAMzE,KAAKI,MAAkC,SAAfyG,GAC3B,kBAAC,GAAD,CACI6tC,YAAakH,EACbhgC,IAAKsgC,EACLl8C,KAAMyE,EAAMzE,OAGC,SAApByE,EAAMzE,KAAKI,MAAkC,cAAfyG,GAC3B,kBAAC,GAAD,CACI6tC,YAAakH,EACb57C,KAAMyE,EAAMzE,SC3NpC,IA4IMq8C,G,oDACF,aAAe,IAAD,+BACV,gBAiCJrC,YAAc,SAACp2C,GACXA,EAAEgJ,iBAE0B,KAAxB,EAAKnI,MAAM1D,UACV+T,IAAWpS,YAAY,EAAK+B,MAAM1F,SAASgW,WAEvC,EAAKtQ,MAAM+F,SACZ,EAAK/F,MAAM+iB,kBAAkB,SAAS,IAzCpC,EAkDd80B,UAAY,SAAC14C,GACOA,EAAElC,OACN66C,QAAQC,WAChB,EAAK/3C,MAAMkiB,kBAAkB,KAnDjC,EAAKqE,OAAS,CACVyxB,YAAa,MACbC,WAAW,GAAD,OAAKp7B,cAAU,UAAY,OAA3B,OAGd,EAAK6J,SAAW,CACZsxB,YAAa,WACL,EAAKh4C,MAAM/E,SAASyB,OAAS,IAAM,EAAKsD,MAAMkC,OAC9C,EAAKlC,MAAM8iB,oBAGnBm1B,WAAY,SAAC94C,GACTA,EAAEgJ,iBAEE,EAAKnI,MAAM/E,SAASyB,QACpB,EAAKsD,MAAMhF,QAAQ0B,OAAS,EAAKsD,MAAMjF,SAAS2B,OAEhD,EAAKsD,MAAMkiB,kBAAkB,IAE7B,EAAKliB,MAAMkiB,kBAAX,uBACO,EAAKliB,MAAMhF,SADlB,aAEO,EAAKgF,MAAMjF,cAM9BsrB,qBAAU,CACNC,WAAY,CAAC,QAAS,SAAU,cA9B1B,E,uDA8Cd,WACI/sB,KAAK2+C,KAAO,I,oBAUhB,WAAU,IAAD,SACG33C,EAAYhH,KAAKyG,MAAjBO,QACFxC,EAAasS,IAAWtS,WAAWxE,KAAKyG,MAAM1F,SAASgW,UAEvD6nC,GACD5+C,KAAKyG,MAAM+F,UACmB,IAA9BxM,KAAKyG,MAAMhF,QAAQ0B,QACe,IAA/BnD,KAAKyG,MAAMjF,SAAS2B,QACtB07C,EACF,kBAACC,GAAA,EAAD,CAAOj4C,UAAWG,EAAQ+3C,OACtB,kBAACC,GAAA,EAAD,KACI,kBAACnD,GAAA,EAAD,KACI,kBAACQ,GAAA,EAAD,KACI,kBAAC4C,GAAA,EAAD,CACI7G,OAC8B,YAA1Bp4C,KAAKyG,MAAMy4C,YACe,YAA1Bl/C,KAAKyG,MAAMy4C,WAEf/Z,UAC8B,YAA1BnlC,KAAKyG,MAAMy4C,WACL,MACA,MAEV92C,QAAS,WACL,EAAK3B,MAAM04C,WACmB,YAA1B,EAAK14C,MAAMy4C,WACL,UACA,aAdlB,eAmB+B,YAA1Bl/C,KAAKyG,MAAMy4C,YACc,YAA1Bl/C,KAAKyG,MAAMy4C,WACP,0BAAMr4C,UAAWG,EAAQo4C,gBACM,YAA1Bp/C,KAAKyG,MAAMy4C,WACN,oBACA,oBAEV,OAGZ,kBAAC7C,GAAA,EAAD,CAAWx1C,UAAWG,EAAQy1C,UAC1B,kBAACwC,GAAA,EAAD,CACI7G,OAC8B,YAA1Bp4C,KAAKyG,MAAMy4C,YACe,YAA1Bl/C,KAAKyG,MAAMy4C,WAEf/Z,UAC8B,YAA1BnlC,KAAKyG,MAAMy4C,WACL,MACA,MAEV92C,QAAS,WACL,EAAK3B,MAAM04C,WACmB,YAA1B,EAAK14C,MAAMy4C,WACL,UACA,aAdlB,eAmB+B,YAA1Bl/C,KAAKyG,MAAMy4C,YACc,YAA1Bl/C,KAAKyG,MAAMy4C,WACP,0BAAMr4C,UAAWG,EAAQo4C,gBACM,YAA1Bp/C,KAAKyG,MAAMy4C,WACN,oBACA,oBAEV,OAGZ,kBAAC7C,GAAA,EAAD,CAAWx1C,UAAWG,EAAQy1C,UAC1B,kBAACwC,GAAA,EAAD,CACI7G,OAC8B,YAA1Bp4C,KAAKyG,MAAMy4C,YACe,YAA1Bl/C,KAAKyG,MAAMy4C,WAEf/Z,UAC8B,YAA1BnlC,KAAKyG,MAAMy4C,WACL,MACA,MAEV92C,QAAS,WACL,EAAK3B,MAAM04C,WACmB,YAA1B,EAAK14C,MAAMy4C,WACL,UACA,aAdlB,eAmB+B,YAA1Bl/C,KAAKyG,MAAMy4C,YACc,YAA1Bl/C,KAAKyG,MAAMy4C,WACP,0BAAMr4C,UAAWG,EAAQo4C,gBACM,YAA1Bp/C,KAAKyG,MAAMy4C,WACN,oBACA,oBAEV,SAKpB,kBAACG,GAAA,EAAD,KACKvoC,IAAWhS,YAAkC,MAApB9E,KAAKyG,MAAMhC,MACjC,kBAAC44C,GAAD,CACIr7C,KAAM,CACFI,KAAM,KACNF,KAAM,8BAIjBlC,KAAKyG,MAAMhF,QAAQwI,KAAI,SAAC5G,EAAOf,GAAR,OACpB,kBAAC+6C,GAAD,CAAYlzC,IAAK9G,EAAMpB,GAAID,KAAMqB,EAAOf,MAAOA,OAElDtC,KAAKyG,MAAMjF,SAASyI,KAAI,SAAC5G,EAAOf,GAAR,OACrB,kBAAC+6C,GAAD,CAAYlzC,IAAK9G,EAAMpB,GAAID,KAAMqB,EAAOf,MAAOA,SAMzDg9C,EACF,yBAAKz4C,UAAWG,EAAQu4C,SACW,IAA9Bv/C,KAAKyG,MAAMhF,QAAQ0B,QAChB,oCACI,kBAACuR,EAAA,EAAD,CACI8qC,iBAAgB,OAChBtsC,QAAQ,QACRrM,UAAWG,EAAQy4C,YAHvB,sBAOA,kBAACC,GAAA,EAAD,CACIF,iBAAgB,OAChB31B,WAAS,EACTje,QAAS,EACT+D,WAAW,cAEV3P,KAAKyG,MAAMhF,QAAQwI,KAAI,SAAC5G,EAAOf,GAAR,OACpB,kBAACo9C,GAAA,EAAD,CACIv1C,IAAK9G,EAAMpB,GACXu1B,MAAI,EACJmoB,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAEJ,kBAACzC,GAAD,CACIlzC,IAAK9G,EAAMpB,GACXD,KAAMqB,EACNf,MAAOA,UAOC,IAA/BtC,KAAKyG,MAAMjF,SAAS2B,QACjB,oCACI,kBAACuR,EAAA,EAAD,CACI8qC,iBAAgB,OAChBtsC,QAAQ,QACRrM,UAAWG,EAAQy4C,YAHvB,gBAOA,kBAACC,GAAA,EAAD,CACIF,iBAAgB,OAChB31B,WAAS,EACTje,QAAS,EACT+D,WAAW,cAEV3P,KAAKyG,MAAMjF,SAASyI,KAAI,SAAC5G,EAAOf,GAAR,OACrB,kBAACo9C,GAAA,EAAD,CACIv1C,IAAK9G,EAAMpB,GACXu1B,MAAI,EACJmoB,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAEJ,kBAACzC,GAAD,CACIlzC,IAAK9G,EAAMpB,GACXK,MAAOA,EACPN,KAAMqB,WAShC08C,EAAiC,SAA1B//C,KAAKyG,MAAMoC,WAAwBg2C,EAAWS,EAC3D,OACI,yBACIvD,cAAe/7C,KAAKg8C,YACpB5zC,QAASpI,KAAKs+C,UACdz3C,UAAWsB,MAAU,mBAEZnB,EAAQgJ,KAAiC,SAA1BhQ,KAAKyG,MAAMoC,YAFd,cAGZ7B,EAAQg5C,UAAsC,SAA1BhgD,KAAKyG,MAAMoC,YAHnB,cAIZ7B,EAAQi5C,UAAYjgD,KAAKyG,MAAMkC,OAJnB,GAMjB3B,EAAQ0L,SAGZ,kBAAC,iBAAD,CAAeya,SAAUntB,KAAKmtB,SAAUH,OAAQhtB,KAAKgtB,SACrD,kBAAC,GAAD,CAAarkB,MAAO3I,KAAKyG,MAAMkC,QAC/B,kBAAC,WAAD,MACC3I,KAAKyG,MAAMy5C,gBACR,kBAACjL,EAAA,EAAD,CAAOt3B,UAAW,EAAG9W,UAAWG,EAAQm5C,UACpC,kBAACzrC,EAAA,EAAD,CAAYxB,QAAQ,KAAKid,UAAU,MAAnC,iDAGA,kBAACzb,EAAA,EAAD,CACIvN,MAAO,gBACPN,UAAWG,EAAQo5C,UAElBpgD,KAAKyG,MAAM45C,kBAAkBxgD,UAKzCG,KAAKyG,MAAM+F,UAAYxM,KAAKyG,MAAMy5C,gBAC/B,yBAAKr5C,UAAWG,EAAQwF,SACpB,kBAACW,GAAA,EAAD,OAIiB,KAAxBnN,KAAKyG,MAAM1D,UACRyB,GAC8B,IAA9BxE,KAAKyG,MAAMhF,QAAQ0B,QACY,IAA/BnD,KAAKyG,MAAMjF,SAAS2B,SACnBnD,KAAKyG,MAAM+F,UACXxM,KAAKyG,MAAMy5C,gBACR,yBAAKr5C,UAAWG,EAAQinC,gBACpB,kBAAC,KAAD,CAAWpnC,UAAWG,EAAQs5C,YAC9B,yBAAKz5C,UAAWG,EAAQknC,cAAxB,wCAGA,yBAAKrnC,UAAWG,EAAQu5C,gBAAxB,kHAKe,KAAxBvgD,KAAKyG,MAAM1D,UACoB,IAA9B/C,KAAKyG,MAAMhF,QAAQ0B,QACY,IAA/BnD,KAAKyG,MAAMjF,SAAS2B,SACnBnD,KAAKyG,MAAM+F,UACXxM,KAAKyG,MAAMy5C,gBACmB,IAA9BlgD,KAAKyG,MAAMhF,QAAQ0B,QACe,IAA/BnD,KAAKyG,MAAMjF,SAAS2B,SACnBnD,KAAKyG,MAAM+F,UACXxM,KAAKyG,MAAMy5C,iBACX17C,IACL,yBAAKqC,UAAWG,EAAQinC,gBACpB,kBAAC,IAAD,CAASpnC,UAAWG,EAAQs5C,YAC5B,yBAAKz5C,UAAWG,EAAQknC,cAAxB,+CAKP0Q,GAAYmB,O,GAnUGpmC,aAmVjB6mC,GALE3mC,aAtXO,SAACtW,GACrB,MAAO,CACHkB,KAAMlB,EAAMuW,UAAUrV,KACtBg8C,kBAAmBl9C,EAAMuF,WAAW1E,KACpCyE,WAAYtF,EAAMuF,WAAWC,mBAC7Bm2C,WAAY37C,EAAMuF,WAAWo2C,WAC7B19C,SAAU+B,EAAMD,SAAS9B,SACzBC,QAAS8B,EAAMD,SAAS7B,QACxB+K,QAASjJ,EAAMuF,WAAWwsB,iBAC1B4qB,eAAgB38C,EAAMuF,WAAWo3C,eACjCG,kBAAmB98C,EAAMuF,WAAWu3C,kBACpCt9C,SAAUQ,EAAMD,SAASP,SACzBrB,SAAU6B,EAAMD,SAAS5B,aAIN,SAACgG,GACxB,MAAO,CACHg5C,eAAgB,SAACj8C,GACbiD,EAASyhB,YAAW1kB,KAGxB+kB,kBAAmB,SAACpnB,EAAMgC,GACtBsD,EAAS8hB,YAAkBpnB,EAAMgC,KAErCmxB,WAAY,WACR7tB,EAAS6tB,gBAEb5M,kBAAmB,SAAC7kB,GAChB4D,EAASihB,YAAkB7kB,KAE/BylB,iBAAkB,WACd7hB,EAAS6hB,gBAEb41B,WAAY,SAACl2C,GACTvB,EAASpE,GAASs2C,QAAQxwC,iBAAiBH,QAmVtC4Q,CAGf9J,cA7da,SAAC7J,GAAD,cAAY,CACvB4jB,MAAO,CACHzjB,QAASH,EAAM0F,QAAQ,GACvBkT,UAAW,SACX3X,MAAOjB,EAAMe,QAAQ4F,KAAKS,UAC1BpC,OAAQ,QAEZ8E,MAAI,GACA4b,SAAU,EACVvlB,QAAS,OACTumB,UAAW,OACX7hB,OAAQ,uBAJR,cAKC7E,EAAMI,YAAY4U,GAAG,MAAQ,CAC1B0R,UAAW,OACX7hB,OAAQ,wBAPZ,cASC7E,EAAMI,YAAYC,KAAK,MAAQ,CAC5BwE,OAAQ,SAVZ,GAaJi1C,WAAS,GACL35C,QAAS,MACTK,gBAAiBR,EAAMe,QAAQyJ,WAAWoZ,MAAMsE,OAF3C,cAGJloB,EAAMI,YAAY4U,GAAG,MAAQ,CAC1B0R,UAAW,OACX7hB,OAAQ,wBALP,cAOJ7E,EAAMI,YAAYC,KAAK,MAAQ,CAC5BwE,OAAQ,SARP,GAWT00C,WAAY,CACRv0C,OAAQ,YACR/D,MAAO,UACPmwC,WAAY,OAEhB9qC,QAAS,CACL8hB,eAAgB,SAChB/hB,QAAS,OACTE,UAAW,QAEf0zC,SAAU,CACN95C,QAASH,EAAM0F,QAAQ,IAE3Bw0C,SAAU,CACN3zC,UAAW,QAEfwhC,eAAgB,CACZ5iC,OAAQ,IACRN,OAAQ,QACRG,OAAQ,YACR9E,MAAO,QACPe,MAAOjB,EAAMe,QAAQ4F,KAAKX,SAC1B4S,UAAW,SACXyP,WAAY,QAEhB+xB,UAAW,CACPz2C,SAAU,SAEdqkC,aAAc,CACVrkC,SAAU,OACV1C,MAAOjB,EAAMe,QAAQ4F,KAAKX,UAE9Bq0C,eAAgB,CACZp5C,MAAOjB,EAAMe,QAAQ4F,KAAK8zC,MAE9BlE,SAAS,eACJv2C,EAAMI,YAAYC,KAAK,MAAQ,CAC5BgG,QAAS,SAGjBgzC,QAAS,CACL9vC,SAAU,GAEdmxC,SAAU,CACNl0C,WAAY,OACZD,UAAW,OACXwf,aAAc,QAElB40B,UAAW,CACP91C,OAAQ,OACR3E,MAAO,QAEX65C,UAAW,CACPl1C,OAAQ,OACR8hB,UAAW,KAEfuyB,eAAgB,CACZnvC,OAAQ,EACR6wC,KAAM,gBACN/1C,OAAQ,EACRG,QAAS,EACTykB,SAAU,SACVtpB,QAAS,EACTiB,SAAU,WACV6D,IAAK,GACL/E,MAAO,MA6Xb2J,CAAmBgK,YAAWskC,M,wECxf1Br4C,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC66C,WAAY,CACR55C,MAAO,WAEXixC,OAAQ,CACJloC,UAAW,aAAehK,EAAMe,QAAQ4L,QAAQtF,OAEpDmF,OAAQ,CACJsuC,cAAe,YAIR,SAASC,GAAWx6C,GAC/B,IAAMy6C,EAAWpwC,IAAMkyB,OAAO,MAE9B,EAAoC8Z,aAAQ,CACxCC,OAAQ,SACRC,KAAM,WACF,IAAIv2C,EAAM06C,KAGN,MAAO,CACH1yC,OAAQ,CACJxM,IAAK,EACLwC,KAAMgC,EAAMhC,KACZvC,KAAuB,MAAjBuE,EAAMgI,OAAiB,GAAKhI,EAAMgI,SANhDyyC,EAAS3jC,QAAQ6iB,SAWzB6c,QAAS,SAAC7D,GAAD,MAAc,CACnB8D,OAAQ9D,EAAQ8D,SAChBC,QAAS/D,EAAQ+D,cAjBzB,0BAASA,EAAT,EAASA,QAASD,EAAlB,EAAkBA,OAAUF,EAA5B,KAqBM3E,EAAW8E,GAAWD,EAE5Bx3C,qBAAU,WACFe,EAAM06C,MAAQ9I,GACd6I,EAAS3jC,QAAQ6iB,UAGtB,CAACiY,IAEJ,IAAMrxC,EAAUhB,KAChB,OACI,0BAAMoC,QAAS3B,EAAM2B,QAASwV,IAAKsjC,GAC/B,kBAACvyC,EAAA,EAAD,CACIiP,IAAKo/B,EACLn2C,UAAWsB,KAAW,eAEbnB,EAAQoxC,OAASC,GAEtBrxC,EAAQ0L,QAEZyd,UAAU,OACVloB,MAAOxB,EAAMwB,OAEZxB,EAAM06C,MAAQ,kBAAC,KAAD,OACb16C,EAAM06C,MACJ,oCACK16C,EAAMgI,OACNhI,EAAM26C,MACH,kBAAC,KAAD,CAAYv6C,UAAWG,EAAQ+5C,gB,aCjErD/6C,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCkyC,OAAQ,CACJnoC,OAAQ,aAAe/J,EAAMe,QAAQ4L,QAAQtF,WAItC,SAAS8zC,GAAa56C,GACjC,MAAoCq2C,aAAQ,CACxCC,OAAQ,SACRC,KAAM,WACFv/B,QAAQC,IAAI,CACRjP,OAAQ,CACJxM,IAAK,EACLwC,KAAMgC,EAAMhC,KACZvC,KAAuB,MAAjBuE,EAAMgI,OAAiB,GAAKhI,EAAMgI,WAIpDwuC,QAAS,SAAC7D,GAAD,MAAc,CACnB8D,OAAQ9D,EAAQ8D,SAChBC,QAAS/D,EAAQ+D,cAbzB,0BAASA,EAAT,EAASA,QAASD,EAAlB,EAAkBA,OAAUF,EAA5B,KAiBM3E,EAAW8E,GAAWD,EAE5Bx3C,qBAAU,WACNe,EAAM66C,gBAAgB76C,EAAMxE,GAAIo2C,KAEjC,CAACA,IAEJ,IAAMrxC,EAAUhB,KAChB,OACI,kBAACyO,GAAA,EAAD,CACImJ,IAAKo/B,EACLn2C,UAAWsB,KAAW,eACjBnB,EAAQoxC,OAASC,IAEtBjwC,QAAS,SAACxC,GAAD,OAAOa,EAAM0iB,WAAWvjB,EAAGa,EAAMxE,MAE1C,kBAAC0Q,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAcC,QAASpM,EAAMgI,UC/C1B,SAAS8yC,GAAS96C,GAI7B,IAHA,IAAI+6C,EACA/+C,EAAQgE,EAAM8b,QAAQpf,OACpB8I,EAAS,GACN3J,EAAQ,EAAGA,EAAQmE,EAAM8b,QAAQpf,OAAQb,IAC9C2J,EAAO3J,IAAS,EAGpB,IAAMg/C,EAAkB,SAACr/C,EAAIoB,GAEzB,GADA4I,EAAOhK,GAAMoB,EACTA,EACAo+C,aAAaD,OACV,CACH,IAAIE,GAAc,EAClBz1C,EAAO7I,SAAQ,SAACu+C,GACRA,IACAD,GAAc,MAGlBA,IACIj/C,GAAS,EACT++C,EAAQtvC,YAAW,WACfzL,EAAMuD,YACP,KAEHvH,KAIZgb,QAAQC,IAAIzR,IAGhB,OACI,oCACKxF,EAAM8b,QAAQtY,KAAI,SAACwE,EAAQxM,GAAT,OACf,kBAACo/C,GAAD,CACIl3C,IAAKlI,EACLwC,KAAM,IAAMgC,EAAM8b,QAAQzO,MAAM,EAAG7R,GAAIugB,KAAK,KAC5C2G,WAAY1iB,EAAM0iB,WAClBlnB,GAAIA,EACJq/C,gBAAiBA,EACjB7yC,OAAQA,Q,cC0FtBmzC,G,oDAaF,WAAYn7C,GAAQ,IAAD,+BACf,cAAMA,IAbV1D,SAAW,GAYQ,EAXnB8+C,UAAY,EAWO,EATnBt+C,MAAQ,CACJ8B,QAAQ,EACRy8C,cAAe,GACfv/B,QAAS,GACTzY,SAAU,KACVi4C,YAAY,EACZC,aAAc,MAGC,EAKnBhzB,kBAAoB,WAChB,IACMlN,EADM,IAAImgC,IAAIzhC,YAAW1f,OAAOC,SAASC,OACjCkhD,aAAatrC,IAAI,QAC/B,EAAKurC,WAAiB,OAANrgC,EAAa,IAAMA,GAE9B,EAAKrb,MAAM4tB,SAEZ,EAAK5tB,MAAM8hB,qBAAoB,GAInCznB,OAAOshD,WAAa,WAChB,IACMtgC,EADM,IAAImgC,IAAIzhC,YAAW1f,OAAOC,SAASC,OACjCkhD,aAAatrC,IAAI,QACrB,OAANkL,GACA,EAAKrb,MAAMi6C,eAAe5+B,KApBnB,EAyBnBqgC,WAAa,WAAkB,IAAjB19C,EAAgB,uDAAT,KACjB,EAAKgC,MAAMovB,mBAAkB,EAAO,MACpC,EAAK1f,SAAS,CACVoM,QACa,OAAT9d,EACMA,EAAKoP,OAAO,GAAGwI,MAAM,KACrB,EAAK5V,MAAMhC,KAAKoP,OAAO,GAAGwI,MAAM,OAE9C,IAAIoZ,EAAmB,OAAThxB,EAAgBA,EAAO,EAAKgC,MAAMhC,KAC1C49C,EAAS,EAAK57C,MAAMkC,MACpB,eAAiB,EAAKlC,MAAMkC,MAAMwB,IAChB,KAAlB,EAAKpH,SACL,aACA,gBACN0yB,EAA4B,KAAlB,EAAK1yB,SAAkB0yB,EAAU,EAAK1yB,SAEhDiM,IAAI4H,IAAIyrC,EAAS7qC,mBAAmBie,IAC/BrmB,MAAK,SAAC7O,GACH,EAAKshD,UAAYthD,EAASG,KAAK4hD,OAC/B,EAAK77C,MAAM87C,eAAehiD,EAASG,KAAK8hD,SACxC,EAAK/7C,MAAMmvB,2BAA0B,GACf,KAAlB,EAAK7yB,UACL0d,YAAgB,OAAQjJ,mBAAmBie,IAE3Cl1B,EAASG,KAAK4D,QACd,EAAKmC,MAAMg8C,iBAAiB,CACxBxgD,GAAI1B,EAASG,KAAK4D,OAAOrC,GACzBC,KAAM3B,EAASG,KAAK4D,OAAOpC,KAC3BE,KAAM7B,EAASG,KAAK4D,OAAOlC,KAC3Bg3B,QAAS74B,EAASG,KAAK4D,OAAOo+C,SAC9BzpB,cAAe14B,EAASG,KAAK4D,OAAOq+C,eAI/CtzC,OAAM,SAACtP,GACJ,EAAK0G,MAAMovB,mBAAkB,EAAM91B,MAG3C,EAAK6iD,eAAc,IA/DJ,EAkEnBC,QAAU,SAACp+C,GACP,EAAKgC,MAAMmvB,2BAA0B,GACrC,EAAKnvB,MAAMovB,mBAAkB,EAAO,SACpC,EAAKssB,WAAW19C,IArED,EAwEnB6R,iCAAmC,SAACC,GAC5B,EAAK9P,MAAM1D,WAAawT,EAAUxT,WAClC,EAAKA,SAAWwT,EAAUxT,UAE1B,EAAK0D,MAAMhC,OAAS8R,EAAU9R,MAC9B,EAAK09C,WAAW5rC,EAAU9R,MAE1B,EAAKgC,MAAMyoB,UAAY3Y,EAAU2Y,SACjC,EAAK2zB,QAAQtsC,EAAU9R,OAhFZ,EAwFnBq+C,mBAAqB,SAACC,EAAWC,GA1IvB,IAACC,EA2IH,EAAK1/C,MAAMgf,UAAYygC,EAAWzgC,SAClC,EAAKqgC,eAAc,GAEnB,EAAKn8C,MAAMg6C,oBAAsBsC,EAAUtC,oBA9IxCwC,EA+IG,IA/II,IAAI/hD,SAAQ,SAAC0b,GAAD,OAAa1K,WAAW0K,EAASqmC,OA+I5C7zC,MAAK,kBAAM,EAAKwzC,oBA7FhB,EAiGnBA,cAAgB,SAACM,GACb,KAAI,EAAKC,kBAAqBD,IAGD,OAAzB,EAAKvB,QAAQpkC,QAAkB,CAC/B,IAAM6lC,EACF,EAAKzB,QAAQpkC,QAAQ8lC,aACjB,EAAK1B,QAAQpkC,QAAQ+lC,cACzB,EAAK3B,QAAQpkC,QAAQgmC,YACjB,EAAK5B,QAAQpkC,QAAQimC,YACzBJ,IACA,EAAKD,kBAAmB,EACxB,EAAKhtC,SAAS,CAAE4rC,YAAY,MAE3BqB,GAA0B,EAAK7/C,MAAMw+C,YACtC,EAAK5rC,SAAS,CAAE4rC,YAAY,MAhHrB,EAqHnB54B,WAAa,SAAC/e,EAAOnI,GACbA,IAAO,EAAKsB,MAAMgf,QAAQpf,OAAS,EAEnC,EAAKgT,SAAS,CAAErM,SAAUM,EAAMvE,iBAExB,IAAR5D,GAC8B,IAA9B,EAAKsB,MAAMgf,QAAQpf,QACO,KAA1B,EAAKI,MAAMgf,QAAQ,IAEnB,EAAK9b,MAAM2H,kBACX,EAAK2W,gBACU,IAAR9iB,GACP,EAAKwE,MAAMi6C,eAAe,KAC1B,EAAK37B,gBAEL,EAAKte,MAAMi6C,eACP,IAAM,EAAKn9C,MAAMgf,QAAQzO,MAAM,EAAG7R,EAAK,GAAGugB,KAAK,MAEnD,EAAKuC,gBAvIM,EA2InBA,YAAc,WACV,EAAK5O,SAAS,CAAErM,SAAU,KAAMk4C,aAAc,KAAMz4C,WAAY,QA5IjD,EA+InBk6C,eAAiB,SAAC79C,GACd,EAAKuQ,SAAS,CAAE6rC,aAAcp8C,EAAEC,iBAhJjB,EAmJnB69C,cAAgB,SAAC99C,GAEb,GADA,EAAKmf,cACK,YAANnf,EAAJ,CAIA,IAAM2I,EAAc,EAAK9H,MAAMhC,KAAK4X,MAAM,KACpCsnC,EAAY,CACd,CACI1hD,GAAI,EAAK4/C,UACTz/C,KAAM,MACNF,KAAMqM,EAAY+Q,MAClB7a,KAA6B,IAAvB8J,EAAYpL,OAAe,IAAMoL,EAAYiU,KAAK,OAIhE,OAAQ5c,GACJ,IAAK,QACD,EAAKa,MAAMkiB,kBAAkBg7B,GAC7B,EAAKl9C,MAAM2iB,kBACX,MACJ,IAAK,YACD,EAAK3iB,MAAMmkB,yBACX,MACJ,IAAK,WACD,EAAKnkB,MAAMkiB,kBAAkBg7B,GAC7B,EAAKl9C,MAAM2vB,qBACX,MACJ,IAAK,UACD,EAAK3vB,MAAMqvB,6BA1Bf,EAAK+sB,WApJT,EAAKlB,QAAU7wC,IAAM+K,YAFN,E,yDAoFnB,WACI7b,KAAKyG,MAAM87C,eAAe,M,oBAkG9B,WAAU,IAAD,OACGv7C,EAAYhH,KAAKyG,MAAjBO,QACFxC,EAAasS,IAAWtS,WAAWxE,KAAKyG,MAAM1F,SAASgW,UACvD0O,EAAO7kB,IAAKwZ,UAEZwpC,EACF,kBAAC9e,GAAA,EAAD,CACI7iC,GAAG,oBACH6H,SAAU9J,KAAKuD,MAAMuG,SACrB1F,KAAM2F,QAAQ/J,KAAKuD,MAAMuG,UACzBE,QAAShK,KAAK+kB,YACd8+B,sBAAsB,GAEtB,kBAACpvC,GAAA,EAAD,CAAUrM,QAAS,kBAAM,EAAKs7C,cAAc,aACxC,kBAAC/wC,GAAA,EAAD,KACI,kBAAC,KAAD,OAFR,gBAMyB,KAAxB3S,KAAKyG,MAAM1D,UAAmByB,GAC3B,6BACI,kBAAC6N,EAAA,EAAD,MACA,kBAACoC,GAAA,EAAD,CAAUrM,QAAS,kBAAM,EAAKs7C,cAAc,WACxC,kBAAC/wC,GAAA,EAAD,KACI,kBAAC,KAAD,OAFR,gBAMC8S,EAAKY,MAAM3M,UACR,kBAACjF,GAAA,EAAD,CACIrM,QAAS,kBAAM,EAAKs7C,cAAc,cAElC,kBAAC/wC,GAAA,EAAD,KACI,kBAACyoC,GAAA,EAAD,OAJR,gBASJ,kBAAC/oC,EAAA,EAAD,MACA,kBAACoC,GAAA,EAAD,CACIrM,QAAS,kBAAM,EAAKs7C,cAAc,eAElC,kBAAC/wC,GAAA,EAAD,KACI,kBAAC,KAAD,OAJR,kCAQA,kBAAC8B,GAAA,EAAD,CAAUrM,QAAS,kBAAM,EAAKs7C,cAAc,aACxC,kBAAC/wC,GAAA,EAAD,KACI,kBAAC,KAAD,OAFR,8BAWhB,OACI,yBACI9L,UAAWsB,KAAW,eAEbnB,EAAQ88C,YAAc9jD,KAAKyG,MAAM4tB,SAEtCrtB,EAAQ6iB,YAGZ,yBAAKhjB,UAAWG,EAAQ+8C,oBACpB,yBAAKl9C,UAAWG,EAAQg9C,IAAKpmC,IAAK5d,KAAK2hD,SACnC,8BACI,kBAACV,GAAD,CACIxyC,OAAO,IACPhK,KAAK,IACL2D,QAAS,SAACxC,GAAD,OAAO,EAAKujB,WAAWvjB,GAAI,MAExC,kBAAC,KAAD,CAAWiB,UAAWG,EAAQi9C,aAEjCjkD,KAAKuD,MAAMw+C,YACR,8BACI,kBAACd,GAAD,CACIE,MAAI,EACJl5C,MAAM,2BACNG,QAASpI,KAAKyjD,iBAElB,kBAAC3e,GAAA,EAAD,CACI7iC,GAAG,iBACH6H,SAAU9J,KAAKuD,MAAMy+C,aACrB59C,KAAM2F,QAAQ/J,KAAKuD,MAAMy+C,cACzBh4C,QAAShK,KAAK+kB,YACd8+B,sBAAsB,GAEtB,kBAACtC,GAAD,CACIv3C,QAAShK,KAAK+kB,YACdxC,QAASviB,KAAKuD,MAAMgf,QAAQzO,MACxB,GACC,GAELqV,WAAYnpB,KAAKmpB,cAGzB,kBAAC,KAAD,CAAWtiB,UAAWG,EAAQi9C,YAK9B,kBAAChD,GAAD,CACIxyC,OAAQzO,KAAKuD,MAAMgf,QAAQzO,OAAO,GAClCrP,KACI,IACAzE,KAAKuD,MAAMgf,QACNzO,MAAM,GAAI,GACV0O,KAAK,KAEd4+B,MAAM,EACNh5C,QAAS,SAACxC,GAAD,OACL,EAAKujB,WACDvjB,EACA,EAAKrC,MAAMgf,QAAQpf,OAAS,MAIvCygD,IAGP5jD,KAAKuD,MAAMw+C,YACT/hD,KAAKuD,MAAMgf,QAAQtY,KAAI,SAACwE,EAAQxM,EAAIsgB,GAAb,OACnB,0BAAMpY,IAAKlI,GACK,KAAXwM,GACG,8BACI,kBAACwyC,GAAD,CACIxyC,OAAQA,EACRhK,KACI,IACA8d,EACKzO,MAAM,EAAG7R,GACTugB,KAAK,KAEd4+B,KAAMn/C,IAAOsgB,EAAQpf,OAAS,EAC9BiF,QAAS,SAACxC,GAAD,OACL,EAAKujB,WAAWvjB,EAAG3D,MAG1BA,IAAOsgB,EAAQpf,OAAS,GACrBygD,EACH3hD,IAAOsgB,EAAQpf,OAAS,GACrB,kBAAC,KAAD,CACI0D,UACIG,EAAQi9C,kBAS5C,yBAAKp9C,UAAWG,EAAQk9C,iBACpB,kBAACz7C,GAAA,EAAD,CAAYC,SAAO,EAACC,MAAO3I,KAAKyG,MAAMkC,UAG9C,kBAAC0J,EAAA,EAAD,W,GApWiBsH,aAoXlBwqC,GALGtqC,aA3cM,SAACtW,GACrB,MAAO,CACHkB,KAAMlB,EAAMuW,UAAUrV,KACtByqB,QAAS3rB,EAAMuW,UAAUoV,QACzBuxB,kBAAmBl9C,EAAMuF,WAAW1E,KACpCyE,WAAYtF,EAAMuF,WAAWC,mBAC7BhG,SAAUQ,EAAMD,SAASP,SACzBm8C,WAAY37C,EAAMuF,WAAWo2C,eAIV,SAACx3C,GACxB,MAAO,CACHg5C,eAAgB,SAACj8C,GACbiD,EAASyhB,YAAW1kB,KAExB8wB,WAAY,WACR7tB,EAAS6tB,gBAEbM,kBAAmB,SAAC5pB,EAAQhL,GACxByG,EAASmuB,YAAkB5pB,EAAQhL,KAEvCshD,eAAgB,SAAC3+C,GACb8D,EAASpE,GAASs2C,QAAQ2I,eAAe3+C,KAE7CgyB,0BAA2B,SAAC3pB,GACxBvE,EAASkuB,YAA0B3pB,KAEvCmC,gBAAiB,WACb1G,EAAS0G,gBAEbua,kBAAmB,SAACjlB,GAChBgE,EAASihB,YAAkBjlB,KAE/BknB,uBAAwB,WACpBljB,EAASkjB,gBAEbkL,qBAAsB,WAClBpuB,EAASouB,gBAEb1M,gBAAiB,WACb1hB,EAAS0hB,gBAEbb,oBAAqB,SAACnkB,GAClBsD,EAASijB,YAAmBvmB,KAEhCgyB,mBAAoB,WAChB1uB,EAAS0uB,gBAEbqsB,iBAAkB,SAACn+C,GACfoD,EAAS+6C,4BAAiBn+C,QAyZpBuV,CAGhB9J,cArZa,SAAC7J,GAAD,YAAY,CACvB2jB,WAAS,mBACJ3jB,EAAMI,YAAYC,KAAK,MAAQ,CAC5BgG,QAAS,SAFR,uBAIG,QAJH,yBAKK,UALL,gCAMYrG,EAAMe,QAAQyJ,WAAWoZ,OANrC,GAQTi6B,mBAAoB,CAChBx3C,QAAS,OACT+hB,eAAgB,iBAEpB01B,IAAK,CACDj5C,OAAQ,OACR1E,QAAS,WACTkG,QAAS,QAEb23C,gBAAiB,CACb31B,WAAY,MACZhmB,YAAa,QAEjB07C,UAAW,CACPx3C,UAAW,MACX6f,cAAe,MACfnlB,MAAO,WAEX45C,WAAY,CACR55C,MAAO,WAEX28C,YAAa,CACT1oC,aAAc,kBAsXpBrL,CAAmBgK,YAAW6nC,M,2DCpf1B57C,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,OAAQ,CACJC,MAAO,YASTI,GAAW,SAACC,GAAD,OACb,kBAAC,IAAD,CACIC,gBAAiBD,EAAME,KAAO,OAAS,UACvCC,gBAAiBH,EAAME,KAAO,UAAY,OAC1CE,UAAWJ,EAAMI,aAkBVu9C,OAdf,WACI,IAAMl+C,EAAQa,eACRC,EAAUhB,KAEhB,OACI,6BACI,kBAAC,GAAD,CACIW,KAA6B,SAAvBT,EAAMe,QAAQ7E,KACpByE,UAAWG,EAAQb,W,2CCJ7BH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyhB,OAAQ,CACJvhB,MAJY,IAKZ8kB,WAAY,GAEhBnB,YAAa,CACT3jB,MARY,IASZ8J,UACI,6GAERm0C,gBAAiB,CACb10B,SAAU,QAEd9J,OAAQ,CACJtZ,QAAS,OACTlG,QAASH,EAAM0F,QAAQ,GACvB04C,aAAc,iBAElBC,SAAU,CAAEn+C,MAAO,GAAI2E,OAAQ,IAC/By5C,YAAa,CAAE36C,SAAU,IACzB46C,WAAY,CACRt9C,MAAOjB,EAAMe,QAAQ4F,KAAKS,UAC1BlH,MAAO,GACP2E,OAAQ,IAEZwK,SAAU,CACN7I,WAAYxG,EAAM0F,QAAQ,GAC1BrD,YAAarC,EAAM0F,QAAQ,GAC3B22B,UAAW,YACX3W,SAAU,GAEd84B,UAAW,CACPC,UAAW,aACXl4C,UAAW,GAEfm4C,eAAgB,CACZv+C,QAASH,EAAM0F,QAAQ,IAE3Bi5C,WAAY,CACR19C,MAAOjB,EAAMe,QAAQ4F,KAAKS,UAC1BjH,QAASH,EAAM0F,QAAQ,IAE3Bk5C,UAAW,CACP39C,MAAOjB,EAAMe,QAAQ4F,KAAKX,SAC1B7F,QAASH,EAAM0F,QAAQ,IAE3Bm5C,WAAY,CACR1+C,QAASH,EAAM0F,QAAQ,GACvB22B,UAAW,aAEfla,OAAQ,CACJ/gB,SAAU,YAEdW,MAAO,CACHyE,WAAYxG,EAAM0F,QAAQ,GAC1By5B,KAAM,OAIRL,GAAal0B,IAAMm0B,YAAW,SAAoBx+B,EAAOmX,GAC3D,OAAO,kBAACsnB,GAAA,EAAD,eAAOC,UAAU,KAAKvnB,IAAKA,GAASnX,OAGhC,SAASu+C,KACpB,IAAMt9C,EAAWC,cACX1E,EAAcuE,aAAY,SAACjE,GAAD,OAAWA,EAAMD,SAASL,eACpDvB,EAAW8F,aAAY,SAACjE,GAAD,OAAWA,EAAMD,SAAS5B,YACjDujD,EAAap9C,uBAAY,SAACzD,GAAD,OAAUsD,EAASw9C,sBAAW9gD,MAAQ,CACjEsD,IAEEmG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAEC+qB,EAAa5qB,uBAAY,SAAC+X,GAAD,OAAOlY,EAASyhB,YAAWvJ,MAAK,CAAClY,IAC1D3E,EAAWyE,aAAY,SAACjE,GAAD,OAAWA,EAAMD,SAASP,YACvD,EAA4BqC,mBAAS,MAArC,mBAAO1B,EAAP,KAAeyhD,EAAf,KACA,EAA8B//C,mBAAS,MAAvC,mBAAOggD,EAAP,KAAgBC,EAAhB,KAkBA3/C,qBAAU,WAjBQ,IAAC+yC,EAkBf4M,EAAW,MACPpiD,IACwB,IAApBvB,EAASyB,OACT8hD,GAAW,IAEXE,EAAUzjD,EAAS,IAvBZ+2C,EAwBG/2C,EAAS,GAvB3BsN,IAAI4H,IACA,oBACI6hC,EAAOx2C,GACP,gBACc,KAAbc,EAAkB,OAAS,SAC5B,eACiB,QAAhB01C,EAAOr2C,MAAgBwR,YAE3BxE,MAAK,SAAC7O,GACH8kD,EAAW9kD,EAASG,SAEvB2O,OAAM,SAACtP,GACJ8N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,gBAcvD,CAAC6B,EAAUuB,IAEd,IAAM+D,EAAUhB,KACVs/C,EAAY,CACd,CACIrwC,MAAO,eACP5R,MAAO,SAACkiD,EAAGC,GAAJ,OACHtlC,YAAaqlC,EAAEpjD,MACf,MACAojD,EAAEpjD,KAAKsjD,iBACP,kBACJlX,KAAM,SAACgX,GAAD,OAAO,IAEjB,CACItwC,MAAO,2BACP5R,MAAO,SAACkiD,EAAGC,GAAJ,OAAUD,EAAEjhD,QACnBiqC,KAAM,SAACgX,GAAD,MAAkB,SAAXA,EAAEnjD,OAEnB,CACI6S,MAAO,2BACP5R,MAAO,SAACkiD,EAAGC,GAAJ,OAAUD,EAAEG,iBAAiBD,iBAAnBF,WACjBhX,KAAM,SAACgX,GAAD,MAAkB,QAAXA,EAAEnjD,OAEnB,CACI6S,MAAO,2BACP5R,MAAO,SAACkiD,EAAGC,GAAJ,OAAUD,EAAEI,eAAeF,iBAAjBF,WACjBhX,KAAM,SAACgX,GAAD,MAAkB,QAAXA,EAAEnjD,OAEnB,CACI6S,MAAO,2BAEP5R,MAAO,SAACkiD,EAAGC,GACP,IAAM/gD,EAAkB,KAAX8gD,EAAE9gD,KAAc+gD,EAAE/gD,KAAO8gD,EAAE9gD,KAClCvC,EAAO2gB,YAASpe,GACtB,OACI,kBAAC+O,GAAA,EAAD,CAASvL,MAAOxD,GACZ,kBAACiqC,EAAA,EAAD,CACI1tC,KAAM,kBACNoH,QAAS,kBAAMqqB,EAAWhuB,KAEhB,KAATvC,EAAc,qBAAQA,KAKvCqsC,KAAM,SAACgX,GAAD,OAAO,IAEjB,CACItwC,MAAO,qBACP5R,MAAO,SAACkiD,EAAGC,GAAJ,OACHva,aAAgBsa,EAAEK,WAAY,wBAClCrX,KAAM,SAACgX,GAAD,OAAO,IAEjB,CACItwC,MAAO,qBACP5R,MAAO,SAACkiD,GAAD,OAAOta,aAAgBsa,EAAEM,WAAY,wBAC5CtX,KAAM,SAACgX,GAAD,OAAO,KAGfh1C,EACF,kBAACmvC,GAAA,EAAD,CAAM71B,WAAS,EAAChjB,UAAWG,EAAQ49C,iBAC7BQ,GAAW,kBAAC,GAAD,MACZA,GACG,oCACKE,EAAUr7C,KAAI,SAACutB,GACZ,GAAIA,EAAK+W,KAAK7qC,GACV,OACI,oCACI,kBAACg8C,GAAA,EAAD,CACIloB,MAAI,EACJmoB,GAAI,EACJ94C,UAAWG,EAAQ69C,YAElBrtB,EAAKviB,OAEV,kBAACyqC,GAAA,EAAD,CACIloB,MAAI,EACJmoB,GAAI,EACJ94C,UAAWG,EAAQ+9C,YAElBvtB,EAAKn0B,MAAM+hD,EAAS1hD,QAMxB,QAAhBA,EAAOtB,MACJ,kBAACs9C,GAAA,EAAD,CAAMloB,MAAI,EAACmoB,GAAI,GAAI94C,UAAWG,EAAQ89C,WAAtC,qBACQ,IACJ,kBAAC,KAAD,CACIgB,SAAUV,EAAQW,WAClBC,OAAO,aAQnC,OACI,oCACI,kBAACC,GAAA,EAAD,CAAQt8B,MAAI,GACR,kBAAC5c,GAAA,EAAD,CACI42B,YAAU,EACVv/B,KAAMnB,EACNmjC,oBAAqBpB,IAEpBthC,GACG,oCACI,kBAACgjC,GAAA,EAAD,CAAQ7/B,UAAWG,EAAQqhB,QACvB,kBAACse,GAAA,EAAD,KACI,kBAAClzB,GAAA,EAAD,CACIM,KAAK,QACL5M,MAAM,UACNiB,QAAS,kBAAM68C,GAAW,IAC1B94C,aAAW,SAEX,kBAAC+5C,GAAA,EAAD,OAEJ,kBAACxxC,EAAA,EAAD,CACIxB,QAAQ,KACRrM,UAAWG,EAAQiB,OAElBvE,EAAOxB,QAInBqO,KAKjB,kBAAC01C,GAAA,EAAD,CAAQ77B,QAAM,GACV,kBAAC+7B,GAAA,EAAD,CACIt/C,UAAWG,EAAQ2gB,OACnBzU,QAAQ,aACRlM,QAAS,CACL8iB,MAAO9iB,EAAQ+iB,aAEnB3lB,KAAMnB,EACNujB,OAAO,SAEP,kBAACmgB,GAAA,EAAD,MACA,yBAAK9/B,UAAWG,EAAQq9C,iBACnB3gD,GACG,oCACI,yBAAKmD,UAAWG,EAAQ6e,QACH,QAAhBniB,EAAOtB,MACJ,kBAAC00C,GAAA,EAAD,CACIjwC,UAAWG,EAAQy9C,aAGV,QAAhB/gD,EAAOtB,MACJ,kBAACoiC,GAAA,EAAD,CACIC,UAAQ,EACR59B,UAAWG,EAAQu9C,SACnB3X,cAAe5lC,EAAQw9C,YACvBjvC,SAAU7R,EAAOxB,OAGzB,yBAAK2E,UAAWG,EAAQuO,UACpB,kBAACb,EAAA,EAAD,CAAYxB,QAAQ,KAAKkzC,cAAY,GAChC1iD,EAAOxB,OAGhB,kBAACuR,GAAA,EAAD,CACIrL,QAAS,kBAAM68C,GAAW,IAC1Bp+C,UAAWG,EAAQ09C,UACnBv4C,aAAW,QACXhK,KAAM,SAEN,kBAAC+jD,GAAA,EAAD,SAKhB,kBAAC7zC,EAAA,EAAD,MACC9B,MCnSzB,IAsBM81C,G,oDACF,WAAY5/C,GAAQ,IAAD,+BACf,cAAMA,IACD2iC,MAAQt4B,IAAM+K,YAFJ,E,yDAInB,WACI7b,KAAKyG,MAAMkiB,kBAAkB,IAC7B3oB,KAAKyG,MAAMyR,iBACXlY,KAAKyG,MAAM0iB,WAAW,O,+BAG1B,WACQrS,IAAWtS,WAAWxE,KAAKyG,MAAM1F,SAASgW,WAC1C/W,KAAKyG,MAAM2V,eAAe,Q,oBAGlC,WACI,OACI,6BACI,kBAACkqC,GAAA,EAAD,CAAaC,QAASC,MAClB,kBAAC5sC,GAAA,QAAD,CAAQjR,MAAO3I,KAAKyG,MAAMkC,QAC1B,kBAAC,GAAD,CACI0rB,QAASr0B,KAAKyG,MAAM4tB,QACpB1rB,MAAO3I,KAAKyG,MAAMkC,QAEtB,kBAAC,GAAD,CAAUA,MAAO3I,KAAKyG,MAAMkC,QAC5B,kBAAC89C,GAAD,OAEJ,kBAACzB,GAAD,W,GA5BUrrC,aAoCXE,gBA1DS,iBAAO,MAEJ,SAACnS,GACxB,MAAO,CACH0U,eAAgB,SAACvP,GACbnF,EAAS0U,aAAevP,KAE5B8b,kBAAmB,SAAC7kB,GAChB4D,EAASihB,YAAkB7kB,KAE/BkK,eAAgB,SAACF,EAAUC,EAAY9M,EAAKkG,GACxCO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,KAEvD+Q,eAAgB,WACZxQ,EAASwQ,gBAEbiR,WAAY,SAAC1kB,GACTiD,EAASyhB,YAAW1kB,QAyCjBoV,CAGbE,YAAWssC,K,UCtEPrgD,GAAYC,aAAW,SAACC,GAAD,YAAY,CACrC+U,QAAM,GACF7U,MAAO,OACPqG,UAAW,OACXC,WAAYxG,EAAM0F,QAAQ,GAC1BrD,YAAarC,EAAM0F,QAAQ,IAJzB,cAKD1F,EAAMI,YAAY4U,GAAG,KAA0B,EAAnBhV,EAAM0F,QAAQ,IAAU,CACjDxF,MAAO,KACPsG,WAAY,OACZnE,YAAa,SARf,6BAUY,IAVZ,GAYN4S,OAAQ,CACJC,aAAc,WAQP,SAASsrC,KACpB,IAAMhrC,EAAOC,cACP5a,EAAW+a,cACXC,EANC,IAAIC,gBAAgBF,cAAcG,QAOjCha,EAAOia,cAAPja,GACFyF,EAAWC,cACXwU,EAActU,uBAChB,SAACI,GAAD,OAAWP,EAAS0U,aAAenU,MACnC,CAACP,IAELhC,qBAAU,WACN,GAAKoR,IAAWpS,YAAY3D,EAASgW,UAIjCoF,EAAYJ,EAAMnF,IAAI,aAJsB,CAC5C,IAAMnS,EAAOsX,EAAMnF,IAAI,KAAKyF,MAAM,KAClCF,EAAY1X,EAAKA,EAAKtB,OAAS,OAKpC,CAACuY,EAAKY,OAAO,GAAIvb,IAEpB,IAAMiG,EAAUhB,KAChB,OACI,yBAAKa,UAAWG,EAAQiU,QACpB,kBAACg6B,EAAA,EAAD,CAAOpuC,UAAWG,EAAQgJ,KAAM2N,UAAW,GACvC,kBAAC,KAAD,CACI9W,UAAWG,EAAQmU,OACnB4E,QAAS,CACLopB,MAAO,CACHtyB,IACIvX,eACCwX,IAAWpS,YAAY3D,EAASgW,UAC3B,kBACA9U,GAC6B,KAA5B8Z,EAAMnF,IAAI,cACL,SACAY,mBACIuE,EAAMnF,IAAI,eAEd,IACN,iBAAmBmF,EAAMnF,IAAI,a,+CC7C7D5Q,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCygD,cAAe,CACXtgD,QAASH,EAAM0F,QAAQ,IAE3B+sC,KAAM,CACFxmC,SAAU,IACVjH,OAAQ,UAEZ0uC,QAAS,CACLrtC,QAAS,QAEb0O,OAAO,aACH7U,MAAO,OACPqG,UAAW,OACXC,WAAYxG,EAAM0F,QAAQ,GAC1BrD,YAAarC,EAAM0F,QAAQ,IAC1B1F,EAAMI,YAAY4U,GAAG,KAA0B,EAAnBhV,EAAM0F,QAAQ,IAAU,CACjDxF,MAAO,KACPsG,WAAY,OACZnE,YAAa,SAGrBq+C,WAAY,CACRz0C,SAAU,SAEd00C,WAAY,CACRngD,gBAAiBR,EAAMe,QAAQ4L,QAAQtF,OAE3Cu5C,aAAc,CACVpgD,gBAAiBR,EAAMe,QAAQqG,UAAUC,OAE7Cw5C,KAAM,CACFt6C,UAAW,QAEfu6C,SAAU,CACNloC,UAAW,QACXrS,UAAW,OACXwf,aAAc,QAElBzgB,MAAO,CACHkB,WAAYxG,EAAM0F,QAAQ,GAC1Bb,OAAQ,IAEZk8C,YAAa,CACTnoC,UAAW,QACXrS,UAAW,OAQJ,SAASy6C,KACpB,IAAMlgD,EAAUhB,KACV0B,EAAWC,cAEXoU,EAPC,IAAIC,gBAAgBF,cAAcG,QAQnClb,EAAW+a,cACXiF,EAAUgR,cAEVlkB,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAGL,EAAwBtC,mBAAS,GAAjC,mBAAO+hD,EAAP,KAAaC,EAAb,KACA,EAA0BhiD,mBAAS,GAAnC,mBAAOypB,EAAP,KAAcw4B,EAAd,KACA,EAAkCjiD,mBAAS,IAA3C,mBAAOkiD,EAAP,KAAkBC,EAAlB,KACA,EAA8BniD,mBAAS,mBAAvC,mBAAOoiD,EAAP,KAAgBC,EAAhB,KAEMxrC,EAASpU,uBAAY,SAAC9E,EAAUokD,EAAMK,GACxC,IAAME,EAAQF,EAAQnrC,MAAM,KAC5BrN,IAAI4H,IACA,sBACIuwC,EACA,aACAO,EAAM,GACN,UACAA,EAAM,GACN,aACAlwC,mBAAmBzU,IAEtBqM,MAAK,SAAC7O,GACgC,IAA/BA,EAASG,KAAKoO,MAAM3L,QACpB0K,EACI,MACA,QACA,+DACA,QAGRw5C,EAAS9mD,EAASG,KAAKmuB,OACvB04B,EAAahnD,EAASG,KAAKoO,UAE9BO,OAAM,WACHxB,EAAe,MAAO,QAAS,2BAAQ,cAEhD,IAEHnI,qBAAU,WACN,IAAM3C,EAAWgZ,EAAMnF,IAAI,YACvB7T,EACAkZ,EAAOlZ,EAAUokD,EAAMK,GAEvB35C,EAAe,MAAO,QAAS,mDAAY,aAEhD,CAAC9M,IAcJ,OACI,yBAAK8F,UAAWG,EAAQiU,QACpB,kBAACykC,GAAA,EAAD,CAAM71B,WAAS,GACX,kBAAC61B,GAAA,EAAD,CAAMG,GAAI,EAAGF,GAAI,GACb,kBAACjrC,EAAA,EAAD,CAAYvN,MAAM,gBAAgB+L,QAAQ,MAA1C,6BAIJ,kBAACwsC,GAAA,EAAD,CAAMG,GAAI,EAAGF,GAAI,EAAG94C,UAAWG,EAAQigD,aACnC,kBAACh0C,EAAA,EAAD,KACI,kBAACsB,GAAA,EAAD,CACIpN,MAAO,YACPoL,SAlBE,SAACnI,GACvBq9C,EAAWr9C,EAAM1G,OAAOL,OACxB,IAAMN,EAAWgZ,EAAMnF,IAAI,YAC3BqF,EAAOlZ,EAAUokD,EAAM/8C,EAAM1G,OAAOL,QAgBhBA,MAAOmkD,GAEP,kBAAC/yC,GAAA,EAAD,CAAUpR,MAAO,mBAAjB,oDAGA,kBAACoR,GAAA,EAAD,CAAUpR,MAAO,kBAAjB,oDAGA,kBAACoR,GAAA,EAAD,CAAUpR,MAAO,kBAAjB,oDAGA,kBAACoR,GAAA,EAAD,CAAUpR,MAAO,iBAAjB,oDAGA,kBAACoR,GAAA,EAAD,CAAUpR,MAAO,cAAjB,oDAGA,kBAACoR,GAAA,EAAD,CAAUpR,MAAO,aAAjB,wDAOhB,kBAACq8C,GAAA,EAAD,CAAM71B,WAAS,EAACje,QAAS,GAAI/E,UAAWG,EAAQ+/C,MAC3CO,EAAUr9C,KAAI,SAAC5G,GAAD,OACX,kBAACq8C,GAAA,EAAD,CACIloB,MAAI,EACJmoB,GAAI,GACJE,GAAI,EACJ11C,IAAK9G,EAAMpB,GACX4E,UAAWG,EAAQ2/C,eAEnB,kBAACgB,GAAA,EAAD,CAAM9gD,UAAWG,EAAQ2xC,MACrB,kBAACiP,GAAA,EAAD,CACIx7C,OACI,8BACM/I,EAAM8R,QACJ,kBAACqvB,GAAA,EAAD,CACIjvB,SACIlS,EAAMM,OACAN,EAAMM,OAAOzB,KACb,GAEVuiC,UAAQ,IAEb,IACFphC,EAAM8R,QACH,kBAAC4Q,EAAA,EAAD,CACIlf,UAAWG,EAAQ8/C,cAEnB,kBAAC,KAAD,QAKhBtjD,OACI,kBAACgQ,GAAA,EAAD,CAAStL,UAAU,MAAMD,MAAM,gBAC3B,kBAACwL,GAAA,EAAD,CACIrL,QAAS,kBACL2Y,EAAQhS,KAAK,MAAQ1L,EAAM8G,OAG/B,kBAAC,KAAD,QAIZlC,MACI,kBAACuL,GAAA,EAAD,CACItL,UAAU,MACVD,MACI5E,EAAMM,OACAN,EAAMM,OAAOzB,KACb,gDAGV,kBAACwS,EAAA,EAAD,CACIuR,QAAM,EACNpf,UAAWG,EAAQ4/C,YAElBvjD,EAAMM,OACDN,EAAMM,OAAOzB,KACb,+CAAa,MAI/B2lD,UACI,mDACQ,IACJ,kBAAC,KAAD,CACI/B,SAAUziD,EAAMykD,YAChB9B,OAAO,mBASvC,yBAAKn/C,UAAWG,EAAQggD,UACpB,kBAACe,GAAA,EAAD,CACI/oB,MAAOtrB,KAAKurB,KAAKpQ,EAAQ,IACzBtc,SAhIS,SAACnI,EAAO/G,GAC7B+jD,EAAQ/jD,GACR,IAAMN,EAAWgZ,EAAMnF,IAAI,YAC3BqF,EAAOlZ,EAAUM,EAAOmkD,IA8HZrgD,MAAM,eAEP,K,qKCvKb6gD,G,+MACFzkD,MAAQ,CACJ4jD,KAAM,EACNt4B,MAAO,EACPy4B,UAAW,GACXW,QAAS,KACTT,QAAS,mB,EAGbx4B,kBAAoB,WAChB,EAAKk5B,SAAS,EAAG,EAAK3kD,MAAMikD,U,EAGhCS,QAAU,SAAC7T,GACP,EAAKj+B,SAAS,CAAE8xC,QAAS7T,K,EAG7BrvB,YAAc,WACV,EAAK5O,SAAS,CAAE8xC,QAAS,Q,EAG7BE,YAAc,SAAClmD,GACX+M,IAAI8I,OAAO,UAAY7V,GAClBmN,MAAK,WACF,IAAIg5C,EAAU,EAAK7kD,MAAM+jD,UACzBc,EAAUA,EAAQlkD,QAAO,SAACb,GACtB,OAAOA,EAAM8G,MAAQlI,KAEzB,EAAKkU,SAAS,CACVmxC,UAAWc,EACXv5B,MAAO,EAAKtrB,MAAMsrB,MAAQ,IAE9B,EAAKpoB,MAAMuH,eACP,MACA,QACA,iCACA,WAEmB,IAAnBo6C,EAAQjlD,QACR,EAAK+kD,SAAS,EAAG,EAAK3kD,MAAMikD,YAGnCn4C,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,a,EAKhBwoD,iBAAmB,SAACpmD,GAChB,IAAMqmD,EAAS50C,KAAKC,SAASC,SAAS,IAAIC,OAAO,GAAGC,MAAM,EAAG,GACvDs0C,EAAU,EAAK7kD,MAAM+jD,UACrBiB,EAAaH,EAAQ9vC,WAAU,SAACjV,GAClC,OAAOA,EAAM8G,MAAQlI,KAEzB+M,IAAIgJ,MAAM,UAAY/V,EAAI,CACtB4P,KAAM,WACNxO,MAAwC,KAAjC+kD,EAAQG,GAAYr3C,SAAkBo3C,EAAS,KAErDl5C,MAAK,SAAC7O,GACH6nD,EAAQG,GAAYr3C,SAAW3Q,EAASG,KACxC,EAAKyV,SAAS,CACVmxC,UAAWc,OAGlB/4C,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,a,EAKhB2oD,oBAAsB,SAACvmD,GACnB,IAAMmmD,EAAU,EAAK7kD,MAAM+jD,UACrBiB,EAAaH,EAAQ9vC,WAAU,SAACjV,GAClC,OAAOA,EAAM8G,MAAQlI,KAEzB+M,IAAIgJ,MAAM,UAAY/V,EAAI,CACtB4P,KAAM,kBACNxO,MAAO+kD,EAAQG,GAAY92C,QAAU,QAAU,SAE9CrC,MAAK,SAAC7O,GACH6nD,EAAQG,GAAY92C,QAAUlR,EAASG,KACvC,EAAKyV,SAAS,CACVmxC,UAAWc,OAGlB/4C,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,a,EAKhBqoD,SAAW,SAACf,EAAMK,GACd,IAAME,EAAQF,EAAQnrC,MAAM,KAC5BrN,IAAI4H,IACA,eACIuwC,EACA,aACAO,EAAM,GACN,UACAA,EAAM,IAETt4C,MAAK,SAAC7O,GACgC,IAA/BA,EAASG,KAAKoO,MAAM3L,QACpB,EAAKsD,MAAMuH,eACP,MACA,QACA,iCACA,QAGR,EAAKmI,SAAS,CACV0Y,MAAOtuB,EAASG,KAAKmuB,MACrBy4B,UAAW/mD,EAASG,KAAKoO,WAGhCO,OAAM,WACH,EAAK5I,MAAMuH,eAAe,MAAO,QAAS,2BAAQ,a,EAI9Dy6C,iBAAmB,SAACr+C,EAAO/G,GACvB,EAAK8S,SAAS,CACVgxC,KAAM9jD,IAEV,EAAK6kD,SAAS7kD,EAAO,EAAKE,MAAMikD,U,EAGpCkB,kBAAoB,SAACt+C,GACjB,EAAK+L,SAAS,CACVqxC,QAASp9C,EAAM1G,OAAOL,QAE1B,EAAK6kD,SAAS,EAAK3kD,MAAM4jD,KAAM/8C,EAAM1G,OAAOL,Q,EAGhDslD,UAAY,SAAChgD,GACT,OAAOA,EAAM6I,QAAU,GAAgC,IAA3B7I,EAAMigD,kB,6CAGtC,WAAU,IAAD,OACG5hD,EAAYhH,KAAKyG,MAAjBO,QAER,OACI,yBAAKH,UAAWG,EAAQiU,QACpB,kBAACykC,GAAA,EAAD,CAAM71B,WAAS,GACX,kBAAC61B,GAAA,EAAD,CAAMG,GAAI,EAAGF,GAAI,GACb,kBAACjrC,EAAA,EAAD,CAAYvN,MAAM,gBAAgB+L,QAAQ,MAA1C,6BAIJ,kBAACwsC,GAAA,EAAD,CAAMG,GAAI,EAAGF,GAAI,EAAG94C,UAAWG,EAAQigD,aACnC,kBAACh0C,EAAA,EAAD,KACI,kBAACsB,GAAA,EAAD,CACIpN,MAAO,YACPoL,SAAUvS,KAAK0oD,kBACfrlD,MAAOrD,KAAKuD,MAAMikD,SAElB,kBAAC/yC,GAAA,EAAD,CAAUpR,MAAO,mBAAjB,oDAGA,kBAACoR,GAAA,EAAD,CAAUpR,MAAO,kBAAjB,oDAGA,kBAACoR,GAAA,EAAD,CAAUpR,MAAO,kBAAjB,oDAGA,kBAACoR,GAAA,EAAD,CAAUpR,MAAO,iBAAjB,oDAGA,kBAACoR,GAAA,EAAD,CAAUpR,MAAO,cAAjB,oDAGA,kBAACoR,GAAA,EAAD,CAAUpR,MAAO,aAAjB,wDAOhB,kBAACq8C,GAAA,EAAD,CAAM71B,WAAS,EAACje,QAAS,GAAI/E,UAAWG,EAAQ+/C,MAC3C/mD,KAAKuD,MAAM+jD,UAAUr9C,KAAI,SAAC5G,GAAD,OACtB,kBAACq8C,GAAA,EAAD,CACIloB,MAAI,EACJmoB,GAAI,GACJE,GAAI,EACJ11C,IAAK9G,EAAMpB,GACX4E,UAAWG,EAAQ2/C,eAEnB,kBAACgB,GAAA,EAAD,CAAM9gD,UAAWG,EAAQ2xC,MACrB,kBAACiP,GAAA,EAAD,CACIx7C,OACI,8BACM/I,EAAM8R,QACJ,kBAACqvB,GAAA,EAAD,CACIjvB,SACIlS,EAAMM,OACAN,EAAMM,OAAOzB,KACb,GAEVuiC,UAAQ,IAEb,IACFphC,EAAM8R,QACH,kBAAC4Q,EAAA,EAAD,CACIlf,UACIG,EAAQ8/C,cAGZ,kBAAC,KAAD,QAKhB7+C,MACI,kBAACuL,GAAA,EAAD,CACItL,UAAU,MACVD,MACI5E,EAAMM,OACAN,EAAMM,OAAOzB,KACb,gDAGV,kBAACwS,EAAA,EAAD,CACIuR,QAAM,EACNpf,UAAWG,EAAQ4/C,YAElBvjD,EAAMM,OACDN,EAAMM,OAAOzB,KACb,+CAAa,MAI/B2lD,UACI,8BACK5c,aACG5nC,EAAMykD,YACN,sBAEH,EAAKa,UAAUtlD,IACZ,kBAAC+iB,GAAA,EAAD,CACIjkB,KAAK,QACL0E,UAAWG,EAAQwE,MACnByJ,MAAM,0BAM1B,kBAAC5C,EAAA,EAAD,MACA,kBAACw2C,GAAA,EAAD,CACIC,sBAAoB,EACpBh+C,MAAO,CACHyB,QAAS,QACTuS,UAAW,UAGf,kBAACtL,GAAA,EAAD,CAAStL,UAAU,MAAMD,MAAM,gBAC3B,kBAACwL,GAAA,EAAD,CACIrL,QAAS,kBACL,EAAK3B,MAAMsa,QAAQhS,KACf,MACI1L,EAAM8G,KACc,KAAnB9G,EAAM6N,SACD,GACA,aACA7N,EAAM6N,aAIxB,kBAAC,KAAD,CAAUrH,SAAU,YAEjB,IACS,KAAnBxG,EAAM6N,UACH,oCACI,kBAACsC,GAAA,EAAD,CACItL,UAAU,MACVD,MAAM,6CACNG,QAAS,kBACL,EAAKigD,iBACDhlD,EAAM8G,OAId,kBAACsJ,GAAA,EAAD,KACI,kBAAC,KAAD,CACI5J,SAAU,YAItB,kBAAC2J,GAAA,EAAD,CACItL,UAAU,MACVD,MAAM,2BACNG,QAAS,kBACL,EAAK6/C,QAAQ5kD,EAAM6N,YAGvB,kBAACuC,GAAA,EAAD,KACI,kBAAC2iC,EAAA,EAAD,CACIvsC,SAAU,aAMV,KAAnBxG,EAAM6N,UACH,kBAACsC,GAAA,EAAD,CACItL,UAAU,MACVD,MAAM,6CACNG,QAAS,kBACL,EAAKigD,iBAAiBhlD,EAAM8G,OAGhC,kBAACsJ,GAAA,EAAD,KACI,kBAAC,KAAD,CACI5J,SAAU,YAK1B,kBAAC2J,GAAA,EAAD,CACItL,UAAU,MACVD,MACI5E,EAAMoO,QACA,2BACA,2BAEVrJ,QAAS,kBACL,EAAKogD,oBAAoBnlD,EAAM8G,OAGnC,kBAACsJ,GAAA,EAAD,KACI,kBAAC,KAAD,CACIQ,GAAI5Q,EAAMoO,QACVyC,OACI,kBAAC,KAAD,CACIrK,SAAU,UAGlBuK,QACI,kBAACC,GAAA,EAAD,CACIxK,SAAU,cAM9B,kBAAC2J,GAAA,EAAD,CACItL,UAAU,MACVD,MAAM,2BACNG,QAAS,kBACL,EAAK+/C,YAAY9kD,EAAM8G,OAG3B,kBAACsJ,GAAA,EAAD,KACI,kBAAC,KAAD,CAAY5J,SAAU,mBAQlD,yBAAKhD,UAAWG,EAAQggD,UACpB,kBAACe,GAAA,EAAD,CACI/oB,MAAOtrB,KAAKurB,KAAKj/B,KAAKuD,MAAMsrB,MAAQ,IACpCtc,SAAUvS,KAAKyoD,iBACfthD,MAAM,eAEP,IACP,kBAAC4F,GAAA,EAAD,CACI3I,KAA6B,OAAvBpE,KAAKuD,MAAM0kD,QACjBj+C,QAAShK,KAAK+kB,aAEd,kBAAC1W,GAAA,EAAD,mCAAkC,IAClC,kBAACpB,GAAA,EAAD,KACI,kBAAC0H,GAAA,EAAD,CACI1S,GAAG,gBACHoB,MAAOrD,KAAKuD,MAAM0kD,QAClB/8C,OAAO,SACP4J,WAAS,KAEA,IACjB,kBAACpG,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAASpI,KAAK+kB,YAAa5d,MAAM,WAAzC,eACO,KACG,KACG,KACX,S,GA9YKwS,aAyZhBovC,GALClvC,aAhaQ,WACpB,MAAO,MAGgB,SAACnS,GACxB,MAAO,CACHsG,eAAgB,SAACF,EAAUC,EAAY9M,EAAKkG,GACxCO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,QAyZ/C0S,CAGd9J,cAnda,SAAC7J,GAAD,MAAY,CACvBygD,cAAe,CACXtgD,QAASH,EAAM0F,QAAQ,IAE3B+sC,KAAM,CACFxmC,SAAU,IACVjH,OAAQ,UAEZ0uC,QAAS,CACLrtC,QAAS,QAEb0O,OAAO,aACH7U,MAAO,OACPqG,UAAW,OACXC,WAAYxG,EAAM0F,QAAQ,GAC1BrD,YAAarC,EAAM0F,QAAQ,IAC1B1F,EAAMI,YAAY4U,GAAG,KAA0B,EAAnBhV,EAAM0F,QAAQ,IAAU,CACjDxF,MAAO,KACPsG,WAAY,OACZnE,YAAa,SAGrBq+C,WAAY,CACRz0C,SAAU,SAEd00C,WAAY,CACRngD,gBAAiBR,EAAMe,QAAQ4L,QAAQtF,OAE3Cu5C,aAAc,CACVpgD,gBAAiBR,EAAMe,QAAQqG,UAAUC,OAE7Cw5C,KAAM,CACFt6C,UAAW,QAEfu6C,SAAU,CACNloC,UAAW,QACXrS,UAAW,OACXwf,aAAc,QAElBzgB,MAAO,CACHkB,WAAYxG,EAAM0F,QAAQ,GAC1Bb,OAAQ,IAEZk8C,YAAa,CACTnoC,UAAW,QACXrS,UAAW,MAsajBsD,CAAmBgK,YAAWiuC,M,kKC5e1BhiD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCkH,WAAY,CACR/G,QAAS,sBAEbsF,QAAS,CACLT,OAAQhF,EAAM0F,QAAQ,GACtBtE,SAAU,YAEd+F,eAAgB,CACZlG,MAAOjB,EAAMe,QAAQqG,UAAUC,MAC/BjG,SAAU,WACV6D,IAAK,MACLG,KAAM,MACNmB,WAAY,GACZC,YAAa,IAEjB6D,QAAS,CACLlK,QAAS,OAIF,SAAS2iD,GAAiBviD,GACrC,MAA0BrB,mBAASqB,EAAMy5B,OAAzC,mBAAOA,EAAP,KAAc+oB,EAAd,KAEAvjD,qBAAU,WACNujD,EAASxiD,EAAMy5B,SAChB,CAACz5B,EAAMy5B,QAEV,IAyBMl5B,EAAUhB,KAEhB,OACI,kBAAC+G,GAAA,EAAD,CACI3I,KAAMqC,EAAMrC,KACZ4F,QAASvD,EAAMuD,QACfgD,kBAAgB,qBAEhB,kBAACqB,GAAA,EAAD,CAAapM,GAAG,qBAAhB,oDACA,kBAACgL,GAAA,EAAD,CAAei8C,SAAU,QAASriD,UAAWG,EAAQuJ,SAChD2vB,EAAMj2B,KAAI,SAACoZ,EAAGzD,GACX,OACI,kBAACnL,GAAA,EAAD,CAAUtK,IAAKyV,GACX,kBAACupC,GAAA,EAAD,CAAWC,KAAG,GACV,kBAACC,GAAA,EAAD,CACI9pC,QACI,kBAACxM,GAAA,EAAD,CACIR,UA1ClBjQ,EA0CyC+gB,EAAE/gB,MA1CjC,SAAC8H,GAC7B,IAAMk/C,EAAS,aAAOppB,GAEtBopB,EAAUr/C,KAAI,SAACoZ,EAAGzD,GACVyD,EAAE/gB,QAAUA,IACZgnD,EAAU1pC,GAAV,2BACO0pC,EAAU1pC,IADjB,IAEIle,SAAU0I,EAAM1G,OAAOsP,QAAU,OAAS,cAItDi2C,EAASK,KAgC2Bt2C,QAAwB,SAAfqQ,EAAE3hB,SACX2B,MAAM,aAGd4R,MAAOoO,EAAE5e,SA/CpB,IAACnC,MAsDd,kBAACoM,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAAS3B,EAAMuD,SAAvB,gBACA,yBAAKnD,UAAWG,EAAQ2E,SACpB,kBAACgD,EAAA,EAAD,CACIxH,MAAM,UACNiB,QA7CL,WACX,IAAM9F,EAAQ,GAEd49B,EAAMj2B,KAAI,SAACoZ,GACY,SAAfA,EAAE3hB,UACFY,EAAMyM,KAAK4T,SAASU,EAAE/gB,WAG9BmE,EAAMqS,SAASxW,IAsCC4J,SAAUzF,EAAM6I,eAHpB,eAMK7I,EAAM6I,eACH,kBAACnC,GAAA,EAAD,CACIhL,KAAM,GACN0E,UAAWG,EAAQqG,qBCzEnD,IAAMyC,GAAiBC,KAAW,CAC9BC,KAAM,CACFmC,SAAU,OACVjC,UAAW,OACX,qBAAsB,CAClBC,aAAc,GAElB,WAAY,CACR5D,QAAS,QAEb,aAAc,IAElB6D,SAAU,IAZSL,CAapBM,MAEGC,GAAwBP,KAAW,CACrCC,KAAM,CACF6c,UAAW,EACXxmB,QAAS,EAET,aAAc,CACVwmB,UAAW,KAGnBtc,QAAS,CACL4B,SAAU,OACVjH,OAAQ,EACRqB,QAAS,OACT,aAAc,CACVrB,OAAQ,MAGhBkF,SAAU,IAjBgBL,CAkB3BS,MAEGC,GAAwBV,MAAW,SAAC7J,GAAD,MAAY,CACjD8J,KAAM,CACFzD,QAAS,QACTlG,QAASH,EAAM0F,QAAQ,OAHDmE,CAK1Ba,MAEE5K,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyyC,KAAM,CACFlsC,UAAW,OACX6hB,eAAgB,iBAEpBi7B,cAAc,aACVnjD,MAAO,OACP2E,OAAQ,OACR1E,QAAS,uBACTylB,YAAa,QACZ5lB,EAAMI,YAAYC,KAAK,MAAQ,CAC5BgG,QAAS,SAGjBgE,QAAQ,aACJnK,MAAO,OACPqJ,SAAU,GACTvJ,EAAMI,YAAY4U,GAAG,MAAQ,CAC1BsuC,kBAAmB,OAAStjD,EAAMe,QAAQmwC,QAAU,WAG5DqS,YAAY,aACRh6C,SAAU,EACV8e,WAAY,OACZC,aAAc,QACbtoB,EAAMI,YAAYC,KAAK,MAAQ,CAC5BgG,QAAS,SAGjBwrC,QAAS,CACLluC,SAAU,QAEd6/C,aAAc,CACV7/C,SAAU,OACV1C,MAAO,WAEX01B,SAAU,CACNpwB,UAAW,EACXwf,aAAc,GAElB5N,OAAQ,CACJgN,WAAY,8BAEhBjb,SAAU,CACNogB,UAAW,kBAEfm5B,YAAa,CACTp9C,QAAS,QAEbq9C,YAAa,CACTrhD,YAAa,QAEjBshD,OAAQ,CACJj9B,UAAW,QAEfppB,OAAQ,CACJ6C,QAASH,EAAM0F,QAAQ,GACvBkT,UAAW,SAEfgrC,aAAc,CACVp9C,WAAYxG,EAAM0F,QAAQ,IAE9BwY,KAAM,CACF/d,QAASH,EAAM0F,QAAQ,IAE3Bm+C,UAAW,CACPzS,WAAY,KAEhB0S,UAAW,CACP7iD,MAAOjB,EAAMe,QAAQ4F,KAAKS,WAE9B28C,OAAQ,CACJ7jD,MAAO,OACP2E,OAAQ,OACRrE,gBAAiBR,EAAMe,QAAQyJ,WAAWC,aAInC,SAASu5C,GAAgBzjD,GACpC,IAAM0jD,EAAYr5C,IAAM+K,YAClB7U,EAAUhB,KACVE,EAAQa,eACRga,EAAUgR,cAEhB,EAAgCjhB,IAAM1L,SAAS,IAA/C,mBAAOgL,EAAP,KAAiBW,EAAjB,KACA,EAAwBD,IAAM1L,SAASqB,EAAMsxB,MAA7C,mBAAOA,EAAP,KAAaqyB,EAAb,KACA,EAA8Bt5C,IAAM1L,UAAS,GAA7C,mBAAOoH,EAAP,KAAgBiP,EAAhB,KACA,EAAgD3K,IAAM1L,UAAS,GAA/D,mBAAOilD,EAAP,KAAyBC,EAAzB,KACA,EAAgDx5C,IAAM1L,SAAS,IAA/D,mBAAOmlD,EAAP,KAAyBC,EAAzB,KAMM9iD,EAAWC,cACXkG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAGLhC,qBAAU,WACN0kD,EAAQ3jD,EAAMsxB,QACf,CAACtxB,EAAMsxB,OAEVryB,qBAAU,WACN,GAA2B,KAAvBqyB,EAAK3T,KAAKqmC,SAAd,CAGA,IAAIxtC,EAAS,GACb8a,EAAK3T,KAAKqmC,SAAS7c,MAAM,WAAWxqC,SAAQ,SAACsnD,GACzCztC,GAAUwF,YAAQioC,MAEtB,IAAMC,EAASR,EAAU5sC,QACnBqtC,EAAUD,EAAOE,WAAW,MAClCD,EAAQE,UAAU,EAAG,EAAGH,EAAOvkD,MAAOukD,EAAO5/C,QAC7C6/C,EAAQG,YAAc7kD,EAAMe,QAAQ4L,QAAQ0R,KAC5C,IAAK,IAAInE,EAAI,EAAGA,EAAIuqC,EAAOvkD,MAAOga,IAAK,CACnC,IAAI4qC,EACA/tC,EACIvJ,KAAKu3C,OAAQ7qC,EAAI,GAAKuqC,EAAOvkD,MAAS2xB,EAAK3T,KAAK8mC,YAG5C,OADZF,EAAMA,GAAY/tC,EAAOnJ,OAAO,MAE5B82C,EAAQO,YACRP,EAAQQ,OAAOhrC,EAAG,GAClBwqC,EAAQS,OAAOjrC,EAAGuqC,EAAO5/C,QACzB6/C,EAAQU,cAIjB,CAACvzB,EAAK3T,KAAKqmC,SAAU1yB,EAAK3T,KAAK8mC,UAAWhlD,IAE7C,IA3CsB6L,EA2ChBw5C,EAAa,SAACC,EAAW38B,GAC3B,OAAc,IAAVA,EACO,EAEH28B,EAAY38B,EAAS,KAG3B48B,EAAc5jD,uBAAY,WAC5B,OAAOkwB,EAAK3T,KAAK8b,MAAMh8B,QAAO,SAACmf,GAAD,MAAsB,SAAfA,EAAE3hB,cACxC,CAACq2B,EAAK3T,KAAK8b,QA2CRwrB,EAAkB7jD,uBAAY,WAChC,MAAuC,KAAnCkwB,EAAK3T,KAAKunC,WAAWvnC,KAAKliB,KACnB61B,EAAK3T,KAAKunC,WAAWvnC,KAAKliB,KAEhB,MAAd61B,EAAK71B,KAAe,iBAAS61B,EAAK71B,OAC1C,CAAC61B,IAEE5E,EAAUtrB,uBAAY,WACxB,MAAkC,UAA9BkwB,EAAK3T,KAAKunC,WAAWC,KAEjB,kBAACpqB,GAAA,EAAD,CAAOC,aAAcgqB,IAActoD,OAAQgE,MAAM,aAC7C,kBAAC,KAAD,CAAeN,UAAWG,EAAQ0iD,gBAKtC,kBAACllB,GAAA,EAAD,CACI39B,UAAWG,EAAQ+wC,QACnBxiC,SAAUm2C,EAAgB3zB,OAKvC,CAACA,EAAM/wB,IA2CV,OACI,kBAAC2gD,GAAA,EAAD,CAAM9gD,UAAWG,EAAQ2xC,MACrB,kBAACqQ,GAAD,CACI5kD,KAAMimD,EACNrgD,QAAS,kBAAMsgD,GAAoB,IACnCh7C,cAAe9C,EACf0zB,MAAOqqB,EACPzxC,SA7Be,SAAC4b,GACxBjZ,GAAW,GACXzM,IAAIyI,IAAI,iBAAmBsgB,EAAK3T,KAAKynC,IAAK,CACtCC,QAASp3B,IAERtlB,MAAK,WACFvB,EACI,MACA,QACA,iFACA,WAEJy8C,GAAoB,MAEvBj7C,OAAM,SAACtP,GACJ8N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,YAEjDuP,MAAK,WACFqM,GAAW,SAaf,kBAAC,GAAD,CACIsS,QAAM,EACN3d,SAAUA,IAAa2nB,EAAK3T,KAAKynC,IACjCt5C,UA7KUR,EA6KagmB,EAAK3T,KAAKynC,IA7Kb,SAACzhD,EAAO2hD,GACpCh7C,IAAYg7C,GAAch6C,MA8KlB,kBAAC,GAAD,CACIS,gBAAc,kBACdvQ,GAAG,kBAEH,yBAAK4E,UAAWG,EAAQuiD,eAAgBp2B,KACxC,kBAAC64B,GAAA,EAAD,CAAanlD,UAAWG,EAAQuJ,SAC5B,kBAACmE,EAAA,EAAD,CAAYvN,MAAM,UAAU8e,QAAM,GAC9B,kBAACzS,GAAA,EAAD,CAASvL,MAAOyjD,KACZ,8BAAOA,OAGf,kBAACO,GAAA,EAAD,CACI9kD,MAAM,YACN+L,QAAQ,cACRrM,UAAWG,EAAQ61B,SACnBx5B,MAAOkoD,EAAWxzB,EAAK1hB,WAAY0hB,EAAKlJ,SAE5C,kBAACna,EAAA,EAAD,CACIxB,QAAQ,QACR/L,MAAM,gBACN8e,QAAM,GAEL8R,EAAKlJ,MAAQ,GACV,8BACK08B,EACGxzB,EAAK1hB,WACL0hB,EAAKlJ,OACPtO,QAAQ,GAJd,MAKQ,IACiB,IAApBwX,EAAK1hB,WACA,SACA6J,YAAa6X,EAAK1hB,YAR5B,IAUoB,IAAf0hB,EAAKlJ,MACA,SACA3O,YAAa6X,EAAKlJ,OAAQ,IAZpC,IAaM,IACc,MAAfkJ,EAAKwL,MACA,OACArjB,YAAa6X,EAAKwL,OAAS,MAGzB,IAAfxL,EAAKlJ,OAAe,uCAG7B,kBAACm9B,GAAA,EAAD,CAAanlD,UAAWG,EAAQyiD,aAC5B,kBAACh2C,GAAA,EAAD,KACI,kBAAC,KAAD,CACI5M,UAAWsB,KAAW,eAEbnB,EAAQoJ,SACLA,IAAa2nB,EAAK3T,KAAKynC,KAE/B7kD,EAAQqX,aAM5B,kBAAC,GAAD,KACI,kBAAChM,EAAA,EAAD,MAC+B,UAA9B0lB,EAAK3T,KAAKunC,WAAWC,MAClB,yBAAK/kD,UAAWG,EAAQ6iD,QACpB,kBAAC/K,GAAA,EAAD,CAAO38C,KAAK,SACR,kBAACk9C,GAAA,EAAD,KACKoM,IAAcxhD,KAAI,SAAC5G,GAChB,OACI,kBAACw4C,GAAA,EAAD,CACI1xC,IAAK9G,EAAMf,MACXwI,MAAO,CACH4F,WACI,8BAEA,SADCxK,EAAMe,QAAQ7E,KAETkiC,YACIp+B,EAAMe,QACD4L,QACA0R,KACL,IAEJ8f,YACIn+B,EAAMe,QACD4L,QACA0R,KACL,MAEV,QAEA,SADCre,EAAMe,QAAQ7E,KAETkiC,YACIp+B,EAAMe,QACD4L,QACA0R,KACL,IAEJ8f,YACIn+B,EAAMe,QACD4L,QACA0R,KACL,MAEV,IACAgnC,EACIloD,EAAM6oD,gBACN7oD,EAAMF,QACRod,QAAQ,GACV,KACAra,EAAMe,QAAQyJ,WACToZ,MACL,IACAyhC,EACIloD,EAAM6oD,gBACN7oD,EAAMF,QACRod,QAAQ,GACV,KACAra,EAAMe,QAAQyJ,WACToZ,MACL,WAGR,kBAACuyB,GAAA,EAAD,CACIlsB,UAAU,KACVosB,MAAM,OAEN,kBAAC7nC,EAAA,EAAD,CACI7N,UACIG,EAAQ2iD,aAGZ,kBAACnlB,GAAA,EAAD,CACI39B,UACIG,EAAQ4iD,YAEZr0C,SACIlS,EAAMoB,OAGbpB,EAAMoB,OAGf,kBAAC43C,GAAA,EAAD,CACIlsB,UAAU,KACVosB,MAAM,OAEN,kBAAC7nC,EAAA,EAAD,CAAYuR,QAAM,GACb,IACA/F,YACG7c,EAAMF,UAIlB,kBAACk5C,GAAA,EAAD,CACIlsB,UAAU,KACVosB,MAAM,OAEN,kBAAC7nC,EAAA,EAAD,CAAYuR,QAAM,GACbslC,EACGloD,EAAM6oD,gBACN7oD,EAAMF,QACRod,QAAQ,GAJd,MAQJ,kBAAC87B,GAAA,EAAD,KACI,kBAAC7oC,GAAA,EAAD,CAASvL,MAAM,kCACX,kBAACwL,GAAA,EAAD,CACIrL,QAAS,kBA/R9C,SAAC9F,GAChBmZ,GAAW,GACX,IAAM8B,EAAUkuC,IACVU,EAAW,GACXC,EAAW,GAEjB7uC,EAAQtT,KAAI,SAACoZ,GACLA,EAAE/gB,QAAUA,GAAS+gB,EAAE3hB,UACvByqD,EAASp9C,KAAK4T,SAASU,EAAE/gB,QACzB8pD,EAASr9C,KAAT,2BACOsU,GADP,IAEI3hB,SAAU,WAGd0qD,EAASr9C,KAAT,2BACOsU,GADP,IAEI3hB,SAAU,cAItBsN,IAAIyI,IAAI,iBAAmBsgB,EAAK3T,KAAKynC,IAAK,CACtCC,QAASK,IAER/8C,MAAK,WACFg7C,EAAQ,2BACDryB,GADA,IAEH3T,KAAK,2BACE2T,EAAK3T,MADR,IAEA8b,MAAOksB,OAGfv+C,EAAe,MAAO,QAAS,iCAAS,cAE3CwB,OAAM,SAACtP,GACJ8N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,YAEjDuP,MAAK,WACFqM,GAAW,MA2PqC4wC,CACIhpD,EAAMf,QAGd4J,SAAUM,EACVrK,KAAM,SAEN,kBAACmqD,GAAA,EAAD,gBAYxC,yBAAKzlD,UAAWG,EAAQxD,QACpB,kBAACmL,EAAA,EAAD,CACI9H,UAAWG,EAAQ8iD,aACnB52C,QAAQ,WACR/L,MAAM,YACNiB,QAAS,kBACL2Y,EAAQhS,KACJ,gBACIyI,mBAAmBugB,EAAK5oB,QAPxC,wCAa+B,UAA9B4oB,EAAK3T,KAAKunC,WAAWC,MAClB,kBAACj9C,EAAA,EAAD,CACI9H,UAAWG,EAAQ8iD,aACnB52C,QAAQ,WACR/L,MAAM,YACN+E,SAAUM,EACVpE,QAAS,WACLkiD,GAAoB,GACpBE,EAAoB,aACb/jD,EAAMsxB,KAAK3T,KAAK8b,UAR/B,oDAeJ,kBAACvxB,EAAA,EAAD,CACI9H,UAAWG,EAAQ8iD,aACnB1hD,QAjRT,WACXqT,GAAW,GACXzM,IAAI8I,OAAO,eAAiBigB,EAAK3T,KAAKynC,KACjCz8C,MAAK,WACFvB,EACI,MACA,QACA,uFACA,cAGPwB,OAAM,SAACtP,GACJ8N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,YAEjDuP,MAAK,WACFqM,GAAW,OAmQCvI,QAAQ,YACR/L,MAAM,YACN+E,SAAUM,GALd,6BAUJ,kBAAC6F,EAAA,EAAD,MACA,yBAAKxL,UAAWG,EAAQod,MACI,KAAvB2T,EAAK3T,KAAKqmC,UACP,4BACIrkD,MAAO,MACP2E,OAAQ,MACR6S,IAAKusC,EACLtjD,UAAWG,EAAQijD,SAI3B,kBAACvK,GAAA,EAAD,CAAM71B,WAAS,GACX,kBAAC61B,GAAA,EAAD,CAAM71B,WAAS,EAAC81B,GAAI,GAAIE,GAAI,GACxB,kBAACH,GAAA,EAAD,CAAMloB,MAAI,EAACmoB,GAAI,EAAG94C,UAAWG,EAAQ+iD,WAArC,4BAGA,kBAACrK,GAAA,EAAD,CAAMloB,MAAI,EAACmoB,GAAI,EAAG94C,UAAWG,EAAQgjD,WACjC,kBAAC,KAAD,CACIlE,SAAU/tB,EAAKw0B,OACfvG,OAAO,YAInB,kBAACtG,GAAA,EAAD,CAAM71B,WAAS,EAAC81B,GAAI,GAAIE,GAAI,GACxB,kBAACH,GAAA,EAAD,CAAMloB,MAAI,EAACmoB,GAAI,EAAG94C,UAAWG,EAAQ+iD,WAArC,kCAGA,kBAACrK,GAAA,EAAD,CAAMloB,MAAI,EAACmoB,GAAI,EAAG94C,UAAWG,EAAQgjD,WAChC9pC,YAAa6X,EAAK3T,KAAKooC,gBAGhC,kBAAC9M,GAAA,EAAD,CAAM71B,WAAS,EAAC81B,GAAI,GAAIE,GAAI,GACxB,kBAACH,GAAA,EAAD,CAAMloB,MAAI,EAACmoB,GAAI,EAAG94C,UAAWG,EAAQ+iD,WAArC,kCAGA,kBAACrK,GAAA,EAAD,CAAMloB,MAAI,EAACmoB,GAAI,EAAG94C,UAAWG,EAAQgjD,WAChC9pC,YAAa6X,EAAK3T,KAAKqoC,aAD5B,SAI2B,KAA9B10B,EAAK3T,KAAKunC,WAAWC,MAClB,oCACI,kBAAClM,GAAA,EAAD,CAAM71B,WAAS,EAAC81B,GAAI,GAAIE,GAAI,GACxB,kBAACH,GAAA,EAAD,CACIloB,MAAI,EACJqoB,GAAI,EACJF,GAAI,EACJ94C,UAAWG,EAAQ+iD,WAJvB,kBAQA,kBAACrK,GAAA,EAAD,CACIloB,MAAI,EACJqoB,GAAI,GACJF,GAAI,EACJ70C,MAAO,CACHy3B,UAAW,aAEf17B,UAAWG,EAAQgjD,WAElBjyB,EAAK3T,KAAKsoC,WAGnB,kBAAChN,GAAA,EAAD,CAAM71B,WAAS,EAAC81B,GAAI,GAAIE,GAAI,GACxB,kBAACH,GAAA,EAAD,CACIloB,MAAI,EACJmoB,GAAI,EACJ94C,UAAWG,EAAQ+iD,WAHvB,4BAOA,kBAACrK,GAAA,EAAD,CACIloB,MAAI,EACJmoB,GAAI,EACJ94C,UAAWG,EAAQgjD,WAElBjyB,EAAK3T,KAAKuoC,aAGnB,kBAACjN,GAAA,EAAD,CAAM71B,WAAS,EAAC81B,GAAI,GAAIE,GAAI,GACxB,kBAACH,GAAA,EAAD,CACIloB,MAAI,EACJmoB,GAAI,EACJ94C,UAAWG,EAAQ+iD,WAHvB,4BAOA,kBAACrK,GAAA,EAAD,CACIloB,MAAI,EACJmoB,GAAI,EACJ94C,UAAWG,EAAQgjD,WAEG,SAArBjyB,EAAK3T,KAAKwoC,OACL,SACA,YAKtB,kBAAClN,GAAA,EAAD,CAAM71B,WAAS,EAAC81B,GAAI,GAAIE,GAAI,GACxB,kBAACH,GAAA,EAAD,CAAMloB,MAAI,EAACmoB,GAAI,EAAG94C,UAAWG,EAAQ+iD,WAArC,kCAGA,kBAACrK,GAAA,EAAD,CAAMloB,MAAI,EAACmoB,GAAI,EAAG94C,UAAWG,EAAQgjD,WAChC9pC,YAAa6X,EAAK3T,KAAKyoC,eAGhC,kBAACnN,GAAA,EAAD,CAAM71B,WAAS,EAAC81B,GAAI,GAAIE,GAAI,GACxB,kBAACH,GAAA,EAAD,CAAMloB,MAAI,EAACmoB,GAAI,EAAG94C,UAAWG,EAAQ+iD,WAArC,kCAGA,kBAACrK,GAAA,EAAD,CAAMloB,MAAI,EAACmoB,GAAI,EAAG94C,UAAWG,EAAQgjD,WAChCjyB,EAAK3T,KAAK8mC,iBCvoB/C,IAAMp7C,GAAiBC,KAAW,CAC9BC,KAAM,CACFmC,SAAU,OACVjC,UAAW,OACX,qBAAsB,CAClBC,aAAc,GAElB,WAAY,CACR5D,QAAS,QAEb,aAAc,IAElB6D,SAAU,IAZSL,CAapBM,MAEGC,GAAwBP,KAAW,CACrCC,KAAM,CACF6c,UAAW,EACXxmB,QAAS,EAET,aAAc,CACVwmB,UAAW,KAGnBtc,QAAS,CACL4B,SAAU,OACVjH,OAAQ,EACRqB,QAAS,OACT,aAAc,CACVrB,OAAQ,MAGhBkF,SAAU,IAjBgBL,CAkB3BS,MAEGC,GAAwBV,MAAW,SAAC7J,GAAD,MAAY,CACjD8J,KAAM,CACFzD,QAAS,QACTlG,QAASH,EAAM0F,QAAQ,OAHDmE,CAK1Ba,MAEE5K,GAAYC,aAAW,SAACC,GAAD,YAAY,CACrCyyC,KAAM,CACFlsC,UAAW,OACX6hB,eAAgB,iBAEpBi7B,cAAc,aACVnjD,MAAO,OACP2E,OAAQ,OACR1E,QAAS,uBACTylB,YAAa,QACZ5lB,EAAMI,YAAYC,KAAK,MAAQ,CAC5BgG,QAAS,SAGjBgE,SAAO,GACHnK,MAAO,OACPqJ,SAAU,GAFP,cAGFvJ,EAAMI,YAAY4U,GAAG,MAAQ,CAC1BsuC,kBAAmB,OAAStjD,EAAMe,QAAQmwC,QAAU,WAJrD,0BAMQ,QANR,GAQPqS,YAAY,aACRh6C,SAAU,EACV8e,WAAY,OACZC,aAAc,QACbtoB,EAAMI,YAAYC,KAAK,MAAQ,CAC5BgG,QAAS,SAGjBwrC,QAAS,CACLluC,SAAU,QAEd6/C,aAAc,CACV7/C,SAAU,OACV1C,MAAO,WAEX01B,SAAU,CACNpwB,UAAW,EACXwf,aAAc,GAElB5N,OAAQ,CACJgN,WAAY,8BAEhBjb,SAAU,CACNogB,UAAW,kBAEfm5B,YAAa,CACTp9C,QAAS,QAEbq9C,YAAa,CACTrhD,YAAa,QAEjBshD,OAAQ,CACJj9B,UAAW,QAEfppB,OAAQ,CACJ6C,QAASH,EAAM0F,QAAQ,GACvBkT,UAAW,SAEfgrC,aAAc,CACVp9C,WAAYxG,EAAM0F,QAAQ,IAE9BwY,KAAM,CACF/d,QAASH,EAAM0F,QAAQ,IAE3Bm+C,UAAW,CACPzS,WAAY,KAEhB0S,UAAW,CACP7iD,MAAOjB,EAAMe,QAAQ4F,KAAKS,eAInB,SAASw/C,GAAarmD,GACjC,IAAMO,EAAUhB,KACVE,EAAQa,eACRga,EAAUgR,cAEhB,EAAgCjhB,IAAM1L,UAAS,GAA/C,mBAAOgL,EAAP,KAAiBW,EAAjB,KACA,EAA8BD,IAAM1L,UAAS,GAA7C,mBAAOoH,EAAP,KAAgBiP,EAAhB,KAEM/T,EAAWC,cACXkG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IA4BCgkD,EAAkB7jD,uBAAY,WAChC,MAA2B,MAApBpB,EAAMsxB,KAAK71B,KAAe,iBAASuE,EAAMsxB,KAAK71B,OACtD,CAACuE,EAAMsxB,KAAK71B,OAETupD,EAAc5jD,uBAAY,WAC5B,OAAOpB,EAAMsxB,KAAKmI,MAAMh8B,QAAO,SAACmf,GAAD,MAAsB,SAAfA,EAAE3hB,cACzC,CAAC+E,EAAMsxB,KAAKmI,QAET/M,EAAUtrB,uBAAY,WACxB,OAAIpB,EAAMsxB,KAAKmI,MAAM/8B,OAAS,EAEtB,kBAACq+B,GAAA,EAAD,CAAOC,aAAcgqB,IAActoD,OAAQgE,MAAM,aAC7C,kBAAC,KAAD,CAAeN,UAAWG,EAAQ0iD,gBAKtC,kBAACllB,GAAA,EAAD,CACI39B,UAAWG,EAAQ+wC,QACnBxiC,SAAUm2C,EAAgBjlD,EAAMsxB,UAI7C,CAACtxB,EAAMsxB,KAAM/wB,IAWhB,OACI,kBAAC2gD,GAAA,EAAD,CAAM9gD,UAAWG,EAAQ2xC,MACrB,kBAAC,GAAD,CACI5qB,QAAM,EACN3d,SAAUA,EACVmC,SAhEe,SAACnI,EAAO2hD,GAC/Bh7C,IAAcg7C,KAiEN,kBAAC,GAAD,CACIv5C,gBAAc,kBACdvQ,GAAG,kBAEH,yBAAK4E,UAAWG,EAAQuiD,eAAgBp2B,KACxC,kBAAC64B,GAAA,EAAD,CAAanlD,UAAWG,EAAQuJ,SAC5B,kBAACmE,EAAA,EAAD,CAAYvN,MAAM,UAAU8e,QAAM,GAC9B,kBAACzS,GAAA,EAAD,CAASvL,MAAOyjD,KACZ,8BAAOA,OAGQ,IAAtBjlD,EAAMsxB,KAAK9rB,QACR,kBAACuH,GAAA,EAAD,CAASvL,MAAOxB,EAAMsxB,KAAKh4B,OACvB,kBAAC2U,EAAA,EAAD,CACIxB,QAAQ,QACR/L,MAAM,QACN8e,QAAM,GAHV,iCAKUxf,EAAMsxB,KAAKh4B,QAIN,IAAtB0G,EAAMsxB,KAAK9rB,QACR,kBAACyI,EAAA,EAAD,CACIxB,QAAQ,QACR/L,MAAM,gBACN8e,QAAM,GAHV,qBAM0B,KAArBxf,EAAMsxB,KAAKh4B,OACR,uCAAQ0G,EAAMsxB,KAAKh4B,QAIR,IAAtB0G,EAAMsxB,KAAK9rB,QACmB,IAA3BxF,EAAMsxB,KAAKg1B,aACP,kBAACr4C,EAAA,EAAD,CACIxB,QAAQ,QACRpI,MAAO,CACH3D,MAAOjB,EAAMe,QAAQ8c,QAAQQ,MAEjC0B,QAAM,GALV,sBAUe,IAAtBxf,EAAMsxB,KAAK9rB,QACmB,IAA3BxF,EAAMsxB,KAAKg1B,aACP,kBAACr4C,EAAA,EAAD,CACIxB,QAAQ,QACRpI,MAAO,CACH3D,MAAOjB,EAAMe,QAAQ8c,QAAQxW,OAEjC0Y,QAAM,GALV,0DAUe,IAAtBxf,EAAMsxB,KAAK9rB,QACmB,IAA3BxF,EAAMsxB,KAAKg1B,aACP,kBAACr4C,EAAA,EAAD,CACIxB,QAAQ,QACRpI,MAAO,CACH3D,MAAOjB,EAAMe,QAAQ8c,QAAQxW,OAEjC0Y,QAAM,GALV,0DAUe,IAAtBxf,EAAMsxB,KAAK9rB,QACmB,IAA3BxF,EAAMsxB,KAAKg1B,aACP,kBAACr4C,EAAA,EAAD,CACIxB,QAAQ,QACR/L,MAAO,QACP8e,QAAM,GA3FjB,SAAClmB,GAClB,IACI,IAAMu7B,EAAMjhB,KAAKC,MAAMva,GACvB,OAAOu7B,EAAIr6B,IAAM,SAAMq6B,EAAIv7B,MAC7B,MAAO6F,GACL,MAAO,wCAwFkBonD,CAAavmD,EAAMsxB,KAAKk1B,cAIzC,kBAACjB,GAAA,EAAD,CAAanlD,UAAWG,EAAQyiD,aAC5B,kBAACh2C,GAAA,EAAD,KACI,kBAAC,KAAD,CACI5M,UAAWsB,KAAW,eAEbnB,EAAQoJ,SAAWA,GAExBpJ,EAAQqX,aAM5B,kBAAC,GAAD,KACI,kBAAChM,EAAA,EAAD,MACC5L,EAAMsxB,KAAKmI,MAAM/8B,OAAS,GACvB,yBAAK0D,UAAWG,EAAQ6iD,QACpB,kBAAC/K,GAAA,EAAD,KACI,kBAACO,GAAA,EAAD,KACKoM,IAAcxhD,KAAI,SAAC5G,GAChB,OACI,kBAACw4C,GAAA,EAAD,CAAU1xC,IAAK9G,EAAMf,OACjB,kBAAC+5C,GAAA,EAAD,CACIlsB,UAAU,KACVosB,MAAM,OAEN,kBAAC7nC,EAAA,EAAD,CACI7N,UACIG,EAAQ2iD,aAGZ,kBAACnlB,GAAA,EAAD,CACI39B,UACIG,EAAQ4iD,YAEZr0C,SACIlS,EAAMoB,OAGbpB,EAAMoB,OAGf,kBAAC43C,GAAA,EAAD,CACIlsB,UAAU,KACVosB,MAAM,OAEN,kBAAC7nC,EAAA,EAAD,CAAYuR,QAAM,GACb,IACA/F,YACG7c,EAAMF,UAIlB,kBAACk5C,GAAA,EAAD,CACIlsB,UAAU,KACVosB,MAAM,OAEN,kBAAC7nC,EAAA,EAAD,CAAYuR,QAAM,IAxM9CulC,EA0MoCnoD,EAAM6oD,gBA1M/Br9B,EA2MyBxrB,EAAMF,OA1M5C,IAAV0rB,EACO,EAEH28B,EAAY38B,EAAS,KAwMqBtO,QAAQ,GAJd,OAxM7B,IAACirC,EAAW38B,QAwNf,yBAAKhoB,UAAWG,EAAQxD,QACpB,kBAACmL,EAAA,EAAD,CACI9H,UAAWG,EAAQ8iD,aACnB52C,QAAQ,WACR/L,MAAM,YACNiB,QAAS,kBACL2Y,EAAQhS,KACJ,gBACIyI,mBAAmB/Q,EAAMsxB,KAAK5oB,QAP9C,wCAaA,kBAACR,EAAA,EAAD,CACI9H,UAAWG,EAAQ8iD,aACnB1hD,QAjOT,WACXqT,GAAW,GACXzM,IAAI8I,OAAO,eAAiBrR,EAAMsxB,KAAK8zB,KAClCz8C,MAAK,WACFvB,EAAe,MAAO,QAAS,2BAAQ,cAE1CwB,OAAM,SAACtP,GACJ8N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,YAEjDuP,MAAK,WACFtO,OAAOC,SAASwkB,aAwNJrS,QAAQ,YACR/L,MAAM,YACN+E,SAAUM,GALd,6BAUJ,kBAAC6F,EAAA,EAAD,MACA,yBAAKxL,UAAWG,EAAQod,MACpB,kBAACs7B,GAAA,EAAD,CAAM71B,WAAS,GACX,kBAAC61B,GAAA,EAAD,CAAM71B,WAAS,EAAC81B,GAAI,GAAIE,GAAI,GACxB,kBAACH,GAAA,EAAD,CAAMloB,MAAI,EAACmoB,GAAI,EAAG94C,UAAWG,EAAQ+iD,WAArC,kCAGA,kBAACrK,GAAA,EAAD,CAAMloB,MAAI,EAACmoB,GAAI,EAAG94C,UAAWG,EAAQgjD,WAChC/e,aACGxkC,EAAMsxB,KAAKt4B,OACX,wBAIZ,kBAACigD,GAAA,EAAD,CAAM71B,WAAS,EAAC81B,GAAI,GAAIE,GAAI,GACxB,kBAACH,GAAA,EAAD,CAAMloB,MAAI,EAACmoB,GAAI,EAAG94C,UAAWG,EAAQ+iD,WAArC,kCAGA,kBAACrK,GAAA,EAAD,CAAMloB,MAAI,EAACmoB,GAAI,EAAG94C,UAAWG,EAAQgjD,WAChC/e,aACGxkC,EAAMsxB,KAAKw0B,OACX,6B,mCCpalCvmD,GAAYC,aAAW,iBAAO,CAChCgF,IAAK,CACDC,OAAQ,EACRC,IAAK,OACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,OACNC,OAAQ,EACRjE,SAAU,aAIH,SAAS4lD,KACpB,IAAMlmD,EAAUhB,KACV0B,EAAWC,cAEXwlD,EAA2BtlD,uBAC7B,kBAAMH,EAASuuB,iBACf,CAACvuB,IAGL,OACI,oCACI,kBAACkS,GAAA,QAAD,MACA,kBAAC5U,GAAA,EAAD,CAAYE,QAAM,GACd,kBAACkoD,GAAA,EAAD,CACIvmD,UAAWG,EAAQiE,IACnB9D,MAAM,YACNiB,QAAS,kBAAM+kD,MAEf,kBAACE,GAAA,EAAD,SC5BpB,IA4DMC,G,+MACFnG,KAAO,E,EACPoG,SAAW,E,EACXC,qBAAuB,E,EAEvBjqD,MAAQ,CACJkqD,YAAa,GACbjhD,SAAS,EACTkhD,aAAc,GACdC,UAAU,G,EAGd3+B,kBAAoB,WAChB,EAAK4+B,mB,EAOTA,gBAAkB,WACd,EAAKz3C,SAAS,CACV3J,SAAS,IAEbwC,IAAI4H,IAAI,sBACHxH,MAAK,SAAC7O,GACH,EAAK4V,SAAS,CACVs3C,YAAaltD,EAASG,KACtB8L,SAAS,IAGbi1C,aAAa,EAAK8L,UACdhtD,EAASG,KAAKyC,OAAS,IACvB,EAAKoqD,SAAWr7C,WACZ,EAAK07C,gBACL,IACIrtD,EAASG,KAAK2+B,QAAO,SAAU95B,EAAMgY,GACjC,OAAOhY,EAAKgoD,SAAWhwC,EAAQgwC,SACzBhoD,EACAgY,KACPgwC,WAKXhtD,EAASG,KAAKyC,SAAW,EAAKqqD,sBAC9B,EAAKrG,KAAO,EACZ,EAAKhxC,SAAS,CACVu3C,aAAc,GACdC,UAAU,IAEd,EAAK3G,YAET,EAAKwG,oBAAsBjtD,EAASG,KAAKyC,UAE5CkM,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,a,EAKhBmnD,SAAW,WACP,EAAK7wC,SAAS,CACV3J,SAAS,IAEbwC,IAAI4H,IAAI,2BAA4B,EAAKuwC,MACpC/3C,MAAK,SAAC7O,GACH,EAAK4V,SAAS,CACVu3C,aAAa,GAAD,oBACL,EAAKnqD,MAAMmqD,cADN,aAELntD,EAASG,OAEhB8L,SAAS,EACTmhD,SAAUptD,EAASG,KAAKyC,QAAU,QAGzCkM,OAAM,WACH,EAAK5I,MAAMuH,eAAe,MAAO,QAAS,2BAAQ,SAClD,EAAKmI,SAAS,CACV3J,SAAS,Q,2DAnEzB,WACIi1C,aAAazhD,KAAKutD,Y,oBAuEtB,WACI,IAAQvmD,EAAYhH,KAAKyG,MAAjBO,QACFye,EAAO7kB,IAAKwZ,UAElB,OACI,yBAAKvT,UAAWG,EAAQiU,QACnBwK,EAAKY,MAAM00B,qBAAuB,kBAACmS,GAAD,MACnC,kBAACx4C,EAAA,EAAD,CACIvN,MAAM,gBACN+L,QAAQ,KACRrM,UAAWG,EAAQiB,OAHvB,qBAMI,kBAACwL,GAAA,EAAD,CACIvH,SAAUlM,KAAKuD,MAAMiJ,QACrBpE,QAASpI,KAAK4tD,iBAEd,kBAAC,KAAD,QAGP5tD,KAAKuD,MAAMkqD,YAAYxjD,KAAI,SAAC5G,EAAOuc,GAAR,OACxB,kBAACsqC,GAAD,CAAiB//C,IAAKyV,EAAGmY,KAAM10B,OAEnC,kBAACqR,EAAA,EAAD,CACIvN,MAAM,gBACN+L,QAAQ,KACRrM,UAAWG,EAAQiB,OAHvB,sBAOA,yBAAKpB,UAAWG,EAAQggD,UACnBhnD,KAAKuD,MAAMmqD,aAAazjD,KAAI,SAAC5G,EAAOuc,GACjC,OAAIvc,EAAM68B,MACC,kBAAC4sB,GAAD,CAAc3iD,IAAKyV,EAAGmY,KAAM10B,IAEhC,QAEX,kBAACsL,EAAA,EAAD,CACIxM,KAAK,QACL0E,UAAWG,EAAQkE,OACnBgB,UAAWlM,KAAKuD,MAAMoqD,SACtBvlD,QAASpI,KAAKgnD,UAJlB,kC,GA7HYrtC,aAgJjBxC,GALE0C,aAvJO,WACpB,MAAO,MAGgB,SAACnS,GACxB,MAAO,CACHsG,eAAgB,SAACF,EAAUC,EAAY9M,EAAKkG,GACxCO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,QAgJ9C0S,CAGf9J,cA1Ma,SAAC7J,GAAD,MAAY,CACvB0zC,QAAS,CACLrtC,QAAS,QAEbtE,MAAO,CACHwE,UAAW,QAEfwO,OAAO,aACH7U,MAAO,OACPqG,UAAW,OACXC,WAAYxG,EAAM0F,QAAQ,GAC1BrD,YAAarC,EAAM0F,QAAQ,IAC1B1F,EAAMI,YAAY4U,GAAG,KAA0B,EAAnBhV,EAAM0F,QAAQ,IAAU,CACjDxF,MAAO,IACPsG,WAAY,OACZnE,YAAa,SAGrBq+C,WAAY,CACRz0C,SAAU,SAEd00C,WAAY,CACRngD,gBAAiBR,EAAMe,QAAQ4L,QAAQtF,OAE3Cu5C,aAAc,CACVpgD,gBAAiBR,EAAMe,QAAQqG,UAAUC,OAE7Cw5C,KAAM,CACFt6C,UAAW,QAEftH,KAAM,CACFoH,QAAS,QAEbsrC,iBAAkB,CACdz8B,aAAc,eAElB68B,SAAU,CACNvrC,WAAY,QAEhBs6C,SAAU,CACNloC,UAAW,SACXrS,UAAW,OACXwf,aAAc,QAElB/gB,OAAQ,CACJuB,UAAWvG,EAAM0F,QAAQ,OA6J/BmE,CAAmBu9C,KCjNftnD,GAAYC,aAAW,SAACC,GAAD,YAAY,CACrCC,QAAM,GACFC,MAAO,OADL,cAEDF,EAAMI,YAAY4U,GAAG,MAAQ,CAC1B9U,MAAO,SAHT,0BAMS,IANT,OAUJI,GAAW,SAACC,GACd,OACI,kBAAC,IAAD,CACIC,gBAAiBD,EAAME,KAAO,OAAS,UACvCC,gBAAiBH,EAAME,KAAO,UAAY,OAC1CE,UAAWJ,EAAMI,aAuBdgnD,OAlBf,WACI,IAAM3nD,EAAQa,eACRC,EAAUhB,KAEhB,OACI,yBACI8E,MAAO,CACHgU,UAAW,WAGf,kBAAC,GAAD,CACInY,KAA6B,SAAvBT,EAAMe,QAAQ7E,KACpByE,UAAWG,EAAQb,WCkB7B2nD,G,oDACF,WAAYrnD,GAAQ,IAAD,wBACf,cAAMA,IAOVmL,aAAe,SAAC1P,GAAD,OAAU,SAACkI,GACtB,EAAK+L,SAAL,eAAiBjU,EAAOkI,EAAM1G,OAAOL,UATtB,EAYnBwvC,OAAS,SAACjtC,GACNA,EAAEgJ,iBACqB,KAAnB,EAAKrL,MAAM6wC,KAGf,EAAK3tC,MAAMsnD,YAAY,EAAKxqD,MAAM6wC,MAflC,IAAMr4B,EAAQ,IAAIC,gBAAgB,EAAKvV,MAAM1F,SAASkb,QAFvC,OAGf,EAAK1Y,MAAQ,CACT6wC,IAAKr4B,EAAMnF,IAAI,aAJJ,E,2CAoBnB,WACI,IAAQ5P,EAAYhH,KAAKyG,MAAjBO,QAER,OACI,yBAAKH,UAAWG,EAAQiU,QACpB,kBAAC0sC,GAAA,EAAD,CAAM9gD,UAAWG,EAAQ2xC,MACrB,kBAACiP,GAAA,EAAD,CACIx7C,OACI,kBAAC2Z,EAAA,EAAD,CACI5Z,aAAW,SACXnB,IACI,uBACAhL,KAAKyG,MAAMkC,MAAMiC,QAAQT,IACzB,OAIZlC,MAAOjI,KAAKyG,MAAMkC,MAAMiC,QAAQC,KAAO,kCACvCg9C,UAAW5c,aACPjrC,KAAKyG,MAAMkC,MAAMm/C,YACjB,wBAGR,kBAACz1C,EAAA,EAAD,MACA,kBAAC25C,GAAA,EAAD,KACI,0BAAMlzC,SAAU9Y,KAAK6yC,QACjB,kBAACl+B,GAAA,EAAD,CACI1S,GAAG,MACHgT,MAAM,uCACN5R,MAAOrD,KAAKuD,MAAM6wC,IAClB7hC,SAAUvS,KAAK4R,aAAa,OAC5B1G,OAAO,SACP9I,KAAK,WACL0S,WAAS,EACT1C,WAAS,EACTjL,MAAM,gBAIlB,kBAAC0hD,GAAA,EAAD,CACIhiD,UAAWG,EAAQ4yC,QACnBkP,sBAAoB,GAEpB,kBAACn6C,EAAA,EAAD,CACIvG,QAASpI,KAAK6yC,OACd1rC,MAAM,YACNN,UAAWG,EAAQ2mD,SACnBz6C,QAAQ,YACRhH,SACuB,KAAnBlM,KAAKuD,MAAM6wC,KAAcp0C,KAAKyG,MAAM+F,SAN5C,uB,GAhEUmN,aAuFnBq0C,GALIn0C,aA9FK,WACpB,MAAO,MAGgB,SAACnS,GACxB,MAAO,CACHsG,eAAgB,SAACF,EAAUC,EAAY9M,EAAKkG,GACxCO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,QAuF5C0S,CAGjB9J,cA1Ha,SAAC7J,GAAD,MAAY,CACvByyC,KAAM,CACFxmC,SAAU,IACVjH,OAAQ,UAEZ0uC,QAAS,CACLrtC,QAAS,QAEb0O,OAAO,aACH7U,MAAO,OACPqG,UAAW,QACXC,WAAYxG,EAAM0F,QAAQ,GAC1BrD,YAAarC,EAAM0F,QAAQ,IAC1B1F,EAAMI,YAAY4U,GAAG,KAA0B,EAAnBhV,EAAM0F,QAAQ,IAAU,CACjDxF,MAAO,KACPsG,WAAY,OACZnE,YAAa,SAGrBolD,SAAU,CACNjhD,WAAY,OACZnE,YAAa,OACb0lD,aAAc,WAoGpBl+C,CAAmBgK,YAAW+zC,MCrI1B9nD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCgoD,UAAW,CACPpvC,UAAW,SACXzY,QAAS,IAEb+F,OAAQ,CACJ1F,gBAAiBR,EAAMe,QAAQqG,UAAUiX,KACzCrZ,OAAQ,SACR9E,MAAO,GACP2E,OAAQ,GACRojD,OAAQ,WAEZC,SAAU,CACN3hD,UAAW,IAEfkL,UAAW,CACPxQ,MAAOjB,EAAMe,QAAQ4F,KAAKX,SAC1BrC,SAAU,QAIH,SAASwkD,GAAQ5nD,GAC5B,IAAMO,EAAUhB,KACV+a,EAAUgR,cAcVu8B,EAAc,WAChBvtC,EAAQhS,KAAK,YAActI,EAAMkC,MAAMiC,QAAQT,KAC/C1D,EAAMuD,SAAWvD,EAAMuD,WAG3B,OACI,yBAAKnD,UAAWG,EAAQknD,WACpB,kBAACnoC,EAAA,EAAD,CACIlf,UAAWG,EAAQoF,OACnB6jC,IAAKxpC,EAAMkC,MAAMiC,QAAQC,KACzBG,IAAK,uBAAyBvE,EAAMkC,MAAMiC,QAAQT,IAAM,KACxD/B,QAAS,kBAAMkmD,OAEnB,kBAAC55C,EAAA,EAAD,CAAYxB,QAAQ,KAAKrM,UAAWG,EAAQonD,UACvC3nD,EAAMowC,UACH,+DACS,IACL,kBAACnI,EAAA,EAAD,CACItmC,QAAS,kBAAMkmD,KACfttD,KAAM,qBACNmG,MAAM,WAELV,EAAMkC,MAAMiC,QAAQC,MACjB,IARZ,iBAYFpE,EAAMowC,UACJ,oCACK,IACD,kBAACnI,EAAA,EAAD,CACItmC,QAAS,kBAAMkmD,KACfttD,KAAM,qBACNmG,MAAM,WAELV,EAAMkC,MAAMiC,QAAQC,MACjB,IARZ,wDAaR,kBAAC6J,EAAA,EAAD,CAAY7N,UAAWG,EAAQ2Q,WAC1BlR,EAAMkC,MAAM4lD,MADjB,8BAC+B9nD,EAAMkC,MAAMwI,UAD3C,6BAC4D,IArD5D1K,EAAMkC,MAAM6I,OAAS,EACjB/K,EAAMkC,MAAM6I,QAAU,MAElBkC,KAAKu3C,MAAMxkD,EAAMkC,MAAM6I,OAAZ,OAAoC,4BAGhDkC,KAAKu3C,MAAMxkD,EAAMkC,MAAM6I,OAAS,MAAQ,kCAE5Cy5B,aAAgBxkC,EAAMkC,MAAMm/C,YAAa,wBCrBxDrkC,cACA,IAoGM7J,GAAS9I,IAAM4N,MAAK,kBAAM,4CAC1B8vC,GAAa19C,IAAM4N,MAAK,kBAAM,4CAE9B+vC,G,+MACFlrD,MAAQ,CACJuG,SAAU,KACV1F,MAAM,EACN6R,iBAAkB,KAClBzJ,SAAS,G,EAGb6J,YAAa,E,EAGb5E,QAAU,WACN,GAAIqF,IAAWpS,YAAY,EAAK+B,MAAM1F,SAASgW,UAAW,CACtD,IAAM0O,EAAO7kB,IAAKwZ,UAClB,IAAKxZ,IAAKga,SAAW6K,IAASA,EAAKY,MAAMiO,cAOrC,YANA,EAAK7tB,MAAMuH,eACP,MACA,QACA,2BACA,WAMZ,OAAQgb,aAAc,EAAKviB,MAAMkC,MAAMhF,OAAOzB,OAC1C,IAAK,MAKD,YAJA,EAAKuE,MAAMskB,eAAe,CACtB5gB,IAAK,EAAK1D,MAAMkC,MAAMwB,IACtBjI,KAAM,EAAKuE,MAAMkC,MAAMhF,OAAOzB,OAGtC,IAAK,QAMD,YALA,EAAKuE,MAAMsa,QAAQhS,KACf,EAAKtI,MAAMkC,MAAMwB,IACb,aACAqN,mBAAmB,EAAK/Q,MAAMkC,MAAMhF,OAAOzB,OAGvD,IAAK,QAQD,OAPA,EAAKuE,MAAMkiB,kBAAkB,CACzB,CACIxe,IAAK,EAAK1D,MAAMkC,MAAMwB,IACtB/H,KAAM,gBAGd,EAAKqE,MAAMqkB,kBAEf,IAAK,QAMD,YALA,EAAKrkB,MAAMsa,QAAQhS,KACf,EAAKtI,MAAMkC,MAAMwB,IACb,eACAqN,mBAAmB,EAAK/Q,MAAMkC,MAAMhF,OAAOzB,OAGvD,IAAK,OAMD,YALA,EAAKuE,MAAMsa,QAAQhS,KACf,EAAKtI,MAAMkC,MAAMwB,IACb,cACAqN,mBAAmB,EAAK/Q,MAAMkC,MAAMhF,OAAOzB,OAGvD,IAAK,MAMD,YALA,EAAKuE,MAAMsa,QAAQhS,KACf,EAAKtI,MAAMkC,MAAMwB,IACb,aACAqN,mBAAmB,EAAK/Q,MAAMkC,MAAMhF,OAAOzB,OAGvD,IAAK,OAMD,YALA,EAAKuE,MAAMsa,QAAQhS,KACf,EAAKtI,MAAMkC,MAAMwB,IACb,cACAqN,mBAAmB,EAAK/Q,MAAMkC,MAAMhF,OAAOzB,OAGvD,QAOI,YANA,EAAKuE,MAAMuH,eACP,MACA,QACA,6CACA,a,EAUhB0gD,YAAc,SAACr3C,GAAD,OAAc,SAACjN,GACzBiN,EAASjN,K,EAGbukD,SAAW,WACP,EAAKx4C,SAAS,CAAE3J,SAAS,IACzBwC,IAAIyI,IAAI,mBAAqB,EAAKhR,MAAMkC,MAAMwB,KACzCiF,MAAK,SAAC7O,GACH,EAAK8V,YAAa,EAClBvV,OAAOC,SAAS0C,OAAOlD,EAASG,SAEnC2O,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,cAGPuP,MAAK,WACF,EAAK+G,SAAS,CAAE3J,SAAS,Q,2DAxBrC,WACIxM,KAAKyG,MAAMkiB,kBAAkB,M,oBA2BjC,WACI,IAAQ3hB,EAAYhH,KAAKyG,MAAjBO,QACR,OACI,yBAAKH,UAAWG,EAAQiU,QACpB,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,yBAAKpU,UAAWG,EAAQ4nD,KACpB,kBAACP,GAAD,CAAS1lD,MAAO3I,KAAKyG,MAAMkC,QAC3B,kBAAC0J,EAAA,EAAD,MACA,yBAAKxL,UAAWG,EAAQ6nD,YACpB,kBAACrqB,GAAA,EAAD,CACI39B,UAAWG,EAAQE,KACnBu9B,UAAQ,EACRlvB,SAAUvV,KAAKyG,MAAMkC,MAAMhF,OAAOzB,OAEtC,yBAAK2E,UAAWG,EAAQuO,UACpB,kBAACb,EAAA,EAAD,CAAY5J,MAAO,CAAEy3B,UAAW,cAC3BviC,KAAKyG,MAAMkC,MAAMhF,OAAOzB,MAE7B,kBAACwS,EAAA,EAAD,CAAY7N,UAAWG,EAAQ8nD,UAC1B5uC,YAAalgB,KAAKyG,MAAMkC,MAAMhF,OAAOxB,SAIlD,kBAACkQ,EAAA,EAAD,MACA,yBAAKxL,UAAWG,EAAQ+nD,WACpB,yBAAKloD,UAAWG,EAAQgoD,YACnBhvD,KAAKyG,MAAMkC,MAAM8I,SACd,kBAAC9C,EAAA,EAAD,CACIuE,QAAQ,WACR/L,MAAM,YACNiB,QAASpI,KAAK0uD,YAAY1uD,KAAKyR,SAC/BvF,SAAUlM,KAAKuD,MAAMiJ,SAJzB,iBAUR,yBAAK3F,UAAWG,EAAQ4yC,SACpB,kBAACjrC,EAAA,EAAD,CACIuE,QAAQ,YACR/L,MAAM,YACNN,UAAWG,EAAQioD,eACnB7mD,QAASpI,KAAK0uD,YAAY1uD,KAAK2uD,UAC/BziD,SAAUlM,KAAKuD,MAAMiJ,SALzB,wB,GA1JMmN,aAgLnBu1C,GALIr1C,aAtMK,WACpB,MAAO,MAGgB,SAACnS,GACxB,MAAO,CACHsG,eAAgB,SAACF,EAAUC,EAAY9M,EAAKkG,GACxCO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,KAEvD2jB,gBAAiB,WACbpjB,EAASojB,gBAEbnC,kBAAmB,SAAC7kB,GAChB4D,EAASihB,YAAkB7kB,KAE/BinB,eAAgB,SAACtoB,GACbiF,EAASqjB,YAAetoB,KAE5B0sD,WAAY,SAAChlD,GACTzC,EAASquB,YAAiB5rB,QAmLnB0P,CAGjB9J,cArRa,SAAC7J,GAAD,cAAY,CACvB+U,QAAM,GACF7U,MAAO,OACPqG,UAAW,OACXC,WAAYxG,EAAM0F,QAAQ,GAC1BrD,YAAarC,EAAM0F,QAAQ,IAJzB,cAKD1F,EAAMI,YAAY4U,GAAG,KAA0B,EAAnBhV,EAAM0F,QAAQ,IAAU,CACjDxF,MAAO,KACPqG,UAAW,OACXC,WAAY,OACZnE,YAAa,SATf,cAWDrC,EAAMI,YAAYC,KAAK,MAAQ,CAC5BkG,UAAW,EACXC,WAAY,EACZnE,YAAa,IAdf,+BAgBc,UAhBd,wBAiBO,QAjBP,GAmBN4S,OAAQ,CACJC,aAAc,OAElBg0C,aAAc,CACVhpD,MAAO,QACP8E,OAAQ,UAEZmkD,eAAgB,CACZjpD,MAAO,QACP8E,OAAQ,SACR4T,UAAW,SACXrS,UAAW,QAEfqd,MAAO,CACHzjB,QAASH,EAAM0F,QAAQ,IAE3B1E,KAAM,CACFkU,aAAc,MACd3O,UAAW,GAGfmiD,KAAG,GACCxoD,MAAO,OACP+L,SAAU,IACVzL,gBAAiBR,EAAMe,QAAQyJ,WAAWoZ,MAC1C1O,aAAc,GACdlL,UAAW,iCALZ,cAMEhK,EAAMI,YAAYC,KAAK,MAAQ,CAC5BwE,OAAQ,gCACRqQ,aAAc,EACdjJ,SAAU,MATf,wBAWU,QAXV,8BAYgB,UAZhB,GAcH08C,WAAY,CACRxoD,QAAS,GACTkG,QAAS,OACT84B,KAAM,KAEV9vB,SAAU,CACN7I,WAAY,IAEhBoiD,SAAU,CACN3nD,MAAOjB,EAAMe,QAAQ4F,KAAKX,SAC1BrC,SAAU,IAEdklD,UAAW,CACPxiD,QAAS,OACTlG,QAAS,YACTioB,eAAgB,iBAEpB2gC,eAAgB,CACZviD,WAAY,MA4MlBqD,CAAmBgK,YAAW00C,M,sBCjQ1Ba,GAASx+C,IAAM4N,MAAK,kBAAM,mCAgC1B6wC,G,+MACFhsD,MAAQ,G,EAWRisD,gBAAkB,WACT14C,IAAWhS,YACZ,EAAK2B,MAAMkiB,kBAAkB,K,gEAXrC,WACI7nB,OAAO6W,UAAY3X,KAAKyG,MAAMkC,Q,kCAGlC,WACI7H,OAAO6W,UAAY,KACnB3X,KAAKyG,MAAMkiB,kBAAkB,M,oBASjC,WAAU,IAAD,OACG3hB,EAAYhH,KAAKyG,MAAjBO,QACJyoD,GAAe,EACbxtD,EAA6B,OAAxBjC,KAAKyG,MAAMqD,SAAoB,sBAAmBnJ,EAE7D,OACI,yBAAKkG,UAAWG,EAAQiU,QACpB,kBAACy0C,GAAA,EAAD,CAAmBC,YAAa3vD,KAAKwvD,iBACjC,kBAACva,EAAA,EAAD,CAAOpuC,UAAWG,EAAQ4oD,kBACtB,kBAAC,GAAD,CAAav7B,SAAO,EAAC1rB,MAAO3I,KAAKyG,MAAMkC,UAI9C3I,KAAKyG,MAAMjF,SAASyI,KAAI,SAAC5G,GACtB,IACkC,cAA7BA,EAAMnB,KAAKwxB,eACqB,eAA7BrwB,EAAMnB,KAAKwxB,iBACd+7B,EAGD,OADAA,GAAe,EACR,kBAACH,GAAD,CAAQ3mD,MAAO,EAAKlC,MAAMkC,MAAO3G,KAAMqB,OAGtD,kBAACqiB,GAAA,EAAD,CACIzjB,GAAIA,EACJmC,KAA8B,OAAxBpE,KAAKyG,MAAMqD,SACjBA,SAAU9J,KAAKyG,MAAMqD,SACrBE,QAAS,kBAAM,EAAKvD,MAAM6C,oBAAoB,OAC9C0b,aAAc,CACVlX,SAAU,SACVC,WAAY,UAEhB4X,gBAAiB,CACb7X,SAAU,MACVC,WAAY,WAGhB,kBAAC2G,EAAA,EAAD,KACI,kBAAC25C,GAAD,CACIxX,UAAQ,EACR7sC,QAAS,kBAAM,EAAKvD,MAAM6C,oBAAoB,OAC9CX,MAAO3I,KAAKyG,MAAMkC,e,GA3DVgR,aAyErBk2C,GALMh2C,aAlGG,SAACtW,GACrB,MAAO,CACHuG,SAAUvG,EAAMuF,WAAWgnD,yBAC3BtuD,SAAU+B,EAAMD,SAAS9B,aAIN,SAACkG,GACxB,MAAO,CACHsG,eAAgB,SAACF,EAAUC,EAAY9M,EAAKkG,GACxCO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,KAEvD2jB,gBAAiB,WACbpjB,EAASojB,gBAEbnC,kBAAmB,SAAC7kB,GAChB4D,EAASihB,YAAkB7kB,KAE/BinB,eAAgB,SAACtoB,GACbiF,EAASqjB,YAAetoB,KAE5B0sD,WAAY,SAAChlD,GACTzC,EAASquB,YAAiB5rB,KAE9Bb,oBAAqB,SAAC1D,GAClB8B,EAAS4B,YAAoB1D,QAyEpBiU,CAGnB9J,cA9Ha,SAAC7J,GAAD,YAAY,CACvB+U,QAAM,GACF7U,MAAO,OACPqG,UAAW,GACXwf,aAAc,GACdvf,WAAYxG,EAAM0F,QAAQ,GAC1BrD,YAAarC,EAAM0F,QAAQ,IALzB,cAMD1F,EAAMI,YAAY4U,GAAG,KAA0B,EAAnBhV,EAAM0F,QAAQ,IAAU,CACjDxF,MAAO,KACPsG,WAAY,OACZnE,YAAa,SATf,cAWDrC,EAAMI,YAAYC,KAAK,MAAQ,CAC5BkG,UAAWvG,EAAM0F,QAAQ,GACzBc,WAAYxG,EAAM0F,QAAQ,GAC1BrD,YAAarC,EAAM0F,QAAQ,KAd7B,GAiBNgkD,iBAAkB,CACdhjC,UAAW,WA2GjB7c,CAAmBgK,YAAWw1C,MCpIjB,SAASQ,KACpB,IAAMroD,EAAWC,cACT1F,EAAOia,cAAPja,GAER,EAA0BmD,wBAASzE,GAAnC,mBAAOgI,EAAP,KAAcqnD,EAAd,KACA,EAA8B5qD,oBAAS,GAAvC,mBAAOoH,EAAP,KAAgBiP,EAAhB,KACA,EAAgCrW,mBAAS,IAAzC,mBAAO8L,EAAP,KAAiB++C,EAAjB,KAEM9zC,EAActU,uBAChB,SAACI,GAAD,OAAWP,EAAS0U,aAAenU,MACnC,CAACP,IAGCmG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IA8CL,OA3CAhC,qBAAU,WACFiD,EACIA,EAAMunD,QACN/zC,EAAYxT,EAAMiC,QAAQC,KAAO,kCAChB,KAAbqG,GACArD,EAAe,MAAO,QAAS,iCAAS,YAG5CsO,EAAYxT,EAAMhF,OAAOzB,MAG7Bia,MAEL,CAACxT,EAAOwT,EAAatO,IAExBnI,qBAAU,WACN,OAAO,WACHyW,OAGL,IAEHzW,qBAAU,WACN+V,GAAW,GACX,IAAI00C,EAAe,GACF,KAAbj/C,IACAi/C,EAAe,aAAej/C,GAElClC,IAAI4H,IAAI,eAAiB3U,EAAKkuD,GACzB/gD,MAAK,SAAC7O,GACHyvD,EAASzvD,EAASG,MAClB+a,GAAW,MAEdpM,OAAM,SAACtP,GACJ0b,GAAW,GACQ,MAAf1b,EAAMD,KACNkwD,EAAS,MAETniD,EAAe,MAAO,QAAS9N,EAAMF,QAAS,cAG3D,CAACoC,EAAIiP,EAAUrD,IAGd,kBAAC,WAAD,CAAUgS,SAAU,kBAAC,GAAD,YACLlf,IAAVgI,GAAuB,kBAAC,GAAD,MACb,OAAVA,GAAkB,kBAACwlC,EAAD,CAAQltC,IAAK,2DAC/B0H,GAASA,EAAMunD,QACZ,kBAAC,GAAD,CACI1jD,QAASA,EACTuhD,YAAakC,EACbtnD,MAAOA,IAGdA,IAAUA,EAAMunD,SAAWvnD,EAAMwM,QAC9B,kBAAC,GAAD,CAAYxM,MAAOA,IAEtBA,IAAUA,EAAMunD,QAAUvnD,EAAMwM,QAC7B,kBAAC,GAAD,CAAcxM,MAAOA,KChFrC,IAAM3C,GAAYC,aAAW,iBAAO,CAChCgV,OAAQ,CACJ7U,MAAO,QAGXyjB,UAAW,CACP5Z,OAAQ,OACR7J,MAAO,OACP2E,OAAQ,qBACRkhB,cAAe,OAQR,SAASmkC,KACpB,MAAsBhrD,mBAAS,IAA/B,mBAAOyR,EAAP,KAAYw5C,EAAZ,KACM30C,EAAOC,cACP5a,EAAW+a,cACXC,EAPC,IAAIC,gBAAgBF,cAAcG,QAQjCha,EAAOia,cAAPja,GAEFyF,EAAWC,cAEXwU,EAActU,uBAChB,SAACI,GAAD,OAAWP,EAAS0U,aAAenU,MACnC,CAACP,IAGCmG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAGLhC,qBAAU,WACN,GAAKoR,IAAWpS,YAAY3D,EAASgW,UAIjCoF,EAAYJ,EAAMnF,IAAI,aAJsB,CAC5C,IAAMnS,EAAOsX,EAAMnF,IAAI,KAAKyF,MAAM,KAClCF,EAAY1X,EAAKA,EAAKtB,OAAS,OAKpC,CAACuY,EAAKY,OAAO,GAAIvb,IAEpB2E,qBAAU,WACN,IAAI6W,EAAa,aAAeR,EAAMnF,IAAI,MACtCE,IAAWpS,YAAY3D,EAASgW,YAChCwF,EAAa,cAAgBta,EACG,KAA5B8Z,EAAMnF,IAAI,gBACV2F,GACI,SAAW/E,mBAAmBuE,EAAMnF,IAAI,iBAGpD5H,IAAI4H,IAAI2F,GACHnN,MAAK,SAAC7O,GACH8vD,EAAO9vD,EAASG,SAEnB2O,OAAM,SAACtP,GACJ8N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,cAGvD,CAAC6b,EAAKY,OAAO,GAAIvb,IAEpB,IAAMiG,EAAUhB,KAChB,OACI,yBAAKa,UAAWG,EAAQiU,QACX,KAARpE,GACG,4BAAQ5O,MAAO,KAAMpB,UAAWG,EAAQ6iB,UAAW7e,IAAK6L,K,oGCtElE7Q,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCoqD,UAAW,CACP/jD,QAAS,OACTE,UAAWvG,EAAM0F,QAAQ,IAE7B2kD,SAAU,CACN9jD,UAAW,GACXlE,YAAa,GACbpB,MAAOjB,EAAMe,QAAQ4F,KAAKS,WAE9BggB,MAAO,CACHlnB,MAAO,KAEXs/B,cAAe,CACXnX,WAAY,GACZC,aAAc,GACdC,cAAe,EACf3C,YAAa,IAEjBpZ,OAAQ,CACJjG,UAAW,OAIJ,SAAS+jD,GAAoB/pD,GACxC,MAA0BrB,mBAAS,CAC/BlD,KAAM,GACNuC,KAAM,MAFV,mBAAOpB,EAAP,KAAcotD,EAAd,KAIA,EAAgD3/C,IAAM1L,UAAS,GAA/D,mBAAOsrD,EAAP,KAAyBC,EAAzB,KACA,EAAwCvrD,mBAAS,IAAjD,mBAAOqI,EAAP,KAAqBC,EAArB,KAEA,EAAgDtI,mBAAS,IAAzD,mBAAyBwI,GAAzB,WACM5G,EAAUhB,KAWVkQ,EAAoB,SAAChU,GAAD,OAAU,SAAC0D,GACjC6qD,EAAS,2BACFptD,GADC,kBAEHnB,EAAO0D,EAAElC,OAAOL,WAYzB,OACI,kBAAC0J,GAAA,EAAD,CACI3I,KAAMqC,EAAMrC,KACZ4F,QAASvD,EAAMuD,QACfgD,kBAAgB,qBAEhB,kBAACD,GAAA,EAAD,CACI3I,KAAMssD,EACN1mD,QAAS,kBAAM2mD,GAAoB,IACnC3jD,kBAAgB,qBAEhB,kBAACqB,GAAA,EAAD,CAAapM,GAAG,qBAAhB,4BACA,kBAACqM,GAAA,EAAD,CACIC,YAAY,IACZ7M,SAAU,GACV8M,SAvCM,SAACC,GACnB,IAAMhK,EACc,MAAhBgK,EAAOhK,KACDgK,EAAOhK,KAAOgK,EAAOvM,KACrBuM,EAAOhK,KAAO,IAAMgK,EAAOvM,KACrCwL,EAAgBjJ,GAChBmJ,EAAoBa,EAAOvM,SAoCnB,kBAACwM,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAAS,kBAAMuoD,GAAoB,KAA3C,gBAGA,kBAAChiD,EAAA,EAAD,CACIvG,QA/BD,WACfqoD,EAAS,2BACFptD,GADC,IAEJoB,KAAuB,OAAjBgJ,EAAwB,IAAMA,KAExCkjD,GAAoB,IA2BJxpD,MAAM,UACN+E,SAA2B,KAAjBuB,GAHd,kBASR,yBAAK5G,UAAWG,EAAQ0+B,eACpB,yBAAK7+B,UAAWG,EAAQ4pD,eACpB,yBAAK/pD,UAAWG,EAAQspD,WACpB,yBAAKzpD,UAAWG,EAAQupD,UACpB,kBAACM,GAAA,EAAD,OAGJ,kBAACl8C,GAAA,EAAD,CACI9N,UAAWG,EAAQsmB,MACnBjqB,MAAOA,EAAMnB,KACbqQ,SAAU2D,EAAkB,QAC5BjB,MAAM,wBAGd,yBAAKpO,UAAWG,EAAQspD,WACpB,yBAAKzpD,UAAWG,EAAQupD,UACpB,kBAACO,GAAA,EAAD,OAEJ,6BACI,kBAACn8C,GAAA,EAAD,CACItR,MAAOA,EAAMoB,KACb8N,SAAU2D,EAAkB,QAC5BrP,UAAWG,EAAQsmB,MACnBrY,MAAM,mCAEV,6BACA,kBAACtG,EAAA,EAAD,CACI9H,UAAWG,EAAQ0L,OACnBvL,MAAM,UACNiB,QAAS,kBAAMuoD,GAAoB,KAHvC,gCAWhB,kBAACjiD,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAAS3B,EAAMuD,SAAvB,gBACA,kBAAC2E,EAAA,EAAD,CACIzC,SAAyB,KAAf7I,EAAMoB,MAA8B,KAAfpB,EAAMnB,KACrCiF,MAAM,UACNiB,QAAS,kBAAM3B,EAAM4Q,SAAShU,KAHlC,kBCnHhB,IAAM2C,GAAYC,aAAW,SAACC,GAAD,YAAY,CACrC+U,QAAM,GACF7U,MAAO,OACPqG,UAAW,OACXC,WAAYxG,EAAM0F,QAAQ,GAC1BrD,YAAarC,EAAM0F,QAAQ,IAJzB,cAKD1F,EAAMI,YAAY4U,GAAG,KAA0B,EAAnBhV,EAAM0F,QAAQ,IAAU,CACjDxF,MAAO,KACPsG,WAAY,OACZnE,YAAa,SARf,6BAUY,QAVZ,GAYNgI,QAAS,CACL9D,UAAWvG,EAAM0F,QAAQ,IAE7BmlD,YAAa,CACT1qD,QAASH,EAAM0F,QAAQ,IAE3BolD,eAAgB,CACZ31C,UAAW,QAEf5b,OAAQ,CACJgN,UAAWvG,EAAM0F,QAAQ,IAE7BqN,KAAM,CACFvM,WAAY,QAIL,SAASukD,KACpB,MAAsB7rD,mBAAS,GAA/B,mBAAO8rD,EAAP,KAAYC,EAAZ,KACA,EAA4B/rD,oBAAS,GAArC,mBAAO3F,EAAP,KAAe2xD,EAAf,KACA,EAAgChsD,mBAAS,IAAzC,mBAAOisD,EAAP,KAAiBC,EAAjB,KAEM5pD,EAAWC,cACXkG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAiBLhC,qBAAU,WARNsJ,IAAI4H,IAAI,oBACHxH,MAAK,SAAC7O,GACH+wD,EAAY/wD,EAASG,KAAK2wD,aAE7BhiD,OAAM,SAACtP,GACJ8N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,cAMvD,IAEH,IAsCMmH,EAAUhB,KACVyf,EAAO7kB,IAAKwZ,UAElB,OACI,yBAAKvT,UAAWG,EAAQiU,QACpB,kBAACu1C,GAAD,CACIn5C,SA7BO,SAACk6C,GAChBH,GAAU,GACVpiD,IAAIC,KAAK,mBAAoB,CACzBxK,KAAM8sD,EAAQ9sD,KACdvC,KAAMqvD,EAAQrvD,OAEbkN,MAAK,SAAC7O,GACH+wD,EAAY,CACR,CACIE,GAAIjxD,EAASG,KAAKuB,GAClBmzC,SAAU70C,EAASG,KAAKwQ,SACxBugD,UAAWlxD,EAASG,KAAKmlD,WACzB6L,KAAMH,EAAQrvD,KACdyvD,KAAMJ,EAAQ9sD,OANX,oBAQJ4sD,QAGVhiD,OAAM,SAACtP,GACJ8N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,aAW9CuE,KAAM3E,EACNuK,QAAS,kBAAMonD,GAAU,MAE7B,kBAAC18C,EAAA,EAAD,CAAYvN,MAAM,gBAAgB+L,QAAQ,MAA1C,UAGA,kBAAC+hC,EAAA,EAAD,CAAOt3B,UAAW,EAAG9W,UAAWG,EAAQuJ,SACpC,kBAACqhD,GAAA,EAAD,CACIvuD,MAAO6tD,EACPW,eAAe,UACfC,UAAU,UACVv/C,SAAU,SAACnI,EAAO2nD,GAAR,OAAqBZ,EAAOY,IACtC5lD,aAAW,yBAEX,kBAAC6lD,GAAA,EAAD,CAAK/8C,MAAM,8BAEf,yBAAKpO,UAAWG,EAAQ+pD,aACX,IAARG,GACG,6BACI,kBAACe,GAAA,EAAD,CAAOC,SAAS,QAAhB,uCAEKpxD,OAAOC,SAASoxD,OAAS,OAF9B,+DAGe1sC,EAAKU,UAAW,IAH/B,kFAMA,kBAACisC,GAAA,EAAD,CAAgBvrD,UAAWG,EAAQgqD,gBAC/B,kBAAClS,GAAA,EAAD,CACIj4C,UAAWG,EAAQ+3C,MACnB5yC,aAAW,gBAEX,kBAAC6yC,GAAA,EAAD,KACI,kBAACnD,GAAA,EAAD,KACI,kBAACQ,GAAA,EAAD,2BACA,kBAACA,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,CAAWgW,MAAM,SAAjB,sBAGA,kBAAChW,GAAA,EAAD,CAAWgW,MAAM,SAAjB,4BAGA,kBAAChW,GAAA,EAAD,CAAWgW,MAAM,SAAjB,kBAKR,kBAAChT,GAAA,EAAD,KACKgS,EAASpnD,KAAI,SAACm/C,EAAKnnD,GAAN,OACV,kBAAC45C,GAAA,EAAD,CAAU1xC,IAAKlI,GACX,kBAACo6C,GAAA,EAAD,CACIlsB,UAAU,KACVosB,MAAM,OAEL6M,EAAIsI,MAET,kBAACrV,GAAA,EAAD,KACK+M,EAAIhU,SACL,kBAAC1G,EAAA,EAAD,CACI7nC,UAAWG,EAAQiS,KACnB7Q,QAAS,kBA1HpCyE,EA4HmCu8C,EAAIhU,SA3H5Dt7B,UAAUw4C,UAAUC,UAAU1lD,QAC9BgB,EAAe,MAAO,SAAU,6CAAW,WAFvB,IAAChB,GA+H2B7L,KAAM,mBAPV,iBAYJ,kBAACq7C,GAAA,EAAD,CAAWgW,MAAM,SACZjJ,EAAIuI,MAET,kBAACtV,GAAA,EAAD,CAAWgW,MAAM,SACb,kBAAC,KAAD,CACIvM,SAAUsD,EAAIqI,UACdzL,OAAO,WAGf,kBAAC3J,GAAA,EAAD,CAAWgW,MAAM,SACb,kBAAC5+C,GAAA,EAAD,CACItR,KAAM,QACNiG,QAAS,kBA7HvC,SAACnG,GACnB,IAAMsvD,EAAUF,EAASpvD,GACzB+M,IAAI8I,OAAO,oBAAsBy5C,EAAQC,IACpCpiD,MAAK,WACF,IAAIojD,EAAW,aAAOnB,GACtBmB,EAAcA,EAAYtuD,QAAO,SAACmf,EAAGjD,GACjC,OAAOA,IAAMne,KAEjBqvD,EAAYkB,MAEfnjD,OAAM,SAACtP,GACJ8N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,YAmHF4yD,CAAcxwD,KAGlB,kBAAC,KAAD,eAQ5B,kBAAC0M,EAAA,EAAD,CACIvG,QAAS,kBAAMgpD,GAAU,IACzBvqD,UAAWG,EAAQvH,OACnByT,QAAQ,YACR/L,MAAM,aAJV,sCC9M5B,IAAMnB,GAAYC,aAAW,SAACC,GAAD,YAAY,CACrC+U,QAAM,GACF7U,MAAO,OACPqG,UAAW,OACXC,WAAYxG,EAAM0F,QAAQ,GAC1BrD,YAAarC,EAAM0F,QAAQ,IAJzB,cAKD1F,EAAMI,YAAY4U,GAAG,KAA0B,EAAnBhV,EAAM0F,QAAQ,IAAU,CACjDxF,MAAO,KACPsG,WAAY,OACZnE,YAAa,SARf,6BAUY,QAVZ,GAYNgI,QAAS,CACL9D,UAAWvG,EAAM0F,QAAQ,GACzByP,UAAW,QAEf01C,YAAa,CACT1qD,QAASH,EAAM0F,QAAQ,IAE3BolD,eAAgB,CACZ31C,UAAW,QAEf5b,OAAQ,CACJgN,UAAWvG,EAAM0F,QAAQ,IAE7Bqa,OAAQ,CACJsc,UAAW,WAEfmwB,OAAQ,CACJrsD,QAASH,EAAM0F,QAAQ,QAIhB,SAAS+mD,KACpB,MAA0BvtD,mBAAS,IAAnC,mBAAOiiC,EAAP,KAAcurB,EAAd,KACA,EAA0BxtD,mBAAS,GAAnC,mBAAOypB,EAAP,KAAcw4B,EAAd,KACA,EAAwBjiD,mBAAS,GAAjC,mBAAO+hD,EAAP,KAAaC,EAAb,KAEM1/C,EAAWC,cACXkG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAcLhC,qBAAU,YAXO,SAACyhD,GACdn4C,IAAI4H,IAAI,4BAA8BuwC,GACjC/3C,MAAK,SAAC7O,GACHqyD,EAASryD,EAASG,KAAK2mC,OACvBggB,EAAS9mD,EAASG,KAAKmuB,UAE1Bxf,OAAM,SAACtP,GACJ8N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,YAKtDqoD,CAASf,KAEV,CAACA,IAEJ,IAYMngD,EAAUhB,KAEhB,OACI,yBAAKa,UAAWG,EAAQiU,QACpB,kBAACvG,EAAA,EAAD,CAAYvN,MAAM,gBAAgB+L,QAAQ,MAA1C,4BAGA,kBAAC+hC,EAAA,EAAD,CAAOt3B,UAAW,EAAG9W,UAAWG,EAAQuJ,SACpC,kBAACuuC,GAAA,EAAD,CAAOj4C,UAAWG,EAAQ+3C,MAAO5yC,aAAW,gBACxC,kBAAC6yC,GAAA,EAAD,KACI,kBAACnD,GAAA,EAAD,KACI,kBAACQ,GAAA,EAAD,CAAWwW,OAAO,UAAlB,sBACA,kBAACxW,GAAA,EAAD,CAAWwW,OAAO,SAASR,MAAM,SAAjC,4BAGA,kBAAChW,GAAA,EAAD,CAAWwW,OAAO,SAASR,MAAM,SAAjC,gBAGA,kBAAChW,GAAA,EAAD,CAAWwW,OAAO,SAASR,MAAM,SAAjC,4BAGA,kBAAChW,GAAA,EAAD,CAAWwW,OAAO,UAAlB,8BAGR,kBAACxT,GAAA,EAAD,KACKhY,EAAMp9B,KAAI,SAACm/C,EAAKnnD,GAAN,OACP,kBAAC45C,GAAA,EAAD,CAAU1xC,IAAKlI,GACX,kBAACo6C,GAAA,EAAD,CACIwW,OAAO,SACP1iC,UAAU,KACVosB,MAAM,OAELtR,aACGme,EAAItB,YACJ,uBAGR,kBAACzL,GAAA,EAAD,CAAWwW,OAAO,SAASR,MAAM,SAC5B7nB,aAAY4e,EAAIhnD,OAErB,kBAACi6C,GAAA,EAAD,CAAWwW,OAAO,SAASR,MAAM,SAC5B9nB,aAAc6e,EAAIn9C,SAEvB,kBAACowC,GAAA,EAAD,CAAWwW,OAAO,SAASR,MAAM,SAC5B5nB,aAAgB2e,EAAIhnD,KAAMgnD,EAAIvsB,WAEnC,kBAACwf,GAAA,EAAD,CAAWx1C,UAAWG,EAAQif,QA1DzC,SAAClmB,GACd,GAAc,KAAVA,EACA,MAAO,IAEX,IAEI,OADYsa,KAAKC,MAAMva,GACZkB,IACb,MAAO2E,GACL,MAAO,gBAmDkBktD,CAAS1J,EAAIrpD,cAMlC,yBAAK8G,UAAWG,EAAQ0rD,QACpB,kBAAC3K,GAAA,EAAD,CACI/oB,MAAOtrB,KAAKurB,KAAKpQ,EAAQ,IACzBtc,SAAU,SAAC3M,EAAGyd,GAAJ,OAAU+jC,EAAQ/jC,IAC5Blc,MAAM,iBC3H9B,IA0GM4rD,G,+MACFxvD,MAAQ,CACJyvD,SAAU,EACV1L,UAAW,GACXH,KAAM,EACN1hC,KAAM,KACNoJ,MAAO,G,EAGXjd,aAAe,SAACxH,EAAO4oD,GACnB,EAAK78C,SAAS,CAAE68C,aACC,IAAbA,EACA,EAAK9K,SAAS,EAAG,OACG,IAAb8K,GACP,EAAK9K,SAAS,EAAG,Y,EAIzBl5B,kBAAoB,WAChB,EAAKk5B,SAAS,EAAG,Y,EAGrBA,SAAW,SAACf,EAAMO,GACd14C,IAAI4H,IACA,iBACI,EAAKnQ,MAAMmnC,MAAMtxB,OAAOra,GACxB,SACAklD,EACA,SACAO,GAEHt4C,MAAK,SAAC7O,GACH,EAAK4V,SAAS,CACVmxC,UAAW/mD,EAASG,KAAKoO,MACzB2W,KAAMllB,EAASG,KAAK+kB,KACpBoJ,MAAOtuB,EAASG,KAAKmuB,WAG5Bxf,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,a,EAKhBozD,SAAW,WACP,EAAK/K,SACD,EAAK3kD,MAAM4jD,KAAO,EACM,IAAxB,EAAK5jD,MAAMyvD,SAAiB,UAAY,Q,EAIhDE,SAAW,WACP,EAAKhL,SACD,EAAK3kD,MAAM4jD,KAAO,EACM,IAAxB,EAAK5jD,MAAMyvD,SAAiB,UAAY,Q,6CAIhD,WAAU,IAAD,OACGhsD,EAAYhH,KAAKyG,MAAjBO,QAER,OACI,yBAAKH,UAAWG,EAAQiU,QACC,OAApBjb,KAAKuD,MAAMkiB,MAAiB,8BACR,OAApBzlB,KAAKuD,MAAMkiB,MACR,kBAACwvB,EAAA,EAAD,CAAOlnB,QAAM,GACT,yBAAKlnB,UAAWG,EAAQ8oB,SACpB,6BACI,kBAAC/J,EAAA,EAAD,CACIlf,UAAWG,EAAQmsD,gBACnBnoD,IACI,uBACAhL,KAAKuD,MAAMkiB,KAAKxjB,GAChB,QAIZ,6BACI,kBAACyS,EAAA,EAAD,CAAY7N,UAAWG,EAAQkpB,SAAUjK,QAAM,GAC1CjmB,KAAKuD,MAAMkiB,KAAK5a,QAI7B,kBAAC+mD,GAAA,EAAD,CACIvuD,MAAOrD,KAAKuD,MAAMyvD,SAClBnB,eAAe,UACfC,UAAU,UACVv/C,SAAUvS,KAAK4R,aACfwhD,UAAQ,GAER,kBAACpB,GAAA,EAAD,CAAK/8C,MAAM,6BACX,kBAAC+8C,GAAA,EAAD,CAAK/8C,MAAM,6BACX,kBAAC+8C,GAAA,EAAD,CAAK/8C,MAAM,8BAEU,IAAxBjV,KAAKuD,MAAMyvD,UACR,yBAAKnsD,UAAWG,EAAQqsD,eACpB,kBAAC3T,GAAA,EAAD,CAAM71B,WAAS,EAACje,QAAS,IACrB,kBAAC8zC,GAAA,EAAD,CACIloB,MAAI,EACJooB,GAAI,EACJD,GAAI,GACJ94C,UAAWG,EAAQssD,UAEnB,kBAAC5+C,EAAA,EAAD,CACIvN,MAAM,gBACN+L,QAAQ,MAFZ,OAMA,kBAACwB,EAAA,EAAD,KACK1U,KAAKuD,MAAMkiB,KAAKxjB,KAGzB,kBAACy9C,GAAA,EAAD,CACIloB,MAAI,EACJooB,GAAI,EACJD,GAAI,GACJ94C,UAAWG,EAAQssD,UAEnB,kBAAC5+C,EAAA,EAAD,CACIvN,MAAM,gBACN+L,QAAQ,MAFZ,gBAMA,kBAACwB,EAAA,EAAD,KACK1U,KAAKuD,MAAMkiB,KAAK5a,OAGzB,kBAAC60C,GAAA,EAAD,CACIloB,MAAI,EACJooB,GAAI,EACJD,GAAI,GACJ94C,UAAWG,EAAQssD,UAEnB,kBAAC5+C,EAAA,EAAD,CACIvN,MAAM,gBACN+L,QAAQ,MAFZ,sBAMA,kBAACwB,EAAA,EAAD,KACK1U,KAAKuD,MAAMkiB,KAAKY,QAGzB,kBAACq5B,GAAA,EAAD,CACIloB,MAAI,EACJooB,GAAI,EACJD,GAAI,GACJ94C,UAAWG,EAAQssD,UAEnB,kBAAC5+C,EAAA,EAAD,CACIvN,MAAM,gBACN+L,QAAQ,MAFZ,4BAMA,kBAACwB,EAAA,EAAD,KACK1U,KAAKuD,MAAMsrB,QAGpB,kBAAC6wB,GAAA,EAAD,CACIloB,MAAI,EACJooB,GAAI,EACJD,GAAI,GACJ94C,UAAWG,EAAQssD,UAEnB,kBAAC5+C,EAAA,EAAD,CACIvN,MAAM,gBACN+L,QAAQ,MAFZ,4BAMA,kBAACwB,EAAA,EAAD,KACK1U,KAAKuD,MAAMkiB,KAAKpjB,UAMX,IAAxBrC,KAAKuD,MAAMyvD,UACe,IAAxBhzD,KAAKuD,MAAMyvD,WACX,6BACI,yBAAKnsD,UAAWG,EAAQgqD,gBACpB,kBAAClS,GAAA,EAAD,CAAOj4C,UAAWG,EAAQ+3C,OACtB,kBAACC,GAAA,EAAD,KACI,kBAACnD,GAAA,EAAD,KACI,kBAACQ,GAAA,EAAD,2BACA,kBAACA,GAAA,EAAD,CACIx1C,UACIG,EAAQusD,YAFhB,4BAOA,kBAAClX,GAAA,EAAD,CACIx1C,UAAW,CACPG,EAAQwsD,GACRxsD,EAAQusD,aAHhB,4BAQA,kBAAClX,GAAA,EAAD,CACIx1C,UAAW,CACPG,EAAQwsD,GACRxsD,EAAQusD,aAHhB,8BAUR,kBAAClU,GAAA,EAAD,KACKr/C,KAAKuD,MAAM+jD,UAAUr9C,KAClB,SAACm/C,EAAKnnD,GAAN,OACI,kBAAC45C,GAAA,EAAD,CACI1xC,IAAKlI,EACL4E,UACIG,EAAQysD,UAEZrrD,QAAS,kBACL,EAAK3B,MAAMsa,QAAQhS,KACf,MAAQq6C,EAAIj/C,OAIpB,kBAACkyC,GAAA,EAAD,KACI,kBAAC3nC,EAAA,EAAD,KACK00C,EAAIzlD,OACCylD,EAAIzlD,OACCzB,KACL,yBAGd,kBAACm6C,GAAA,EAAD,CACIwW,OAAQ,SACRhsD,UACIG,EAAQusD,YAGXtoB,aACGme,EAAItB,YACJ,uBAGR,kBAACzL,GAAA,EAAD,CACIx1C,UACIG,EAAQusD,YAGXnK,EAAIj4C,WAET,kBAACkrC,GAAA,EAAD,CACIx1C,UACIG,EAAQusD,YAGXnK,EAAImF,cAQA,IAAhCvuD,KAAKuD,MAAM+jD,UAAUnkD,QACM,IAAxBnD,KAAKuD,MAAMyvD,UACP,yBAAKnsD,UAAWG,EAAQ8S,WACpB,kBAACiuC,GAAA,EAAD,CACI/oB,MAAOtrB,KAAKurB,KACRj/B,KAAKuD,MAAMsrB,MAAQ,IAEvBtc,SAAU,SAAC3M,EAAGyd,GAAJ,OACN,EAAK6kC,SACD7kC,EAEI,IADJ,EAAK9f,MAAMyvD,SAEL,UACA,QAGd7rD,MAAM,sB,GA9RvBwS,aAgThB+5C,GALC75C,aAvTQ,WACpB,MAAO,MAGgB,SAACnS,GACxB,MAAO,CACHsG,eAAgB,SAACF,EAAUC,EAAY9M,EAAKkG,GACxCO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,QAgT/C0S,CAGd9J,cAxZa,SAAC7J,GAAD,MAAY,CACvB+U,OAAO,aACH7U,MAAO,OACPqG,UAAW,OACXC,WAAYxG,EAAM0F,QAAQ,GAC1BrD,YAAarC,EAAM0F,QAAQ,GAC3BqgB,aAAc,QACb/lB,EAAMI,YAAY4U,GAAG,MAAQ,CAC1B9U,MAAO,IACPsG,WAAY,OACZnE,YAAa,SAGrBunB,QAAS,CACL/kB,OAAQ,QACRrE,gBAAiBR,EAAMe,QAAQ4L,QAAQ0R,KACvCle,QAAS,gBACTiqB,gBACI,gHACApqB,EAAMe,QAAQ4L,QAAQtF,MAAM8U,QAAQ,IAAK,OACzC,2DACAnc,EAAMe,QAAQ4L,QAAQlM,KAAK0b,QAAQ,IAAK,OACxC,6DACAnc,EAAMe,QAAQqG,UAAUiX,KAAKlC,QAAQ,IAAK,OAC1C,0DACAnc,EAAMe,QAAQqG,UAAU3G,KAAK0b,QAAQ,IAAK,OAC1C,0DACAnc,EAAMe,QAAQqG,UAAUC,MAAM8U,QAAQ,IAAK,OAC3C,4DACAnc,EAAMe,QAAQqG,UAAUiX,KAAKlC,QAAQ,IAAK,OAC1C,6DACAnc,EAAMe,QAAQ4L,QAAQlM,KAAK0b,QAAQ,IAAK,OACxC,0DACAnc,EAAMe,QAAQ4L,QAAQ0R,KAAKlC,QAAQ,IAAK,OACxC,0DACAnc,EAAMe,QAAQqG,UAAUC,MAAM8U,QAAQ,IAAK,OAC3C,6DACAnc,EAAMe,QAAQqG,UAAU3G,KAAK0b,QAAQ,IAAK,OAC1C,6DACAnc,EAAMe,QAAQqG,UAAUiX,KAAKlC,QAAQ,IAAK,OAC1C,2DACAnc,EAAMe,QAAQqG,UAAU3G,KAAK0b,QAAQ,IAAK,OAC1C,uDACJkO,eAAgB,QAChBojC,mBAAoB,UAExBR,gBAAiB,CACbpoD,OAAQ,OACR3E,MAAO,OACPwtD,aAAc,MACd1oD,OAAQ,OACRuB,UAAW,OACXyD,UACI,8DACJD,OAAQ,kBAEZigB,SAAU,CACN9pB,MAAO,QACP8E,OAAQ,OACR4T,UAAW,SACXrS,UAAW,MACX5C,SAAU,OACV1C,MAAO,UACPC,QAAS,QAEbosD,GAAI,CACA/jD,SAAU,SAEd8jD,WAAW,eACNrtD,EAAMI,YAAYC,KAAK,MAAQ,CAC5BgG,QAAS,SAGjBknD,UAAW,CACPtF,OAAQ,WAEZr0C,UAAW,CACPzT,QAASH,EAAM0F,QAAQ,IAE3BioD,SAAU,CACNpnD,UAAW,OACXC,WAAY,QAEhB4mD,SAAU,CACNxnC,YAAa,iBACb2C,cAAe,kBAEnB4kC,cAAe,CACX5mD,UAAW,QAEfukD,eAAgB,CACZ31C,UAAW,WA6TjBtL,CAAmBgK,YAAWg5C,M,oaCvZ1B/sD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC4tD,aAAc,CACVrlC,cAAe,OACfF,WAAY,QAEhB01B,UAAW,CACPx3C,UAAW,MACXlE,YAAa,OACbpB,MAAOjB,EAAMe,QAAQ4F,KAAKS,WAE9BymD,UAAW,CACPxlC,WAAY,EACZE,cAAe,GAEnB3G,QAAS,CACLvf,YAAa,OACbmE,WAAY,MACZ+C,SAAU,IAEdukD,cAAe,CACXznD,QAAS,YAIF,SAAS0nD,GAAMxtD,GAC1B,MAAgCrB,mBAAS,IAAzC,mBAAO1D,EAAP,KAAiBwyD,EAAjB,KACA,EAA8B9uD,oBAAS,GAAvC,mBAAO+uD,EAAP,KAAgBC,EAAhB,KACM1sD,EAAWC,cACXkG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAGC2sD,EAAmB,SAACpyD,GACtB+M,IAAIgJ,MAAM,sBAAuB,CAC7B/V,GAAIA,IAEHmN,MAAK,WACFvB,EAAe,MAAO,QAAS,iCAAS,WACxCpH,EAAM0S,OAAOlX,MAEhBoN,OAAM,SAACtP,GACJ8N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,YAEjDuP,MAAK,WACFglD,GAAW,OAIjBptD,EAAUhB,KAkEhB,OACI,6BACI,kBAAC+G,GAAA,EAAD,CAAQ3I,KAAM+vD,EAASnqD,QAAS,kBAAMoqD,GAAW,KAC7C,kBAAC/lD,GAAA,EAAD,iCACA,kBAACpB,GAAA,EAAD,2EACA,kBAACyB,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAAS,kBAAMgsD,GAAW,IAAQjtD,MAAM,WAAhD,gBAGA,kBAACwH,EAAA,EAAD,CACIvG,QAAS,kBAAMisD,EAAiB3yD,IAChCyF,MAAM,WAFV,kBASR,kBAACuN,EAAA,EAAD,CAAY7N,UAAWG,EAAQ8sD,aAAc5gD,QAAQ,aAArD,kCAGA,kBAAC+hC,EAAA,EAAD,KACI,kBAAC3iC,GAAA,EAAD,CAAMzL,UAAWG,EAAQ+sD,WACpBttD,EAAM7C,KAAKqG,KAAI,SAACoZ,GAAD,OACZ,oCACI,kBAAC5Q,GAAA,EAAD,CACIC,QAAM,EACN5H,MAAO,CACH0jB,aAAc,IAElBpmB,QAAS,WACLgsD,GAAW,GACXF,EAAY7wC,EAAEphB,MAGlB,kBAAC0Q,GAAA,EAAD,CAAc9L,UAAWG,EAAQ8gB,SAC7B,kBAACquB,EAAA,EAAD,OAEJ,kBAACvjC,GAAA,EAAD,CAAcC,QAASwQ,EAAEixC,cAEzB,kBAACxhD,GAAA,EAAD,CACI1K,QAAS,kBAAMisD,EAAiBhxC,EAAEphB,KAClC4E,UAAWG,EAAQgtD,eAEnB,kBAAC1H,GAAA,EAAD,CACIzlD,UAAWG,EAAQi9C,cAI/B,kBAAC5xC,EAAA,EAAD,UAGR,kBAACI,GAAA,EAAD,CAAUC,QAAM,EAACtK,QAAS,WAnHjC0R,UAAUu7B,YAKfrmC,IAAIyI,IAAI,cAAe,IAClBrI,MAAK,SAAC7O,GACH,IAAMg0D,EAA4Bh0D,EAASG,KAO3C,GANA6zD,EAA0Bhf,UAAUC,UAAY7zB,YAC5C4yC,EAA0Bhf,UAAUC,WAExC+e,EAA0Bhf,UAAU9vB,KAAKxjB,GAAK0f,YAC1C4yC,EAA0Bhf,UAAU9vB,KAAKxjB,IAEzCsyD,EAA0Bhf,UAAUif,mBACpC,IACI,IAAIp0C,EAAI,EACRA,EACAm0C,EAA0Bhf,UAAUif,mBAC/BrxD,OACLid,IAEAm0C,EAA0Bhf,UAAUif,mBAChCp0C,GACFne,GAAK0f,YACH4yC,EAA0Bhf,UACrBif,mBAAmBp0C,GAAGne,IAKvC,OAAO6X,UAAUu7B,YAAY51C,OAAO,CAChC81C,UAAWgf,EAA0Bhf,eAG5CnmC,MAAK,SAAC4sB,GACH,IAAMy4B,EAAoBz4B,EAAWz7B,SAASk0D,kBACxC3e,EAAiB9Z,EAAWz7B,SAASu1C,eACrCC,EAAQ/Z,EAAW+Z,MACzB,OAAO/mC,IAAIyI,IACP,qBACA4C,KAAKM,UAAU,CACX1Y,GAAI+5B,EAAW/5B,GACf8zC,MAAO/zB,YAAa+zB,GACpB3zC,KAAM45B,EAAW55B,KACjB7B,SAAU,CACNk0D,kBAAmBzyC,YAAayyC,GAChC3e,eAAgB9zB,YAAa8zB,UAK5C1mC,MAAK,SAAC7O,GACHkG,EAAMiuD,IAAIn0D,EAASG,MACnBmN,EAAe,MAAO,QAAS,uCAAU,cAG5CwB,OAAM,SAACtP,GACJ0d,QAAQC,IAAI3d,GACZ8N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,YA1DlDgO,EAAe,MAAO,QAAS,qEAAe,aAmHlC,kBAAC8E,GAAA,EAAD,CAAc9L,UAAWG,EAAQ8gB,SAC7B,kBAACulC,GAAA,EAAD,OAEJ,kBAACz6C,GAAA,EAAD,CAAcC,QAAQ,yCAEtB,kBAACC,GAAA,EAAD,CACIjM,UAAWG,EAAQgtD,eAEnB,kBAAC,KAAD,CAAWntD,UAAWG,EAAQi9C,iBC/K1D,IAAMj+C,GAAYC,aAAW,SAACC,GAAD,MAAY,MAE1B,SAASyuD,GAAeluD,GACnC,MAA0CrB,mBAAS2lC,MAAnD,mBAAO6pB,EAAP,KAAsBC,EAAtB,KACMntD,EAAWC,cACXkG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAaCV,EAAUhB,KAEhB,OACI,kBAAC+G,GAAA,EAAD,CACI3I,KAAMqC,EAAMrC,KACZ4F,QAASvD,EAAMuD,QACfgD,kBAAgB,qBAEhB,kBAACqB,GAAA,EAAD,CAAapM,GAAG,qBAAhB,4BAEA,kBAACgL,GAAA,EAAD,KACI,kBAACgG,EAAA,EAAD,KACI,kBAAC0B,GAAA,EAAD,CACIM,MAAO,4CACP5R,MAAOuxD,EACPriD,SAAU,SAAC3M,GAAD,OAAOivD,EAAiBjvD,EAAElC,OAAOL,YAKvD,kBAACqL,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAAS3B,EAAMuD,SAAvB,gBACA,yBAAKnD,UAAWG,EAAQ2E,SACpB,kBAACgD,EAAA,EAAD,CACIxH,MAAM,UACN+E,SAA4B,KAAlB0oD,EACVxsD,QAAS,WAnCpBijC,aAAiBupB,IAItBh0D,IAAKyH,cAAc,WAAYusD,GAC/B5pB,eACAvkC,EAAMuD,WALF6D,EAAe,MAAO,QAAS,6CAAW,aA+BlC,eAMKpH,EAAM6I,eACH,kBAACnC,GAAA,EAAD,CACIhL,KAAM,GACN0E,UAAWG,EAAQqG,qBCvBnD,IAyHMynD,G,oDACF,WAAYruD,GAAQ,IAAD,+BACf,cAAMA,IAIVlD,MAAQ,CACJwxD,aAAa,EACbC,WAAW,EACXC,gBAAgB,EAChBzoD,QAAS,GACT0oD,OAAQ,GACR5M,OAAQ,GACR6M,UAAW,GACXC,aAAc,GACdC,WAAW,EACXC,SAAU,GACVC,aAAa,EACbC,YAAa,KACbC,eAAe,EACfC,oBAAoB,EACpBC,iBAAiB,EACjBC,gBAAgB,EAChBC,cAAc,EACdC,gBAAgB,EAChBC,SAAU,CACN30C,IAAK,EACL40C,cAAe,EACf1xD,OAAQ,CACJiZ,QAAS,CACLrb,KAAM,IACND,GAAI,IAER8d,QAAS,IAEbk2C,GAAI,GACJC,UAAU,EACVC,WAAY,GACZC,cAAe,GACfC,aAAc,GACdC,OAAQ,GACRzhB,MAAO,KAxCI,EA4CnB9vB,YAAc,WACV,EAAK5O,SAAS,CACV4+C,aAAa,EACbC,WAAW,EACXC,gBAAgB,EAChBzoD,QAAS,GACT6oD,WAAW,EACXE,aAAa,EACbE,eAAe,EACfC,oBAAoB,EACpBC,iBAAiB,EACjBC,gBAAgB,EAChBC,cAAc,KAxDH,EAgEnBlsD,iBAAmB,WACf,IAAMC,EACwB,SAA1B,EAAKnD,MAAMoC,WACL,OAC0B,SAA1B,EAAKpC,MAAMoC,WACX,YACA,OACVjI,IAAKyH,cAAc,cAAeuB,GAClC,EAAKnD,MAAM8vD,WAAW3sD,IAxEP,EA2EnB4sD,YAAc,WACVxnD,IAAI4H,IAAI,iBACHxH,MAAK,SAAC7O,GACH,IAAM2F,EAAQmU,KAAKC,MAAM/Z,EAASG,KAAK41D,QACvC/1D,EAASG,KAAK41D,OAASpwD,EACvB,EAAKiQ,SAAS,CACV4/C,SAAUx1D,EAASG,UAG1B2O,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,aAzFG,EA8FnB42D,YAAc,WACV,EAAKtgD,SAAS,CACV3J,QAAS,aAEbwC,IAAIyI,IAAI,wBACHrI,MAAK,WACF,EAAK3I,MAAMuH,eACP,MACA,QACA,qEACA,WAEJ,EAAKmI,SAAS,CACV3J,QAAS,QAGhB6C,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,SAEJ,EAAKsW,SAAS,CACV3J,QAAS,SAtHN,EA2HnBkqD,WAAa,WACT,EAAKvgD,SAAS,CACV3J,QAAS,SAEbwC,IAAIgJ,MAAM,qBAAsB,CAC5BnN,KAAM,EAAKtH,MAAMsH,OAEhBuE,MAAK,WACF,EAAK3I,MAAMuH,eACP,MACA,QACA,qEACA,WAEJ,EAAKmI,SAAS,CACV3J,QAAS,KAEb,EAAKuY,iBAER1V,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,SAEJ,EAAKsW,SAAS,CACV3J,QAAS,SAtJN,EA2JnBmqD,aAAe,WACX,EAAKxgD,SAAS,CACV3J,QAAS,WAEb,IAAMoqD,EAAW,IAAIC,SACrBD,EAASE,OAAO,SAAU,EAAKC,UAAUx5C,QAAQ2iB,MAAM,IACvDlxB,IAAIC,KAAK,uBAAwB2nD,EAAU,CACvCj7B,QAAS,CACL,eAAgB,yBAGnBvsB,MAAK,WACF,EAAK3I,MAAMuH,eACP,MACA,QACA,qEACA,WAEJ,EAAKmI,SAAS,CACV3J,QAAS,QAGhB6C,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,SAEJ,EAAKsW,SAAS,CACV3J,QAAS,SAzLN,EA8LnBwqD,aAAe,WACXhoD,IAAIgJ,MAAM,yBAA0B,CAChC/L,QAAS,EAAK1I,MAAMwyD,SAASG,WAE5B9mD,MAAK,WACF,EAAK3I,MAAMuH,eACP,MACA,QACA,iCACA,WAEJ,EAAKmI,SAAS,CACV4/C,SAAS,2BACF,EAAKxyD,MAAMwyD,UADV,IAEJG,UAAW,EAAK3yD,MAAMwyD,SAASG,gBAI1C7mD,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,aArNG,EA0NnBo3D,WAAa,WACL,EAAK1zD,MAAM+kD,SAAW,EAAK/kD,MAAM6xD,cASrC,EAAKj/C,SAAS,CACV3J,QAAS,mBAEbwC,IAAIgJ,MAAM,yBAA0B,CAChCk/C,IAAK,EAAK3zD,MAAM2xD,OAChBiC,IAAK,EAAK5zD,MAAM+kD,SAEfl5C,MAAK,WACF,EAAK3I,MAAMuH,eACP,MACA,QACA,iCACA,WAEJ,EAAKmI,SAAS,CACV3J,QAAS,KAEb,EAAKuY,iBAER1V,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,SAEJ,EAAKsW,SAAS,CACV3J,QAAS,SAnCjB,EAAK/F,MAAMuH,eACP,MACA,QACA,yDACA,YAhOO,EAoQnBunD,YAAc,WACV,EAAKp/C,SAAS,CACV3J,QAAS,gBAEbwC,IAAIgJ,MAAM,sBAAuB,CAC7B9R,MAAO,EAAK3C,MAAMiyD,cAEjBpmD,MAAK,WACF,EAAK3I,MAAMuH,eACP,MACA,QACA,6CACA,WAEJ,EAAKvH,MAAMuvB,YAAY,EAAKzyB,MAAMiyD,aAClC,EAAKr/C,SAAS,CACV3J,QAAS,QAGhB6C,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,SAEJ,EAAKsW,SAAS,CACV3J,QAAS,SA/RN,EAoSnB4qD,iBAAmB,WACf,EAAKjhD,SAAS,CACV3J,QAAS,qBAEbhN,KACKyP,KAAK,uBAAwB,CAC1BmlC,IAAK,EAAK7wC,MAAM4xD,YAEnB/lD,MAAK,SAAC7O,GACyB,MAAxBA,EAASG,KAAKX,OACd,EAAK0G,MAAMuH,eACP,MACA,QACAzN,EAASG,KAAKO,IACd,SAEJ,EAAKkV,SAAS,CACV3J,QAAS,OAGb,EAAK/F,MAAMuH,eACP,MACA,QACAzN,EAASG,KAAKO,IACd,WAEJ,EAAKkV,SAAS,CACV3J,QAAS,GACTmpD,iBAAiB,QAI5BtmD,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,SAEJ,EAAKsW,SAAS,CACV3J,QAAS,SA5UN,EAiVnB6qD,QAAU,WACF,EAAK9zD,MAAMwyD,SAASI,WACpB,EAAKhgD,SAAS,CAAEk/C,WAAW,IAG/BrmD,IAAI4H,IAAI,qBACHxH,MAAK,SAAC7O,GACH,EAAK4V,SAAS,CACVigD,cAAe71D,EAASG,KACxB20D,WAAW,OAGlBhmD,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,aAlWG,EAuWnBw1D,UAAY,WACR,EAAKl/C,SAAS,CACV3J,QAAS,cAEbwC,IAAIgJ,MAAM,oBAAqB,CAC3BlY,KAAM,EAAKyD,MAAM+xD,WAEhBlmD,MAAK,WACF,EAAK3I,MAAMuH,eACP,MACA,QACA,iCACA,WAEJ,EAAKmI,SAAS,CACV3J,QAAS,GACTupD,SAAS,2BACF,EAAKxyD,MAAMwyD,UADV,IAEJI,YAAa,EAAK5yD,MAAMwyD,SAASI,eAGzC,EAAKpxC,iBAER1V,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,SAEJ,EAAKsW,SAAS,CACV3J,QAAS,SAtYN,EA2YnBoF,aAAe,SAAC1P,GAAD,OAAU,SAACkI,GACtB,EAAK+L,SAAL,eAAiBjU,EAAOkI,EAAM1G,OAAOL,UA5YtB,EA+YnBi0D,gBAAkB,SAACltD,EAAOorD,GAAR,OAAwB,EAAKr/C,SAAS,CAAEq/C,iBA/YvC,EAiZnB+B,gBAAkB,SAACh6C,GACC,OAAZA,IACA,EAAK9W,MAAMqB,qBACXlH,IAAKyH,cAAc,aAAc,QAlZrC,EAAK0uD,UAAYjmD,IAAM+K,YAFR,E,sDA4DnB,WACI7b,KAAKw2D,gB,oBA2VT,WAAU,IAAD,OACGxvD,EAAYhH,KAAKyG,MAAjBO,QACFye,EAAO7kB,IAAKwZ,UACZzT,EAAO/F,IAAKoa,cAAc,cAEhC,OACI,6BACI,yBAAKnU,UAAWG,EAAQiU,QACpB,kBAACvG,EAAA,EAAD,CACI7N,UAAWG,EAAQ8sD,aACnB5gD,QAAQ,aAFZ,4BAMA,kBAAC+hC,EAAA,EAAD,KACI,kBAAC3iC,GAAA,EAAD,CAAMzL,UAAWG,EAAQ+sD,WACrB,kBAACthD,GAAA,EAAD,CACIC,QAAM,EACNtK,QAAS,kBACL,EAAK+N,SAAS,CAAE4+C,aAAa,MAGjC,kBAACyC,GAAA,EAAD,KACI,kBAACzxC,EAAA,EAAD,CACI/a,IACI,uBACAya,EAAKxjB,GACL,QAIZ,kBAAC2Q,GAAA,EAAD,CAAcC,QAAQ,iBACtB,kBAACC,GAAA,EAAD,KACI,kBAAC,KAAD,CAAWjM,UAAWG,EAAQi9C,cAGtC,kBAAC5xC,EAAA,EAAD,MACA,kBAACI,GAAA,EAAD,CAAUC,QAAM,GACZ,kBAACC,GAAA,EAAD,CAAc9L,UAAWG,EAAQ8gB,SAC7B,kBAAC,KAAD,OAEJ,kBAAClV,GAAA,EAAD,CAAcC,QAAQ,QAEtB,kBAACC,GAAA,EAAD,KACI,kBAAC4B,EAAA,EAAD,CACI7N,UAAWG,EAAQywD,iBACnBtwD,MAAM,iBAELnH,KAAKuD,MAAMwyD,SAAS30C,OAIjC,kBAAC/O,EAAA,EAAD,MACA,kBAACI,GAAA,EAAD,CACIC,QAAM,EACNtK,QAAS,kBACL,EAAK+N,SAAS,CAAE6+C,WAAW,MAG/B,kBAACriD,GAAA,EAAD,CAAc9L,UAAWG,EAAQ8gB,SAC7B,kBAAC,KAAD,OAEJ,kBAAClV,GAAA,EAAD,CAAcC,QAAQ,iBAEtB,kBAACC,GAAA,EAAD,CACI1K,QAAS,kBACL,EAAK+N,SAAS,CAAE6+C,WAAW,KAE/BnuD,UAAWG,EAAQgtD,eAEnB,kBAACt/C,EAAA,EAAD,CACI7N,UAAWG,EAAQywD,iBACnBtwD,MAAM,iBAELse,EAAKS,UAEV,kBAAC,KAAD,CACIrf,UAAWG,EAAQ0wD,sBAI/B,kBAACrlD,EAAA,EAAD,MACA,kBAACI,GAAA,EAAD,CAAUC,QAAM,GACZ,kBAACC,GAAA,EAAD,CAAc9L,UAAWG,EAAQ8gB,SAC7B,kBAAC,KAAD,OAEJ,kBAAClV,GAAA,EAAD,CAAcC,QAAQ,UAEtB,kBAACC,GAAA,EAAD,KACI,kBAAC4B,EAAA,EAAD,CACI7N,UAAWG,EAAQ2wD,SACnBxwD,MAAM,iBAELse,EAAKU,aAIlB,kBAAC9T,EAAA,EAAD,MACA,kBAACI,GAAA,EAAD,CAAUC,QAAM,GACZ,kBAACC,GAAA,EAAD,CAAc9L,UAAWG,EAAQ8gB,SAC7B,kBAAC,KAAD,OAEJ,kBAAClV,GAAA,EAAD,CAAcC,QAAQ,uBAEtB,kBAACC,GAAA,EAAD,KACI,kBAAC4B,EAAA,EAAD,CACI7N,UAAWG,EAAQ2wD,SACnBxwD,MAAM,iBAELse,EAAKY,MAAMnkB,QAIxB,kBAACmQ,EAAA,EAAD,MACA,kBAACI,GAAA,EAAD,CAAUC,QAAM,GACZ,kBAACC,GAAA,EAAD,CAAc9L,UAAWG,EAAQ8gB,SAC7B,kBAAC,KAAD,OAEJ,kBAAClV,GAAA,EAAD,CAAcC,QAAQ,6BAEtB,kBAACC,GAAA,EAAD,KACI,kBAAC4B,EAAA,EAAD,CACI7N,UAAWG,EAAQ2wD,SACnBxwD,MAAM,iBAEL8jC,aACGxlB,EAAKogC,WACL,2BAOxB,kBAACnxC,EAAA,EAAD,CACI7N,UAAWG,EAAQ8sD,aACnB5gD,QAAQ,aAFZ,4BAMA,kBAAC+hC,EAAA,EAAD,KACI,kBAAC3iC,GAAA,EAAD,CAAMzL,UAAWG,EAAQ+sD,WACrB,kBAACthD,GAAA,EAAD,CAAUC,QAAM,GACZ,kBAACC,GAAA,EAAD,CAAc9L,UAAWG,EAAQ8gB,SAC7B,kBAAC,KAAD,OAEJ,kBAAClV,GAAA,EAAD,CAAcC,QAAQ,6BAEtB,kBAACC,GAAA,EAAD,KACI,kBAAC8kD,GAAA,EAAD,CACIrlD,SAAUvS,KAAKg3D,aACfhkD,QAAShT,KAAKuD,MAAMwyD,SAASG,aAIzC,kBAAC7jD,EAAA,EAAD,MACA,kBAACI,GAAA,EAAD,CACIC,QAAM,EACNtK,QAAS,kBACL,EAAK+N,SAAS,CAAE8+C,gBAAgB,MAGpC,kBAACtiD,GAAA,EAAD,CAAc9L,UAAWG,EAAQ8gB,SAC7B,kBAAC,KAAD,OAEJ,kBAAClV,GAAA,EAAD,CAAcC,QAAQ,6BAEtB,kBAACC,GAAA,EAAD,CACIjM,UAAWG,EAAQgtD,eAEnB,kBAAC,KAAD,CAAWntD,UAAWG,EAAQi9C,cAGtC,kBAAC5xC,EAAA,EAAD,MACA,kBAACI,GAAA,EAAD,CAAUC,QAAM,EAACtK,QAAS,kBAAM,EAAKivD,YACjC,kBAAC1kD,GAAA,EAAD,CAAc9L,UAAWG,EAAQ8gB,SAC7B,kBAAC,KAAD,OAEJ,kBAAClV,GAAA,EAAD,CAAcC,QAAQ,6BAEtB,kBAACC,GAAA,EAAD,CACIjM,UAAWG,EAAQgtD,eAEnB,kBAACt/C,EAAA,EAAD,CACI7N,UAAWG,EAAQywD,iBACnBtwD,MAAM,iBAEJnH,KAAKuD,MAAMwyD,SAASI,WAEhB,qBADA,sBAGV,kBAAC,KAAD,CACItvD,UAAWG,EAAQ0wD,wBAOvC,kBAACzD,GAAD,CACIrwD,KAAM5D,KAAKuD,MAAMwyD,SAASlhB,MAC1B6f,IAAK,SAAC14B,GACF,EAAK7lB,SAAS,CACV4/C,SAAS,2BACF,EAAKxyD,MAAMwyD,UADV,IAEJlhB,MAAM,GAAD,oBACE,EAAKtxC,MAAMwyD,SAASlhB,OADtB,CAED7Y,SAKhB7iB,OAAQ,SAAClX,GACL,IAAIozC,EAAW,aAAO,EAAK9xC,MAAMwyD,SAASlhB,OAC1CQ,EAAcA,EAAYnxC,QAAO,SAACmf,GAC9B,OAAOA,EAAEphB,KAAOA,KAEpB,EAAKkU,SAAS,CACV4/C,SAAS,2BACF,EAAKxyD,MAAMwyD,UADV,IAEJlhB,MAAOQ,SAMvB,kBAAC3gC,EAAA,EAAD,CACI7N,UAAWG,EAAQ8sD,aACnB5gD,QAAQ,aAFZ,sBAMA,kBAAC+hC,EAAA,EAAD,KACI,kBAAC3iC,GAAA,EAAD,CAAMzL,UAAWG,EAAQ+sD,WACrB,kBAACthD,GAAA,EAAD,CACIC,QAAM,EACNtK,QAAS,kBACL,EAAK+N,SAAS,CAAEo/C,aAAa,MAGjC,kBAAC5iD,GAAA,EAAD,CAAc9L,UAAWG,EAAQ8gB,SAC7B,kBAAC,KAAD,OAEJ,kBAAClV,GAAA,EAAD,CAAcC,QAAQ,6BAEtB,kBAACC,GAAA,EAAD,CACIjM,UAAWG,EAAQgtD,eAEnB,yBAAKntD,UAAWG,EAAQ6wD,aACxB,yBAAKhxD,UAAWG,EAAQ8wD,gBAGhC,kBAACzlD,EAAA,EAAD,MACA,kBAACI,GAAA,EAAD,CACIC,QAAM,EACNtK,QAAS,kBAAM,EAAKmvD,gBAAgB5wD,KAEpC,kBAACgM,GAAA,EAAD,CAAc9L,UAAWG,EAAQ8gB,SAC7B,kBAACiwC,GAAA,EAAD,OAEJ,kBAACnlD,GAAA,EAAD,CAAcC,QAAQ,6BAEtB,kBAACC,GAAA,EAAD,CACIjM,UAAWG,EAAQgtD,eAEnB,kBAACt/C,EAAA,EAAD,CACI7N,UAAWG,EAAQywD,iBACnBtwD,MAAM,iBAELR,IACa,SAATA,EACK,2BACA,4BACA,OAATA,GAAiB,4BAEtB,kBAAC,KAAD,CACIE,UAAWG,EAAQ0wD,sBAI/B,kBAACrlD,EAAA,EAAD,MACA,kBAACI,GAAA,EAAD,CACIC,QAAM,EACNtK,QAAS,kBAAM,EAAKuB,qBAEpB,kBAACgJ,GAAA,EAAD,CAAc9L,UAAWG,EAAQ8gB,SAC7B,kBAACkwC,GAAA,EAAD,OAEJ,kBAACplD,GAAA,EAAD,CAAcC,QAAQ,6BAEtB,kBAACC,GAAA,EAAD,CACIjM,UAAWG,EAAQgtD,eAEnB,kBAACt/C,EAAA,EAAD,CACI7N,UAAWG,EAAQywD,iBACnBtwD,MAAM,iBAEqB,SAA1BnH,KAAKyG,MAAMoC,YACR,qBACuB,SAA1B7I,KAAKyG,MAAMoC,YACR,eAEA,cADH7I,KAAKyG,MAAMoC,YACO,sBAEvB,kBAAC,KAAD,CACIhC,UAAWG,EAAQ0wD,sBAI/B,kBAACrlD,EAAA,EAAD,MACA,kBAACI,GAAA,EAAD,CACIrK,QAAS,kBACL,EAAK+N,SAAS,CAAE2/C,gBAAgB,KAEpCpjD,QAAM,GAEN,kBAACC,GAAA,EAAD,CAAc9L,UAAWG,EAAQ8gB,SAC7B,kBAACmwC,GAAA,EAAD,OAEJ,kBAACrlD,GAAA,EAAD,CAAcC,QAAQ,iBAEtB,kBAACC,GAAA,EAAD,CACIjM,UAAWG,EAAQgtD,eAEnB,kBAACt/C,EAAA,EAAD,CACI7N,UAAWG,EAAQywD,iBACnBtwD,MAAM,iBAEL4jC,MAEL,kBAAC,KAAD,CACIlkC,UAAWG,EAAQ0wD,wBAMtCjyC,EAAKY,MAAM0B,QACR,6BACI,kBAACrT,EAAA,EAAD,CACI7N,UAAWG,EAAQ8sD,aACnB5gD,QAAQ,aAFZ,UAMA,kBAAC+hC,EAAA,EAAD,KACI,kBAAC3iC,GAAA,EAAD,CAAMzL,UAAWG,EAAQ+sD,WACrB,kBAACthD,GAAA,EAAD,CACIC,QAAM,EACNtK,QAAS,kBACL,EAAK+N,SAAS,CACVs/C,eAAe,MAIvB,kBAAC9iD,GAAA,EAAD,CACI9L,UAAWG,EAAQ8gB,SAEnB,kBAAC,KAAD,OAEJ,kBAAClV,GAAA,EAAD,CAAcC,QAAQ,6BAEtB,kBAACC,GAAA,EAAD,CACIjM,UAAWG,EAAQgtD,eAEnB,kBAAC,KAAD,CACIntD,UAAWG,EAAQi9C,cAI/B,kBAAC5xC,EAAA,EAAD,MACA,kBAACI,GAAA,EAAD,CACIC,QAAM,EACNtK,QAAS,kBACL,EAAK+N,SAAS,CACVu/C,oBAAoB,MAI5B,kBAAC/iD,GAAA,EAAD,CACI9L,UAAWG,EAAQ8gB,SAEnB,kBAAC,KAAD,OAEJ,kBAAClV,GAAA,EAAD,CAAcC,QAAQ,uBAEtB,kBAACC,GAAA,EAAD,CACIjM,UAAWG,EAAQgtD,eAEnB,kBAAC,KAAD,CACIntD,UAAWG,EAAQi9C,cAI/B,kBAAC5xC,EAAA,EAAD,MACA,kBAACI,GAAA,EAAD,CACIC,QAAM,EACNtK,QAAS,kBACL,EAAK3B,MAAMsa,QAAQhS,KAAK,cAG5B,kBAAC4D,GAAA,EAAD,CACI9L,UAAWG,EAAQ8gB,SAEnB,kBAAC,KAAD,OAEJ,kBAAClV,GAAA,EAAD,CAAcC,QAAQ,6BAEtB,kBAACC,GAAA,EAAD,CACIjM,UAAWG,EAAQgtD,eAEnB,kBAAC,KAAD,CACIntD,UAAWG,EAAQi9C,iBAQ/C,yBAAKp9C,UAAWG,EAAQynB,iBAE5B,kBAACkmC,GAAD,CACI3qD,QAAS,kBAAM,EAAKmM,SAAS,CAAE2/C,gBAAgB,KAC/C1xD,KAAMpE,KAAKuD,MAAMuyD,iBAErB,kBAAC/oD,GAAA,EAAD,CACI3I,KAAMpE,KAAKuD,MAAMwxD,YACjB/qD,QAAShK,KAAK+kB,aAEd,kBAAC1W,GAAA,EAAD,iCACA,kBAACiE,GAAA,EAAD,KACI,kBAACG,GAAA,EAAD,CACIC,QAAM,EACNyd,UAAU,QACVjkB,SAAiC,WAAvBlM,KAAKuD,MAAMiJ,SAErB,2BACIpK,KAAK,OACL26C,OAAO,UACPjyC,MAAO,CAAEyB,QAAS,QAClBqR,IAAK5d,KAAK+2D,UACVxkD,SAAUvS,KAAK22D,eAEnB,kBAACa,GAAA,EAAD,KACI,kBAACzxC,EAAA,EAAD,CAAQlf,UAAWG,EAAQkxD,gBACvB,kBAAC,KAAD,QAGR,kBAACtlD,GAAA,EAAD,CAAcC,QAAQ,oCAE1B,kBAACJ,GAAA,EAAD,CACIC,QAAM,EACNtK,QAASpI,KAAKy2D,YACdvqD,SAAiC,aAAvBlM,KAAKuD,MAAMiJ,SAErB,kBAACgrD,GAAA,EAAD,KACI,kBAACzxC,EAAA,EAAD,CAAQlf,UAAWG,EAAQmxD,cACvB,kBAAC,KAAD,QAGR,kBAACvlD,GAAA,EAAD,CACI/L,UAAWG,EAAQoxD,YACnBvlD,QAAQ,0CAIpB,kBAACnE,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAASpI,KAAK+kB,YAAa5d,MAAM,WAAzC,kBAKR,kBAAC4F,GAAA,EAAD,CAAQ3I,KAAMpE,KAAKuD,MAAMyxD,UAAWhrD,QAAShK,KAAK+kB,aAC9C,kBAAC1W,GAAA,EAAD,iCACA,kBAACpB,GAAA,EAAD,KACI,kBAAC0H,GAAA,EAAD,CACI1S,GAAG,gBACHgT,MAAM,eACNpO,UAAWG,EAAQqxD,UACnBh1D,MAAOrD,KAAKuD,MAAMsH,KAClB0H,SAAUvS,KAAK4R,aAAa,QAC5B1G,OAAO,SACP4J,WAAS,KAGjB,kBAACpG,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAASpI,KAAK+kB,YAAa5d,MAAM,WAAzC,gBAGA,kBAACwH,EAAA,EAAD,CACIvG,QAASpI,KAAK02D,WACdvvD,MAAM,UACN+E,SAC2B,SAAvBlM,KAAKuD,MAAMiJ,SACS,KAApBxM,KAAKuD,MAAMsH,MALnB,kBAYR,kBAACkC,GAAA,EAAD,CACI3I,KAAMpE,KAAKuD,MAAM0xD,eACjBjrD,QAAShK,KAAK+kB,aAEd,kBAAC1W,GAAA,EAAD,6CACA,kBAACpB,GAAA,EAAD,KACI,6BACI,kBAAC0H,GAAA,EAAD,CACI1S,GAAG,gBACHgT,MAAM,qBACN7S,KAAK,WACLyE,UAAWG,EAAQqxD,UACnBh1D,MAAOrD,KAAKuD,MAAM2xD,OAClB3iD,SAAUvS,KAAK4R,aAAa,UAC5B1G,OAAO,SACP4J,WAAS,KAGjB,6BACI,kBAACH,GAAA,EAAD,CACI1S,GAAG,gBACHgT,MAAM,qBACN7S,KAAK,WACLyE,UAAWG,EAAQqxD,UACnBh1D,MAAOrD,KAAKuD,MAAM+kD,OAClB/1C,SAAUvS,KAAK4R,aAAa,UAC5B1G,OAAO,YAGf,6BACI,kBAACyJ,GAAA,EAAD,CACI1S,GAAG,gBACHgT,MAAM,iCACN7S,KAAK,WACLyE,UAAWG,EAAQqxD,UACnBh1D,MAAOrD,KAAKuD,MAAM6xD,aAClB7iD,SAAUvS,KAAK4R,aAAa,gBAC5B1G,OAAO,aAInB,kBAACwD,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAASpI,KAAK+kB,YAAa5d,MAAM,WAAzC,gBAGA,kBAACwH,EAAA,EAAD,CACIvG,QAASpI,KAAKi3D,WACd9vD,MAAM,UACN+E,SAC2B,mBAAvBlM,KAAKuD,MAAMiJ,SACW,KAAtBxM,KAAKuD,MAAM2xD,QACiB,KAA5Bl1D,KAAKuD,MAAM6xD,cACW,KAAtBp1D,KAAKuD,MAAM+kD,QAPnB,kBAcR,kBAACv7C,GAAA,EAAD,CAAQ3I,KAAMpE,KAAKuD,MAAM8xD,UAAWrrD,QAAShK,KAAK+kB,aAC9C,kBAAC1W,GAAA,EAAD,KACKrO,KAAKuD,MAAMwyD,SAASI,WAAa,eAAO,eAD7C,4BAIA,kBAAClpD,GAAA,EAAD,KACI,yBAAKpG,UAAWG,EAAQsxD,wBAClBt4D,KAAKuD,MAAMwyD,SAASI,YAClB,yBAAKtvD,UAAWG,EAAQuxD,QACpB,kBAAC,KAAD,CACIl1D,MACI,kBACArD,KAAKyG,MAAMwB,MACX,WACAjI,KAAKuD,MAAM6yD,iBAM3B,yBAAKvvD,UAAWG,EAAQwxD,UAClBx4D,KAAKuD,MAAMwyD,SAASI,YAClB,kBAACzhD,EAAA,EAAD,0YAIH1U,KAAKuD,MAAMwyD,SAASI,YACjB,kBAACzhD,EAAA,EAAD,iFAIJ,kBAACC,GAAA,EAAD,CACI1S,GAAG,gBACHgT,MAAM,4BACN7S,KAAK,SACLyE,UAAWG,EAAQqxD,UACnBh1D,MAAOrD,KAAKuD,MAAM+xD,SAClB/iD,SAAUvS,KAAK4R,aAAa,YAC5B1G,OAAO,SACP4J,WAAS,EACT1C,WAAS,OAKzB,kBAAC1D,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAASpI,KAAK+kB,YAAa5d,MAAM,WAAzC,gBAGA,kBAACwH,EAAA,EAAD,CACIvG,QAASpI,KAAKq1D,UACdluD,MAAM,UACN+E,SAC2B,cAAvBlM,KAAKuD,MAAMiJ,SACa,KAAxBxM,KAAKuD,MAAM+xD,UAGdt1D,KAAKuD,MAAMwyD,SAASI,WAAa,eAAO,eAR7C,8BAaR,kBAACppD,GAAA,EAAD,CACI3I,KAAMpE,KAAKuD,MAAMgyD,YACjBvrD,QAAShK,KAAK+kB,aAEd,kBAAC1W,GAAA,EAAD,6CACA,kBAACpB,GAAA,EAAD,KACI,kBAACwrD,GAAA,EAAD,CACIp1D,MAAOrD,KAAKuD,MAAMiyD,YAClBkD,WAAS,EACTnmD,SAAUvS,KAAKs3D,iBAEdl3D,OAAOuf,KAAK3f,KAAKuD,MAAMwyD,SAASO,QAAQrsD,KACrC,SAAC5G,EAAO8G,GAAR,OACI,kBAACwuD,GAAA,EAAD,CAAct1D,MAAOA,EAAO8G,IAAKA,GAC7B,yBACItD,UAAWG,EAAQ4xD,WACnB9tD,MAAO,CAAEpE,gBAAiBrD,WAOlD,kBAACqL,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAASpI,KAAK+kB,YAAa5d,MAAM,WAAzC,gBAGA,kBAACwH,EAAA,EAAD,CACIvG,QAASpI,KAAKu1D,YACdpuD,MAAM,UACN+E,SAC2B,gBAAvBlM,KAAKuD,MAAMiJ,SACgB,OAA3BxM,KAAKuD,MAAMiyD,aALnB,kBAYR,kBAACzoD,GAAA,EAAD,CACI3I,KAAMpE,KAAKuD,MAAMkyD,cACjBzrD,QAAShK,KAAK+kB,aAEd,kBAAC1W,GAAA,EAAD,uCACA,kBAACpB,GAAA,EAAD,KACI,kBAAC0H,GAAA,EAAD,CACI1S,GAAG,gBACH4E,UAAWG,EAAQqxD,UACnBh1D,MAAOvC,OAAOC,SAASoxD,OAAS,OAChCjnD,OAAO,SACP4J,WAAS,KAGjB,kBAACpG,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAASpI,KAAK+kB,YAAa5d,MAAM,WAAzC,kBAKR,kBAAC4F,GAAA,EAAD,CACI3I,KAAMpE,KAAKuD,MAAMmyD,mBACjB1rD,QAAShK,KAAK+kB,aAEd,kBAAC1W,GAAA,EAAD,iCACA,kBAACpB,GAAA,EAAD,KACI,kBAAC0H,GAAA,EAAD,CACI1S,GAAG,gBACH4E,UAAWG,EAAQqxD,UACnBh1D,MAAOoiB,EAAKU,UACZjb,OAAO,SACP4J,WAAS,KAGjB,kBAACpG,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAASpI,KAAK+kB,YAAa5d,MAAM,WAAzC,uB,GAllCWwS,aAimCpBk/C,GALKh/C,aArnCI,SAACtW,GACrB,MAAO,CACH0E,MAAO1E,EAAMkE,WAAWQ,MACxB4sC,MAAOtxC,EAAMkE,WAAWotC,MACxBhsC,WAAYtF,EAAMuF,WAAWC,uBAIV,SAACrB,GACxB,MAAO,CACHsG,eAAgB,SAACF,EAAUC,EAAY9M,EAAKkG,GACxCO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,KAEvD6uB,YAAa,SAAC7uB,GACVO,EAASsuB,YAAY7uB,KAEzBW,mBAAoB,WAChBJ,EAASI,gBAEbyuD,WAAY,SAACttD,GACTvB,EAASwB,YAAiBD,QAimClB4Q,CAGlB9J,cAxtCa,SAAC7J,GAAD,MAAY,CACvB+U,OAAO,aACH7U,MAAO,OACPsG,WAAYxG,EAAM0F,QAAQ,GAC1BrD,YAAarC,EAAM0F,QAAQ,IAC1B1F,EAAMI,YAAY4U,GAAG,KAA0B,EAAnBhV,EAAM0F,QAAQ,IAAU,CACjDxF,MAAO,IACPsG,WAAY,OACZnE,YAAa,SAGrBurD,aAAc,CACVrlC,cAAe,OACfF,WAAY,QAEhB01B,UAAW,CACPx3C,UAAW,MACXlE,YAAa,OACbpB,MAAOjB,EAAMe,QAAQ4F,KAAKS,WAE9B4qD,eAAgB,CACZxxD,gBAAiB2F,KAAK,KACtBlF,MAAOkF,KAAK,MAEhB8rD,aAAc,CACVzxD,gBAAiBoyD,KAAO,KACxB3xD,MAAO2xD,KAAO,MAElBC,eAAgB,CACZryD,gBAAiBgF,KAAM,KACvBvE,MAAOuE,KAAM,MAEjBisD,SAAU,CACNpvD,YAAa,QAEjBkvD,iBAAkB,CACdlvD,YAAa,OACbkE,UAAW,OAEfirD,kBAAmB,CACfjrD,UAAW,MACXlE,YAAa,OACbpB,MAAOjB,EAAMe,QAAQ4F,KAAKS,WAE9Bwa,QAAS,CACLvf,YAAa,OACbmE,WAAY,MACZ+C,SAAU,IAEdukD,cAAe,CACXznD,QAAS,QAEbwnD,UAAW,CACPxlC,WAAY,EACZE,cAAe,GAEnB6pC,sBAAsB,aAClB/rD,QAAS,QACRrG,EAAMI,YAAYC,KAAK,MAAQ,CAC5BgG,QAAS,YAGjBisD,QAAS,CACL/rD,UAAW,QAEfqrD,YAAa,CACT/sD,OAAQ,OACR3E,MAAO,OACPM,gBAAiBR,EAAMe,QAAQqG,UAAUiX,KACzCnJ,aAAc,MACd7S,YAAa,QAEjBsvD,WAAY,CACR9sD,OAAQ,OACR3E,MAAO,OACPM,gBAAiBR,EAAMe,QAAQ4L,QAAQ0R,KACvCnJ,aAAc,MACd7S,YAAa,OAEjBqwD,WAAY,CACR7tD,OAAQ,OACR3E,MAAO,QAEXqoB,cAAe,CACXxC,aAAc,QAElBmsC,YAAa,CACT5pC,aAActoB,EAAM0F,QAAQ,IAEhC2sD,OAAQ,CACJnyD,MAAO,IACPqG,UAAW,GACXlE,YAAa,OA4nCnBwH,CAAmBgK,YAAW+6C,M,0CC3vC1B9uD,GAAYC,aAAW,SAACC,GAAD,YAAY,CACrC+U,QAAM,GACF7U,MAAO,OACPqG,UAAW,QACXC,WAAYxG,EAAM0F,QAAQ,GAC1BrD,YAAarC,EAAM0F,QAAQ,IAJzB,cAKD1F,EAAMI,YAAY4U,GAAG,MAAQ,CAC1B9U,MAAO,IACPsG,WAAY,OACZnE,YAAa,SARf,6BAUY,KAVZ,GAYNuhB,MAAO,CACHrd,UAAWvG,EAAM0F,QAAQ,GACzBW,QAAS,OACTsnC,cAAe,SACflkC,WAAY,SACZtJ,QAAQ,GAAD,OAAKH,EAAM0F,QAAQ,GAAnB,cAA2B1F,EAAM0F,QAAQ,GAAzC,cAAiD1F,EAAM0F,QAC1D,GADG,OAIXQ,OAAQ,CACJlB,OAAQhF,EAAM0F,QAAQ,GACtBlF,gBAAiBR,EAAMe,QAAQqG,UAAUiX,MAE7CuvB,KAAM,CACF1tC,MAAO,OACPqG,UAAWvG,EAAM0F,QAAQ,IAE7BinC,OAAQ,CACJpmC,UAAWvG,EAAM0F,QAAQ,IAE7BwS,KAAM,CACF3R,UAAW,OACXF,QAAS,OACTnG,MAAO,OACPkoB,eAAgB,iBAEpBshB,iBAAiB,aACbrjC,QAAS,OACTE,UAAW,QACVvG,EAAMI,YAAYC,KAAK,MAAQ,CAC5BgG,QAAS,UAGjByjC,mBAAoB,CAChB5pC,MAAO,KAEX2tC,gBAAiB,CACbxnC,QAAS,QAEbynC,UAAW,CACPl1B,UAAW,SACXrS,UAAW,IAEfusD,cAAe,CACX9tD,OAAQhF,EAAM0F,QAAQ,GACtBlF,gBAAiBR,EAAMe,QAAQ4L,QAAQ0R,UA8KhC00C,OA1Kf,WACI,MAA0B7zD,mBAAS,CAC/B8uC,MAAO,GACPhjC,SAAU,GACVgoD,gBAAiB,KAHrB,mBAAO5rC,EAAP,KAAc6rC,EAAd,KAKA,EAA8B/zD,oBAAS,GAAvC,mBAAOoH,EAAP,KAAgBiP,EAAhB,KACA,EAAsCrW,oBAAS,GAA/C,mBAAOg0D,EAAP,KAAoBC,EAApB,KAEMpxD,EAAQT,aAAY,SAACjE,GAAD,OAAWA,EAAMkE,WAAWQ,SAChDqxD,EAAa9xD,aAAY,SAACjE,GAAD,OAAWA,EAAMkE,WAAW6xD,cAErD5xD,EAAWC,cACXkG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAECqZ,EAAUgR,cAEV7b,EAAoB,SAAChU,GAAD,OAAU,SAAC0D,GACjCuzD,EAAS,2BACF7rC,GADC,kBAEHprB,EAAO0D,EAAElC,OAAOL,WAIzB,EAOI0vC,KANAG,EADJ,EACIA,eACAN,EAFJ,EAEIA,WACAvZ,EAHJ,EAGIA,SACAka,EAJJ,EAIIA,cACAH,EALJ,EAKIA,kBACAE,EANJ,EAMIA,iBAEEtsC,EAAUhB,KAoChB,OACI,yBAAKa,UAAWG,EAAQiU,QACpB,qCACMm+C,GACE,kBAACnkB,EAAA,EAAD,CAAOpuC,UAAWG,EAAQ8iB,OACtB,kBAAC/D,EAAA,EAAD,CAAQlf,UAAWG,EAAQoF,QACvB,kBAAC,KAAD,OAEJ,kBAACsI,EAAA,EAAD,CAAYyb,UAAU,KAAKjd,QAAQ,MAAnC,gBACQjL,GAGR,0BAAMpB,UAAWG,EAAQ8sC,KAAMh7B,SA9ClC,SAAXo0B,EAAYtnC,GACdA,EAAEgJ,iBAEE0e,EAAMpc,WAAaoc,EAAM4rC,iBAK7Bz9C,GAAW,GACNm3B,EAAWr1B,QAAQq1B,aAAc0mB,EAItCtqD,IAAIC,KAAK,QAAT,aACIkmC,SAAU7nB,EAAM4mB,MAChBkB,SAAU9nB,EAAMpc,UACboiC,EAAiB/1B,UAEnBnO,MAAK,SAAC7O,GACHkb,GAAW,GACmB,MAA1Blb,EAASE,QAAQX,KACjBu5D,GAAe,IAEft4C,EAAQhS,KAAK,mBAAqBue,EAAM4mB,OACxCrmC,EAAe,MAAO,QAAS,2BAAQ,eAG9CwB,OAAM,SAACtP,GACJ0b,GAAW,GACX5N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,WAC9CuzC,EAAkB71B,aApBtB8b,GAAS,kBAAM6T,EAAStnC,KAAI6V,IAN5B5N,EAAe,MAAO,QAAS,yDAAa,aA2C5B,kBAACoF,EAAA,EAAD,CAAa/H,OAAO,SAAS2kC,UAAQ,EAACz9B,WAAS,GAC3C,kBAACe,EAAA,EAAD,CAAYC,QAAQ,SAApB,4BAGA,kBAAC08B,EAAA,EAAD,CACI7tC,GAAG,QACHG,KAAK,QACLF,KAAK,QACLqQ,SAAU2D,EAAkB,SAC5B65B,cAAY,EACZ1sC,MAAOiqB,EAAM4mB,MACbp/B,WAAS,KAGjB,kBAAC7B,EAAA,EAAD,CAAa/H,OAAO,SAAS2kC,UAAQ,EAACz9B,WAAS,GAC3C,kBAACe,EAAA,EAAD,CAAYC,QAAQ,YAApB,gBACA,kBAAC08B,EAAA,EAAD,CACI5tC,KAAK,WACLqQ,SAAU2D,EAAkB,YAC5B9T,KAAK,WACLH,GAAG,WACHoB,MAAOiqB,EAAMpc,SACb6+B,cAAY,KAGpB,kBAAC98B,EAAA,EAAD,CAAa/H,OAAO,SAAS2kC,UAAQ,EAACz9B,WAAS,GAC3C,kBAACe,EAAA,EAAD,CAAYC,QAAQ,YAApB,4BAGA,kBAAC08B,EAAA,EAAD,CACI5tC,KAAK,YACLqQ,SAAU2D,EACN,mBAEJ9T,KAAK,WACLH,GAAG,YACHoB,MAAOiqB,EAAM4rC,gBACbnpB,cAAY,KAGnBupB,GAAc,kBAAC/lB,EAAD,MAEf,kBAAC5kC,EAAA,EAAD,CACIvM,KAAK,SACLgQ,WAAS,EACTc,QAAQ,YACR/L,MAAM,UACN+E,SACIM,KACC8sD,GAAapmB,EAElBrsC,UAAWG,EAAQ6rC,QATvB,6BAeJ,kBAACxgC,EAAA,EAAD,MACA,yBAAKxL,UAAWG,EAAQoX,MACpB,6BACI,kBAACswB,EAAA,EAAD,CAAM1tC,KAAM,UAAZ,6BAEJ,6BACI,kBAAC0tC,EAAA,EAAD,CAAM1tC,KAAM,WAAZ,+BAKfo4D,GACG,kBAACnkB,EAAA,EAAD,CAAOpuC,UAAWG,EAAQ8iB,OACtB,kBAAC/D,EAAA,EAAD,CAAQlf,UAAWG,EAAQgyD,eACvB,kBAAC,KAAD,OAEJ,kBAACtkD,EAAA,EAAD,CAAYyb,UAAU,KAAKjd,QAAQ,MAAnC,4BAGA,kBAACwB,EAAA,EAAD,CAAY5J,MAAO,CAAE2B,UAAW,SAAhC,8MC1OlBzG,GAAYC,aAAW,SAACC,GAAD,YAAY,CACrC+U,QAAM,GACF7U,MAAO,OACPqG,UAAW,QACXC,WAAYxG,EAAM0F,QAAQ,GAC1BrD,YAAarC,EAAM0F,QAAQ,IAJzB,cAKD1F,EAAMI,YAAY4U,GAAG,MAAQ,CAC1B9U,MAAO,IACPsG,WAAY,OACZnE,YAAa,SARf,6BAUY,KAVZ,GAYNuhB,MAAO,CACHrd,UAAWvG,EAAM0F,QAAQ,GACzBW,QAAS,OACTsnC,cAAe,SACflkC,WAAY,SACZtJ,QAAQ,GAAD,OAAKH,EAAM0F,QAAQ,GAAnB,cAA2B1F,EAAM0F,QAAQ,GAAzC,cAAiD1F,EAAM0F,QAC1D,GADG,OAIXQ,OAAQ,CACJlB,OAAQhF,EAAM0F,QAAQ,GACtBlF,gBAAiBR,EAAMe,QAAQqG,UAAUiX,MAE7CsuB,OAAQ,CACJpmC,UAAWvG,EAAM0F,QAAQ,QAqElB2tD,OA7Df,WACI,IAAMx9C,EAJC,IAAIC,gBAAgBF,cAAcG,QAKnClb,EAAW+a,cAEjB,EAA8B1W,oBAAS,GAAvC,mBAAO2e,EAAP,KAAgBy1C,EAAhB,KACA,EAA0Bp0D,mBAAS,IAAnC,mBAAO8uC,EAAP,KAAcC,EAAd,KAEMzsC,EAAWC,cACXkG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAECqZ,EAAUgR,cAEV/qB,EAAUhB,KAiBhB,OAfAN,qBAAU,WACNsJ,IAAI4H,IACA,kBAAoBmF,EAAMnF,IAAI,MAAQ,SAAWmF,EAAMnF,IAAI,SAE1DxH,MAAK,SAAC7O,GACH4zC,EAAS5zC,EAASG,MAClB84D,GAAW,MAEdnqD,OAAM,SAACtP,GACJ8N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,WAC9CkhB,EAAQhS,KAAK,eAGtB,CAAChO,IAGA,yBAAK8F,UAAWG,EAAQiU,QACnB8I,GACG,kBAACkxB,EAAA,EAAD,CAAOpuC,UAAWG,EAAQ8iB,OACtB,kBAAC/D,EAAA,EAAD,CAAQlf,UAAWG,EAAQoF,QACvB,kBAAC,KAAD,OAEJ,kBAACsI,EAAA,EAAD,CAAYyb,UAAU,KAAKjd,QAAQ,MAAnC,4BAGA,kBAACwB,EAAA,EAAD,CAAY5J,MAAO,CAAE2B,UAAW,SAAhC,sEAGA,kBAACkC,EAAA,EAAD,CACIvM,KAAK,SACLgQ,WAAS,EACTc,QAAQ,YACR/L,MAAM,UACNN,UAAWG,EAAQ6rC,OACnBzqC,QAAS,kBAAM2Y,EAAQhS,KAAK,mBAAqBmlC,KANrD,+BCtEdluC,GAAYC,aAAW,SAACC,GAAD,YAAY,CACrC+U,QAAM,GACF7U,MAAO,OACPqG,UAAW,QACXC,WAAYxG,EAAM0F,QAAQ,GAC1BrD,YAAarC,EAAM0F,QAAQ,IAJzB,cAKD1F,EAAMI,YAAY4U,GAAG,MAAQ,CAC1B9U,MAAO,IACPsG,WAAY,OACZnE,YAAa,SARf,6BAUY,KAVZ,GAYNuhB,MAAO,CACHrd,UAAWvG,EAAM0F,QAAQ,GACzBW,QAAS,OACTsnC,cAAe,SACflkC,WAAY,SACZtJ,QAAQ,GAAD,OAAKH,EAAM0F,QAAQ,GAAnB,cAA2B1F,EAAM0F,QAAQ,GAAzC,cAAiD1F,EAAM0F,QAC1D,GADG,OAIXQ,OAAQ,CACJlB,OAAQhF,EAAM0F,QAAQ,GACtBlF,gBAAiBR,EAAMe,QAAQqG,UAAUiX,MAE7CsuB,OAAQ,CACJpmC,UAAWvG,EAAM0F,QAAQ,IAE7BwS,KAAM,CACF3R,UAAW,OACXF,QAAS,OACTnG,MAAO,OACPkoB,eAAgB,qBAiHTmrC,OAzGf,WACI,IAAM19C,EAJC,IAAIC,gBAAgBF,cAAcG,QAKzC,EAA0B7W,mBAAS,CAC/B8L,SAAU,GACVgoD,gBAAiB,KAFrB,mBAAO5rC,EAAP,KAAc6rC,EAAd,KAIA,EAA8B/zD,oBAAS,GAAvC,mBAAOoH,EAAP,KAAgBiP,EAAhB,KACMvF,EAAoB,SAAChU,GAAD,OAAU,SAAC0D,GACjCuzD,EAAS,2BACF7rC,GADC,kBAEHprB,EAAO0D,EAAElC,OAAOL,WAGnBqE,EAAWC,cACXkG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IAECqZ,EAAUgR,cAyBV/qB,EAAUhB,KAEhB,OACI,yBAAKa,UAAWG,EAAQiU,QACpB,kBAACg6B,EAAA,EAAD,CAAOpuC,UAAWG,EAAQ8iB,OACtB,kBAAC/D,EAAA,EAAD,CAAQlf,UAAWG,EAAQoF,QACvB,kBAAC,IAAD,OAEJ,kBAACsI,EAAA,EAAD,CAAYyb,UAAU,KAAKjd,QAAQ,MAAnC,4BAGA,0BAAMrM,UAAWG,EAAQ8sC,KAAMh7B,SAlC5B,SAAClT,GACZA,EAAEgJ,iBACE0e,EAAMpc,WAAaoc,EAAM4rC,iBAI7Bz9C,GAAW,GACXzM,IAAIgJ,MAAM,cAAe,CACrB0hD,OAAQ39C,EAAMnF,IAAI,QAClB3U,GAAI8Z,EAAMnF,IAAI,MACdw+B,SAAU9nB,EAAMpc,WAEf9B,MAAK,WACFqM,GAAW,GACXsF,EAAQhS,KAAK,UACblB,EAAe,MAAO,QAAS,iCAAS,cAE3CwB,OAAM,SAACtP,GACJ0b,GAAW,GACX5N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,eAhBlDgO,EAAe,MAAO,QAAS,yDAAa,aAgCpC,kBAACoF,EAAA,EAAD,CAAa/H,OAAO,SAAS2kC,UAAQ,EAACz9B,WAAS,GAC3C,kBAACe,EAAA,EAAD,CAAYC,QAAQ,SAApB,sBACA,kBAAC08B,EAAA,EAAD,CACI7tC,GAAG,MACHG,KAAK,WACLF,KAAK,MACLqQ,SAAU2D,EAAkB,YAC5B65B,cAAY,EACZ1sC,MAAOiqB,EAAMpc,SACb4D,WAAS,KAGjB,kBAAC7B,EAAA,EAAD,CAAa/H,OAAO,SAAS2kC,UAAQ,EAACz9B,WAAS,GAC3C,kBAACe,EAAA,EAAD,CAAYC,QAAQ,SAApB,kCACA,kBAAC08B,EAAA,EAAD,CACI7tC,GAAG,YACHG,KAAK,WACLF,KAAK,YACLqQ,SAAU2D,EAAkB,mBAC5B65B,cAAY,EACZ1sC,MAAOiqB,EAAM4rC,gBACbpkD,WAAS,KAGjB,kBAACnG,EAAA,EAAD,CACIvM,KAAK,SACLgQ,WAAS,EACTc,QAAQ,YACR/L,MAAM,UACN+E,SAAUM,EACV3F,UAAWG,EAAQ6rC,QANvB,4BASU,KACN,IACR,kBAACxgC,EAAA,EAAD,MACA,yBAAKxL,UAAWG,EAAQoX,MACpB,6BACI,kBAACswB,EAAA,EAAD,CAAM1tC,KAAM,YAAZ,6BAEJ,6BACI,kBAAC0tC,EAAA,EAAD,CAAM1tC,KAAM,aAAZ,iCC1IlBgF,GAAYC,aAAW,SAACC,GAAD,YAAY,CACrC+U,QAAM,GACF7U,MAAO,OACPqG,UAAW,QACXC,WAAYxG,EAAM0F,QAAQ,GAC1BrD,YAAarC,EAAM0F,QAAQ,IAJzB,cAKD1F,EAAMI,YAAY4U,GAAG,MAAQ,CAC1B9U,MAAO,IACPsG,WAAY,OACZnE,YAAa,SARf,6BAUY,KAVZ,GAYNuhB,MAAO,CACHrd,UAAWvG,EAAM0F,QAAQ,GACzBW,QAAS,OACTsnC,cAAe,SACflkC,WAAY,SACZtJ,QAAQ,GAAD,OAAKH,EAAM0F,QAAQ,GAAnB,cAA2B1F,EAAM0F,QAAQ,GAAzC,cAAiD1F,EAAM0F,QAC1D,GADG,OAIXQ,OAAQ,CACJlB,OAAQhF,EAAM0F,QAAQ,GACtBlF,gBAAiBR,EAAMe,QAAQqG,UAAUiX,MAE7CsuB,OAAQ,CACJpmC,UAAWvG,EAAM0F,QAAQ,IAE7BgkC,iBAAkB,CACdrjC,QAAS,OACTE,UAAW,QAEfujC,mBAAoB,CAChB5pC,MAAO,KAEXgY,KAAM,CACF3R,UAAW,OACXF,QAAS,OACTnG,MAAO,OACPkoB,eAAgB,qBAiHTqrC,OA7Gf,WACI,IAa2Bz3D,EAb3B,EAA0BkD,mBAAS,CAC/B8uC,MAAO,KADX,mBAAO5mB,EAAP,KAAc6rC,EAAd,KAGA,EAA8B/zD,oBAAS,GAAvC,mBAAOoH,EAAP,KAAgBiP,EAAhB,KACMm+C,EAAgBpyD,aAClB,SAACjE,GAAD,OAAWA,EAAMkE,WAAWmyD,iBAE1BlyD,EAAWC,cACXkG,EAAiBhG,uBACnB,SAACiG,EAAUC,EAAY9M,EAAKkG,GAA5B,OACIO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,MACvD,CAACO,IASL,EAOIqrC,KANAG,EADJ,EACIA,eACAN,EAFJ,EAEIA,WACAvZ,EAHJ,EAGIA,SACAka,EAJJ,EAIIA,cACAH,EALJ,EAKIA,kBACAE,EANJ,EAMIA,iBA8BEtsC,EAAUhB,KAEhB,OACI,yBAAKa,UAAWG,EAAQiU,QACpB,kBAACg6B,EAAA,EAAD,CAAOpuC,UAAWG,EAAQ8iB,OACtB,kBAAC/D,EAAA,EAAD,CAAQlf,UAAWG,EAAQoF,QACvB,kBAAC,IAAD,OAEJ,kBAACsI,EAAA,EAAD,CAAYyb,UAAU,KAAKjd,QAAQ,MAAnC,4BAGA,0BAAMrM,UAAWG,EAAQ8sC,KAAMh7B,SAtC5B,SAAT+5B,EAAUjtC,GACZA,EAAEgJ,iBACF6M,GAAW,GACNm3B,EAAWr1B,QAAQq1B,aAAcgnB,EAItC5qD,IAAIC,KAAK,cAAT,aACIkmC,SAAU7nB,EAAM4mB,OACbZ,EAAiB/1B,UAEnBnO,MAAK,WACFqM,GAAW,GACX5N,EACI,MACA,QACA,6FACA,cAGPwB,OAAM,SAACtP,GACJ0b,GAAW,GACX5N,EAAe,MAAO,QAAS9N,EAAMF,QAAS,WAC9CuzC,EAAkB71B,aAnBtB8b,GAAS,kBAAMwZ,EAAOjtC,KAAI6V,KAmClB,kBAACxI,EAAA,EAAD,CAAa/H,OAAO,SAAS2kC,UAAQ,EAACz9B,WAAS,GAC3C,kBAACe,EAAA,EAAD,CAAYC,QAAQ,SAApB,4BACA,kBAAC08B,EAAA,EAAD,CACI7tC,GAAG,QACHG,KAAK,QACLF,KAAK,QACLqQ,UA7DGrQ,EA6DyB,QA7DhB,SAAC0D,GACjCuzD,EAAS,2BACF7rC,GADC,kBAEHprB,EAAO0D,EAAElC,OAAOL,WA2DD0sC,cAAY,EACZ1sC,MAAOiqB,EAAM4mB,MACbp/B,WAAS,KAGhB8kD,GAAiB,kBAACrmB,EAAD,MAClB,kBAAC5kC,EAAA,EAAD,CACIvM,KAAK,SACLgQ,WAAS,EACTc,QAAQ,YACR/L,MAAM,UACN+E,SACIM,KAAYotD,GAAgB1mB,EAEhCrsC,UAAWG,EAAQ6rC,QARvB,oDAWU,KACN,IACR,kBAACxgC,EAAA,EAAD,MACA,yBAAKxL,UAAWG,EAAQoX,MACpB,6BACI,kBAACswB,EAAA,EAAD,CAAM1tC,KAAM,UAAZ,6BAEJ,6BACI,kBAAC0tC,EAAA,EAAD,CAAM1tC,KAAM,WAAZ,iC,+JCpGlB64D,G,+MACFt2D,MAAQ,CACJuL,MAAO,GACPgrD,aAAc,EAGdC,YAAY,EACZtuC,SAAS,EACTuuC,aAAa,cACbC,SAAS,G,EAEbC,WAAappD,IAAM+K,Y,EAEnBvF,iCAAmC,SAACC,GAChC,IAAMzH,EAAQ,GACVwkB,EAAW,EACf,GAA2B,KAAvB/c,EAAU9T,MAAMR,GAAW,CAC3B,GACI6U,IAAWpS,YAAY,EAAK+B,MAAM1F,SAASgW,YAC1CR,EAAU9T,MAAMgC,KACnB,CACE,IAAM01D,EAAU,CACZ3mC,MAAOjd,EAAU9T,MAAMP,KACvB8I,IAAK3L,IAAU,kBAAoBkX,EAAU9T,MAAM0H,KAUvD,OARAmpB,EAAW,EACXxkB,EAAMC,KAAKorD,GACX,EAAKhkD,SAAS,CACV2jD,aAAcxmC,EACdxkB,MAAOA,SAGX,EAAKrI,MAAMukB,uBAAsB,GAIrCzU,EAAU7T,MAAMuH,KAAI,SAAC5G,GACjB,IAAMowB,EAAWpwB,EAAMnB,KAAKma,MAAM,KAAKiD,MAAMoU,cAC7C,IAA8C,IAA1C8T,KAAmB5mB,QAAQ6S,GAAkB,CAC7C,IAAIzoB,EAAM,GAGNA,EAFA8L,IAAWpS,YAAY,EAAK+B,MAAM1F,SAASgW,WAC3C/L,EAAM3L,IAAU,kBAAoBgE,EAAM8G,KAGtC,SACAqN,mBACmB,MAAfnU,EAAMoB,KACApB,EAAMoB,KAAOpB,EAAMnB,KACnBmB,EAAMoB,KAAO,IAAMpB,EAAMnB,MAGjC7C,IAAU,iBAAmBgE,EAAMpB,GAE7C,IAAMk4D,EAAU,CACZ3mC,MAAOnwB,EAAMnB,KACb8I,IAAKA,GAGL3H,EAAMoB,OAAS8R,EAAU9T,MAAMgC,MAC/BpB,EAAMnB,OAASqU,EAAU9T,MAAMP,OAE/BoxB,EAAWxkB,EAAM3L,QAErB2L,EAAMC,KAAKorD,OAGnB,EAAKhkD,SAAS,CACV2jD,aAAcxmC,EACdxkB,MAAOA,IAGX,EAAKrI,MAAMukB,uBAAsB,GACjC,EAAKvkB,MAAM+tB,iBAAiBlxB,aAAmBX,aAAaF,S,EAIpE23D,gBAAkB,SAACN,GAAD,OAAkB,WAChC,EAAK3jD,SAAS,CACV2jD,aAAcA,M,EAKtB/0C,YAAc,WAIV,EAAK5O,SAAS,CACV2jD,cAAe,IAEnB,EAAKO,QACL,EAAK5zD,MAAM8vB,uBAAuB,MAAK,GACvC,EAAK9vB,MAAMukB,uBAAsB,I,EAErCsvC,eAAiB,WACb,EAAK7zD,MAAMukB,uBAAsB,I,EAiBrCuvC,WAAW,SAACC,GACLA,IACCA,EAAI70D,iBAAiB,UAAW,EAAK80D,WACrCD,EAAI70D,iBAAiB,QAAS,EAAK+0D,UACnCF,EAAI70D,iBAAiB,aAAc,EAAKg1D,c,EAIhDC,aAAa,SAACJ,GACPA,IACCA,EAAIK,oBAAoB,UAAW,EAAKJ,WACxCD,EAAIK,oBAAoB,QAAS,EAAKH,UACtCF,EAAIK,oBAAoB,aAAc,EAAKF,c,EAInDF,UAAY,WACR,EAAKK,Q,EAGTC,WAAa,SAAAC,GACT,GAAGC,MAAMD,GAAG,MAAO,QACnB,IAAME,EAASxnD,KAAK2M,MAAM26C,EAAI,IACxBG,EAASznD,KAAK2M,MAAM26C,EAAI,IAC9B,MAAO,UAAGE,GAASt4C,SAAS,EAAE,KAAK,IAAI,UAAGu4C,GAASv4C,SAAS,EAAE,M,EAGlE+3C,WAAa,WACT,IAAMZ,EAAYrmD,KAAK2M,MAAM,EAAK65C,WAAW38C,QAAQw8C,aACrD,EAAK5jD,SAAS,CACV4jD,YAAaA,EACbtuC,SAAU,EAAKyuC,WAAW38C,QAAQkO,SAClCuuC,aAAc,EAAKe,WAAWhB,GAAa,IAAI,EAAKgB,WAAW,EAAKb,WAAW38C,QAAQkO,a,EAI/FqvC,KAAO,WACJ,EAAKZ,WAAW38C,QAAQu9C,OAIvB,EAAKr0D,MAAM8vB,uBAAuB,EAAKhzB,MAAMuL,MAAM,EAAKvL,MAAMu2D,cAActmC,OAAM,I,EAGtF6mC,MAAQ,WAAO,IAAD,EACP,EAAKH,WAAW38C,SACf,EAAK28C,WAAW38C,QAAQ88C,QAK5B,EAAK5zD,MAAM8vB,uBAAX,UAAkC,EAAKhzB,MAAMuL,MAAM,EAAKvL,MAAMu2D,qBAA9D,aAAkC,EAA2CtmC,OAAM,I,EAGvF4nC,YAAc,WACN,EAAK73D,MAAM83D,OACX,EAAKhB,QAEL,EAAKS,Q,EAGbQ,eAAe,WACX,IAAIC,EAAG,EAAKh4D,MAAM02D,SAAS,EACxBsB,GAAI,IACHA,EAAG,GAEP,EAAKplD,SAAS,CACV8jD,SAAUsB,K,EAGlBb,SAAS,WACL,IAAIp4D,EAAQ,EAAKiB,MAAMu2D,aACvB,GAAwB,GAArB,EAAKv2D,MAAM02D,UACV33D,GAAY,IACC,EAAKiB,MAAMuL,MAAM3L,SAC1Bb,EAAS,QAEX,GAAwB,GAArB,EAAKiB,MAAM02D,eAEd,GAAwB,GAArB,EAAK12D,MAAM02D,SAChB,GAAG,EAAK12D,MAAMuL,MAAM3L,QAAQ,GACxBb,GAAY,IACC,EAAKiB,MAAMuL,MAAM3L,SAC1Bb,EAAS,QAGb,KAAMA,GAAO,EAAKiB,MAAMu2D,cACpBx3D,EAAMoR,KAAK2M,MAAM3M,KAAKC,SAAS,EAAKpQ,MAAMuL,MAAM3L,QAIzD,EAAKI,MAAMu2D,cAAcx3D,IACxB,EAAK43D,WAAW38C,QAAQw8C,YAAY,EACpC,EAAKe,QAET,EAAK3kD,SAAS,CACV2jD,aAAcx3D,K,EAItBiD,KAAO,WACH,IAAIjD,EAAQ,EAAKiB,MAAMu2D,aAAe,EAClCx3D,EAAQ,IACRA,EAAQ,EAAKiB,MAAMuL,MAAM3L,OAAS,GAEtC,EAAKgT,SAAS,CACV2jD,aAAcx3D,K,EAItBqiC,KAAO,WACH,IAAIriC,EAAQ,EAAKiB,MAAMu2D,aAAe,EAClCx3D,GAAS,EAAKiB,MAAMuL,MAAM3L,SAC1Bb,EAAS,GAEb,EAAK6T,SAAS,CACV2jD,aAAcx3D,K,EAItBk5D,eAAiB,SAAC51D,EAAGmsD,GACjB,EAAKmI,WAAW38C,QAAQw8C,YAAYhI,G,wDAvIxC,WACO/xD,KAAKk6D,WAAW38C,SACfvd,KAAKu6D,WAAWv6D,KAAKk6D,WAAW38C,W,gCAGxC,WACOvd,KAAKk6D,WAAW38C,SACfvd,KAAKu6D,WAAWv6D,KAAKk6D,WAAW38C,W,kCAGxC,WACIvd,KAAK46D,aAAa56D,KAAKk6D,WAAW38C,W,oBAgItC,WAAU,IAAD,SACL,EAAgCvd,KAAKuD,MAA7Bu2D,EAAR,EAAQA,aAAchrD,EAAtB,EAAsBA,MACtB,EAA2B9O,KAAKyG,MAAxB3D,EAAR,EAAQA,OAAOkE,EAAf,EAAeA,QACf,OACI,kBAAC+F,GAAA,EAAD,CACI3I,KAAMtB,EACNkH,QAAShK,KAAKs6D,eACdttD,kBAAgB,oBAChBmF,SAAS,KACTC,WAAS,EACT+X,aAAW,GAEX,kBAAC9b,GAAA,EAAD,CAAapM,GAAG,qBAAhB,4BACA,kBAACgL,GAAA,EAAD,KACI,kBAACqF,GAAA,EAAD,CAAMzL,UAAWG,EAAQpD,KAAMk3C,OAAK,GAC/BhsC,EAAM7E,KAAI,SAAC5G,EAAMo4D,GACd,IAAMjnD,EAAO,gBAAYnR,EAAMmwB,OAC/B,OACI,kBAAC/gB,GAAA,EAAD,CAAUtI,IAAK9G,EAAM2H,IAAK8vC,OAAK,EAACpoC,QAAM,EAACtK,QAAS,EAAKgyD,gBAAgBqB,GACjE/5D,SAAU+5D,GAAK3B,GACf,kBAACnnD,GAAA,EAAD,KAEQ8oD,GAAK3B,EAAc,kBAAC,KAAD,MAAe,kBAAC,KAAD,OAG1C,kBAAClnD,GAAA,EAAD,CAAc3Q,GAAIuS,EAAS3B,QAAO,UAAKxP,EAAMmwB,cAK7D,2BAAO5V,IAAK5d,KAAKk6D,WACblvD,IAAG,UAAE8D,EAAMgrD,UAAR,aAAE,EAAqB9uD,MAE9B,yBAAKF,MAAO,CAAC,cAAc,KAC3B,kBAAC40C,GAAA,EAAD,CAAM71B,WAAS,EAACje,QAAS,EAAG+D,WAAW,UACnC,kBAAC+vC,GAAA,EAAD,CAAMloB,MAAI,EAACmoB,IAAE,GACb,kBAAC+b,GAAA,EAAD,CAAQ10D,QAAS,CAAC,KAAOA,EAAQ20D,aAC7Bt4D,MAAOrD,KAAKuD,MAAMw2D,YAClBxnD,SAAUvS,KAAKw7D,eACfI,KAAM,EACN5mC,IAAK,EACLE,IAAKl1B,KAAKuD,MAAMkoB,SAChBze,kBAAgB,uBAEpB,kBAAC0yC,GAAA,EAAD,CAAMloB,MAAI,GACLx3B,KAAKuD,MAAMy2D,eAGpB,kBAACta,GAAA,EAAD,CAAM71B,WAAS,EAACje,QAAS,EAAG0iB,eAAe,SAASutC,QAAQ,UACxD,kBAACnc,GAAA,EAAD,CAAMloB,MAAI,GACN,kBAAC/jB,GAAA,EAAD,CAAYM,KAAK,MAAM5H,aAAW,GAAG/D,QAASpI,KAAKs7D,gBAEtB,GAArBt7D,KAAKuD,MAAM02D,SAAa,kBAAC6B,GAAA,EAAD,MAAiC,GAArB97D,KAAKuD,MAAM02D,SAAa,kBAAC8B,GAAA,EAAD,MAAe,kBAACC,GAAA,EAAD,QAIvF,kBAACtc,GAAA,EAAD,CAAMloB,MAAI,GACN,kBAAC/jB,GAAA,EAAD,CAAYM,KAAK,MAAM5H,aAAW,GAAG/D,QAASpI,KAAKuF,MAC/C,kBAAC,KAAD,QAGR,kBAACm6C,GAAA,EAAD,CAAMloB,MAAI,GACN,kBAAC/jB,GAAA,EAAD,CAAYM,KAAK,MAAM5H,aAAW,GAAG/D,QAASpI,KAAKq6D,OAC/C,kBAAC,KAAD,QAGR,kBAAC3a,GAAA,EAAD,CAAMloB,MAAI,GACN,kBAAC/jB,GAAA,EAAD,CAAYM,KAAK,MAAM5H,aAAW,GAAG/D,QAASpI,KAAK86D,MAC/C,kBAAC,KAAD,QAGR,kBAACpb,GAAA,EAAD,CAAMloB,MAAI,GACN,kBAAC/jB,GAAA,EAAD,CAAYM,KAAK,MAAM5H,aAAW,GAAG/D,QAASpI,KAAK2kC,MAC/C,kBAAC,KAAD,UAKhB,kBAACj2B,GAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQvG,QAASpI,KAAK+kB,aAAtB,4BACA,kBAACpW,EAAA,EAAD,CAAQvG,QAASpI,KAAKs6D,gBAAtB,kC,GA7Te3gD,aA8UpBsiD,GALKpiD,aAhWI,SAACtW,GACrB,MAAO,CACHd,MAAOc,EAAMD,SAASX,aAAaF,MACnCC,MAAOa,EAAMD,SAASX,aAAaD,MACnCI,OAAOS,EAAMD,SAASX,aAAaG,OACnCF,YAAYW,EAAMD,SAASX,aAAaC,gBAIrB,SAAC8E,GACxB,MAAO,CACH8sB,iBAAkB,SAAC/xB,GACfiF,EAAS8sB,YAAiB/xB,KAE9BuoB,sBAAuB,SAACvoB,GACpBiF,EAASsjB,YAAsBvoB,KAEnC8zB,uBAAwB,SAAC3zB,EAAYC,GACjC6E,EAAS6uB,YAAuB3zB,EAAYC,QA8UpCgX,CAGlB9J,cAhXa,SAAC7J,GAAD,MAAY,CACvBtC,KAAM,CAEF8C,gBAAiBR,EAAMe,QAAQyJ,WAAWoZ,MAC1CxiB,SAAU,WACVqoB,SAAU,OACVgW,UAAW,KAEfg2B,YAAY,CACR,iBAAkB,aAuWxB5rD,CAAmBgK,YAAW8/C,MC1W1BqC,GAAYprD,IAAM4N,MAAK,kBACzB,+DAGW,SAASy9C,KACpB,IAAMC,EAAc50D,aAAY,SAACjE,GAAD,OAAWA,EAAMkE,WAAWvB,SACtD2gB,EAAUrf,aAAY,SAACjE,GAAD,OAAWA,EAAMuF,WAAW+d,WAClDw1C,EAAkBz4B,YAAc,gCAEhC19B,EAAQ4K,IAAMsyB,SAAQ,WACxBg5B,EAAYn1D,QAAQ7E,KAAOi6D,EAAkB,OAAS,QACtD,IAAMC,EAAS17D,IAAKoa,cAAc,cAC9BshD,IACAF,EAAYn1D,QAAQ7E,KAAOk6D,GAE/B,IAAMp2D,EAAQq2D,YAAe,2BACtBH,GADqB,IAExBn1D,QAAQ,2BACDm1D,EAAYn1D,SADZ,IAEH4L,QAAQ,2BACDupD,EAAYn1D,QAAQ4L,SADpB,IAEH0R,KACiC,SAA7B63C,EAAYn1D,QAAQ7E,KACdiiC,YAAQ+3B,EAAYn1D,QAAQ4L,QAAQ0R,KAAM,IAC1C63C,EAAYn1D,QAAQ4L,QAAQ0R,YASlD,OALAhD,YACiC,SAA7B66C,EAAYn1D,QAAQ7E,KACd8D,EAAMe,QAAQyJ,WAAWC,QACzBzK,EAAMe,QAAQ4L,QAAQ0R,MAEzBre,IACR,CAACm2D,EAAiBD,IAcfp1D,EAZYf,aAAW,SAACC,GAAD,MAAY,CACrC8J,KAAM,CACFzD,QAAS,QAEbgE,QAAS,CACLqb,SAAU,EACVvlB,QAASH,EAAM0F,QAAQ,GACvB6D,SAAU,GAEdqO,QAAS5X,EAAMklB,OAAOtN,WAGV9X,GAERvB,EAASkX,cAATlX,KACR,OACI,kBAAC,IAAM+3D,SAAP,KACI,kBAACC,EAAA,EAAD,CAAev2D,MAAOA,GAClB,yBAAKW,UAAWG,EAAQgJ,KAAM/N,GAAG,aAC7B,kBAACy6D,EAAA,EAAD,MACA,kBAAC,IAAD,MACA,kBAAClyC,EAAA,EAAD,MACA,0BAAM3jB,UAAWG,EAAQuJ,SACrB,yBAAK1J,UAAWG,EAAQ8W,UACxB,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAW6+C,OAAK,EAACl4D,KAAMA,EAAMoiB,QAASA,GAClC,kBAAC,IAAD,CACImnB,GAAI,CACAj3B,SAAU,YAKtB,kBAAC,EAAD,CAAWtS,KAAI,UAAKA,EAAL,QAAiBoiB,QAASA,GACrC,kBAAC,GAAD,OAGJ,kBAAC,EAAD,CAAWpiB,KAAI,UAAKA,EAAL,SAAkBoiB,QAASA,GACtC,kBAAC,GAAD,OAGJ,kBAAC,EAAD,CAAWpiB,KAAI,UAAKA,EAAL,QAAiBoiB,QAASA,GACrC,kBAAC+1C,GAAA,EAAD,OAGJ,kBAAC,EAAD,CAAWn4D,KAAI,UAAKA,EAAL,OAAgBoiB,QAASA,GACpC,kBAACupC,GAAD,OAGJ,kBAAC,EAAD,CAAW3rD,KAAI,UAAKA,EAAL,OAAgBoiB,QAASA,GACpC,kBAAC,WAAD,CAAUhH,SAAU,kBAAC,GAAD,OAChB,kBAACq8C,GAAD,QAIR,kBAAC,EAAD,CAAWz3D,KAAI,UAAKA,EAAL,QAAiBoiB,QAASA,GACrC,kBAACg2C,GAAA,EAAD,OAGJ,kBAAC,EAAD,CAAWp4D,KAAI,UAAKA,EAAL,SAAkBoiB,QAASA,GACtC,kBAAC,GAAD,OAGJ,kBAAC,EAAD,CAAWpiB,KAAI,UAAKA,EAAL,UAAmBoiB,QAASA,GACvC,kBAAC,GAAD,OAGJ,kBAAC,IAAD,CAAOpiB,KAAI,UAAKA,EAAL,UAAmBoiB,QAASA,GACnC,kBAACqgC,GAAD,OAGJ,kBAAC,IAAD,CAAOziD,KAAI,UAAKA,EAAL,WAAoBoiB,QAASA,GACpC,kBAAC,GAAD,OAGJ,kBAAC,EAAD,CACIpiB,KAAI,UAAKA,EAAL,eACJoiB,QAASA,GAET,kBAAC,GAAD,OAGJ,kBAAC,EAAD,CAAWpiB,KAAI,UAAKA,EAAL,UAAmBoiB,QAASA,GACvC,kBAACoqC,GAAD,OAGJ,kBAAC,EAAD,CAAWxsD,KAAI,UAAKA,EAAL,SAAkBoiB,QAASA,GACtC,kBAAC8rC,GAAD,OAGJ,kBAAC,IAAD,CAAOluD,KAAI,UAAKA,EAAL,SAAkBk4D,OAAK,GAC9B,kBAAC,GAAD,OAGJ,kBAAC,IAAD,CAAOl4D,KAAI,UAAKA,EAAL,UAAmBk4D,OAAK,GAC/B,kBAAC,GAAD,OAGJ,kBAAC,IAAD,CAAOl4D,KAAI,UAAKA,EAAL,YAAqBk4D,OAAK,GACjC,kBAAC,GAAD,OAGJ,kBAAC,IAAD,CAAOl4D,KAAI,UAAKA,EAAL,SAAkBk4D,OAAK,GAC9B,kBAAC,GAAD,OAGJ,kBAAC,IAAD,CAAOl4D,KAAI,UAAKA,EAAL,UAAmBk4D,OAAK,GAC/B,kBAAC,GAAD,OAGJ,kBAAC,IAAD,CAAOA,OAAK,EAACl4D,KAAI,UAAKA,EAAL,UACb,kBAACsrD,GAAD,OAGJ,kBAAC,IAAD,CAAOtrD,KAAI,UAAKA,EAAL,oBACP,kBAAC,GAAD,OAGJ,kBAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,kBACP,kBAAC2rD,GAAD,OAGJ,kBAAC,IAAD,CAAO3rD,KAAI,UAAKA,EAAL,mBACP,kBAACm4D,GAAA,EAAD,OAGJ,kBAAC,IAAD,CAAOn4D,KAAI,UAAKA,EAAL,kBACP,kBAAC,WAAD,CAAUob,SAAU,kBAAC,GAAD,OAChB,kBAACq8C,GAAD,QAIR,kBAAC,IAAD,CAAOz3D,KAAI,UAAKA,EAAL,mBACP,kBAACo4D,GAAA,EAAD,OAGJ,kBAAC,IAAD,CAAOp4D,KAAK,KACR,kBAAC,EAAD,CAAUxD,IAAK,sCAI3B,kBAAC,GAAD,S,iCCzMd67D,GAAiB,SAACr1D,GACpB,QAAwB9G,IAApB8G,EAAWge,OAAuBhe,EAAWge,KAAK5K,UAAW,CAC7D,IAAMy7C,EAASj8C,KAAKC,MAAM7S,EAAW6uD,QAC/B7wC,EAAOhe,EAAWge,YACjBhe,EAAWge,KAIc,KAA5BA,EAAI,sBACgC9kB,IAApC21D,EAAO7wC,EAAI,mBAEXhe,EAAWvB,MAAQowD,EAAO7wC,EAAI,kBAIlC7kB,IAAKqZ,aAAawL,GAKtB,YAHwB9kB,IAApB8G,EAAWge,MAAsBhe,EAAWge,KAAK5K,WACjDja,IAAKuZ,QAAQ1S,EAAWge,MAErBhe,G,gDAqBJ,WAAgCs1D,GAAhC,UAAAz/C,EAAA,sDACHtO,IAAI4H,IAAI,gBACHxH,MAAK,SAAU7O,GACZ,IAAM+1D,EAASj8C,KAAKC,MAAM/Z,EAASG,KAAK41D,QACxC/1D,EAASG,KAAKwF,MAAQowD,EAAO/1D,EAASG,KAAKs8D,cAC3Cz8D,EAASG,KAAOo8D,GAAev8D,EAASG,MACxCq8D,EAAMr1D,SAAS8uB,YAAcj2B,EAASG,OACtC6Z,aAAaG,QACT,kBACAL,KAAKM,UAAUpa,EAASG,OAI5B,IAAMu8D,EAAmBr8D,IAAKoa,cAAc,eACxCiiD,EACAF,EAAMr1D,SAASwB,YAAiB+zD,IAE5BnmD,IAAWpS,YAAY5D,OAAOC,SAASgW,UACvCgmD,EAAMr1D,SACFwB,YAAiB3I,EAASG,KAAKw8D,oBAGnCH,EAAMr1D,SACFwB,YAAiB3I,EAASG,KAAKy8D,sBAK9C9tD,OAAM,SAAUtP,GACbg9D,EAAMr1D,SACFsG,YACI,MACA,QACA,yDAAcjO,EAAMF,QACpB,aAlCb,4C,8CCAMuB,GAA6B,CAEtCylB,QAASjmB,IAAKga,QACdxW,MAAM,EACN2E,mBAAoB,OACpBm2C,WAAY,UACZt2B,SAAU,KACV6yB,YAAa,OACbC,aAAa,EACbV,UAAU,EACV1lB,kBAAkB,EAClB4qB,gBAAgB,EAChBG,kBAAmB,KACnB/wC,eAAe,EACfmgB,gBAAgB,EAChBlJ,oBAAqB,KACrBupC,yBAA0B,KAC1BljD,OAAQ,CACJmM,iBAAiB,EACjBC,eAAe,EACftC,QAAQ,EACRwC,MAAM,EACNC,QAAQ,EACRxQ,OAAO,EACPyQ,OAAO,EACPE,gBAAgB,EAChBE,iBAAiB,EACjB7C,WAAW,EACXsC,MAAM,EACNmkD,QAAQ,EACR1jD,UAAU,EACVD,YAAY,EACZjN,SAAS,EACTM,YAAa,IAEjB+X,SAAU,CACNC,QAAQ,EACRhX,SAAU,MACVC,WAAY,SACZ9M,IAAK,GACLkG,MAAO,KA2NA2B,GAxNI,WAA4D,IAA3DvF,EAA0D,uDAAjCnC,GAAWoC,EAAsB,uCAC1E,OAAQA,EAAOpB,MACX,IAAK,gBACD,OAAOhC,OAAOqD,OAAO,GAAIF,EAAO,CAC5Ba,KAAMZ,EAAOY,OAErB,IAAK,qBACD,OAAOhE,OAAOqD,OAAO,GAAIF,EAAO,CAC5BwF,mBAAoBvF,EAAOyF,SAEnC,IAAK,+BACD,OAAO7I,OAAOqD,OAAO,GAAIF,EAAO,CAC5B+xB,iBAAkB9xB,EAAOyI,SAEjC,IAAK,sBACD,OAAO7L,OAAOqD,OAAO,GAAIF,EAAO,CAC5B28C,eAAgB18C,EAAOyI,OACvBo0C,kBAAmB78C,EAAOvC,MAElC,IAAK,4BACD,OAAOb,OAAOqD,OAAO,GAAIF,EAAO,CAC5BqJ,OAAQxM,OAAOqD,OAAO,GAAIF,EAAMqJ,OAAQ,CACpCmM,iBAAiB,IAErB2iC,aAAa,IAErB,IAAK,0BACD,OAAOt7C,OAAOqD,OAAO,GAAIF,EAAO,CAC5BqJ,OAAQxM,OAAOqD,OAAO,GAAIF,EAAMqJ,OAAQ,CACpCoM,eAAe,IAEnB0iC,aAAa,IAErB,IAAK,qBACD,OAAOt7C,OAAOqD,OAAO,GAAIF,EAAO,CAC5BqJ,OAAQxM,OAAOqD,OAAO,GAAIF,EAAMqJ,OAAQ,CACpC8J,QAAQ,IAEZglC,aAAa,IAErB,IAAK,qBACD,OAAOt7C,OAAOqD,OAAO,GAAIF,EAAO,CAC5BqJ,OAAQxM,OAAOqD,OAAO,GAAIF,EAAMqJ,OAAQ,CACpCuM,QAAQ,IAEZuiC,aAAa,IAErB,IAAK,mBACD,OAAOt7C,OAAOqD,OAAO,GAAIF,EAAO,CAC5BqJ,OAAQxM,OAAOqD,OAAO,GAAIF,EAAMqJ,OAAQ,CACpCsM,MAAM,IAEVwiC,aAAa,IAErB,IAAK,qBAED,OAAOt7C,OAAOqD,OAAO,GAAIF,EAAO,CAC5BqJ,OAAQxM,OAAOqD,OAAO,GAAIF,EAAMqJ,OAAQ,CACpCwwD,QAAQ,IAEZ1hB,aAAa,IAErB,IAAK,mBACD,OAAOt7C,OAAOqD,OAAO,GAAIF,EAAO,CAC5BgjB,oBAAqB/iB,EAAOgjB,SAEpC,IAAK,yBACD,OAAOpmB,OAAOqD,OAAO,GAAIF,EAAO,CAC5BusD,yBAA0BtsD,EAAOgjB,SAEzC,IAAK,oBACD,OAAOpmB,OAAOqD,OAAO,GAAIF,EAAO,CAC5BqJ,OAAQxM,OAAOqD,OAAO,GAAIF,EAAMqJ,OAAQ,CACpCjE,OAAO,IAEX+yC,aAAa,IAErB,IAAK,oBACD,OAAOt7C,OAAOqD,OAAO,GAAIF,EAAO,CAC5BqJ,OAAQxM,OAAOqD,OAAO,GAAIF,EAAMqJ,OAAQ,CACpCwM,OAAO,IAEXsiC,aAAa,IAErB,IAAK,8BACD,OAAOt7C,OAAOqD,OAAO,GAAIF,EAAO,CAC5BqJ,OAAQxM,OAAOqD,OAAO,GAAIF,EAAMqJ,OAAQ,CACpC0M,gBAAgB,IAEpBoiC,aAAa,IAErB,IAAK,+BACD,OAAOt7C,OAAOqD,OAAO,GAAIF,EAAO,CAC5BqJ,OAAQxM,OAAOqD,OAAO,GAAIF,EAAMqJ,OAAQ,CACpC4M,iBAAiB,IAErBkiC,aAAa,IAErB,IAAK,yBACD,OAAOt7C,OAAOqD,OAAO,GAAIF,EAAO,CAC5BqJ,OAAQxM,OAAOqD,OAAO,GAAIF,EAAMqJ,OAAQ,CACpC6M,YAAY,IAEhBiiC,aAAa,IAErB,IAAK,uBACD,OAAOt7C,OAAOqD,OAAO,GAAIF,EAAO,CAC5BqJ,OAAQxM,OAAOqD,OAAO,GAAIF,EAAMqJ,OAAQ,CACpC8M,UAAU,IAEdgiC,aAAa,IAErB,IAAK,yBACD,OAAOt7C,OAAOqD,OAAO,GAAIF,EAAO,CAC5BqJ,OAAQxM,OAAOqD,OAAO,GAAIF,EAAMqJ,OAAQ,CACpC+J,WAAW,IAEf+kC,aAAa,IAErB,IAAK,mBACD,OAAOt7C,OAAOqD,OAAO,GAAIF,EAAO,CAC5BqJ,OAAQxM,OAAOqD,OAAO,GAAIF,EAAMqJ,OAAQ,CACpCqM,MAAM,IAEVyiC,aAAa,IAErB,IAAK,sBACD,OAAOt7C,OAAOqD,OAAO,GAAIF,EAAO,CAC5BqJ,OAAQxM,OAAOqD,OAAO,GAAIF,EAAMqJ,OAAQ,CACpCJ,SAAS,EACTM,YAAatJ,EAAOqJ,OAExB6uC,aAAa,IAErB,IAAK,qBACD,OAAOt7C,OAAOqD,OAAO,GAAIF,EAAO,CAC5Bm4C,aAAa,IAErB,IAAK,mBACD,OAAOt7C,OAAOqD,OAAO,GAAIF,EAAO,CAC5BqJ,OAAQxM,OAAOqD,OAAO,GAAIF,EAAMqJ,OAAQ,CACpCmM,iBAAiB,EACjBC,eAAe,EACftC,QAAQ,EACRwC,MAAM,EACNC,QAAQ,EACRxQ,OAAO,EACPyQ,OAAO,EACPE,gBAAgB,EAChBE,iBAAiB,EACjB7C,WAAW,EACXymD,QAAQ,EACRnkD,MAAM,EACNzM,SAAS,EACTkN,UAAU,EACVD,YAAY,MAGxB,IAAK,kBACD,OAAOrZ,OAAOqD,OAAO,GAAIF,EAAO,CAC5BshB,SAAU,CACNC,QAASvhB,EAAMshB,SAASC,OACxBhX,SAAUtK,EAAOsK,SACjBC,WAAYvK,EAAOuK,WACnB9M,IAAKuC,EAAOvC,IACZkG,MAAO3D,EAAO2D,SAG1B,IAAK,qBACD,OAAO/G,OAAOqD,OAAO,GAAIF,EAAO,CAC5B+L,cAAe9L,EAAOyI,SAE9B,IAAK,qBACD,OAAO,2BACA1I,GADP,IAEIsjB,QAASrjB,EAAOyI,SAExB,IAAK,kBACD,OAAO7L,OAAOqD,OAAO,GAAIF,EAAO,CAC5BksB,gBAAiBlsB,EAAMksB,iBAE/B,IAAK,iBACD,OAAOrvB,OAAOqD,OAAO,GAAIF,EAAO,CAC5Bm4C,aAAa,EACbwE,gBAAgB,EAChB5qB,kBAAkB,IAE1B,IAAK,sBACD,OAAI/xB,EAAMm4C,aAAel4C,EAAOY,KACrBhE,OAAOqD,OAAO,GAAIF,GAEtBnD,OAAOqD,OAAO,GAAIF,EAAO,CAC5Bm4C,YAAal4C,EAAOY,KACpBq3C,YAAaj4C,EAAOmyB,WAE5B,IAAK,eACD,OAAOv1B,OAAOqD,OAAO,GAAIF,EAAO,CAC5BqlB,SAAUplB,EAAOyE,QAEzB,IAAK,kBACD,OAAO,2BACA1E,GADP,IAEI27C,WAAY17C,EAAOyF,SAE3B,IAAK,gBACD,OAAO,2BACA1F,GADP,IAEIm4C,aAAa,EACbwE,gBAAgB,EAChB5qB,iBAAkB9xB,EAAO8xB,mBAEjC,QACI,OAAO/xB,I,UC3Sb85D,GAAa,SAAC54D,EAAMlB,GAEtB,OADAzC,OAAOw8D,WAAa74D,EACbrE,OAAOqD,OAAO,GAAIF,EAAO,CAC5BuW,UAAW1Z,OAAOqD,OAAO,GAAIF,EAAMuW,UAAW,CAC1CrV,KAAMA,OA8DZ84D,GFxCwB,SAACC,GAE3B,IAAMC,EAAcpjD,KAAKC,MAAMC,aAAaC,QAAQ,oBACjC,MAAfijD,IACAD,EAAS/1D,WAAag2D,GAG1B,IACM37C,EADM,IAAImgC,IAAInhD,OAAOC,SAASC,MACtBkhD,aAAatrC,IAAI,QAO/B,OANA4mD,EAAS1jD,UAAUrV,KAAa,OAANqd,EAAa,IAAMA,EAE7C07C,EAAS/1D,WAAaq1D,GAAeU,EAAS/1D,YAG9C+Z,SAASvZ,MAAQu1D,EAAS/1D,WAAWQ,MAC9Bu1D,EEyBWE,CAzDG,CACrBj2D,WAAY,CACRQ,MAAOnH,OAAO8nB,SACd0lB,UAAW,GACXsG,cAAc,EACd0kB,YAAY,EACZM,eAAe,EACfR,aAAa,EACbuE,SAAS,EACTrH,OAAQ,KACRzhB,OAAO,EACP3uC,MAAO,CACHe,QAAS,CACLknB,OAAQ,CAAEyvC,MAAO,OAAQxvC,MAAO,QAChC1d,WAAY,CAAEoZ,MAAO,OAAQnZ,QAAS,WACtCkC,QAAS,CACLtF,MAAO,UACPgX,KAAM,UACN5d,KAAM,UACNk3D,aAAc,QAElBvwD,UAAW,CACPC,MAAO,UACPgX,KAAM,UACN5d,KAAM,UACNk3D,aAAc,QAElB99D,MAAO,CACHwN,MAAO,UACPgX,KAAM,UACN5d,KAAM,UACNk3D,aAAc,QAElBhxD,KAAM,CACFgG,QAAS,sBACTvF,UAAW,sBACXpB,SAAU,sBACVy0C,KAAM,uBAEVr9C,SAAU,CACNuf,SAAU,UACV3b,KAAM,UACN42D,WAAY,UACZxd,UAAW,aAIvBtO,qBAAsB,aACtBiB,aAAc,SACdX,wBAAyB,IAE7Bx4B,UAAW,CACPrV,KAAM,IACNyqB,SAAS,KCxDX6uC,G,oDACF,WAAYt3D,GAAQ,IAAD,+BACf,cAAMA,IACDlD,MAAQ,CAAEy6D,UAAU,EAAOj+D,MAAO,KAAMk+D,UAAW,MAFzC,E,sDAUnB,SAAkBl+D,EAAOk+D,GACrBj+D,KAAKmW,SAAS,CACVpW,MAAOA,EACPk+D,UAAWA,M,oBAInB,WACI,IAAQj3D,EAAYhH,KAAKyG,MAAjBO,QACR,OAAIhH,KAAKuD,MAAMy6D,SAGP,oCACI,wBAAIn3D,UAAWG,EAAQ+W,IAAvB,MACA,wBAAIlX,UAAWG,EAAQgX,IAAvB,gHAGChe,KAAKuD,MAAMxD,OACRC,KAAKuD,MAAM06D,WACXj+D,KAAKuD,MAAM06D,UAAUC,gBACjB,iCACI,6DACA,6BACI,8BAAOl+D,KAAKuD,MAAMxD,MAAM6T,aAE5B,6BACI,8BACK5T,KAAKuD,MAAM06D,UAAUC,mBAS/Cl+D,KAAKyG,MAAMxB,Y,uCAzCtB,WAEI,MAAO,CAAE+4D,UAAU,O,GARCltD,IAAM6I,WAmDnB5J,gBA7DA,CACXgO,GAAI,CACA5W,MAAO,UACP+D,OAAQ,WAEZ8S,GAAI,CACA9S,OAAQ,aAuDD6E,CAAmBguD,I,mBChElC,yCAcA,IAAMI,GAAQrtD,IAAM4N,MAAK,kBAAM,wDAEF,KAAzB5d,OAAOC,SAASq9D,OAChBt9D,OAAOC,SAASC,KAAOF,OAAOC,SAASq9D,KAAK/hD,MAAM,KAAK,I9D6EpD,SAAkBoa,GACrB,GAA6C,kBAAmB3c,UAAW,CAGvE,GADkB,IAAImoC,IAAIh6B,GAAwBnnB,OAAOC,SAASC,MACpDmxD,SAAWrxD,OAAOC,SAASoxD,OAIrC,OAGJrxD,OAAO6E,iBAAiB,QAAQ,WAC5B,IAAMqnC,EAAK,UAAM/kB,GAAN,sBAEPylB,IArDhB,SAAiCV,EAAOvW,GAEpC4nC,MAAMrxB,GACD59B,MAAK,SAAC7O,GAEH,IAAM+9D,EAAc/9D,EAASo7B,QAAQ/kB,IAAI,gBAEjB,MAApBrW,EAAS0L,QACO,MAAfqyD,IAC0C,IAAvCA,EAAY19C,QAAQ,cAGxB9G,UAAUmzB,cAAcsxB,MAAMnvD,MAAK,SAAC+9B,GAChCA,EAAaqxB,aAAapvD,MAAK,WAC3BtO,OAAOC,SAASwkB,eAKxBwnB,EAAgBC,EAAOvW,MAG9BpnB,OAAM,WACHoO,QAAQC,IACJ,oEA+BA+gD,CAAwBzxB,EAAOvW,GAI/B3c,UAAUmzB,cAAcsxB,MAAMnvD,MAAK,WAC/BqO,QAAQC,IACJ,iHAMRqvB,EAAgBC,EAAOvW,O8DtGvCwW,GACO,IAAMlsB,GAAU29C,eACnBC,GAAeC,YAAgBC,aAAiB99C,IAAU+9C,KAQ9D,IF4HgB/9C,GE5HVg8C,GAAQgC,aF4HEh+C,GE5HsBA,GF4HV,SAACxd,EAAOC,GAChC,MACID,GAAS,GADOy7D,EAApB,EAAQl2D,WAAuCm2D,EAA/C,EAAqC37D,SAE/B47D,EAjFW,WAAoC,IAAnC37D,EAAkC,uDAA1Bg6D,GAAe/5D,EAAW,uCACpD,OAAQA,EAAOpB,MACX,IAAK,gBACD,OAAOi7D,GAAW75D,EAAOiB,KAAMlB,GACnC,IAAK,uBACD,IAAM0V,EAAO7Y,OAAOqD,OAAO,GAAIF,GAC/B,YAC2C5C,IAAvCsY,EAAKxR,WAAWvB,MAAMe,QAAQ7E,MACS,UAAvC6W,EAAKxR,WAAWvB,MAAMe,QAAQ7E,KAEvB,2BACAmB,GADP,IAEIkE,WAAW,2BACJlE,EAAMkE,YADH,IAENvB,MAAM,2BACC3C,EAAMkE,WAAWvB,OADnB,IAEDe,QAAQ,2BACD1D,EAAMkE,WAAWvB,MAAMe,SADvB,IAEH7E,KAAM,eAMnB,2BACAmB,GADP,IAEIkE,WAAW,2BACJlE,EAAMkE,YADH,IAENvB,MAAM,2BACC3C,EAAMkE,WAAWvB,OADnB,IAEDe,QAAQ,2BACD1D,EAAMkE,WAAWvB,MAAMe,SADvB,IAEH7E,KAAM,gBAM1B,IAAK,cACD,GAAgC,OAA5BmB,EAAMkE,WAAW6uD,OAAiB,CAClC,IAAMA,EAASj8C,KAAKC,MAAM/W,EAAMkE,WAAW6uD,QAC3C,YAA6B31D,IAAzB21D,EAAO9yD,EAAO0C,OACP3C,EAEJnD,OAAOqD,OAAO,GAAIF,EAAO,CAC5BkE,WAAYrH,OAAOqD,OAAO,GAAIF,EAAMkE,WAAY,CAC5CvB,MAAOowD,EAAO9yD,EAAO0C,WAIjC,MACJ,IAAK,eACD,OAAOm3D,GAAW75D,EAAOiB,KAAMlB,GACnC,IAAK,kBACD,OAAOnD,OAAOqD,OAAO,GAAIF,EAAO,CAC5BkE,WAAYjE,EAAOizB,SAE3B,IAAK,oBACD,OAAOr2B,OAAOqD,OAAO,GAAIF,EAAO,CAC5BuW,UAAW1Z,OAAOqD,OAAO,GAAIF,EAAMuW,UAAW,CAC1CoV,SAAU3rB,EAAMuW,UAAUoV,YAGtC,IAAK,iBACD,OAAO9uB,OAAOqD,OAAO,GAAIF,EAAO,CAC5BuW,UAAW1Z,OAAOqD,OAAO,GAAIF,EAAMuW,UAAW,CAC1CrV,KAAM,4BACNyqB,QACgC,KAA5B3rB,EAAMD,SAASP,SACTQ,EAAMuW,UAAUoV,SACf3rB,EAAMuW,UAAUoV,YAGvC,QACI,OAAO3rB,GAOE47D,CAAa57D,EAAOC,GAC/B47D,EGvJqB,SAACvlB,GAC5B,IAAMwlB,EAAkBC,YAAQzlB,GAEhC,OAAO,SAACt2C,EAAYC,GAChB,GACIA,EAAOpB,OACNoB,EAAOpB,KAAKuC,WAAW,OACxBnB,EAAOpB,KAAKia,MAAM,KAAKlZ,OAAS,EAClC,CACE,IAAMo8D,EAAY/7D,EAAOpB,KAAKia,MAAM,KAAK,GACnCmjD,EAAU3lB,EAAS0lB,GAEzB,OADAE,OAAYD,EAAH,kBAAuBD,EAAvB,mBACFC,GAAWA,EAAQj8D,EAAOC,GAErC,OAAO67D,EAAgB97D,EAAOC,IHyIZk8D,CAAgB,CAClC52D,cACAxF,oBACA8wB,OAAQurC,aAAc5+C,KAHJ2+C,CAInB,CAAE52D,WAAYk2D,EAAiB17D,SAAU27D,GAAiBz7D,GAC7D,OAAO,2BACA07D,GACAE,KEvIqCT,KJqBzC,SAAP,4BIpBAiB,CAAiB7C,IAEjB8C,IAAS9xB,OACL,kBAAC,GAAD,KACI,kBAAC,IAAD,CAAUgvB,MAAOA,IACb,kBAAC,KAAD,CAAiBh8C,QAASA,IACtB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOtc,KAAK,UACR,kBAAC,WAAD,CAAUob,SAAU,cAChB,kBAACs+C,GAAD,QAGR,kBAAC,IAAD,CAAOxB,OAAK,EAACl4D,KAAK,IACd,kBAAC03D,GAAD,WAMpB36C,SAASs+C,eAAe,U,gPEMtBC,E,4MACFx8D,MAAQ,CACJgL,YAAa,IACb9M,QAAS,GACTu+D,eAAgB,M,EAGpBhxC,kBAAoB,WAChB,IAAMixC,EAAW,EAAKx5D,MAAM8H,YAC5B,EAAK+rC,YAAoC,KAAxB,EAAK7zC,MAAM1D,SAAkBk9D,EAAW,M,EAG7DC,KAAO,WACH,IAAMC,EAAQ,EAAK58D,MAAMgL,YAAY8N,MAAM,KAC3C8jD,EAAM7gD,MACN,IAAM2gD,EAAWE,EAAM39C,KAAK,KAC5B,EAAK83B,YAAyB,KAAb2lB,EAAkB,IAAMA,I,EAG7C3lB,YAAc,SAAC2lB,GACXjxD,IAAI4H,KACC,EAAKnQ,MAAM25D,IAAM,EAAK35D,MAAM25D,IAAM,cAC/B5oD,mBAAmByoD,IAEtB7wD,MAAK,SAAC7O,GACH,IAAMkB,EAAUlB,EAASG,KAAK8hD,QAAQt+C,QAAO,SAAC4qC,GAC1C,MACe,QAAXA,EAAE1sC,OAKM,IAJR,EAAKqE,MAAM/E,SAAS4W,WAAU,SAACjV,GAC3B,OACIA,EAAMnB,OAAS4sC,EAAE5sC,MAAQmB,EAAMoB,OAASqqC,EAAErqC,WAKzC,MAAbw7D,GACAx+D,EAAQ4+D,QAAQ,CAAEn+D,KAAM,IAAKuC,KAAM,KAEvC,EAAK0R,SAAS,CACV5H,YAAa0xD,EACbx+D,QAASA,EACTu+D,eAAgB,UAGvB3wD,OAAM,SAACtP,GACJ,EAAK0G,MAAMuH,eACP,MACA,QACAjO,EAAMF,QACN,e,EAKhBygE,aAAe,SAACh+D,GACZ,EAAK6T,SAAS,CAAE6pD,eAAgB19D,IAChC,EAAKmE,MAAM+H,SAAS,EAAKjL,MAAM9B,QAAQa,K,4CAG3C,WAAU,IAAD,OACG0E,EAAYhH,KAAKyG,MAAjBO,QAER,OACI,yBAAKH,UAAWG,EAAQ6iB,WACpB,kBAAC,IAAD,CAAUhjB,UAAWG,EAAQu5D,UACG,MAA3BvgE,KAAKuD,MAAMgL,aACR,kBAAC,IAAD,CAAUnG,QAASpI,KAAKkgE,MACpB,kBAAC,IAAD,KACI,kBAAC,IAAD,OAEJ,kBAAC,IAAD,CAAcrtD,QAAQ,oCAG7B7S,KAAKuD,MAAM9B,QAAQwI,KAAI,SAAC5G,EAAOf,GAAR,OACpB,kBAAC,IAAD,CACI0E,QAAS,CACLtF,SAAUsF,EAAQtF,UAEtByI,IAAK7H,EACLZ,SAAU,EAAK6B,MAAMy8D,iBAAmB19D,EACxC8F,QAAS,kBAAM,EAAKk4D,aAAah+D,KAEjC,kBAAC,IAAD,CAAcuE,UAAWG,EAAQE,MAC7B,kBAAC,IAAD,OAEJ,kBAAC,IAAD,CACIF,QAAS,CAAE6L,QAAS7L,EAAQ6L,SAC5BA,QAASxP,EAAMnB,KACfs+D,uBAAwB,CACpB11D,MAAO,CAAE8lB,WAAY,aAGb,MAAfvtB,EAAMnB,MACH,kBAAC,IAAD,CACI2E,UAAWG,EAAQy5D,YAEnB,kBAAC,IAAD,CACI55D,UAAWsB,IAAW,eACjBnB,EAAQ05D,UACL,EAAKn9D,MAAMy8D,iBACX19D,IAER8F,QAAS,kBACL,EAAKkyC,YACc,MAAfj3C,EAAMoB,KACApB,EAAMoB,KAAOpB,EAAMnB,KACnBmB,EAAMoB,KACF,IACApB,EAAMnB,QAIxB,kBAAC,IAAD,kB,GAhHJyX,aAkIrBE,iBAtKS,SAACtW,GACrB,MAAO,CACHR,SAAUQ,EAAMD,SAASP,aAIN,SAAC2E,GACxB,MAAO,CACHsG,eAAgB,SAACF,EAAUC,EAAY9M,EAAKkG,GACxCO,EAASsG,YAAeF,EAAUC,EAAY9M,EAAKkG,QA6JhD0S,CAGb9J,aA3Ja,SAAC7J,GAAD,MAAY,CACvBw6D,UAAW,CACPv5D,MAAOjB,EAAMe,QAAQknB,OAAOC,OAEhC1sB,SAAU,CACNgF,gBAAiBR,EAAMe,QAAQ4L,QAAQ0R,KAAO,aAC9C,sBAAuB,CACnBpd,MAAOjB,EAAMe,QAAQknB,OAAOC,QAGpCvb,QAAS,GACT3L,KAAM,GACNu5D,WAAY,GACZF,SAAU,CACN9wD,SAAU,SAEdoa,UAAW,CACP8b,UAAW,QACX/Y,UAAW,YAyIjB7c,CAAmBgwD,K,gCC1LrB,4YAOaY,EAAc,SAAC/8D,GACxB,MAAO,CACHxB,KAAM,gBACNwB,SAQKg9D,EAAa,SAACh9D,GACvB,MAAO,CACHxB,KAAM,eACNwB,SAQKi9D,EAAgB,SAAC53D,GAC1B,MAAO,CACH7G,KAAM,kBACN6G,WAIKi8C,EAAa,SAAC9gD,GACvB,MAAO,CACHhC,KAAM,eACNgC,SAIKq+C,EAAmB,SAACn+C,GAC7B,MAAO,CACHlC,KAAM,qBACNkC,WAKFw8D,EAAgD,CAClDC,QAAS,SAACzjD,EAAkB0jD,GACxB,OAAO1jD,EAAEnb,KAAO6+D,EAAE7+D,MAEtB8+D,QAAS,SAAC3jD,EAAkB0jD,GACxB,OAAOA,EAAE7+D,KAAOmb,EAAEnb,MAEtB++D,QAAS,SAAC5jD,EAAkB0jD,GACxB,OAAO1jD,EAAEpb,KAAKi/D,cACVH,EAAE9+D,KACF4X,UAAUsnD,UAAU,IAAMtnD,UAAUgG,SACpC,CAAEuhD,SAAS,EAAMC,mBAAmB,KAG5CC,QAAS,SAACjkD,EAAkB0jD,GACxB,OAAOA,EAAE9+D,KAAKi/D,cACV7jD,EAAEpb,KACF4X,UAAUsnD,UAAU,IAAMtnD,UAAUgG,SACpC,CAAEuhD,SAAS,EAAMC,mBAAmB,KAG5CE,QAAS,SAAClkD,EAAkB0jD,GACxB,OAAOnoC,KAAKve,MAAMgD,EAAEjb,MAAQw2B,KAAKve,MAAM0mD,EAAE3+D,OAE7Co/D,QAAS,SAACnkD,EAAkB0jD,GACxB,OAAOnoC,KAAKve,MAAM0mD,EAAE3+D,MAAQw2B,KAAKve,MAAMgD,EAAEjb,QAIpCkgD,EAAiB,SAC1B3+C,GAEA,OAAO,SAAC8D,EAAUysB,GACd,IAEQ+qB,EAFM/qB,IAEerrB,WAArBo2C,WACFz9C,EAAUmC,EAAKM,QAAO,SAAC4qC,GACzB,MAAkB,QAAXA,EAAE1sC,QAEPZ,EAAWoC,EAAKM,QAAO,SAAC4qC,GAC1B,MAAkB,SAAXA,EAAE1sC,QAEPs/D,EAAWZ,EAAgB5hB,GACjCx3C,EAASk5D,EAAWn/D,EAAQkgE,KAAKD,KACjCh6D,EAASi5D,EAAYn/D,EAASmgE,KAAKD,OAI9Bt4D,EAAmB,SAC5BH,GAEA,OAAO,SAACvB,EAAUysB,GACd,IACA,EADcA,IACsB7wB,SAA5B9B,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,QACZigE,EAAWZ,EAAgB73D,GACjCvB,EAASm5D,EAAc53D,IACvBvB,EAASk5D,EAAWn/D,EAAQkgE,KAAKD,KACjCh6D,EAASi5D,EAAYn/D,EAASmgE,KAAKD,OAI9BrmB,EAA0B,SACnCj3C,GAEA,OAAO,SAACsD,EAAUysB,GACAA,IACV/vB,GACAsD,EAASmlC,eAEbnlC,EAASw9C,GAAW,Q","file":"static/js/main.0afe95ff.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport Auth from \"./Auth\";\r\n\r\nexport const baseURL = \"/api/v3\";\r\n\r\nexport const getBaseURL = () => {\r\n    return baseURL;\r\n};\r\n\r\nconst instance = axios.create({\r\n    baseURL: getBaseURL(),\r\n    withCredentials: true,\r\n    crossDomain: true,\r\n});\r\n\r\nfunction AppError(message, code, error) {\r\n    this.code = code;\r\n    this.message = message || \"未知错误\";\r\n    this.message += error ? \" \" + error : \"\";\r\n    this.stack = new Error().stack;\r\n}\r\nAppError.prototype = Object.create(Error.prototype);\r\nAppError.prototype.constructor = AppError;\r\n\r\ninstance.interceptors.response.use(\r\n    function (response) {\r\n        response.rawData = response.data;\r\n        response.data = response.data.data;\r\n        if (\r\n            response.rawData.code !== undefined &&\r\n            response.rawData.code !== 0 &&\r\n            response.rawData.code !== 203\r\n        ) {\r\n            // 登录过期\r\n            if (response.rawData.code === 401) {\r\n                Auth.signout();\r\n                window.location.href = \"/login\";\r\n            }\r\n\r\n            // 非管理员\r\n            if (response.rawData.code === 40008) {\r\n                window.location.href = \"/home\";\r\n            }\r\n            throw new AppError(\r\n                response.rawData.msg,\r\n                response.rawData.code,\r\n                response.rawData.error\r\n            );\r\n        }\r\n        return response;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default instance;\r\n","/* eslint-disable no-case-declarations */\r\nimport { AnyAction } from \"redux\";\r\nimport { CloudreveFile } from \"../../types\";\r\nimport { Policy } from \"../../component/Uploader/core/types\";\r\n\r\ninterface SelectProps {\r\n    isMultiple: boolean;\r\n    withFolder: boolean;\r\n    withFile: boolean;\r\n}\r\n\r\nexport interface ExplorerState {\r\n    dndSignal: boolean;\r\n    dndTarget: any;\r\n    dndSource: any;\r\n    fileList: CloudreveFile[];\r\n    dirList: CloudreveFile[];\r\n    selected: CloudreveFile[];\r\n    selectProps: SelectProps;\r\n    lastSelect: {\r\n        file: CloudreveFile;\r\n        index: number;\r\n    };\r\n    shiftSelectedIds: string[];\r\n    imgPreview: {\r\n        first: CloudreveFile;\r\n        other: [];\r\n    };\r\n    audioPreview: {\r\n        first: CloudreveFile;\r\n        other: [];\r\n        playingName: any;\r\n        paused: boolean;\r\n        isOpen: boolean;\r\n    };\r\n    keywords: string;\r\n    fileSave: boolean;\r\n    sideBarOpen: boolean;\r\n    currentPolicy?: Policy;\r\n}\r\n\r\nexport const initState: ExplorerState = {\r\n    dndSignal: false,\r\n    dndTarget: null,\r\n    dndSource: null,\r\n    fileList: [],\r\n    dirList: [],\r\n    selected: [],\r\n    selectProps: {\r\n        isMultiple: false,\r\n        withFolder: false,\r\n        withFile: false,\r\n    },\r\n    lastSelect: {\r\n        file: {\r\n            id: \"\",\r\n            name: \"\",\r\n            size: 0,\r\n            type: \"file\",\r\n            date: \"\",\r\n        },\r\n        index: -1,\r\n    },\r\n    shiftSelectedIds: [],\r\n    imgPreview: {\r\n        first: {\r\n            id: \"\",\r\n            name: \"\",\r\n            size: 0,\r\n            type: \"file\",\r\n            date: \"\",\r\n        },\r\n        other: [],\r\n    },\r\n    audioPreview: {\r\n        first: {\r\n            id: \"\",\r\n            name: \"\",\r\n            size: 0,\r\n            type: \"file\",\r\n            date: \"\",\r\n        },\r\n        other: [],\r\n        playingName: null,\r\n        paused: false,\r\n        isOpen: false,\r\n    },\r\n    keywords: \"\",\r\n    fileSave: false,\r\n    sideBarOpen: false,\r\n};\r\n\r\nconst checkSelectedProps = (selected: CloudreveFile[]): SelectProps => {\r\n    const isMultiple = selected.length > 1;\r\n    let withFolder = false;\r\n    let withFile = false;\r\n    selected.forEach((value) => {\r\n        if (value.type === \"dir\") {\r\n            withFolder = true;\r\n        } else if (value.type === \"file\") {\r\n            withFile = true;\r\n        }\r\n    });\r\n    return {\r\n        isMultiple,\r\n        withFolder,\r\n        withFile,\r\n    };\r\n};\r\n\r\nconst explorer = (\r\n    state: ExplorerState = initState,\r\n    action: AnyAction\r\n): ExplorerState => {\r\n    switch (action.type) {\r\n        case \"DRAG_AND_DROP\":\r\n            return Object.assign({}, state, {\r\n                dndSignal: !state.dndSignal,\r\n                dndTarget: action.target,\r\n                dndSource: action.source,\r\n            });\r\n        case \"SET_FILE_LIST\":\r\n            return Object.assign({}, state, {\r\n                fileList: action.list,\r\n            });\r\n        case \"SET_DIR_LIST\":\r\n            return Object.assign({}, state, {\r\n                dirList: action.list,\r\n            });\r\n        case \"ADD_SELECTED_TARGETS\":\r\n            const addedSelected = [...state.selected, ...action.targets];\r\n            return Object.assign({}, state, {\r\n                selected: addedSelected,\r\n                selectProps: checkSelectedProps(addedSelected),\r\n            });\r\n        case \"SET_SELECTED_TARGET\":\r\n            const newSelected = action.targets;\r\n            return Object.assign({}, state, {\r\n                selected: newSelected,\r\n                selectProps: checkSelectedProps(newSelected),\r\n            });\r\n        case \"RMOVE_SELECTED_TARGETS\":\r\n            const { fileIds } = action;\r\n            const filteredSelected = state.selected.filter((file) => {\r\n                return !fileIds.includes(file.id);\r\n            });\r\n            return Object.assign({}, state, {\r\n                selected: filteredSelected,\r\n                selectProps: checkSelectedProps(filteredSelected),\r\n            });\r\n        case \"REFRESH_FILE_LIST\":\r\n            return Object.assign({}, state, {\r\n                selected: [],\r\n                selectProps: {\r\n                    isMultiple: false,\r\n                    withFolder: false,\r\n                    withFile: false,\r\n                },\r\n            });\r\n        case \"SEARCH_MY_FILE\":\r\n            return Object.assign({}, state, {\r\n                selected: [],\r\n                selectProps: {\r\n                    isMultiple: false,\r\n                    withFolder: false,\r\n                    withFile: false,\r\n                },\r\n                keywords: action.keywords,\r\n            });\r\n        case \"SHOW_IMG_PREIVEW\":\r\n            return Object.assign({}, state, {\r\n                imgPreview: {\r\n                    first: action.first,\r\n                    other: state.fileList,\r\n                },\r\n            });\r\n        case \"SHOW_AUDIO_PREVIEW\":\r\n            return Object.assign({}, state, {\r\n                audioPreview: {\r\n                    ...state.audioPreview,\r\n                    first: action.first,\r\n                    other: state.fileList,\r\n                },\r\n            });\r\n        case \"AUDIO_PREVIEW_SET_IS_OPEN\":\r\n            return Object.assign({}, state, {\r\n                audioPreview: {\r\n                    ...state.audioPreview,\r\n                    isOpen: action.isOpen,\r\n                },\r\n            });\r\n        case \"AUDIO_PREVIEW_SET_PLAYING\":\r\n            return Object.assign({}, state, {\r\n                audioPreview: {\r\n                    ...state.audioPreview,\r\n                    playingName: action.playingName,\r\n                    paused: action.paused,\r\n                },\r\n            });\r\n        case \"SAVE_FILE\":\r\n            return {\r\n                ...state,\r\n                fileSave: !state.fileSave,\r\n            };\r\n        case \"SET_LAST_SELECT\":\r\n            const { file, index } = action;\r\n            return {\r\n                ...state,\r\n                lastSelect: {\r\n                    file,\r\n                    index,\r\n                },\r\n            };\r\n        case \"SET_SHIFT_SELECTED_IDS\":\r\n            const { shiftSelectedIds } = action;\r\n            return {\r\n                ...state,\r\n                shiftSelectedIds,\r\n            };\r\n        case \"SET_NAVIGATOR\":\r\n            return {\r\n                ...state,\r\n                selected: [],\r\n                selectProps: {\r\n                    isMultiple: false,\r\n                    withFolder: false,\r\n                    withFile: false,\r\n                },\r\n                keywords: \"\",\r\n            };\r\n        case \"SET_SIDE_BAR\":\r\n            return {\r\n                ...state,\r\n                sideBarOpen: action.open,\r\n            };\r\n        case \"SET_CURRENT_POLICY\":\r\n            return {\r\n                ...state,\r\n                currentPolicy: action.policy,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default explorer;\r\n","const statusHelper = {\r\n    isHomePage(path) {\r\n        return path === \"/home\";\r\n    },\r\n    isSharePage(path) {\r\n        return path && path.startsWith(\"/s/\");\r\n    },\r\n    isAdminPage(path) {\r\n        return path && path.startsWith(\"/admin\");\r\n    },\r\n    isLoginPage(path) {\r\n        return path && path.startsWith(\"/login\");\r\n    },\r\n    isMobile() {\r\n        return window.innerWidth < 600;\r\n    },\r\n};\r\nexport default statusHelper;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\n\r\nfunction AutoHidden({ children, enable, hide = false }) {\r\n    const [hidden, setHidden] = useState(false);\r\n\r\n    let prev = window.scrollY;\r\n    let lastUpdate = window.scrollY;\r\n    const show = 50;\r\n\r\n    useEffect(() => {\r\n        const handleNavigation = (e) => {\r\n            const window = e.currentTarget;\r\n\r\n            if (prev > window.scrollY) {\r\n                if (lastUpdate - window.scrollY > show) {\r\n                    lastUpdate = window.scrollY;\r\n                    setHidden(false);\r\n                }\r\n            } else if (prev < window.scrollY) {\r\n                if (window.scrollY - lastUpdate > show) {\r\n                    lastUpdate = window.scrollY;\r\n                    setHidden(true);\r\n                }\r\n            }\r\n            prev = window.scrollY;\r\n        };\r\n        if (enable) {\r\n            window.addEventListener(\"scroll\", (e) => handleNavigation(e));\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [enable]);\r\n\r\n    return <Zoom in={!hidden && !hide}>{children}</Zoom>;\r\n}\r\n\r\nexport default AutoHidden;\r\n","import React from \"react\";\r\nimport { Code } from \"react-content-loader\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    loader: {\r\n        width: \"70%\",\r\n        padding: 40,\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            width: \"100%\",\r\n            padding: 10,\r\n        },\r\n    },\r\n}));\r\n\r\nconst MyLoader = (props) => (\r\n    <Code\r\n        backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\r\n        foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\r\n        className={props.className}\r\n    />\r\n);\r\n\r\nfunction TextLoading() {\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <MyLoader\r\n                dark={theme.palette.type === \"dark\"}\r\n                className={classes.loader}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TextLoading;\r\n","import React, { useCallback } from \"react\";\r\nimport { IconButton, makeStyles } from \"@material-ui/core\";\r\nimport DayIcon from \"@material-ui/icons/Brightness7\";\r\nimport NightIcon from \"@material-ui/icons/Brightness4\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggleDaylightMode } from \"../../actions\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport classNames from \"classnames\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    icon: {\r\n        color: \"rgb(255, 255, 255)\",\r\n        opacity: \"0.54\",\r\n    },\r\n}));\r\n\r\nconst DarkModeSwitcher = ({ position }) => {\r\n    const ThemeType = useSelector(\r\n        (state) => state.siteConfig.theme.palette.type\r\n    );\r\n    const dispatch = useDispatch();\r\n    const ToggleThemeMode = useCallback(() => dispatch(toggleDaylightMode()), [\r\n        dispatch,\r\n    ]);\r\n    const isDayLight = (ThemeType && ThemeType === \"light\") || !ThemeType;\r\n    const isDark = ThemeType && ThemeType === \"dark\";\r\n    const toggleMode = () => {\r\n        Auth.SetPreference(\"theme_mode\", isDayLight ? \"dark\" : \"light\");\r\n        ToggleThemeMode();\r\n    };\r\n    const classes = useStyles();\r\n    return (\r\n        <Tooltip\r\n            title={isDayLight ? \"切换到深色模式\" : \"切换到浅色模式\"}\r\n            placement=\"bottom\"\r\n        >\r\n            <IconButton\r\n                className={classNames({\r\n                    [classes.icon]: \"left\" === position,\r\n                })}\r\n                onClick={toggleMode}\r\n                color=\"inherit\"\r\n            >\r\n                {isDayLight && <NightIcon />}\r\n                {isDark && <DayIcon />}\r\n            </IconButton>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nexport default DarkModeSwitcher;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { IconButton, makeStyles, Menu, MenuItem } from \"@material-ui/core\";\r\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\r\nimport ViewSmallIcon from \"@material-ui/icons/ViewComfy\";\r\nimport ViewModuleIcon from \"@material-ui/icons/ViewModule\";\r\nimport TextTotateVerticalIcon from \"@material-ui/icons/TextRotateVertical\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Auth from \"../../../middleware/Auth\";\r\nimport { changeViewMethod, setShareUserPopover } from \"../../../actions\";\r\nimport { changeSortMethod } from \"../../../redux/explorer/action\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    sideButton: {\r\n        padding: \"8px\",\r\n        marginRight: \"5px\",\r\n    },\r\n}));\r\n\r\nconst sortOptions = [\"A-Z\", \"Z-A\", \"最早\", \"最新\", \"最小\", \"最大\"];\r\n\r\nexport default function SubActions({ isSmall, share, inherit }) {\r\n    const dispatch = useDispatch();\r\n    const viewMethod = useSelector(\r\n        (state) => state.viewUpdate.explorerViewMethod\r\n    );\r\n    const OpenLoadingDialog = useCallback(\r\n        (method) => dispatch(changeViewMethod(method)),\r\n        [dispatch]\r\n    );\r\n    const ChangeSortMethod = useCallback(\r\n        (method) => dispatch(changeSortMethod(method)),\r\n        [dispatch]\r\n    );\r\n    const SetShareUserPopover = useCallback(\r\n        (e) => dispatch(setShareUserPopover(e)),\r\n        [dispatch]\r\n    );\r\n    const [anchorSort, setAnchorSort] = useState(null);\r\n    const [selectedIndex, setSelectedIndex] = useState(0);\r\n    const showSortOptions = (e) => {\r\n        setAnchorSort(e.currentTarget);\r\n    };\r\n    const handleMenuItemClick = (e, index) => {\r\n        setSelectedIndex(index);\r\n        const optionsTable = {\r\n            0: \"namePos\",\r\n            1: \"nameRev\",\r\n            2: \"timePos\",\r\n            3: \"timeRev\",\r\n            4: \"sizePos\",\r\n            5: \"sizeRes\",\r\n        };\r\n        ChangeSortMethod(optionsTable[index]);\r\n        setAnchorSort(null);\r\n    };\r\n\r\n    const toggleViewMethod = () => {\r\n        const newMethod =\r\n            viewMethod === \"icon\"\r\n                ? \"list\"\r\n                : viewMethod === \"list\"\r\n                ? \"smallIcon\"\r\n                : \"icon\";\r\n        Auth.SetPreference(\"view_method\", newMethod);\r\n        OpenLoadingDialog(newMethod);\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            {viewMethod === \"icon\" && (\r\n                <IconButton\r\n                    title=\"列表展示\"\r\n                    className={classes.sideButton}\r\n                    onClick={toggleViewMethod}\r\n                    color={inherit ? \"inherit\" : \"default\"}\r\n                >\r\n                    <ViewListIcon fontSize={isSmall ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            )}\r\n            {viewMethod === \"list\" && (\r\n                <IconButton\r\n                    title=\"小图标展示\"\r\n                    className={classes.sideButton}\r\n                    onClick={toggleViewMethod}\r\n                    color={inherit ? \"inherit\" : \"default\"}\r\n                >\r\n                    <ViewSmallIcon fontSize={isSmall ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            )}\r\n\r\n            {viewMethod === \"smallIcon\" && (\r\n                <IconButton\r\n                    title=\"大图标展示\"\r\n                    className={classes.sideButton}\r\n                    onClick={toggleViewMethod}\r\n                    color={inherit ? \"inherit\" : \"default\"}\r\n                >\r\n                    <ViewModuleIcon fontSize={isSmall ? \"small\" : \"default\"} />\r\n                </IconButton>\r\n            )}\r\n\r\n            <IconButton\r\n                title=\"排序方式\"\r\n                className={classes.sideButton}\r\n                onClick={showSortOptions}\r\n                color={inherit ? \"inherit\" : \"default\"}\r\n            >\r\n                <TextTotateVerticalIcon\r\n                    fontSize={isSmall ? \"small\" : \"default\"}\r\n                />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"sort-menu\"\r\n                anchorEl={anchorSort}\r\n                open={Boolean(anchorSort)}\r\n                onClose={() => setAnchorSort(null)}\r\n            >\r\n                {sortOptions.map((option, index) => (\r\n                    <MenuItem\r\n                        key={option}\r\n                        selected={index === selectedIndex}\r\n                        onClick={(event) => handleMenuItemClick(event, index)}\r\n                    >\r\n                        {option}\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n            {share && (\r\n                <IconButton\r\n                    title={\"由 \" + share.creator.nick + \" 创建\"}\r\n                    className={classes.sideButton}\r\n                    onClick={(e) => SetShareUserPopover(e.currentTarget)}\r\n                    style={{ padding: 5 }}\r\n                >\r\n                    <Avatar\r\n                        style={{ height: 23, width: 23 }}\r\n                        src={\"/api/v3/user/avatar/\" + share.creator.key + \"/s\"}\r\n                    />\r\n                </IconButton>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport AutoHidden from \"./AutoHidden\";\r\nimport statusHelper from \"../../utils/page\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    fab: {\r\n        margin: 0,\r\n        top: \"auto\",\r\n        right: 20,\r\n        bottom: 20,\r\n        left: \"auto\",\r\n        zIndex: 5,\r\n        position: \"fixed\",\r\n    },\r\n    badge: {\r\n        position: \"absolute\",\r\n        bottom: 26,\r\n        top: \"auto\",\r\n        zIndex: 9999,\r\n        right: 7,\r\n    },\r\n    fabProgress: {\r\n        color: green[500],\r\n        position: \"absolute\",\r\n        top: -6,\r\n        left: -6,\r\n        zIndex: 1,\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonSuccess: {\r\n        backgroundColor: green[500],\r\n        \"&:hover\": {\r\n            backgroundColor: green[700],\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function SaveButton(props) {\r\n    const classes = useStyles();\r\n    const buttonClassname = clsx({\r\n        [classes.buttonSuccess]: props.status === \"success\",\r\n    });\r\n\r\n    return (\r\n        <AutoHidden enable={statusHelper.isMobile()}>\r\n            <div className={classes.fab}>\r\n                <div className={classes.wrapper}>\r\n                    <Tooltip title={\"保存\"} placement={\"left\"}>\r\n                        <Fab\r\n                            onClick={props.onClick}\r\n                            color=\"primary\"\r\n                            className={buttonClassname}\r\n                            disabled={props.status === \"loading\"}\r\n                            aria-label=\"add\"\r\n                        >\r\n                            {props.status === \"success\" ? (\r\n                                <CheckIcon />\r\n                            ) : (\r\n                                <SaveIcon />\r\n                            )}\r\n                        </Fab>\r\n                    </Tooltip>\r\n                    {props.status === \"loading\" && (\r\n                        <CircularProgress\r\n                            size={68}\r\n                            className={classes.fabProgress}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </AutoHidden>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n    loadingContainer: {\r\n        display: \"flex\",\r\n    },\r\n    loading: {\r\n        marginTop: 10,\r\n        marginLeft: 20,\r\n    },\r\n});\r\n\r\nexport default function LoadingDialog() {\r\n    const classes = useStyles();\r\n    const open = useSelector((state) => state.viewUpdate.modals.loading);\r\n    const text = useSelector((state) => state.viewUpdate.modals.loadingText);\r\n\r\n    return (\r\n        <Dialog aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogContent>\r\n                <DialogContentText className={classes.loadingContainer}>\r\n                    <CircularProgress color=\"secondary\" />\r\n                    <div className={classes.loading}>{text}</div>\r\n                </DialogContentText>\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    DialogContentText,\r\n    CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport {\r\n    toggleSnackbar,\r\n    setModalsLoading,\r\n    refreshFileList,\r\n} from \"../../actions/index\";\r\nimport PathSelector from \"../FileManager/PathSelector\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport API from \"../../middleware/Api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentFix: {\r\n        padding: \"10px 24px 0px 24px\",\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.light,\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n}));\r\n\r\nexport default function CopyDialog(props) {\r\n    const [selectedPath, setSelectedPath] = useState(\"\");\r\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const SetModalsLoading = useCallback(\r\n        (status) => {\r\n            dispatch(setModalsLoading(status));\r\n        },\r\n        [dispatch]\r\n    );\r\n    const RefreshFileList = useCallback(() => {\r\n        dispatch(refreshFileList());\r\n    }, [dispatch]);\r\n\r\n    const setMoveTarget = (folder) => {\r\n        const path =\r\n            folder.path === \"/\"\r\n                ? folder.path + folder.name\r\n                : folder.path + \"/\" + folder.name;\r\n        setSelectedPath(path);\r\n        setSelectedPathName(folder.name);\r\n    };\r\n\r\n    const submitMove = (e) => {\r\n        if (e != null) {\r\n            e.preventDefault();\r\n        }\r\n        SetModalsLoading(true);\r\n        const dirs = [],\r\n            items = [];\r\n        // eslint-disable-next-line\r\n\r\n        if (props.selected[0].type === \"dir\") {\r\n            dirs.push(props.selected[0].id);\r\n        } else {\r\n            items.push(props.selected[0].id);\r\n        }\r\n\r\n        API.post(\"/object/copy\", {\r\n            src_dir: props.selected[0].path,\r\n            src: {\r\n                dirs: dirs,\r\n                items: items,\r\n            },\r\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath,\r\n        })\r\n            .then(() => {\r\n                props.onClose();\r\n                RefreshFileList();\r\n                SetModalsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                SetModalsLoading(false);\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">复制到</DialogTitle>\r\n            <PathSelector\r\n                presentPath={props.presentPath}\r\n                selected={props.selected}\r\n                onSelect={setMoveTarget}\r\n            />\r\n\r\n            {selectedPath !== \"\" && (\r\n                <DialogContent className={classes.contentFix}>\r\n                    <DialogContentText>\r\n                        复制到 <strong>{selectedPathName}</strong>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            )}\r\n            <DialogActions>\r\n                <Button onClick={props.onClose}>取消</Button>\r\n                <div className={classes.wrapper}>\r\n                    <Button\r\n                        onClick={submitMove}\r\n                        color=\"primary\"\r\n                        disabled={selectedPath === \"\" || props.modalsLoading}\r\n                    >\r\n                        确定\r\n                        {props.modalsLoading && (\r\n                            <CircularProgress\r\n                                size={24}\r\n                                className={classes.buttonProgress}\r\n                            />\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport {\r\n    Checkbox,\r\n    FormControl,\r\n    makeStyles,\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { toggleSnackbar } from \"../../actions/index\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport API from \"../../middleware/Api\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport TimerIcon from \"@material-ui/icons/Timer\";\r\nimport CasinoIcon from \"@material-ui/icons/Casino\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport EyeIcon from \"@material-ui/icons/RemoveRedEye\";\r\nimport ToggleIcon from \"material-ui-toggle-icon\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    widthAnimation: {},\r\n    shareUrl: {\r\n        minWidth: \"400px\",\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.light,\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n    },\r\n    flexCenter: {\r\n        alignItems: \"center\",\r\n    },\r\n    noFlex: {\r\n        display: \"block\",\r\n    },\r\n    scoreCalc: {\r\n        marginTop: 10,\r\n    },\r\n}));\r\n\r\nconst ExpansionPanel = withStyles({\r\n    root: {\r\n        border: \"0px solid rgba(0, 0, 0, .125)\",\r\n        boxShadow: \"none\",\r\n        \"&:not(:last-child)\": {\r\n            borderBottom: 0,\r\n        },\r\n        \"&:before\": {\r\n            display: \"none\",\r\n        },\r\n        \"&$expanded\": {\r\n            margin: \"auto\",\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanel);\r\n\r\nconst ExpansionPanelSummary = withStyles({\r\n    root: {\r\n        padding: 0,\r\n        \"&$expanded\": {},\r\n    },\r\n    content: {\r\n        margin: 0,\r\n        display: \"initial\",\r\n        \"&$expanded\": {\r\n            margin: \"0 0\",\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanelSummary);\r\n\r\nconst ExpansionPanelDetails = withStyles((theme) => ({\r\n    root: {\r\n        padding: 24,\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n}))(MuiExpansionPanelDetails);\r\n\r\nexport default function CreatShare(props) {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [shareURL, setShareURL] = React.useState(\"\");\r\n    const [values, setValues] = React.useState({\r\n        password: \"\",\r\n        downloads: 1,\r\n        expires: 24 * 3600,\r\n        showPassword: false,\r\n    });\r\n    const [shareOption, setShareOption] = React.useState({\r\n        password: false,\r\n        expire: false,\r\n        preview: true,\r\n    });\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        // 输入密码\r\n        if (prop === \"password\") {\r\n            if (event.target.value === \"\") {\r\n                setShareOption({ ...shareOption, password: false });\r\n            } else {\r\n                setShareOption({ ...shareOption, password: true });\r\n            }\r\n        }\r\n\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const randomPassword = () => {\r\n        setShareOption({ ...shareOption, password: true });\r\n        setValues({\r\n            ...values,\r\n            password: Math.random().toString(36).substr(2).slice(2, 8),\r\n            showPassword: true,\r\n        });\r\n    };\r\n\r\n    const handleExpand = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    const handleCheck = (prop) => () => {\r\n        if (!shareOption[prop]) {\r\n            handleExpand(prop)(null, true);\r\n        }\r\n        if (prop === \"password\" && shareOption[prop]) {\r\n            setValues({\r\n                ...values,\r\n                password: \"\",\r\n            });\r\n        }\r\n        setShareOption({ ...shareOption, [prop]: !shareOption[prop] });\r\n    };\r\n\r\n    const onClose = () => {\r\n        props.onClose();\r\n        setTimeout(() => {\r\n            setShareURL(\"\");\r\n        }, 500);\r\n    };\r\n\r\n    const submitShare = (e) => {\r\n        e.preventDefault();\r\n        props.setModalsLoading(true);\r\n        const submitFormBody = {\r\n            id: props.selected[0].id,\r\n            is_dir: props.selected[0].type === \"dir\",\r\n            password: values.password,\r\n            downloads: shareOption.expire ? values.downloads : -1,\r\n            expire: values.expires,\r\n            preview: shareOption.preview,\r\n        };\r\n\r\n        API.post(\"/share\", submitFormBody)\r\n            .then((response) => {\r\n                setShareURL(response.data);\r\n                setValues({\r\n                    password: \"\",\r\n                    downloads: 1,\r\n                    expires: 24 * 3600,\r\n                    showPassword: false,\r\n                });\r\n                setShareOption({\r\n                    password: false,\r\n                    expire: false,\r\n                });\r\n                props.setModalsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                props.setModalsLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleFocus = (event) => event.target.select();\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n            className={classes.widthAnimation}\r\n            maxWidth=\"xs\"\r\n            fullWidth\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">创建分享链接</DialogTitle>\r\n\r\n            {shareURL === \"\" && (\r\n                <>\r\n                    <Divider />\r\n                    <List>\r\n                        <ExpansionPanel\r\n                            expanded={expanded === \"password\"}\r\n                            onChange={handleExpand(\"password\")}\r\n                        >\r\n                            <ExpansionPanelSummary\r\n                                aria-controls=\"panel1a-content\"\r\n                                id=\"panel1a-header\"\r\n                            >\r\n                                <ListItem button>\r\n                                    <ListItemIcon>\r\n                                        <LockIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"使用密码保护\" />\r\n                                    <ListItemSecondaryAction>\r\n                                        <Checkbox\r\n                                            checked={shareOption.password}\r\n                                            onChange={handleCheck(\"password\")}\r\n                                        />\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                <FormControl\r\n                                    variant=\"outlined\"\r\n                                    color=\"secondary\"\r\n                                    fullWidth\r\n                                >\r\n                                    <InputLabel htmlFor=\"filled-adornment-password\">\r\n                                        分享密码\r\n                                    </InputLabel>\r\n                                    <OutlinedInput\r\n                                        fullWidth\r\n                                        id=\"outlined-adornment-password\"\r\n                                        type={\r\n                                            values.showPassword\r\n                                                ? \"text\"\r\n                                                : \"password\"\r\n                                        }\r\n                                        value={values.password}\r\n                                        onChange={handleChange(\"password\")}\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <Tooltip title=\"随机生成\">\r\n                                                    <IconButton\r\n                                                        aria-label=\"toggle password visibility\"\r\n                                                        onClick={randomPassword}\r\n                                                        edge=\"end\"\r\n                                                    >\r\n                                                        <CasinoIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={\r\n                                                        handleClickShowPassword\r\n                                                    }\r\n                                                    onMouseDown={\r\n                                                        handleMouseDownPassword\r\n                                                    }\r\n                                                    edge=\"end\"\r\n                                                >\r\n                                                    <ToggleIcon\r\n                                                        on={values.showPassword}\r\n                                                        onIcon={<Visibility />}\r\n                                                        offIcon={\r\n                                                            <VisibilityOff />\r\n                                                        }\r\n                                                    />\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                        labelWidth={70}\r\n                                    />\r\n                                </FormControl>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                        <ExpansionPanel\r\n                            expanded={expanded === \"expire\"}\r\n                            onChange={handleExpand(\"expire\")}\r\n                        >\r\n                            <ExpansionPanelSummary\r\n                                aria-controls=\"panel1a-content\"\r\n                                id=\"panel1a-header\"\r\n                            >\r\n                                <ListItem button>\r\n                                    <ListItemIcon>\r\n                                        <TimerIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"自动过期\" />\r\n                                    <ListItemSecondaryAction>\r\n                                        <Checkbox\r\n                                            checked={shareOption.expire}\r\n                                            onChange={handleCheck(\"expire\")}\r\n                                        />\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails\r\n                                className={classes.flexCenter}\r\n                            >\r\n                                <FormControl\r\n                                    style={{\r\n                                        marginRight: 10,\r\n                                    }}\r\n                                >\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        value={values.downloads}\r\n                                        onChange={handleChange(\"downloads\")}\r\n                                    >\r\n                                        <MenuItem value={1}>1 次下载</MenuItem>\r\n                                        <MenuItem value={2}>2 次下载</MenuItem>\r\n                                        <MenuItem value={3}>3 次下载</MenuItem>\r\n                                        <MenuItem value={4}>4 次下载</MenuItem>\r\n                                        <MenuItem value={5}>5 次下载</MenuItem>\r\n                                        <MenuItem value={20}>\r\n                                            20 次下载\r\n                                        </MenuItem>\r\n                                        <MenuItem value={50}>\r\n                                            50 次下载\r\n                                        </MenuItem>\r\n                                        <MenuItem value={100}>\r\n                                            100 次下载\r\n                                        </MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <Typography>或者</Typography>\r\n                                <FormControl\r\n                                    style={{\r\n                                        marginRight: 10,\r\n                                        marginLeft: 10,\r\n                                    }}\r\n                                >\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-label\"\r\n                                        id=\"demo-simple-select\"\r\n                                        value={values.expires}\r\n                                        onChange={handleChange(\"expires\")}\r\n                                    >\r\n                                        <MenuItem value={300}>5 分钟</MenuItem>\r\n                                        <MenuItem value={3600}>1 小时</MenuItem>\r\n                                        <MenuItem value={24 * 3600}>\r\n                                            1 天\r\n                                        </MenuItem>\r\n                                        <MenuItem value={7 * 24 * 3600}>\r\n                                            7 天\r\n                                        </MenuItem>\r\n                                        <MenuItem value={30 * 24 * 3600}>\r\n                                            30 天\r\n                                        </MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <Typography>后过期</Typography>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                        <ExpansionPanel\r\n                            expanded={expanded === \"preview\"}\r\n                            onChange={handleExpand(\"preview\")}\r\n                        >\r\n                            <ExpansionPanelSummary\r\n                                aria-controls=\"panel1a-content\"\r\n                                id=\"panel1a-header\"\r\n                            >\r\n                                <ListItem button>\r\n                                    <ListItemIcon>\r\n                                        <LockIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"允许预览\" />\r\n                                    <ListItemSecondaryAction>\r\n                                        <Checkbox\r\n                                            checked={shareOption.preview}\r\n                                            onChange={handleCheck(\"preview\")}\r\n                                        />\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                <Typography>\r\n                                    是否允许在分享页面预览文件内容\r\n                                </Typography>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n                    </List>\r\n                    <Divider />\r\n                </>\r\n            )}\r\n            {shareURL !== \"\" && (\r\n                <DialogContent>\r\n                    <TextField\r\n                        onFocus={handleFocus}\r\n                        autoFocus\r\n                        inputProps={{ readonly: true }}\r\n                        label=\"分享链接\"\r\n                        value={shareURL}\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n            )}\r\n\r\n            <DialogActions>\r\n                <Button onClick={onClose}>关闭</Button>\r\n\r\n                {shareURL === \"\" && (\r\n                    <div className={classes.wrapper}>\r\n                        <Button\r\n                            onClick={submitShare}\r\n                            color=\"secondary\"\r\n                            disabled={props.modalsLoading}\r\n                        >\r\n                            创建分享链接\r\n                            {props.modalsLoading && (\r\n                                <CircularProgress\r\n                                    size={24}\r\n                                    className={classes.buttonProgress}\r\n                                />\r\n                            )}\r\n                        </Button>\r\n                    </div>\r\n                )}\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    DialogContentText,\r\n    CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { toggleSnackbar, setModalsLoading } from \"../../actions/index\";\r\nimport PathSelector from \"../FileManager/PathSelector\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport API from \"../../middleware/Api\";\r\nimport { filePath } from \"../../utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentFix: {\r\n        padding: \"10px 24px 0px 24px\",\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.light,\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n}));\r\n\r\nexport default function DecompressDialog(props) {\r\n    const [selectedPath, setSelectedPath] = useState(\"\");\r\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const SetModalsLoading = useCallback(\r\n        (status) => {\r\n            dispatch(setModalsLoading(status));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const setMoveTarget = (folder) => {\r\n        const path =\r\n            folder.path === \"/\"\r\n                ? folder.path + folder.name\r\n                : folder.path + \"/\" + folder.name;\r\n        setSelectedPath(path);\r\n        setSelectedPathName(folder.name);\r\n    };\r\n\r\n    const submitMove = (e) => {\r\n        if (e != null) {\r\n            e.preventDefault();\r\n        }\r\n        SetModalsLoading(true);\r\n        API.post(\"/file/decompress\", {\r\n            src: filePath(props.selected[0]),\r\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath,\r\n        })\r\n            .then(() => {\r\n                props.onClose();\r\n                ToggleSnackbar(\"top\", \"right\", \"解压缩任务已创建\", \"success\");\r\n                SetModalsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                SetModalsLoading(false);\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">解压送至</DialogTitle>\r\n            <PathSelector\r\n                presentPath={props.presentPath}\r\n                selected={props.selected}\r\n                onSelect={setMoveTarget}\r\n            />\r\n\r\n            {selectedPath !== \"\" && (\r\n                <DialogContent className={classes.contentFix}>\r\n                    <DialogContentText>\r\n                        解压送至 <strong>{selectedPathName}</strong>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            )}\r\n            <DialogActions>\r\n                <Button onClick={props.onClose}>取消</Button>\r\n                <div className={classes.wrapper}>\r\n                    <Button\r\n                        onClick={submitMove}\r\n                        color=\"primary\"\r\n                        disabled={selectedPath === \"\" || props.modalsLoading}\r\n                    >\r\n                        确定\r\n                        {props.modalsLoading && (\r\n                            <CircularProgress\r\n                                size={24}\r\n                                className={classes.buttonProgress}\r\n                            />\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    DialogContentText,\r\n    CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { toggleSnackbar, setModalsLoading } from \"../../actions/index\";\r\nimport PathSelector from \"../FileManager/PathSelector\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport API from \"../../middleware/Api\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentFix: {\r\n        padding: \"10px 24px 0px 24px\",\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.light,\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n}));\r\n\r\nexport default function CompressDialog(props) {\r\n    const [selectedPath, setSelectedPath] = useState(\"\");\r\n    const [fileName, setFileName] = useState(\"\");\r\n    // eslint-disable-next-line\r\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const SetModalsLoading = useCallback(\r\n        (status) => {\r\n            dispatch(setModalsLoading(status));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const setMoveTarget = (folder) => {\r\n        const path =\r\n            folder.path === \"/\"\r\n                ? folder.path + folder.name\r\n                : folder.path + \"/\" + folder.name;\r\n        setSelectedPath(path);\r\n        setSelectedPathName(folder.name);\r\n    };\r\n\r\n    const submitMove = (e) => {\r\n        if (e != null) {\r\n            e.preventDefault();\r\n        }\r\n        SetModalsLoading(true);\r\n\r\n        const dirs = [],\r\n            items = [];\r\n        // eslint-disable-next-line\r\n        props.selected.map((value) => {\r\n            if (value.type === \"dir\") {\r\n                dirs.push(value.id);\r\n            } else {\r\n                items.push(value.id);\r\n            }\r\n        });\r\n\r\n        API.post(\"/file/compress\", {\r\n            src: {\r\n                dirs: dirs,\r\n                items: items,\r\n            },\r\n            name: fileName,\r\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath,\r\n        })\r\n            .then(() => {\r\n                props.onClose();\r\n                ToggleSnackbar(\"top\", \"right\", \"压缩任务已创建\", \"success\");\r\n                SetModalsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                SetModalsLoading(false);\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">存放到</DialogTitle>\r\n            <PathSelector\r\n                presentPath={props.presentPath}\r\n                selected={props.selected}\r\n                onSelect={setMoveTarget}\r\n            />\r\n\r\n            {selectedPath !== \"\" && (\r\n                <DialogContent className={classes.contentFix}>\r\n                    <DialogContentText>\r\n                        <TextField\r\n                            onChange={(e) => setFileName(e.target.value)}\r\n                            value={fileName}\r\n                            fullWidth\r\n                            autoFocus\r\n                            id=\"standard-basic\"\r\n                            label=\"压缩文件名\"\r\n                        />\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n            )}\r\n            <DialogActions>\r\n                <Button onClick={props.onClose}>取消</Button>\r\n                <div className={classes.wrapper}>\r\n                    <Button\r\n                        onClick={submitMove}\r\n                        color=\"primary\"\r\n                        disabled={\r\n                            selectedPath === \"\" ||\r\n                            fileName === \"\" ||\r\n                            props.modalsLoading\r\n                        }\r\n                    >\r\n                        确定\r\n                        {props.modalsLoading && (\r\n                            <CircularProgress\r\n                                size={24}\r\n                                className={classes.buttonProgress}\r\n                            />\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    closeAllModals,\r\n    toggleSnackbar,\r\n    setModalsLoading,\r\n    refreshFileList,\r\n    refreshStorage,\r\n    openLoadingDialog,\r\n} from \"../../actions/index\";\r\nimport PathSelector from \"./PathSelector\";\r\nimport API, { baseURL } from \"../../middleware/Api\";\r\nimport {\r\n    withStyles,\r\n    Button,\r\n    TextField,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    DialogContentText,\r\n    CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport Loading from \"../Modals/Loading\";\r\nimport CopyDialog from \"../Modals/Copy\";\r\nimport CreatShare from \"../Modals/CreateShare\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport DecompressDialog from \"../Modals/Decompress\";\r\nimport CompressDialog from \"../Modals/Compress\";\r\n\r\nconst styles = (theme) => ({\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.light,\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    contentFix: {\r\n        padding: \"10px 24px 0px 24px\",\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        path: state.navigator.path,\r\n        selected: state.explorer.selected,\r\n        modalsStatus: state.viewUpdate.modals,\r\n        modalsLoading: state.viewUpdate.modalsLoading,\r\n        dirList: state.explorer.dirList,\r\n        fileList: state.explorer.fileList,\r\n        dndSignale: state.explorer.dndSignal,\r\n        dndTarget: state.explorer.dndTarget,\r\n        dndSource: state.explorer.dndSource,\r\n        loading: state.viewUpdate.modals.loading,\r\n        loadingText: state.viewUpdate.modals.loadingText,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        closeAllModals: () => {\r\n            dispatch(closeAllModals());\r\n        },\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        setModalsLoading: (status) => {\r\n            dispatch(setModalsLoading(status));\r\n        },\r\n        refreshFileList: () => {\r\n            dispatch(refreshFileList());\r\n        },\r\n        refreshStorage: () => {\r\n            dispatch(refreshStorage());\r\n        },\r\n        openLoadingDialog: (text) => {\r\n            dispatch(openLoadingDialog(text));\r\n        },\r\n    };\r\n};\r\n\r\nclass ModalsCompoment extends Component {\r\n    state = {\r\n        newFolderName: \"\",\r\n        newFileName: \"\",\r\n        newName: \"\",\r\n        selectedPath: \"\",\r\n        selectedPathName: \"\",\r\n        secretShare: false,\r\n        sharePwd: \"\",\r\n        shareUrl: \"\",\r\n        downloadURL: \"\",\r\n        remoteDownloadPathSelect: false,\r\n        source: \"\",\r\n        purchaseCallback: null,\r\n    };\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value,\r\n        });\r\n    };\r\n\r\n    newNameSuffix = \"\";\r\n    downloaded = false;\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (this.props.dndSignale !== nextProps.dndSignale) {\r\n            this.dragMove(nextProps.dndSource, nextProps.dndTarget);\r\n            return;\r\n        }\r\n        if (this.props.loading !== nextProps.loading) {\r\n            // 打包下载\r\n            if (nextProps.loading === true) {\r\n                if (nextProps.loadingText === \"打包中...\") {\r\n                    if (\r\n                        pathHelper.isSharePage(this.props.location.pathname) &&\r\n                        this.props.share &&\r\n                        this.props.share.score > 0\r\n                    ) {\r\n                        this.scoreHandler(this.archiveDownload);\r\n                        return;\r\n                    }\r\n                    this.archiveDownload();\r\n                } else if (nextProps.loadingText === \"获取下载地址...\") {\r\n                    if (\r\n                        pathHelper.isSharePage(this.props.location.pathname) &&\r\n                        this.props.share &&\r\n                        this.props.share.score > 0\r\n                    ) {\r\n                        this.scoreHandler(this.Download);\r\n                        return;\r\n                    }\r\n                    this.Download();\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (this.props.modalsStatus.rename !== nextProps.modalsStatus.rename) {\r\n            const name = nextProps.selected[0].name;\r\n            this.setState({\r\n                newName: name,\r\n            });\r\n            return;\r\n        }\r\n        if (\r\n            this.props.modalsStatus.getSource !==\r\n                nextProps.modalsStatus.getSource &&\r\n            nextProps.modalsStatus.getSource === true\r\n        ) {\r\n            API.get(\"/file/source/\" + this.props.selected[0].id)\r\n                .then((response) => {\r\n                    this.setState({\r\n                        source: response.data.url,\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        error.message,\r\n                        \"error\"\r\n                    );\r\n                });\r\n        }\r\n    };\r\n\r\n    scoreHandler = (callback) => {\r\n        callback();\r\n    };\r\n\r\n    Download = () => {\r\n        let reqURL = \"\";\r\n        if (this.props.selected[0].key) {\r\n            const downloadPath =\r\n                this.props.selected[0].path === \"/\"\r\n                    ? this.props.selected[0].path + this.props.selected[0].name\r\n                    : this.props.selected[0].path +\r\n                      \"/\" +\r\n                      this.props.selected[0].name;\r\n            reqURL =\r\n                \"/share/download/\" +\r\n                this.props.selected[0].key +\r\n                \"?path=\" +\r\n                encodeURIComponent(downloadPath);\r\n        } else {\r\n            reqURL = \"/file/download/\" + this.props.selected[0].id;\r\n        }\r\n\r\n        API.put(reqURL)\r\n            .then((response) => {\r\n                window.location.assign(response.data);\r\n                this.onClose();\r\n                this.downloaded = true;\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.onClose();\r\n            });\r\n    };\r\n\r\n    archiveDownload = () => {\r\n        const dirs = [],\r\n            items = [];\r\n        this.props.selected.map((value) => {\r\n            if (value.type === \"dir\") {\r\n                dirs.push(value.id);\r\n            } else {\r\n                items.push(value.id);\r\n            }\r\n            return null;\r\n        });\r\n\r\n        let reqURL = \"/file/archive\";\r\n        const postBody = {\r\n            items: items,\r\n            dirs: dirs,\r\n        };\r\n        if (pathHelper.isSharePage(this.props.location.pathname)) {\r\n            reqURL = \"/share/archive/\" + window.shareInfo.key;\r\n            postBody[\"path\"] = this.props.selected[0].path;\r\n        }\r\n\r\n        API.post(reqURL, postBody)\r\n            .then((response) => {\r\n                if (response.rawData.code === 0) {\r\n                    this.onClose();\r\n                    window.location.assign(response.data);\r\n                } else {\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        response.rawData.msg,\r\n                        \"warning\"\r\n                    );\r\n                }\r\n                this.onClose();\r\n                this.props.refreshStorage();\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.onClose();\r\n            });\r\n    };\r\n\r\n    submitRemove = (e) => {\r\n        e.preventDefault();\r\n        this.props.setModalsLoading(true);\r\n        const dirs = [],\r\n            items = [];\r\n        // eslint-disable-next-line\r\n        this.props.selected.map((value) => {\r\n            if (value.type === \"dir\") {\r\n                dirs.push(value.id);\r\n            } else {\r\n                items.push(value.id);\r\n            }\r\n        });\r\n        API.delete(\"/object\", {\r\n            data: {\r\n                items: items,\r\n                dirs: dirs,\r\n            },\r\n        })\r\n            .then((response) => {\r\n                if (response.rawData.code === 0) {\r\n                    this.onClose();\r\n                    setTimeout(this.props.refreshFileList, 500);\r\n                } else {\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        response.rawData.msg,\r\n                        \"warning\"\r\n                    );\r\n                }\r\n                this.props.setModalsLoading(false);\r\n                this.props.refreshStorage();\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.props.setModalsLoading(false);\r\n            });\r\n    };\r\n\r\n    submitMove = (e) => {\r\n        if (e != null) {\r\n            e.preventDefault();\r\n        }\r\n        this.props.setModalsLoading(true);\r\n        const dirs = [],\r\n            items = [];\r\n        // eslint-disable-next-line\r\n        this.props.selected.map((value) => {\r\n            if (value.type === \"dir\") {\r\n                dirs.push(value.id);\r\n            } else {\r\n                items.push(value.id);\r\n            }\r\n        });\r\n        API.patch(\"/object\", {\r\n            action: \"move\",\r\n            src_dir: this.props.selected[0].path,\r\n            src: {\r\n                dirs: dirs,\r\n                items: items,\r\n            },\r\n            dst: this.DragSelectedPath\r\n                ? this.DragSelectedPath\r\n                : this.state.selectedPath === \"//\"\r\n                ? \"/\"\r\n                : this.state.selectedPath,\r\n        })\r\n            .then(() => {\r\n                this.onClose();\r\n                this.props.refreshFileList();\r\n                this.props.setModalsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.props.setModalsLoading(false);\r\n            })\r\n            .then(() => {\r\n                this.props.closeAllModals();\r\n            });\r\n    };\r\n\r\n    dragMove = (source, target) => {\r\n        if (this.props.selected.length === 0) {\r\n            this.props.selected[0] = source;\r\n        }\r\n        let doMove = true;\r\n\r\n        // eslint-disable-next-line\r\n        this.props.selected.map((value) => {\r\n            // 根据ID过滤\r\n            if (value.id === target.id && value.type === target.type) {\r\n                doMove = false;\r\n                // eslint-disable-next-line\r\n                return;\r\n            }\r\n            // 根据路径过滤\r\n            if (\r\n                value.path ===\r\n                target.path + (target.path === \"/\" ? \"\" : \"/\") + target.name\r\n            ) {\r\n                doMove = false;\r\n                // eslint-disable-next-line\r\n                return;\r\n            }\r\n        });\r\n        if (doMove) {\r\n            this.DragSelectedPath =\r\n                target.path === \"/\"\r\n                    ? target.path + target.name\r\n                    : target.path + \"/\" + target.name;\r\n            this.props.openLoadingDialog(\"处理中...\");\r\n            this.submitMove();\r\n        }\r\n    };\r\n\r\n    submitRename = (e) => {\r\n        e.preventDefault();\r\n        this.props.setModalsLoading(true);\r\n        const newName = this.state.newName;\r\n\r\n        const src = {\r\n            dirs: [],\r\n            items: [],\r\n        };\r\n\r\n        if (this.props.selected[0].type === \"dir\") {\r\n            src.dirs[0] = this.props.selected[0].id;\r\n        } else {\r\n            src.items[0] = this.props.selected[0].id;\r\n        }\r\n\r\n        // 检查重名\r\n        if (\r\n            this.props.dirList.findIndex((value) => {\r\n                return value.name === newName;\r\n            }) !== -1 ||\r\n            this.props.fileList.findIndex((value) => {\r\n                return value.name === newName;\r\n            }) !== -1\r\n        ) {\r\n            this.props.toggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                \"新名称与已有文件重复\",\r\n                \"warning\"\r\n            );\r\n            this.props.setModalsLoading(false);\r\n        } else {\r\n            API.post(\"/object/rename\", {\r\n                action: \"rename\",\r\n                src: src,\r\n                new_name: newName,\r\n            })\r\n                .then(() => {\r\n                    this.onClose();\r\n                    this.props.refreshFileList();\r\n                    this.props.setModalsLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        error.message,\r\n                        \"error\"\r\n                    );\r\n                    this.props.setModalsLoading(false);\r\n                });\r\n        }\r\n    };\r\n\r\n    submitCreateNewFolder = (e) => {\r\n        e.preventDefault();\r\n        this.props.setModalsLoading(true);\r\n        if (\r\n            this.props.dirList.findIndex((value) => {\r\n                return value.name === this.state.newFolderName;\r\n            }) !== -1\r\n        ) {\r\n            this.props.toggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                \"文件夹名称重复\",\r\n                \"warning\"\r\n            );\r\n            this.props.setModalsLoading(false);\r\n        } else {\r\n            API.put(\"/directory\", {\r\n                path:\r\n                    (this.props.path === \"/\" ? \"\" : this.props.path) +\r\n                    \"/\" +\r\n                    this.state.newFolderName,\r\n            })\r\n                .then(() => {\r\n                    this.onClose();\r\n                    this.props.refreshFileList();\r\n                    this.props.setModalsLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    this.props.setModalsLoading(false);\r\n\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        error.message,\r\n                        \"error\"\r\n                    );\r\n                });\r\n        }\r\n        //this.props.toggleSnackbar();\r\n    };\r\n\r\n    submitCreateNewFile = (e) => {\r\n        e.preventDefault();\r\n        this.props.setModalsLoading(true);\r\n        if (\r\n            this.props.dirList.findIndex((value) => {\r\n                return value.name === this.state.newFileName;\r\n            }) !== -1\r\n        ) {\r\n            this.props.toggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                \"文件名称重复\",\r\n                \"warning\"\r\n            );\r\n            this.props.setModalsLoading(false);\r\n        } else {\r\n            API.post(\"/file/create\", {\r\n                path:\r\n                    (this.props.path === \"/\" ? \"\" : this.props.path) +\r\n                    \"/\" +\r\n                    this.state.newFileName,\r\n            })\r\n                .then(() => {\r\n                    this.onClose();\r\n                    this.props.refreshFileList();\r\n                    this.props.setModalsLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    this.props.setModalsLoading(false);\r\n\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        error.message,\r\n                        \"error\"\r\n                    );\r\n                });\r\n        }\r\n        //this.props.toggleSnackbar();\r\n    };\r\n\r\n    submitTorrentDownload = (e) => {\r\n        e.preventDefault();\r\n        this.props.setModalsLoading(true);\r\n        API.post(\"/aria2/torrent/\" + this.props.selected[0].id, {\r\n            dst:\r\n                this.state.selectedPath === \"//\"\r\n                    ? \"/\"\r\n                    : this.state.selectedPath,\r\n        })\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"任务已创建\",\r\n                    \"success\"\r\n                );\r\n                this.onClose();\r\n                this.props.setModalsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.props.setModalsLoading(false);\r\n            });\r\n    };\r\n\r\n    submitDownload = (e) => {\r\n        e.preventDefault();\r\n        this.props.setModalsLoading(true);\r\n        API.post(\"/aria2/url\", {\r\n            url: this.state.downloadURL,\r\n            dst:\r\n                this.state.selectedPath === \"//\"\r\n                    ? \"/\"\r\n                    : this.state.selectedPath,\r\n        })\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"任务已创建\",\r\n                    \"success\"\r\n                );\r\n                this.onClose();\r\n                this.props.setModalsLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.props.setModalsLoading(false);\r\n            });\r\n    };\r\n\r\n    setMoveTarget = (folder) => {\r\n        const path =\r\n            folder.path === \"/\"\r\n                ? folder.path + folder.name\r\n                : folder.path + \"/\" + folder.name;\r\n        this.setState({\r\n            selectedPath: path,\r\n            selectedPathName: folder.name,\r\n        });\r\n    };\r\n\r\n    remoteDownloadNext = () => {\r\n        this.props.closeAllModals();\r\n        this.setState({\r\n            remoteDownloadPathSelect: true,\r\n        });\r\n    };\r\n\r\n    onClose = () => {\r\n        this.setState({\r\n            newFolderName: \"\",\r\n            newFileName: \"\",\r\n            newName: \"\",\r\n            selectedPath: \"\",\r\n            selectedPathName: \"\",\r\n            secretShare: false,\r\n            sharePwd: \"\",\r\n            downloadURL: \"\",\r\n            shareUrl: \"\",\r\n            remoteDownloadPathSelect: false,\r\n            source: \"\",\r\n        });\r\n        this.newNameSuffix = \"\";\r\n        this.props.closeAllModals();\r\n    };\r\n\r\n    handleChange = (name) => (event) => {\r\n        this.setState({ [name]: event.target.checked });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Loading />\r\n                <Dialog\r\n                    open={this.props.modalsStatus.getSource}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        获取文件外链\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <form onSubmit={this.submitCreateNewFolder}>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"newFolderName\"\r\n                                label=\"外链地址\"\r\n                                type=\"text\"\r\n                                value={this.state.source}\r\n                                fullWidth\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>关闭</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.props.modalsStatus.createNewFolder}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">新建文件夹</DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <form onSubmit={this.submitCreateNewFolder}>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"newFolderName\"\r\n                                label=\"文件夹名称\"\r\n                                type=\"text\"\r\n                                value={this.state.newFolderName}\r\n                                onChange={(e) => this.handleInputChange(e)}\r\n                                fullWidth\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>取消</Button>\r\n                        <div className={classes.wrapper}>\r\n                            <Button\r\n                                onClick={this.submitCreateNewFolder}\r\n                                color=\"primary\"\r\n                                disabled={\r\n                                    this.state.newFolderName === \"\" ||\r\n                                    this.props.modalsLoading\r\n                                }\r\n                            >\r\n                                创建\r\n                                {this.props.modalsLoading && (\r\n                                    <CircularProgress\r\n                                        size={24}\r\n                                        className={classes.buttonProgress}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    open={this.props.modalsStatus.createNewFile}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">新建文件</DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <form onSubmit={this.submitCreateNewFile}>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"newFileName\"\r\n                                label=\"文件名称\"\r\n                                type=\"text\"\r\n                                value={this.state.newFileName}\r\n                                onChange={(e) => this.handleInputChange(e)}\r\n                                fullWidth\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>取消</Button>\r\n                        <div className={classes.wrapper}>\r\n                            <Button\r\n                                onClick={this.submitCreateNewFile}\r\n                                color=\"primary\"\r\n                                disabled={\r\n                                    this.state.newFileName === \"\" ||\r\n                                    this.props.modalsLoading\r\n                                }\r\n                            >\r\n                                创建\r\n                                {this.props.modalsLoading && (\r\n                                    <CircularProgress\r\n                                        size={24}\r\n                                        className={classes.buttonProgress}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <Dialog\r\n                    open={this.props.modalsStatus.rename}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                    maxWidth=\"sm\"\r\n                    fullWidth={true}\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">重命名</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            输入{\" \"}\r\n                            <strong>\r\n                                {this.props.selected.length === 1\r\n                                    ? this.props.selected[0].name\r\n                                    : \"\"}\r\n                            </strong>{\" \"}\r\n                            的新名称：\r\n                        </DialogContentText>\r\n                        <form onSubmit={this.submitRename}>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"newName\"\r\n                                label=\"新名称\"\r\n                                type=\"text\"\r\n                                value={this.state.newName}\r\n                                onChange={(e) => this.handleInputChange(e)}\r\n                                fullWidth\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>取消</Button>\r\n                        <div className={classes.wrapper}>\r\n                            <Button\r\n                                onClick={this.submitRename}\r\n                                color=\"primary\"\r\n                                disabled={\r\n                                    this.state.newName === \"\" ||\r\n                                    this.props.modalsLoading\r\n                                }\r\n                            >\r\n                                确定\r\n                                {this.props.modalsLoading && (\r\n                                    <CircularProgress\r\n                                        size={24}\r\n                                        className={classes.buttonProgress}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <CopyDialog\r\n                    open={this.props.modalsStatus.copy}\r\n                    onClose={this.onClose}\r\n                    presentPath={this.props.path}\r\n                    selected={this.props.selected}\r\n                    modalsLoading={this.props.modalsLoading}\r\n                />\r\n\r\n                <Dialog\r\n                    open={this.props.modalsStatus.move}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">移动至</DialogTitle>\r\n                    <PathSelector\r\n                        presentPath={this.props.path}\r\n                        selected={this.props.selected}\r\n                        onSelect={this.setMoveTarget}\r\n                    />\r\n\r\n                    {this.state.selectedPath !== \"\" && (\r\n                        <DialogContent className={classes.contentFix}>\r\n                            <DialogContentText>\r\n                                移动至{\" \"}\r\n                                <strong>{this.state.selectedPathName}</strong>\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                    )}\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>取消</Button>\r\n                        <div className={classes.wrapper}>\r\n                            <Button\r\n                                onClick={this.submitMove}\r\n                                color=\"primary\"\r\n                                disabled={\r\n                                    this.state.selectedPath === \"\" ||\r\n                                    this.props.modalsLoading\r\n                                }\r\n                            >\r\n                                确定\r\n                                {this.props.modalsLoading && (\r\n                                    <CircularProgress\r\n                                        size={24}\r\n                                        className={classes.buttonProgress}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.props.modalsStatus.remove}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">删除对象</DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            确定要删除\r\n                            {this.props.selected.length === 1 && (\r\n                                <strong> {this.props.selected[0].name} </strong>\r\n                            )}\r\n                            {this.props.selected.length > 1 && (\r\n                                <span>\r\n                                    这{this.props.selected.length}个对象\r\n                                </span>\r\n                            )}\r\n                            吗？\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>取消</Button>\r\n                        <div className={classes.wrapper}>\r\n                            <Button\r\n                                onClick={this.submitRemove}\r\n                                color=\"primary\"\r\n                                disabled={this.props.modalsLoading}\r\n                            >\r\n                                确定\r\n                                {this.props.modalsLoading && (\r\n                                    <CircularProgress\r\n                                        size={24}\r\n                                        className={classes.buttonProgress}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <CreatShare\r\n                    open={this.props.modalsStatus.share}\r\n                    onClose={this.onClose}\r\n                    modalsLoading={this.props.modalsLoading}\r\n                    setModalsLoading={this.props.setModalsLoading}\r\n                    selected={this.props.selected}\r\n                />\r\n\r\n                <Dialog\r\n                    open={this.props.modalsStatus.music}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">音频播放</DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            {this.props.selected.length !== 0 && (\r\n                                <audio\r\n                                    controls\r\n                                    src={\r\n                                        pathHelper.isSharePage(\r\n                                            this.props.location.pathname\r\n                                        )\r\n                                            ? baseURL +\r\n                                              \"/share/preview/\" +\r\n                                              this.props.selected[0].key +\r\n                                              (this.props.selected[0].key\r\n                                                  ? \"?path=\" +\r\n                                                    encodeURIComponent(\r\n                                                        this.props.selected[0]\r\n                                                            .path === \"/\"\r\n                                                            ? this.props\r\n                                                                  .selected[0]\r\n                                                                  .path +\r\n                                                                  this.props\r\n                                                                      .selected[0]\r\n                                                                      .name\r\n                                                            : this.props\r\n                                                                  .selected[0]\r\n                                                                  .path +\r\n                                                                  \"/\" +\r\n                                                                  this.props\r\n                                                                      .selected[0]\r\n                                                                      .name\r\n                                                    )\r\n                                                  : \"\")\r\n                                            : baseURL +\r\n                                              \"/file/preview/\" +\r\n                                              this.props.selected[0].id\r\n                                    }\r\n                                />\r\n                            )}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>关闭</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.props.modalsStatus.remoteDownload}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                    fullWidth\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        新建离线下载任务\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            <TextField\r\n                                label=\"文件地址\"\r\n                                autoFocus\r\n                                fullWidth\r\n                                id=\"downloadURL\"\r\n                                onChange={this.handleInputChange}\r\n                                placeholder=\"输入文件下载地址，支持 HTTP(s)/FTP/磁力链\"\r\n                            />\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>关闭</Button>\r\n                        <Button\r\n                            onClick={this.remoteDownloadNext}\r\n                            color=\"primary\"\r\n                            disabled={\r\n                                this.props.modalsLoading ||\r\n                                this.state.downloadURL === \"\"\r\n                            }\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.state.remoteDownloadPathSelect}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        选择存储位置\r\n                    </DialogTitle>\r\n                    <PathSelector\r\n                        presentPath={this.props.path}\r\n                        selected={this.props.selected}\r\n                        onSelect={this.setMoveTarget}\r\n                    />\r\n\r\n                    {this.state.selectedPath !== \"\" && (\r\n                        <DialogContent className={classes.contentFix}>\r\n                            <DialogContentText>\r\n                                下载至{\" \"}\r\n                                <strong>{this.state.selectedPathName}</strong>\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                    )}\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>取消</Button>\r\n                        <div className={classes.wrapper}>\r\n                            <Button\r\n                                onClick={this.submitDownload}\r\n                                color=\"primary\"\r\n                                disabled={\r\n                                    this.state.selectedPath === \"\" ||\r\n                                    this.props.modalsLoading\r\n                                }\r\n                            >\r\n                                创建任务\r\n                                {this.props.modalsLoading && (\r\n                                    <CircularProgress\r\n                                        size={24}\r\n                                        className={classes.buttonProgress}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.props.modalsStatus.torrentDownload}\r\n                    onClose={this.onClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        选择存储位置\r\n                    </DialogTitle>\r\n                    <PathSelector\r\n                        presentPath={this.props.path}\r\n                        selected={this.props.selected}\r\n                        onSelect={this.setMoveTarget}\r\n                    />\r\n\r\n                    {this.state.selectedPath !== \"\" && (\r\n                        <DialogContent className={classes.contentFix}>\r\n                            <DialogContentText>\r\n                                下载至{\" \"}\r\n                                <strong>{this.state.selectedPathName}</strong>\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                    )}\r\n                    <DialogActions>\r\n                        <Button onClick={this.onClose}>取消</Button>\r\n                        <div className={classes.wrapper}>\r\n                            <Button\r\n                                onClick={this.submitTorrentDownload}\r\n                                color=\"primary\"\r\n                                disabled={\r\n                                    this.state.selectedPath === \"\" ||\r\n                                    this.props.modalsLoading\r\n                                }\r\n                            >\r\n                                创建任务\r\n                                {this.props.modalsLoading && (\r\n                                    <CircularProgress\r\n                                        size={24}\r\n                                        className={classes.buttonProgress}\r\n                                    />\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <DecompressDialog\r\n                    open={this.props.modalsStatus.decompress}\r\n                    onClose={this.onClose}\r\n                    presentPath={this.props.path}\r\n                    selected={this.props.selected}\r\n                    modalsLoading={this.props.modalsLoading}\r\n                />\r\n                <CompressDialog\r\n                    open={this.props.modalsStatus.compress}\r\n                    onClose={this.onClose}\r\n                    presentPath={this.props.path}\r\n                    selected={this.props.selected}\r\n                    modalsLoading={this.props.modalsLoading}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nModalsCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst Modals = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(ModalsCompoment)));\r\n\r\nexport default Modals;\r\n","const Auth = {\r\n    isAuthenticated: false,\r\n    authenticate(cb: any) {\r\n        Auth.SetUser(cb);\r\n        Auth.isAuthenticated = true;\r\n    },\r\n    GetUser() {\r\n        return JSON.parse(localStorage.getItem(\"user\") || \"null\");\r\n    },\r\n    SetUser(newUser: any) {\r\n        localStorage.setItem(\"user\", JSON.stringify(newUser));\r\n    },\r\n    Check(): boolean {\r\n        if (Auth.isAuthenticated) {\r\n            return true;\r\n        }\r\n        if (localStorage.getItem(\"user\") !== null) {\r\n            return !Auth.GetUser().anonymous;\r\n        }\r\n        return false;\r\n    },\r\n    signout() {\r\n        Auth.isAuthenticated = false;\r\n        const oldUser = Auth.GetUser();\r\n        oldUser.id = 0;\r\n        localStorage.setItem(\"user\", JSON.stringify(oldUser));\r\n    },\r\n    SetPreference(key: string, value: any) {\r\n        let preference = JSON.parse(\r\n            localStorage.getItem(\"user_preference\") || \"{}\"\r\n        );\r\n        preference = preference == null ? {} : preference;\r\n        preference[key] = value;\r\n        localStorage.setItem(\"user_preference\", JSON.stringify(preference));\r\n    },\r\n    GetPreference(key: string): any | null {\r\n        const preference = JSON.parse(\r\n            localStorage.getItem(\"user_preference\") || \"{}\"\r\n        );\r\n        if (preference && preference[key]) {\r\n            return preference[key];\r\n        }\r\n        return null;\r\n    },\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\r\nimport API from \"../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\r\nimport Editor from \"for-editor\";\r\nimport SaveButton from \"../Dial/Save\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport TextLoading from \"../Placeholder/TextLoading\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"30px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: 50,\r\n    },\r\n    player: {\r\n        borderRadius: \"4px\",\r\n    },\r\n    root: {\r\n        backgroundColor: \"white\",\r\n        borderRadius: \"8px\",\r\n    },\r\n    \"@global\": {\r\n        \".for-toolbar\": {\r\n            overflowX: \"auto!important\",\r\n        },\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function TextViewer() {\r\n    const [content, setContent] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n    const math = useRouteMatch();\r\n    const $vm = React.createRef();\r\n    const location = useLocation();\r\n    const query = useQuery();\r\n    const { id } = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n    const SetSubTitle = useCallback(\r\n        (title) => dispatch(changeSubTitle(title)),\r\n        [dispatch]\r\n    );\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!pathHelper.isSharePage(location.pathname)) {\r\n            const path = query.get(\"p\").split(\"/\");\r\n            SetSubTitle(path[path.length - 1]);\r\n        } else {\r\n            SetSubTitle(query.get(\"name\"));\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [math.params[0], location]);\r\n\r\n    useEffect(() => {\r\n        let requestURL = \"/file/content/\" + query.get(\"id\");\r\n        if (pathHelper.isSharePage(location.pathname)) {\r\n            requestURL = \"/share/content/\" + id;\r\n            if (query.get(\"share_path\") !== \"\") {\r\n                requestURL +=\r\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\r\n            }\r\n        }\r\n\r\n        setLoading(true);\r\n        API.get(requestURL, { responseType: \"arraybuffer\" })\r\n            .then((response) => {\r\n                const buffer = new Buffer(response.rawData, \"binary\");\r\n                const textdata = buffer.toString(); // for string\r\n                setContent(textdata);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"无法读取文件内容，\" + error.message,\r\n                    \"error\"\r\n                );\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n        // eslint-disable-next-line\r\n    }, [math.params[0]]);\r\n\r\n    const toBase64 = (file) =>\r\n        new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n\r\n    const save = () => {\r\n        setStatus(\"loading\");\r\n        API.put(\"/file/update/\" + query.get(\"id\"), content)\r\n            .then(() => {\r\n                setStatus(\"success\");\r\n                setTimeout(() => setStatus(\"\"), 2000);\r\n            })\r\n            .catch((error) => {\r\n                setStatus(\"\");\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const addImg = async ($file) => {\r\n        $vm.current.$img2Url($file.name, await toBase64($file));\r\n        console.log($file);\r\n    };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.layout}>\r\n            <Paper className={classes.root} elevation={1}>\r\n                {loading && <TextLoading />}\r\n                {!loading && (\r\n                    <Editor\r\n                        ref={$vm}\r\n                        value={content}\r\n                        onSave={() => save()}\r\n                        addImg={($file) => addImg($file)}\r\n                        onChange={(value) => setContent(value)}\r\n                        toolbar={{\r\n                            h1: true, // h1\r\n                            h2: true, // h2\r\n                            h3: true, // h3\r\n                            h4: true, // h4\r\n                            img: true, // 图片\r\n                            link: true, // 链接\r\n                            code: true, // 代码块\r\n                            preview: true, // 预览\r\n                            expand: true, // 全屏\r\n                            /* v0.0.9 */\r\n                            undo: true, // 撤销\r\n                            redo: true, // 重做\r\n                            save: false, // 保存\r\n                            /* v0.2.3 */\r\n                            subfield: true, // 单双栏模式\r\n                        }}\r\n                    />\r\n                )}\r\n            </Paper>\r\n            {!pathHelper.isSharePage(location.pathname) && (\r\n                <SaveButton onClick={save} status={status} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\r\nimport { Paper, useTheme } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\r\nimport API from \"../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport SaveButton from \"../Dial/Save\";\r\nimport { codePreviewSuffix } from \"../../config\";\r\nimport TextLoading from \"../Placeholder/TextLoading\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nconst MonacoEditor = React.lazy(() =>\r\n    import(/* webpackChunkName: \"codeEditor\" */ \"react-monaco-editor\")\r\n);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"30px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: 50,\r\n    },\r\n    editor: {\r\n        borderRadius: \"4px\",\r\n    },\r\n    \"@global\": {\r\n        \".overflow-guard\": {\r\n            borderRadius: \"4px!important\",\r\n        },\r\n    },\r\n    formControl: {\r\n        margin: \"8px 16px 8px 16px\",\r\n    },\r\n    toobar: {\r\n        textAlign: \"right\",\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function CodeViewer() {\r\n    const [content, setContent] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n    const [suffix, setSuffix] = useState(\"javascript\");\r\n    const [wordWrap, setWordWrap] = useState(\"off\");\r\n\r\n    const math = useRouteMatch();\r\n    const location = useLocation();\r\n    const query = useQuery();\r\n    const { id } = useParams();\r\n    const theme = useTheme();\r\n\r\n    const dispatch = useDispatch();\r\n    const SetSubTitle = useCallback(\r\n        (title) => dispatch(changeSubTitle(title)),\r\n        [dispatch]\r\n    );\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!pathHelper.isSharePage(location.pathname)) {\r\n            const path = query.get(\"p\").split(\"/\");\r\n            const extension = query.get(\"p\").split(\".\");\r\n            setSuffix(codePreviewSuffix[extension.pop()]);\r\n            SetSubTitle(path[path.length - 1]);\r\n        } else {\r\n            const extension = query.get(\"name\").split(\".\");\r\n            setSuffix(codePreviewSuffix[extension.pop()]);\r\n            SetSubTitle(query.get(\"name\"));\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [math.params[0], location]);\r\n\r\n    useEffect(() => {\r\n        let requestURL = \"/file/content/\" + query.get(\"id\");\r\n        if (pathHelper.isSharePage(location.pathname)) {\r\n            requestURL = \"/share/content/\" + id;\r\n            if (query.get(\"share_path\") !== \"\") {\r\n                requestURL +=\r\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\r\n            }\r\n        }\r\n\r\n        setLoading(true);\r\n        API.get(requestURL, { responseType: \"arraybuffer\" })\r\n            .then((response) => {\r\n                const buffer = new Buffer(response.rawData, \"binary\");\r\n                const textdata = buffer.toString(); // for string\r\n                setContent(textdata);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"无法读取文件内容，\" + error.message,\r\n                    \"error\"\r\n                );\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n        // eslint-disable-next-line\r\n    }, [math.params[0]]);\r\n\r\n    const save = () => {\r\n        setStatus(\"loading\");\r\n        API.put(\"/file/update/\" + query.get(\"id\"), content)\r\n            .then(() => {\r\n                setStatus(\"success\");\r\n                setTimeout(() => setStatus(\"\"), 2000);\r\n            })\r\n            .catch((error) => {\r\n                setStatus(\"\");\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const isSharePage = pathHelper.isSharePage(location.pathname);\r\n    return (\r\n        <div className={classes.layout}>\r\n            <Paper className={classes.root} elevation={1}>\r\n                <div className={classes.toobar}>\r\n                    <FormControl className={classes.formControl}>\r\n                        <FormControlLabel control={\r\n                            <Switch\r\n                                onChange={(e) => setWordWrap(e.target.checked ? \"on\" : \"off\")}\r\n                            />\r\n                        } label=\"自动换行\" />\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={suffix}\r\n                            onChange={(e) => setSuffix(e.target.value)}\r\n                        >\r\n                            {Array.from(\r\n                                new Set(\r\n                                    Object.keys(codePreviewSuffix).map((k) => {\r\n                                        return codePreviewSuffix[k];\r\n                                    })\r\n                                )\r\n                            ).map((extension, index) => (\r\n                                <MenuItem value={extension} key={index}>\r\n                                    {extension}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n                <Divider />\r\n                {loading && <TextLoading />}\r\n                {!loading && (\r\n                    <Suspense fallback={<TextLoading />}>\r\n                        <MonacoEditor\r\n                            height=\"600\"\r\n                            language={suffix}\r\n                            theme={\r\n                                theme.palette.type === \"dark\" ? \"vs-dark\" : \"vs\"\r\n                            }\r\n                            value={content}\r\n                            options={{\r\n                                readOnly: isSharePage,\r\n                                extraEditorClassName: classes.editor,\r\n                                wordWrap: wordWrap,\r\n                            }}\r\n                            onChange={(value) => setContent(value)}\r\n                        />\r\n                    </Suspense>\r\n                )}\r\n            </Paper>\r\n            {!isSharePage && <SaveButton onClick={save} status={status} />}\r\n        </div>\r\n    );\r\n}\r\n","export const sizeToString = (bytes) => {\r\n    if (bytes === 0 || bytes === \"0\") return \"0 B\";\r\n    const k = 1024;\r\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return (bytes / Math.pow(k, i)).toFixed(1) + \" \" + sizes[i];\r\n};\r\n\r\nexport const fixUrlHash = (path) => {\r\n    return path;\r\n};\r\n\r\nexport const setCookie = (name, value, days) => {\r\n    if (days) {\r\n        const date = new Date();\r\n        date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\r\n    }\r\n    document.cookie = name + \"=\" + (value || \"\") + \"; path=/\";\r\n};\r\n\r\nexport const setGetParameter = (paramName, paramValue) => {\r\n    let url = window.location.href;\r\n\r\n    if (url.indexOf(paramName + \"=\") >= 0) {\r\n        const prefix = url.substring(0, url.indexOf(paramName));\r\n        let suffix = url.substring(url.indexOf(paramName));\r\n        suffix = suffix.substring(suffix.indexOf(\"=\") + 1);\r\n        suffix =\r\n            suffix.indexOf(\"&\") >= 0\r\n                ? suffix.substring(suffix.indexOf(\"&\"))\r\n                : \"\";\r\n        url = prefix + paramName + \"=\" + paramValue + suffix;\r\n    } else {\r\n        if (url.indexOf(\"?\") < 0) url += \"?\" + paramName + \"=\" + paramValue;\r\n        else url += \"&\" + paramName + \"=\" + paramValue;\r\n    }\r\n    if (url === window.location.href) {\r\n        return;\r\n    }\r\n    window.history.pushState(null, null, url);\r\n};\r\n\r\nexport const allowSharePreview = () => {\r\n    if (!window.isSharePage) {\r\n        return true;\r\n    }\r\n    if (window.isSharePage) {\r\n        if (window.shareInfo.allowPreview) {\r\n            return true;\r\n        }\r\n        if (window.userInfo.uid === -1) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n};\r\n\r\nexport const checkGetParameters = (field) => {\r\n    const url = window.location.href;\r\n    if (url.indexOf(\"?\" + field + \"=\") !== -1) return true;\r\n    else if (url.indexOf(\"&\" + field + \"=\") !== -1) return true;\r\n    return false;\r\n};\r\n\r\nexport const changeThemeColor = (color) => {\r\n    const metaThemeColor = window.document.querySelector(\r\n        \"meta[name=theme-color]\"\r\n    );\r\n    metaThemeColor.setAttribute(\"content\", color);\r\n};\r\n\r\nexport const decode = (c) => {\r\n    let e = c.height,\r\n        a = c.width,\r\n        b = document.createElement(\"canvas\");\r\n    b.height = e;\r\n    b.width = a;\r\n    b = b.getContext(\"2d\");\r\n    b.drawImage(c, 0, 0);\r\n    c = b.getImageData(0, 0, a, e);\r\n    b = [];\r\n    for (let d = 0; d < a * e * 4; d += 4)\r\n        0 !== (d + 4) % (4 * a) &&\r\n            [].push.apply(b, [].slice.call(c.data, d, d + 3));\r\n    c = e = 0;\r\n    for (\r\n        a = \"\";\r\n        c < b.length &&\r\n        (16 >= c ||\r\n            (0 === b[c] % 2 ? (e++, (a += \"1\")) : ((e = 0), (a += \"0\")),\r\n            17 !== e));\r\n        c++\r\n    );\r\n    a = a.slice(0, -16);\r\n    a = a.replace(/[\\s]/g, \"\").replace(/(\\d{16})(?=\\d)/g, \"$1 \");\r\n    e = \"\";\r\n    a = a.split(\" \");\r\n    for (c = 0; c < a.length; c++) {\r\n        b = a[c];\r\n        if (16 === b.length) {\r\n            b = parseInt(b, 2);\r\n            e += String.fromCharCode(b);\r\n        }\r\n    }\r\n    return e;\r\n};\r\nexport function bufferDecode(value) {\r\n    return Uint8Array.from(atob(value), (c) => c.charCodeAt(0));\r\n}\r\n\r\n// ArrayBuffer to URLBase64\r\nexport function bufferEncode(value) {\r\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(value)))\r\n        .replace(/\\+/g, \"-\")\r\n        .replace(/\\//g, \"_\")\r\n        .replace(/=/g, \"\");\r\n}\r\n\r\nexport function pathBack(path) {\r\n    const folders =\r\n        path !== null\r\n            ? path.substr(1).split(\"/\")\r\n            : this.props.path.substr(1).split(\"/\");\r\n    return \"/\" + folders.slice(0, folders.length - 1).join(\"/\");\r\n}\r\n\r\nexport function filePath(file) {\r\n    return file.path === \"/\"\r\n        ? file.path + file.name\r\n        : file.path + \"/\" + file.name;\r\n}\r\n\r\nexport function hex2bin(hex) {\r\n    return parseInt(hex, 16).toString(2).padStart(8, \"0\");\r\n}\r\n\r\nexport function pathJoin(parts, sep) {\r\n    const separator = sep || \"/\";\r\n    parts = parts.map((part, index) => {\r\n        if (index) {\r\n            part = part.replace(new RegExp(\"^\" + separator), \"\");\r\n        }\r\n        if (index !== parts.length - 1) {\r\n            part = part.replace(new RegExp(separator + \"$\"), \"\");\r\n        }\r\n        return part;\r\n    });\r\n    return parts.join(separator);\r\n}\r\n\r\nexport function basename(path) {\r\n    const pathList = path.split(\"/\");\r\n    pathList.pop();\r\n    return pathList.join(\"/\") === \"\" ? \"/\" : pathList.join(\"/\");\r\n}\r\n\r\nexport function filename(path) {\r\n    const pathList = path.split(\"/\");\r\n    return pathList.pop();\r\n}\r\n\r\nexport function randomStr(length) {\r\n    let result = \"\";\r\n    const characters =\r\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    const charactersLength = characters.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += characters.charAt(\r\n            Math.floor(Math.random() * charactersLength)\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function getNumber(base, conditions) {\r\n    conditions.forEach((v) => {\r\n        if (v) {\r\n            base++;\r\n        }\r\n    });\r\n    return base;\r\n}\r\n\r\nexport const isMac = () => {\r\n    return navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0;\r\n};\r\n\r\nexport function vhCheck() {\r\n    const vh = window.innerHeight;\r\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {} from \"../../actions\";\r\nimport classNames from \"classnames\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\n\r\nimport { green, amber } from \"@material-ui/core/colors\";\r\n\r\nimport {\r\n    withStyles,\r\n    SnackbarContent,\r\n    Snackbar,\r\n    IconButton,\r\n} from \"@material-ui/core\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        snackbar: state.viewUpdate.snackbar,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\nconst styles1 = (theme) => ({\r\n    success: {\r\n        backgroundColor: theme.palette.success.main,\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.info.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: theme.palette.warning.main,\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n    const { classes, className, message, onClose, variant, ...other } = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={classNames(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n                    <Icon\r\n                        className={classNames(\r\n                            classes.icon,\r\n                            classes.iconVariant\r\n                        )}\r\n                    />\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    className={classes.close}\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon className={classes.icon} />\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\nMySnackbarContent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf([\"alert\", \"success\", \"warning\", \"error\", \"info\"])\r\n        .isRequired,\r\n};\r\n\r\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\r\nconst styles = (theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n});\r\nclass SnackbarCompoment extends Component {\r\n    state = {\r\n        open: false,\r\n    };\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (nextProps.snackbar.toggle !== this.props.snackbar.toggle) {\r\n            this.setState({ open: true });\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: this.props.snackbar.vertical,\r\n                    horizontal: this.props.snackbar.horizontal,\r\n                }}\r\n                open={this.state.open}\r\n                autoHideDuration={6000}\r\n                onClose={this.handleClose}\r\n            >\r\n                <MySnackbarContentWrapper\r\n                    onClose={this.handleClose}\r\n                    variant={this.props.snackbar.color}\r\n                    message={this.props.snackbar.msg}\r\n                />\r\n            </Snackbar>\r\n        );\r\n    }\r\n}\r\n\r\nconst AlertBar = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(SnackbarCompoment));\r\n\r\nexport default AlertBar;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    LogoutVariant,\r\n    HomeAccount,\r\n    DesktopMacDashboard,\r\n    AccountArrowRight,\r\n    AccountPlus,\r\n} from \"mdi-material-ui\";\r\nimport {\r\n    setSessionStatus,\r\n    setUserPopover,\r\n    toggleSnackbar,\r\n} from \"../../actions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport {\r\n    withStyles,\r\n    Avatar,\r\n    Popover,\r\n    Typography,\r\n    Chip,\r\n    ListItemIcon,\r\n    MenuItem,\r\n    Divider,\r\n} from \"@material-ui/core\";\r\nimport API from \"../../middleware/Api\";\r\nimport pathHelper from \"../../utils/page\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        anchorEl: state.viewUpdate.userPopoverAnchorEl,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setUserPopover: (anchor) => {\r\n            dispatch(setUserPopover(anchor));\r\n        },\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        setSessionStatus: (status) => {\r\n            dispatch(setSessionStatus(status));\r\n        },\r\n    };\r\n};\r\nconst styles = () => ({\r\n    avatar: {\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        padding: \"20px 20px 20px 20px\",\r\n    },\r\n    largeAvatar: {\r\n        height: \"90px\",\r\n        width: \"90px\",\r\n    },\r\n    info: {\r\n        marginLeft: \"10px\",\r\n        width: \"139px\",\r\n    },\r\n    badge: {\r\n        marginTop: \"10px\",\r\n    },\r\n    visitorMenu: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nclass UserAvatarPopoverCompoment extends Component {\r\n    handleClose = () => {\r\n        this.props.setUserPopover(null);\r\n    };\r\n\r\n    openURL = (url) => {\r\n        window.location.href = url;\r\n    };\r\n\r\n    sigOut = () => {\r\n        API.delete(\"/user/session/\")\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"您已退出登录\",\r\n                    \"success\"\r\n                );\r\n                Auth.signout();\r\n                window.location.reload();\r\n                this.props.setSessionStatus(false);\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"warning\"\r\n                );\r\n            })\r\n            .then(() => {\r\n                this.handleClose();\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const user = Auth.GetUser();\r\n        const isAdminPage = pathHelper.isAdminPage(\r\n            this.props.location.pathname\r\n        );\r\n\r\n        return (\r\n            <Popover\r\n                open={this.props.anchorEl !== null}\r\n                onClose={this.handleClose}\r\n                anchorEl={this.props.anchorEl}\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"right\",\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                }}\r\n            >\r\n                {!Auth.Check() && (\r\n                    <div className={classes.visitorMenu}>\r\n                        <Divider />\r\n                        <MenuItem\r\n                            onClick={() => this.props.history.push(\"/login\")}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <AccountArrowRight />\r\n                            </ListItemIcon>\r\n                            登录\r\n                        </MenuItem>\r\n                        <MenuItem\r\n                            onClick={() => this.props.history.push(\"/signup\")}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <AccountPlus />\r\n                            </ListItemIcon>\r\n                            注册\r\n                        </MenuItem>\r\n                    </div>\r\n                )}\r\n                {Auth.Check() && (\r\n                    <div>\r\n                        <div className={classes.header}>\r\n                            <div className={classes.largeAvatarContainer}>\r\n                                <Avatar\r\n                                    className={classes.largeAvatar}\r\n                                    src={\r\n                                        \"/api/v3/user/avatar/\" + user.id + \"/l\"\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            <div className={classes.info}>\r\n                                <Typography noWrap>{user.nickname}</Typography>\r\n                                <Typography\r\n                                    color=\"textSecondary\"\r\n                                    style={{\r\n                                        fontSize: \"0.875rem\",\r\n                                    }}\r\n                                    noWrap\r\n                                >\r\n                                    {user.user_name}\r\n                                </Typography>\r\n                                <Chip\r\n                                    className={classes.badge}\r\n                                    color={\r\n                                        user.group.id === 1\r\n                                            ? \"secondary\"\r\n                                            : \"default\"\r\n                                    }\r\n                                    label={user.group.name}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <Divider />\r\n                            {!isAdminPage && (\r\n                                <MenuItem\r\n                                    style={{\r\n                                        padding: \" 11px 16px 11px 16px\",\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        this.handleClose();\r\n                                        this.props.history.push(\r\n                                            \"/profile/\" + user.id\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    <ListItemIcon>\r\n                                        <HomeAccount />\r\n                                    </ListItemIcon>\r\n                                    个人主页\r\n                                </MenuItem>\r\n                            )}\r\n                            {user.group.id === 1 && (\r\n                                <MenuItem\r\n                                    style={{\r\n                                        padding: \" 11px 16px 11px 16px\",\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        this.handleClose();\r\n                                        this.props.history.push(\"/admin/home\");\r\n                                    }}\r\n                                >\r\n                                    <ListItemIcon>\r\n                                        <DesktopMacDashboard />\r\n                                    </ListItemIcon>\r\n                                    管理面板\r\n                                </MenuItem>\r\n                            )}\r\n\r\n                            <MenuItem\r\n                                style={{\r\n                                    padding: \" 11px 16px 11px 16px\",\r\n                                }}\r\n                                onClick={this.sigOut}\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <LogoutVariant />\r\n                                </ListItemIcon>\r\n                                退出登录\r\n                            </MenuItem>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Popover>\r\n        );\r\n    }\r\n}\r\n\r\nUserAvatarPopoverCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst UserAvatarPopover = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(UserAvatarPopoverCompoment)));\r\n\r\nexport default UserAvatarPopover;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport SettingIcon from \"@material-ui/icons/Settings\";\r\nimport UserAvatarPopover from \"./UserAvatarPopover\";\r\nimport { AccountCircle } from \"mdi-material-ui\";\r\nimport { setUserPopover } from \"../../actions\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport {\r\n    withStyles,\r\n    Grow,\r\n    Avatar,\r\n    IconButton,\r\n    Tooltip,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport DarkModeSwitcher from \"./DarkModeSwitcher\";\r\nimport { Home } from \"@material-ui/icons\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selected: state.explorer.selected,\r\n        isMultiple: state.explorer.selectProps.isMultiple,\r\n        withFolder: state.explorer.selectProps.withFolder,\r\n        withFile: state.explorer.selectProps.withFile,\r\n        isLogin: state.viewUpdate.isLogin,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setUserPopover: (anchor) => {\r\n            dispatch(setUserPopover(anchor));\r\n        },\r\n    };\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    mobileHidden: {\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            display: \"none\",\r\n        },\r\n        whiteSpace: \"nowrap\",\r\n    },\r\n    avatar: {\r\n        width: \"30px\",\r\n        height: \"30px\",\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        padding: \"20px 20px 20px 20px\",\r\n    },\r\n    largeAvatar: {\r\n        height: \"90px\",\r\n        width: \"90px\",\r\n    },\r\n    info: {\r\n        marginLeft: \"10px\",\r\n        width: \"139px\",\r\n    },\r\n    badge: {\r\n        marginTop: \"10px\",\r\n    },\r\n    visitorMenu: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nclass UserAvatarCompoment extends Component {\r\n    state = {\r\n        anchorEl: null,\r\n    };\r\n\r\n    showUserInfo = (e) => {\r\n        this.props.setUserPopover(e.currentTarget);\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            anchorEl: null,\r\n        });\r\n    };\r\n\r\n    openURL = (url) => {\r\n        window.location.href = url;\r\n    };\r\n\r\n    returnHome = () => {\r\n        window.location.href = \"/home\";\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const loginCheck = Auth.Check(this.props.isLogin);\r\n        const user = Auth.GetUser(this.props.isLogin);\r\n        const isAdminPage = pathHelper.isAdminPage(\r\n            this.props.location.pathname\r\n        );\r\n\r\n        return (\r\n            <div className={classes.mobileHidden}>\r\n                <Grow\r\n                    in={\r\n                        this.props.selected.length <= 1 &&\r\n                        !(!this.props.isMultiple && this.props.withFile)\r\n                    }\r\n                >\r\n                    <div>\r\n                        {!isAdminPage && (\r\n                            <>\r\n                                <DarkModeSwitcher position=\"top\" />\r\n                                {loginCheck && (\r\n                                    <>\r\n                                        <Tooltip\r\n                                            title={\"设置\"}\r\n                                            placement=\"bottom\"\r\n                                        >\r\n                                            <IconButton\r\n                                                onClick={() =>\r\n                                                    this.props.history.push(\r\n                                                        \"/setting?\"\r\n                                                    )\r\n                                                }\r\n                                                color=\"inherit\"\r\n                                            >\r\n                                                <SettingIcon />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </>\r\n                                )}\r\n                            </>\r\n                        )}\r\n                        {isAdminPage && (\r\n                            <Tooltip title={\"返回主页\"} placement=\"bottom\">\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    onClick={this.returnHome}\r\n                                >\r\n                                    <Home />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        )}\r\n                        <IconButton color=\"inherit\" onClick={this.showUserInfo}>\r\n                            {!loginCheck && <AccountCircle />}\r\n                            {loginCheck && (\r\n                                <Avatar\r\n                                    src={\r\n                                        \"/api/v3/user/avatar/\" + user.id + \"/s\"\r\n                                    }\r\n                                    className={classes.avatar}\r\n                                />\r\n                            )}\r\n                        </IconButton>{\" \"}\r\n                    </div>\r\n                </Grow>\r\n                <UserAvatarPopover />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUserAvatarCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst UserAvatar = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(UserAvatarCompoment)));\r\n\r\nexport default UserAvatar;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport MusicNote from \"@material-ui/icons/MusicNote\";\r\nimport BackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\r\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\r\nimport OpenFolderIcon from \"@material-ui/icons/FolderOpen\";\r\nimport RenameIcon from \"@material-ui/icons/BorderColor\";\r\nimport MoveIcon from \"@material-ui/icons/Input\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { isPreviewable } from \"../../config\";\r\nimport {\r\n    drawerToggleAction,\r\n    setSelectedTarget,\r\n    navigateTo,\r\n    openCreateFolderDialog,\r\n    changeContextMenu,\r\n    searchMyFile,\r\n    saveFile,\r\n    openMusicDialog,\r\n    showImgPreivew,\r\n    toggleSnackbar,\r\n    openMoveDialog,\r\n    openRemoveDialog,\r\n    openShareDialog,\r\n    openRenameDialog,\r\n    openLoadingDialog,\r\n    setSessionStatus,\r\n    openPreview,\r\n    audioPreviewSetIsOpen,\r\n} from \"../../actions\";\r\nimport {\r\n    allowSharePreview,\r\n    checkGetParameters,\r\n    changeThemeColor,\r\n} from \"../../utils\";\r\nimport Uploader from \"../Uploader/Uploader.js\";\r\nimport { sizeToString, vhCheck } from \"../../utils\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport SezrchBar from \"./SearchBar\";\r\nimport StorageBar from \"./StorageBar\";\r\nimport UserAvatar from \"./UserAvatar\";\r\nimport UserInfo from \"./UserInfo\";\r\nimport { AccountArrowRight, AccountPlus, LogoutVariant } from \"mdi-material-ui\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    Typography,\r\n    withStyles,\r\n    withTheme,\r\n    Drawer,\r\n    SwipeableDrawer,\r\n    IconButton,\r\n    Hidden,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    List,\r\n    Grow,\r\n    Tooltip,\r\n} from \"@material-ui/core\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport API from \"../../middleware/Api\";\r\nimport FileTag from \"./FileTags\";\r\nimport { Assignment, Devices, MoreHoriz, Settings } from \"@material-ui/icons\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport SubActions from \"../FileManager/Navigator/SubActions\";\r\n\r\nvhCheck();\r\nconst drawerWidth = 240;\r\nconst drawerWidthMobile = 270;\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        desktopOpen: state.viewUpdate.open,\r\n        selected: state.explorer.selected,\r\n        isMultiple: state.explorer.selectProps.isMultiple,\r\n        withFolder: state.explorer.selectProps.withFolder,\r\n        withFile: state.explorer.selectProps.withFile,\r\n        path: state.navigator.path,\r\n        keywords: state.explorer.keywords,\r\n        title: state.siteConfig.title,\r\n        subTitle: state.viewUpdate.subTitle,\r\n        loadUploader: state.viewUpdate.loadUploader,\r\n        isLogin: state.viewUpdate.isLogin,\r\n        audioPreviewPlayingName: state.explorer.audioPreview.playingName,\r\n        audioPreviewIsOpen: state.explorer.audioPreview.isOpen,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleDesktopToggle: (open) => {\r\n            dispatch(drawerToggleAction(open));\r\n        },\r\n        setSelectedTarget: (targets) => {\r\n            dispatch(setSelectedTarget(targets));\r\n        },\r\n        navigateTo: (path) => {\r\n            dispatch(navigateTo(path));\r\n        },\r\n        openCreateFolderDialog: () => {\r\n            dispatch(openCreateFolderDialog());\r\n        },\r\n        changeContextMenu: (type, open) => {\r\n            dispatch(changeContextMenu(type, open));\r\n        },\r\n        searchMyFile: (keywords) => {\r\n            dispatch(searchMyFile(keywords));\r\n        },\r\n        saveFile: () => {\r\n            dispatch(saveFile());\r\n        },\r\n        openMusicDialog: () => {\r\n            dispatch(openMusicDialog());\r\n        },\r\n        showImgPreivew: (first) => {\r\n            dispatch(showImgPreivew(first));\r\n        },\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        openRenameDialog: () => {\r\n            dispatch(openRenameDialog());\r\n        },\r\n        openMoveDialog: () => {\r\n            dispatch(openMoveDialog());\r\n        },\r\n        openRemoveDialog: () => {\r\n            dispatch(openRemoveDialog());\r\n        },\r\n        openShareDialog: () => {\r\n            dispatch(openShareDialog());\r\n        },\r\n        openLoadingDialog: (text) => {\r\n            dispatch(openLoadingDialog(text));\r\n        },\r\n        setSessionStatus: () => {\r\n            dispatch(setSessionStatus());\r\n        },\r\n        openPreview: () => {\r\n            dispatch(openPreview());\r\n        },\r\n        audioPreviewOpen: () => {\r\n            dispatch(audioPreviewSetIsOpen(true));\r\n        },\r\n    };\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    appBar: {\r\n        marginLeft: drawerWidth,\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            marginLeft: drawerWidthMobile,\r\n        },\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: \" background-color 250ms\",\r\n    },\r\n\r\n    drawer: {\r\n        width: 0,\r\n        flexShrink: 0,\r\n    },\r\n    drawerDesktop: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    menuButton: {\r\n        marginRight: 20,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    menuButtonDesktop: {\r\n        marginRight: 20,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    menuIcon: {\r\n        marginRight: 20,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidthMobile,\r\n    },\r\n    drawerPaperDesktop: {\r\n        width: drawerWidth,\r\n    },\r\n    upDrawer: {\r\n        overflowX: \"hidden\",\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: \"hidden\",\r\n        width: 0,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    badge: {\r\n        top: 1,\r\n        right: -15,\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n    sectionForFile: {\r\n        display: \"flex\",\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    addButton: {\r\n        marginLeft: \"40px\",\r\n        marginTop: \"25px\",\r\n        marginBottom: \"15px\",\r\n    },\r\n    fabButton: {\r\n        borderRadius: \"100px\",\r\n    },\r\n    badgeFix: {\r\n        right: \"10px\",\r\n    },\r\n    iconFix: {\r\n        marginLeft: \"16px\",\r\n    },\r\n    dividerFix: {\r\n        marginTop: \"8px\",\r\n    },\r\n    folderShareIcon: {\r\n        verticalAlign: \"sub\",\r\n        marginRight: \"5px\",\r\n    },\r\n    shareInfoContainer: {\r\n        display: \"flex\",\r\n        marginTop: \"15px\",\r\n        marginBottom: \"20px\",\r\n        marginLeft: \"28px\",\r\n        textDecoration: \"none\",\r\n    },\r\n    shareAvatar: {\r\n        width: \"40px\",\r\n        height: \"40px\",\r\n    },\r\n    stickFooter: {\r\n        bottom: \"0px\",\r\n        position: \"absolute\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: \"100%\",\r\n    },\r\n    ownerInfo: {\r\n        marginLeft: \"10px\",\r\n        width: \"150px\",\r\n    },\r\n    minStickDrawer: {\r\n        overflowY: \"auto\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            height: \"calc(var(--vh, 100vh) - 145px)\",\r\n        },\r\n\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            minHeight: \"calc(var(--vh, 100vh) - 360px)\",\r\n        },\r\n    },\r\n});\r\nclass NavbarCompoment extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mobileOpen: false,\r\n        };\r\n        this.UploaderRef = React.createRef();\r\n    }\r\n\r\n    UNSAFE_componentWillMount() {\r\n        this.unlisten = this.props.history.listen(() => {\r\n            this.setState(() => ({ mobileOpen: false }));\r\n        });\r\n    }\r\n    componentWillUnmount() {\r\n        this.unlisten();\r\n    }\r\n\r\n    componentDidMount() {\r\n        changeThemeColor(\r\n            this.props.selected.length <= 1 &&\r\n                !(!this.props.isMultiple && this.props.withFile)\r\n                ? this.props.theme.palette.primary.main\r\n                : this.props.theme.palette.background.default\r\n        );\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (\r\n            (this.props.selected.length <= 1 &&\r\n                !(!this.props.isMultiple && this.props.withFile)) !==\r\n            (nextProps.selected.length <= 1 &&\r\n                !(!nextProps.isMultiple && nextProps.withFile))\r\n        ) {\r\n            changeThemeColor(\r\n                !(\r\n                    this.props.selected.length <= 1 &&\r\n                    !(!this.props.isMultiple && this.props.withFile)\r\n                )\r\n                    ? this.props.theme.palette.type === \"dark\"\r\n                        ? this.props.theme.palette.background.default\r\n                        : this.props.theme.palette.primary.main\r\n                    : this.props.theme.palette.background.default\r\n            );\r\n        }\r\n    };\r\n\r\n    handleDrawerToggle = () => {\r\n        this.setState((state) => ({ mobileOpen: !state.mobileOpen }));\r\n    };\r\n\r\n    openDownload = () => {\r\n        if (!allowSharePreview()) {\r\n            this.props.toggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                \"未登录用户无法预览\",\r\n                \"warning\"\r\n            );\r\n            return;\r\n        }\r\n        this.props.openLoadingDialog(\"获取下载地址...\");\r\n    };\r\n\r\n    archiveDownload = () => {\r\n        this.props.openLoadingDialog(\"打包中...\");\r\n    };\r\n\r\n    signOut = () => {\r\n        API.delete(\"/user/session/\")\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"您已退出登录\",\r\n                    \"success\"\r\n                );\r\n                Auth.signout();\r\n                window.location.reload();\r\n                this.props.setSessionStatus(false);\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"warning\"\r\n                );\r\n            })\r\n            .finally(() => {\r\n                this.handleClose();\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const user = Auth.GetUser(this.props.isLogin);\r\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\r\n        const isSharePage = pathHelper.isSharePage(\r\n            this.props.location.pathname\r\n        );\r\n\r\n        const drawer = (\r\n            <div id=\"container\" className={classes.upDrawer}>\r\n                {pathHelper.isMobile() && <UserInfo />}\r\n\r\n                {Auth.Check(this.props.isLogin) && (\r\n                    <>\r\n                        <div className={classes.minStickDrawer}>\r\n                            <FileTag />\r\n                            <List>\r\n                                <ListItem\r\n                                    button\r\n                                    key=\"我的分享\"\r\n                                    onClick={() =>\r\n                                        this.props.history.push(\"/shares?\")\r\n                                    }\r\n                                >\r\n                                    <ListItemIcon>\r\n                                        <ShareIcon\r\n                                            className={classes.iconFix}\r\n                                        />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"我的分享\" />\r\n                                </ListItem>\r\n                                <ListItem\r\n                                    button\r\n                                    key=\"离线下载\"\r\n                                    onClick={() =>\r\n                                        this.props.history.push(\"/aria2?\")\r\n                                    }\r\n                                >\r\n                                    <ListItemIcon>\r\n                                        <DownloadIcon\r\n                                            className={classes.iconFix}\r\n                                        />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"离线下载\" />\r\n                                </ListItem>\r\n                                {user.group.webdav && (\r\n                                    <ListItem\r\n                                        button\r\n                                        key=\"WebDAV\"\r\n                                        onClick={() =>\r\n                                            this.props.history.push(\"/webdav?\")\r\n                                        }\r\n                                    >\r\n                                        <ListItemIcon>\r\n                                            <Devices\r\n                                                className={classes.iconFix}\r\n                                            />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"WebDAV\" />\r\n                                    </ListItem>\r\n                                )}\r\n\r\n                                <ListItem\r\n                                    button\r\n                                    key=\"任务队列\"\r\n                                    onClick={() =>\r\n                                        this.props.history.push(\"/tasks?\")\r\n                                    }\r\n                                >\r\n                                    <ListItemIcon>\r\n                                        <Assignment\r\n                                            className={classes.iconFix}\r\n                                        />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"任务队列\" />\r\n                                </ListItem>\r\n                            </List>\r\n                        </div>\r\n\r\n                        {pathHelper.isMobile() && (\r\n                            <>\r\n                                <Divider />\r\n                                <List>\r\n                                    <ListItem\r\n                                        button\r\n                                        key=\"个人设置\"\r\n                                        onClick={() =>\r\n                                            this.props.history.push(\"/setting?\")\r\n                                        }\r\n                                    >\r\n                                        <ListItemIcon>\r\n                                            <Settings\r\n                                                className={classes.iconFix}\r\n                                            />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"个人设置\" />\r\n                                    </ListItem>\r\n\r\n                                    <ListItem\r\n                                        button\r\n                                        key=\"退出登录\"\r\n                                        onClick={this.signOut}\r\n                                    >\r\n                                        <ListItemIcon>\r\n                                            <LogoutVariant\r\n                                                className={classes.iconFix}\r\n                                            />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"退出登录\" />\r\n                                    </ListItem>\r\n                                </List>\r\n                            </>\r\n                        )}\r\n                        <div>\r\n                            <StorageBar></StorageBar>\r\n                        </div>\r\n                    </>\r\n                )}\r\n\r\n                {!Auth.Check(this.props.isLogin) && (\r\n                    <div>\r\n                        <ListItem\r\n                            button\r\n                            key=\"登录\"\r\n                            onClick={() => this.props.history.push(\"/login\")}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <AccountArrowRight\r\n                                    className={classes.iconFix}\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"登录\" />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            button\r\n                            key=\"注册\"\r\n                            onClick={() => this.props.history.push(\"/signup\")}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <AccountPlus className={classes.iconFix} />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"注册\" />\r\n                        </ListItem>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n        const iOS =\r\n            process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n        return (\r\n            <div>\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    className={classes.appBar}\r\n                    color={\r\n                        this.props.theme.palette.type !== \"dark\" &&\r\n                        this.props.selected.length <= 1 &&\r\n                        !(!this.props.isMultiple && this.props.withFile)\r\n                            ? \"primary\"\r\n                            : \"default\"\r\n                    }\r\n                >\r\n                    <Toolbar>\r\n                        {this.props.selected.length <= 1 &&\r\n                            !(\r\n                                !this.props.isMultiple && this.props.withFile\r\n                            ) && (\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    aria-label=\"Open drawer\"\r\n                                    onClick={this.handleDrawerToggle}\r\n                                    className={classes.menuButton}\r\n                                >\r\n                                    <MenuIcon />\r\n                                </IconButton>\r\n                            )}\r\n                        {this.props.selected.length <= 1 &&\r\n                            !(\r\n                                !this.props.isMultiple && this.props.withFile\r\n                            ) && (\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    aria-label=\"Open drawer\"\r\n                                    onClick={() =>\r\n                                        this.props.handleDesktopToggle(\r\n                                            !this.props.desktopOpen\r\n                                        )\r\n                                    }\r\n                                    className={classes.menuButtonDesktop}\r\n                                >\r\n                                    <MenuIcon />\r\n                                </IconButton>\r\n                            )}\r\n                        {(this.props.selected.length > 1 ||\r\n                            (!this.props.isMultiple && this.props.withFile)) &&\r\n                            (isHomePage ||\r\n                                pathHelper.isSharePage(\r\n                                    this.props.location.pathname\r\n                                )) && (\r\n                                <Grow\r\n                                    in={\r\n                                        this.props.selected.length > 1 ||\r\n                                        (!this.props.isMultiple &&\r\n                                            this.props.withFile)\r\n                                    }\r\n                                >\r\n                                    <IconButton\r\n                                        color=\"inherit\"\r\n                                        className={classes.menuIcon}\r\n                                        onClick={() =>\r\n                                            this.props.setSelectedTarget([])\r\n                                        }\r\n                                    >\r\n                                        <BackIcon />\r\n                                    </IconButton>\r\n                                </Grow>\r\n                            )}\r\n                        {this.props.selected.length <= 1 &&\r\n                            !(\r\n                                !this.props.isMultiple && this.props.withFile\r\n                            ) && (\r\n                                <Typography\r\n                                    variant=\"h6\"\r\n                                    color=\"inherit\"\r\n                                    noWrap\r\n                                    onClick={() => {\r\n                                        this.props.history.push(\"/\");\r\n                                    }}\r\n                                >\r\n                                    {this.props.subTitle\r\n                                        ? this.props.subTitle\r\n                                        : this.props.title}\r\n                                </Typography>\r\n                            )}\r\n\r\n                        {!this.props.isMultiple &&\r\n                            this.props.withFile &&\r\n                            !pathHelper.isMobile() && (\r\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                                    {this.props.selected[0].name}{\" \"}\r\n                                    {(isHomePage ||\r\n                                        pathHelper.isSharePage(\r\n                                            this.props.location.pathname\r\n                                        )) &&\r\n                                        \"(\" +\r\n                                            sizeToString(\r\n                                                this.props.selected[0].size\r\n                                            ) +\r\n                                            \")\"}\r\n                                </Typography>\r\n                            )}\r\n\r\n                        {this.props.selected.length > 1 &&\r\n                            !pathHelper.isMobile() && (\r\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                                    {this.props.selected.length}个对象\r\n                                </Typography>\r\n                            )}\r\n                        {this.props.selected.length <= 1 &&\r\n                            !(\r\n                                !this.props.isMultiple && this.props.withFile\r\n                            ) && <SezrchBar />}\r\n                        <div className={classes.grow} />\r\n                        {(this.props.selected.length > 1 ||\r\n                            (!this.props.isMultiple && this.props.withFile)) &&\r\n                            !isHomePage &&\r\n                            !pathHelper.isSharePage(\r\n                                this.props.location.pathname\r\n                            ) &&\r\n                            Auth.Check(this.props.isLogin) &&\r\n                            !checkGetParameters(\"share\") && (\r\n                                <div className={classes.sectionForFile}>\r\n                                    <Tooltip title=\"保存\">\r\n                                        <IconButton\r\n                                            color=\"inherit\"\r\n                                            onClick={() =>\r\n                                                this.props.saveFile()\r\n                                            }\r\n                                        >\r\n                                            <SaveIcon />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </div>\r\n                            )}\r\n                        {(this.props.selected.length > 1 ||\r\n                            (!this.props.isMultiple && this.props.withFile)) &&\r\n                            (isHomePage || isSharePage) && (\r\n                                <div className={classes.sectionForFile}>\r\n                                    {!this.props.isMultiple &&\r\n                                        this.props.withFile &&\r\n                                        isPreviewable(\r\n                                            this.props.selected[0].name\r\n                                        ) && (\r\n                                            <Grow\r\n                                                in={\r\n                                                    !this.props.isMultiple &&\r\n                                                    this.props.withFile &&\r\n                                                    isPreviewable(\r\n                                                        this.props.selected[0]\r\n                                                            .name\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                <Tooltip title=\"打开\">\r\n                                                    <IconButton\r\n                                                        color=\"inherit\"\r\n                                                        onClick={() =>\r\n                                                            this.props.openPreview()\r\n                                                        }\r\n                                                    >\r\n                                                        <OpenIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </Grow>\r\n                                        )}\r\n                                    {!this.props.isMultiple &&\r\n                                        this.props.withFile && (\r\n                                            <Grow\r\n                                                in={\r\n                                                    !this.props.isMultiple &&\r\n                                                    this.props.withFile\r\n                                                }\r\n                                            >\r\n                                                <Tooltip title=\"下载\">\r\n                                                    <IconButton\r\n                                                        color=\"inherit\"\r\n                                                        onClick={() =>\r\n                                                            this.openDownload()\r\n                                                        }\r\n                                                    >\r\n                                                        <DownloadIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </Grow>\r\n                                        )}\r\n                                    {(this.props.isMultiple ||\r\n                                        this.props.withFolder) &&\r\n                                        user.group.allowArchiveDownload && (\r\n                                            <Grow\r\n                                                in={\r\n                                                    (this.props.isMultiple ||\r\n                                                        this.props\r\n                                                            .withFolder) &&\r\n                                                    user.group\r\n                                                        .allowArchiveDownload\r\n                                                }\r\n                                            >\r\n                                                <Tooltip title=\"打包下载\">\r\n                                                    <IconButton\r\n                                                        color=\"inherit\"\r\n                                                        onClick={() =>\r\n                                                            this.archiveDownload()\r\n                                                        }\r\n                                                    >\r\n                                                        <DownloadIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </Grow>\r\n                                        )}\r\n\r\n                                    {!this.props.isMultiple &&\r\n                                        this.props.withFolder && (\r\n                                            <Grow\r\n                                                in={\r\n                                                    !this.props.isMultiple &&\r\n                                                    this.props.withFolder\r\n                                                }\r\n                                            >\r\n                                                <Tooltip title=\"进入目录\">\r\n                                                    <IconButton\r\n                                                        color=\"inherit\"\r\n                                                        onClick={() =>\r\n                                                            this.props.navigateTo(\r\n                                                                this.props\r\n                                                                    .path ===\r\n                                                                    \"/\"\r\n                                                                    ? this.props\r\n                                                                          .path +\r\n                                                                          this\r\n                                                                              .props\r\n                                                                              .selected[0]\r\n                                                                              .name\r\n                                                                    : this.props\r\n                                                                          .path +\r\n                                                                          \"/\" +\r\n                                                                          this\r\n                                                                              .props\r\n                                                                              .selected[0]\r\n                                                                              .name\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        <OpenFolderIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </Grow>\r\n                                        )}\r\n                                    {!this.props.isMultiple &&\r\n                                        !pathHelper.isMobile() &&\r\n                                        !isSharePage && (\r\n                                            <Grow in={!this.props.isMultiple}>\r\n                                                <Tooltip title=\"分享\">\r\n                                                    <IconButton\r\n                                                        color=\"inherit\"\r\n                                                        onClick={() =>\r\n                                                            this.props.openShareDialog()\r\n                                                        }\r\n                                                    >\r\n                                                        <ShareIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </Grow>\r\n                                        )}\r\n                                    {!this.props.isMultiple && !isSharePage && (\r\n                                        <Grow in={!this.props.isMultiple}>\r\n                                            <Tooltip title=\"重命名\">\r\n                                                <IconButton\r\n                                                    color=\"inherit\"\r\n                                                    onClick={() =>\r\n                                                        this.props.openRenameDialog()\r\n                                                    }\r\n                                                >\r\n                                                    <RenameIcon />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Grow>\r\n                                    )}\r\n                                    {!isSharePage && (\r\n                                        <div style={{ display: \"flex\" }}>\r\n                                            {!pathHelper.isMobile() && (\r\n                                                <Grow\r\n                                                    in={\r\n                                                        this.props.selected\r\n                                                            .length !== 0 &&\r\n                                                        !pathHelper.isMobile()\r\n                                                    }\r\n                                                >\r\n                                                    <Tooltip title=\"移动\">\r\n                                                        <IconButton\r\n                                                            color=\"inherit\"\r\n                                                            onClick={() =>\r\n                                                                this.props.openMoveDialog()\r\n                                                            }\r\n                                                        >\r\n                                                            <MoveIcon />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                </Grow>\r\n                                            )}\r\n\r\n                                            <Grow\r\n                                                in={\r\n                                                    this.props.selected\r\n                                                        .length !== 0\r\n                                                }\r\n                                            >\r\n                                                <Tooltip title=\"删除\">\r\n                                                    <IconButton\r\n                                                        color=\"inherit\"\r\n                                                        onClick={() =>\r\n                                                            this.props.openRemoveDialog()\r\n                                                        }\r\n                                                    >\r\n                                                        <DeleteIcon />\r\n                                                    </IconButton>\r\n                                                </Tooltip>\r\n                                            </Grow>\r\n\r\n                                            {pathHelper.isMobile() && (\r\n                                                <Grow\r\n                                                    in={\r\n                                                        this.props.selected\r\n                                                            .length !== 0 &&\r\n                                                        pathHelper.isMobile()\r\n                                                    }\r\n                                                >\r\n                                                    <Tooltip title=\"更多操作\">\r\n                                                        <IconButton\r\n                                                            color=\"inherit\"\r\n                                                            onClick={() =>\r\n                                                                this.props.changeContextMenu(\r\n                                                                    \"file\",\r\n                                                                    true\r\n                                                                )\r\n                                                            }\r\n                                                        >\r\n                                                            <MoreHoriz />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                </Grow>\r\n                                            )}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                        {this.props.selected.length <= 1 &&\r\n                            !(!this.props.isMultiple && this.props.withFile) &&\r\n                            this.props.audioPreviewPlayingName != null && (\r\n                                <IconButton\r\n                                    title=\"音乐\"\r\n                                    className={classes.sideButton}\r\n                                    onClick={this.props.audioPreviewOpen}\r\n                                    color={\"inherit\"}\r\n                                >\r\n                                    <MusicNote fontSize={\"default\"} />\r\n                                </IconButton>\r\n                            )}\r\n\r\n                        {this.props.selected.length <= 1 &&\r\n                            !(\r\n                                !this.props.isMultiple && this.props.withFile\r\n                            ) && <UserAvatar />}\r\n                        {this.props.selected.length <= 1 &&\r\n                            !(!this.props.isMultiple && this.props.withFile) &&\r\n                            isHomePage &&\r\n                            pathHelper.isMobile() && <SubActions inherit />}\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Uploader />\r\n\r\n                <Hidden smUp implementation=\"css\">\r\n                    <SwipeableDrawer\r\n                        container={this.props.container}\r\n                        variant=\"temporary\"\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        anchor=\"left\"\r\n                        open={this.state.mobileOpen}\r\n                        onClose={this.handleDrawerToggle}\r\n                        onOpen={() =>\r\n                            this.setState(() => ({ mobileOpen: true }))\r\n                        }\r\n                        disableDiscovery={iOS}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </SwipeableDrawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaperDesktop,\r\n                        }}\r\n                        className={classNames(classes.drawer, {\r\n                            [classes.drawerOpen]: this.props.desktopOpen,\r\n                            [classes.drawerClose]: !this.props.desktopOpen,\r\n                        })}\r\n                        variant=\"persistent\"\r\n                        anchor=\"left\"\r\n                        open={this.props.desktopOpen}\r\n                    >\r\n                        <div className={classes.toolbar} />\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nNavbarCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\nconst Navbar = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withTheme(withStyles(styles)(withRouter(NavbarCompoment))));\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\nimport FileIcon from \"@material-ui/icons/InsertDriveFile\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport { connect } from \"react-redux\";\r\nimport { searchMyFile } from \"../../actions\";\r\n\r\nimport {\r\n    withStyles,\r\n    InputBase,\r\n    Popper,\r\n    Fade,\r\n    Paper,\r\n    MenuItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport { HotKeys, configure } from \"react-hotkeys\";\r\n\r\nconfigure({\r\n    ignoreTags: [],\r\n});\r\n\r\nconst mapStateToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        searchMyFile: (keywords) => {\r\n            dispatch(searchMyFile(keywords));\r\n        },\r\n    };\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    search: {\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n        position: \"relative\",\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        \"&:hover\": {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: \"100%\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginLeft: theme.spacing(7.2),\r\n            width: \"auto\",\r\n        },\r\n    },\r\n    searchIcon: {\r\n        width: theme.spacing(9),\r\n        height: \"100%\",\r\n        position: \"absolute\",\r\n        pointerEvents: \"none\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    inputRoot: {\r\n        color: \"inherit\",\r\n        width: \"100%\",\r\n    },\r\n    inputInput: {\r\n        paddingTop: theme.spacing(1),\r\n        paddingRight: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n        paddingLeft: theme.spacing(7),\r\n        transition: theme.transitions.create(\"width\"),\r\n        width: \"100%\",\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: 200,\r\n            \"&:focus\": {\r\n                width: 300,\r\n            },\r\n        },\r\n    },\r\n    suggestBox: {\r\n        zIndex: \"9999\",\r\n        width: 364,\r\n    },\r\n});\r\n\r\nconst keyMap = {\r\n    SEARCH: \"enter\",\r\n};\r\n\r\nclass SearchBarCompoment extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            anchorEl: null,\r\n            input: \"\",\r\n        };\r\n    }\r\n\r\n    handlers = {\r\n        SEARCH: (e) => {\r\n            if (pathHelper.isHomePage(this.props.location.pathname)) {\r\n                this.searchMyFile();\r\n            } else {\r\n                this.searchShare();\r\n            }\r\n            e.target.blur();\r\n        },\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        const { currentTarget } = event;\r\n        this.input = event.target.value;\r\n        this.setState({\r\n            anchorEl: currentTarget,\r\n            input: event.target.value,\r\n        });\r\n    };\r\n\r\n    cancelSuggest = () => {\r\n        this.setState({\r\n            input: \"\",\r\n        });\r\n    };\r\n\r\n    searchMyFile = () => {\r\n        this.props.searchMyFile(\"keywords/\" + this.input);\r\n    };\r\n\r\n    searchShare = () => {\r\n        this.props.history.push(\r\n            \"/search?keywords=\" + encodeURIComponent(this.input)\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { anchorEl } = this.state;\r\n        const id = this.state.input !== \"\" ? \"simple-popper\" : null;\r\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\r\n\r\n        return (\r\n            <div className={classes.search}>\r\n                <div className={classes.searchIcon}>\r\n                    <SearchIcon />\r\n                </div>\r\n                <HotKeys keyMap={keyMap} handlers={this.handlers}>\r\n                    <InputBase\r\n                        placeholder=\"搜索...\"\r\n                        classes={{\r\n                            root: classes.inputRoot,\r\n                            input: classes.inputInput,\r\n                        }}\r\n                        onChange={this.handleChange}\r\n                        onBlur={this.cancelSuggest}\r\n                        value={this.state.input}\r\n                    />\r\n                </HotKeys>\r\n                <Popper\r\n                    id={id}\r\n                    open={this.state.input !== \"\"}\r\n                    anchorEl={anchorEl}\r\n                    className={classes.suggestBox}\r\n                    transition\r\n                >\r\n                    {({ TransitionProps }) => (\r\n                        <Fade {...TransitionProps} timeout={350}>\r\n                            <Paper square={true}>\r\n                                {isHomePage && (\r\n                                    <MenuItem onClick={this.searchMyFile}>\r\n                                        <ListItemIcon className={classes.icon}>\r\n                                            <FileIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            classes={{\r\n                                                primary: classes.primary,\r\n                                            }}\r\n                                            primary={\r\n                                                <Typography noWrap>\r\n                                                    在我的文件中搜索{\" \"}\r\n                                                    <strong>\r\n                                                        {this.state.input}\r\n                                                    </strong>\r\n                                                </Typography>\r\n                                            }\r\n                                        />\r\n                                    </MenuItem>\r\n                                )}\r\n\r\n                                <MenuItem onClick={this.searchShare}>\r\n                                    <ListItemIcon className={classes.icon}>\r\n                                        <ShareIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        classes={{ primary: classes.primary }}\r\n                                        primary={\r\n                                            <Typography noWrap>\r\n                                                在全站分享中搜索{\" \"}\r\n                                                <strong>\r\n                                                    {this.state.input}\r\n                                                </strong>\r\n                                            </Typography>\r\n                                        }\r\n                                    />\r\n                                </MenuItem>\r\n                            </Paper>\r\n                        </Fade>\r\n                    )}\r\n                </Popper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearchBarCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst SearchBar = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(SearchBarCompoment)));\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport StorageIcon from \"@material-ui/icons/Storage\";\r\nimport { connect } from \"react-redux\";\r\nimport API from \"../../middleware/Api\";\r\nimport { sizeToString } from \"../../utils\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\n\r\nimport {\r\n    Divider,\r\n    LinearProgress,\r\n    Tooltip,\r\n    Typography,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        refresh: state.viewUpdate.storageRefresh,\r\n        isLogin: state.viewUpdate.isLogin,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n    };\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    iconFix: {\r\n        marginLeft: \"32px\",\r\n        marginRight: \"17px\",\r\n        color: theme.palette.text.secondary,\r\n        marginTop: \"2px\",\r\n    },\r\n    textFix: {\r\n        padding: \" 0 0 0 16px\",\r\n    },\r\n    storageContainer: {\r\n        display: \"flex\",\r\n        marginTop: \"15px\",\r\n        textAlign: \"left\",\r\n        marginBottom: \"11px\",\r\n    },\r\n    detail: {\r\n        width: \"100%\",\r\n        marginRight: \"35px\",\r\n    },\r\n    info: {\r\n        width: \"131px\",\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            width: \"162px\",\r\n        },\r\n        marginTop: \"5px\",\r\n    },\r\n    bar: {\r\n        marginTop: \"5px\",\r\n    },\r\n    stickFooter: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n});\r\n\r\n// TODO 使用 hooks 重构\r\nclass StorageBarCompoment extends Component {\r\n    state = {\r\n        percent: 0,\r\n        used: null,\r\n        total: null,\r\n        showExpand: false,\r\n    };\r\n\r\n    firstLoad = true;\r\n\r\n    componentDidMount = () => {\r\n        if (this.firstLoad && this.props.isLogin) {\r\n            this.firstLoad = !this.firstLoad;\r\n            this.updateStatus();\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.firstLoad = false;\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (\r\n            (this.props.isLogin && this.props.refresh !== nextProps.refresh) ||\r\n            (this.props.isLogin !== nextProps.isLogin && nextProps.isLogin)\r\n        ) {\r\n            this.updateStatus();\r\n        }\r\n    };\r\n\r\n    updateStatus = () => {\r\n        let percent = 0;\r\n        API.get(\"/user/storage\")\r\n            .then((response) => {\r\n                if (response.data.used / response.data.total >= 1) {\r\n                    percent = 100;\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        \"您的已用容量已超过容量配额，请尽快删除多余文件或购买容量\",\r\n                        \"warning\"\r\n                    );\r\n                } else {\r\n                    percent = (response.data.used / response.data.total) * 100;\r\n                }\r\n                this.setState({\r\n                    percent: percent,\r\n                    used: sizeToString(response.data.used),\r\n                    total: sizeToString(response.data.total),\r\n                });\r\n            })\r\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n            .catch(() => {});\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div\r\n                onMouseEnter={() => this.setState({ showExpand: true })}\r\n                onMouseLeave={() => this.setState({ showExpand: false })}\r\n                className={classes.stickFooter}\r\n            >\r\n                <Divider />\r\n                <ButtonBase>\r\n                    <div className={classes.storageContainer}>\r\n                        <StorageIcon className={classes.iconFix} />\r\n                        <div className={classes.detail}>\r\n                            存储空间{\"   \"}\r\n                            <LinearProgress\r\n                                className={classes.bar}\r\n                                color=\"secondary\"\r\n                                variant=\"determinate\"\r\n                                value={this.state.percent}\r\n                            />\r\n                            <div className={classes.info}>\r\n                                <Tooltip\r\n                                    title={\r\n                                        \"已使用 \" +\r\n                                        (this.state.used === null\r\n                                            ? \" -- \"\r\n                                            : this.state.used) +\r\n                                        \", 共 \" +\r\n                                        (this.state.total === null\r\n                                            ? \" -- \"\r\n                                            : this.state.total)\r\n                                    }\r\n                                    placement=\"top\"\r\n                                >\r\n                                    <Typography\r\n                                        variant=\"caption\"\r\n                                        noWrap\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {this.state.used === null\r\n                                            ? \" -- \"\r\n                                            : this.state.used}\r\n                                        {\" / \"}\r\n                                        {this.state.total === null\r\n                                            ? \" -- \"\r\n                                            : this.state.total}\r\n                                    </Typography>\r\n                                </Tooltip>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </ButtonBase>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStorageBarCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst StorageBar = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(StorageBarCompoment)));\r\n\r\nexport default StorageBar;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { setUserPopover } from \"../../actions\";\r\nimport { withStyles, Typography } from \"@material-ui/core\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport DarkModeSwitcher from \"./DarkModeSwitcher\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLogin: state.viewUpdate.isLogin,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setUserPopover: (anchor) => {\r\n            dispatch(setUserPopover(anchor));\r\n        },\r\n    };\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    userNav: {\r\n        height: \"170px\",\r\n        backgroundColor: theme.palette.primary.main,\r\n        padding: \"20px 20px 2em\",\r\n        backgroundImage:\r\n            \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.light.replace(\"#\", \"%23\") +\r\n            \"' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\r\n            \"' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\r\n            \"' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\r\n            \"' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.main.replace(\"#\", \"%23\") +\r\n            \"' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\r\n            \"' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\r\n            \"' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\\\")\",\r\n        backgroundSize: \"cover\",\r\n    },\r\n    avatar: {\r\n        display: \"block\",\r\n        width: \"70px\",\r\n        height: \"70px\",\r\n        border: \" 2px solid #fff\",\r\n        borderRadius: \"50%\",\r\n        overflow: \"hidden\",\r\n        boxShadow:\r\n            \"0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)\",\r\n    },\r\n    avatarImg: {\r\n        width: \"66px\",\r\n        height: \"66px\",\r\n    },\r\n    nickName: {\r\n        color: \"#fff\",\r\n        marginLeft: \"10px\",\r\n        marginTop: \"15px\",\r\n        fontSize: \"17px\",\r\n    },\r\n    flexAvatar: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"end\",\r\n    },\r\n    groupName: {\r\n        marginLeft: \"10px\",\r\n        color: \"#ffffff\",\r\n        opacity: \"0.54\",\r\n    },\r\n    storageCircle: {\r\n        width: \"200px\",\r\n    },\r\n});\r\n\r\nclass UserInfoCompoment extends Component {\r\n    showUserInfo = (e) => {\r\n        this.props.setUserPopover(e.currentTarget);\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const isLogin = Auth.Check(this.props.isLogin);\r\n        const user = Auth.GetUser(this.props.isLogin);\r\n\r\n        return (\r\n            <div className={classes.userNav}>\r\n                <div className={classes.flexAvatar}>\r\n                    {/* eslint-disable-next-line */}\r\n                    <a onClick={this.showUserInfo} className={classes.avatar}>\r\n                        {isLogin && (\r\n                            <Avatar\r\n                                src={\"/api/v3/user/avatar/\" + user.id + \"/l\"}\r\n                                className={classes.avatarImg}\r\n                            />\r\n                        )}\r\n                        {!isLogin && (\r\n                            <Avatar\r\n                                src={\"/api/v3/user/avatar/0/l\"}\r\n                                className={classes.avatarImg}\r\n                            />\r\n                        )}\r\n                    </a>\r\n                    <DarkModeSwitcher position=\"left\" />\r\n                </div>\r\n                <div className={classes.storageCircle}>\r\n                    <Typography\r\n                        className={classes.nickName}\r\n                        component=\"h2\"\r\n                        noWrap\r\n                    >\r\n                        {isLogin ? user.nickname : \"未登录\"}\r\n                    </Typography>\r\n                    <Typography\r\n                        className={classes.groupName}\r\n                        component=\"h2\"\r\n                        color=\"textSecondary\"\r\n                        noWrap\r\n                    >\r\n                        {isLogin ? user.group.name : \"游客\"}\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUserInfoCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst UserInfo = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(UserInfoCompoment));\r\n\r\nexport default UserInfo;\r\n","import React, { useCallback, useState, Suspense } from \"react\";\r\nimport {\r\n    Divider,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    makeStyles,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport { Clear, KeyboardArrowRight } from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\nimport FolderShared from \"@material-ui/icons/FolderShared\";\r\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport VideoIcon from \"@material-ui/icons/VideoLibraryOutlined\";\r\nimport ImageIcon from \"@material-ui/icons/CollectionsOutlined\";\r\nimport MusicIcon from \"@material-ui/icons/LibraryMusicOutlined\";\r\nimport DocIcon from \"@material-ui/icons/FileCopyOutlined\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport { navigateTo, searchMyFile, toggleSnackbar } from \"../../actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport {\r\n    Circle,\r\n    CircleOutline,\r\n    Heart,\r\n    HeartOutline,\r\n    Hexagon,\r\n    HexagonOutline,\r\n    Hexagram,\r\n    HexagramOutline,\r\n    Rhombus,\r\n    RhombusOutline,\r\n    Square,\r\n    SquareOutline,\r\n    Triangle,\r\n    TriangleOutline,\r\n    FolderHeartOutline,\r\n    TagPlus,\r\n} from \"mdi-material-ui\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport API from \"../../middleware/Api\";\r\n\r\nconst ExpansionPanel = withStyles({\r\n    root: {\r\n        maxWidth: \"100%\",\r\n        boxShadow: \"none\",\r\n        \"&:not(:last-child)\": {\r\n            borderBottom: 0,\r\n        },\r\n        \"&:before\": {\r\n            display: \"none\",\r\n        },\r\n        \"&$expanded\": { margin: 0 },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanel);\r\n\r\nconst ExpansionPanelSummary = withStyles({\r\n    root: {\r\n        minHeight: 0,\r\n        padding: 0,\r\n\r\n        \"&$expanded\": {\r\n            minHeight: 0,\r\n        },\r\n    },\r\n    content: {\r\n        maxWidth: \"100%\",\r\n        margin: 0,\r\n        display: \"block\",\r\n        \"&$expanded\": {\r\n            margin: \"0\",\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanelSummary);\r\n\r\nconst ExpansionPanelDetails = withStyles((theme) => ({\r\n    root: {\r\n        display: \"block\",\r\n        padding: theme.spacing(0),\r\n    },\r\n}))(MuiExpansionPanelDetails);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    expand: {\r\n        display: \"none\",\r\n        transition: \".15s all ease-in-out\",\r\n    },\r\n    expanded: {\r\n        display: \"block\",\r\n        transform: \"rotate(90deg)\",\r\n    },\r\n    iconFix: {\r\n        marginLeft: \"16px\",\r\n    },\r\n    hiddenButton: {\r\n        display: \"none\",\r\n    },\r\n    subMenu: {\r\n        marginLeft: theme.spacing(2),\r\n    },\r\n    overFlow: {\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n    },\r\n}));\r\n\r\nconst icons = {\r\n    Circle: Circle,\r\n    CircleOutline: CircleOutline,\r\n    Heart: Heart,\r\n    HeartOutline: HeartOutline,\r\n    Hexagon: Hexagon,\r\n    HexagonOutline: HexagonOutline,\r\n    Hexagram: Hexagram,\r\n    HexagramOutline: HexagramOutline,\r\n    Rhombus: Rhombus,\r\n    RhombusOutline: RhombusOutline,\r\n    Square: Square,\r\n    SquareOutline: SquareOutline,\r\n    Triangle: Triangle,\r\n    TriangleOutline: TriangleOutline,\r\n    FolderHeartOutline: FolderHeartOutline,\r\n};\r\n\r\nconst AddTag = React.lazy(() => import(\"../Modals/AddTag\"));\r\n\r\nexport default function FileTag() {\r\n    const classes = useStyles();\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const isHomePage = pathHelper.isHomePage(location.pathname);\r\n\r\n    const [tagOpen, setTagOpen] = useState(true);\r\n    const [addTagModal, setAddTagModal] = useState(false);\r\n    const [tagHover, setTagHover] = useState(null);\r\n    const [tags, setTags] = useState(\r\n        Auth.GetUser().tags ? Auth.GetUser().tags : []\r\n    );\r\n\r\n    const dispatch = useDispatch();\r\n    const SearchMyFile = useCallback((k) => dispatch(searchMyFile(k)), [\r\n        dispatch,\r\n    ]);\r\n    const NavigateTo = useCallback((k) => dispatch(navigateTo(k)), [dispatch]);\r\n\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const getIcon = (icon, color) => {\r\n        if (icons[icon]) {\r\n            const IconComponent = icons[icon];\r\n            return (\r\n                <IconComponent\r\n                    className={[classes.iconFix]}\r\n                    style={\r\n                        color\r\n                            ? {\r\n                                  color: color,\r\n                              }\r\n                            : {}\r\n                    }\r\n                />\r\n            );\r\n        }\r\n        return <Circle className={[classes.iconFix]} />;\r\n    };\r\n\r\n    const submitSuccess = (tag) => {\r\n        const newTags = [...tags, tag];\r\n        setTags(newTags);\r\n        const user = Auth.GetUser();\r\n        user.tags = newTags;\r\n        Auth.SetUser(user);\r\n    };\r\n\r\n    const submitDelete = (id) => {\r\n        API.delete(\"/tag/\" + id)\r\n            .then(() => {\r\n                const newTags = tags.filter((v) => {\r\n                    return v.id !== id;\r\n                });\r\n                setTags(newTags);\r\n                const user = Auth.GetUser();\r\n                user.tags = newTags;\r\n                Auth.SetUser(user);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Suspense fallback={\"\"}>\r\n                <AddTag\r\n                    onSuccess={submitSuccess}\r\n                    open={addTagModal}\r\n                    onClose={() => setAddTagModal(false)}\r\n                />\r\n            </Suspense>\r\n            <ExpansionPanel\r\n                square\r\n                expanded={tagOpen && isHomePage}\r\n                onChange={() => isHomePage && setTagOpen(!tagOpen)}\r\n            >\r\n                <ExpansionPanelSummary\r\n                    aria-controls=\"panel1d-content\"\r\n                    id=\"panel1d-header\"\r\n                >\r\n                    <ListItem\r\n                        button\r\n                        key=\"我的文件\"\r\n                        onClick={() =>\r\n                            !isHomePage && history.push(\"/home?path=%2F\")\r\n                        }\r\n                    >\r\n                        <ListItemIcon>\r\n                            <KeyboardArrowRight\r\n                                className={classNames(\r\n                                    {\r\n                                        [classes.expanded]:\r\n                                            tagOpen && isHomePage,\r\n                                        [classes.iconFix]: true,\r\n                                    },\r\n                                    classes.expand\r\n                                )}\r\n                            />\r\n                            {!(tagOpen && isHomePage) && (\r\n                                <FolderShared className={classes.iconFix} />\r\n                            )}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"我的文件\" />\r\n                    </ListItem>\r\n                    <Divider />\r\n                </ExpansionPanelSummary>\r\n\r\n                <ExpansionPanelDetails>\r\n                    <List onMouseLeave={() => setTagHover(null)}>\r\n                        <ListItem\r\n                            button\r\n                            id=\"pickfiles\"\r\n                            className={classes.hiddenButton}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <UploadIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            button\r\n                            id=\"pickfolder\"\r\n                            className={classes.hiddenButton}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <UploadIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText />\r\n                        </ListItem>\r\n                        {[\r\n                            {\r\n                                key: \"视频\",\r\n                                id: \"video\",\r\n                                icon: (\r\n                                    <VideoIcon\r\n                                        className={[\r\n                                            classes.iconFix,\r\n                                            classes.iconVideo,\r\n                                        ]}\r\n                                    />\r\n                                ),\r\n                            },\r\n                            {\r\n                                key: \"图片\",\r\n                                id: \"image\",\r\n                                icon: (\r\n                                    <ImageIcon\r\n                                        className={[\r\n                                            classes.iconFix,\r\n                                            classes.iconImg,\r\n                                        ]}\r\n                                    />\r\n                                ),\r\n                            },\r\n                            {\r\n                                key: \"音频\",\r\n                                id: \"audio\",\r\n                                icon: (\r\n                                    <MusicIcon\r\n                                        className={[\r\n                                            classes.iconFix,\r\n                                            classes.iconAudio,\r\n                                        ]}\r\n                                    />\r\n                                ),\r\n                            },\r\n                            {\r\n                                key: \"文档\",\r\n                                id: \"doc\",\r\n                                icon: (\r\n                                    <DocIcon\r\n                                        className={[\r\n                                            classes.iconFix,\r\n                                            classes.iconDoc,\r\n                                        ]}\r\n                                    />\r\n                                ),\r\n                            },\r\n                        ].map((v) => (\r\n                            <ListItem\r\n                                button\r\n                                key={v.key}\r\n                                onClick={() => SearchMyFile(v.id + \"/internal\")}\r\n                            >\r\n                                <ListItemIcon className={classes.subMenu}>\r\n                                    {v.icon}\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={v.key} />\r\n                            </ListItem>\r\n                        ))}\r\n                        {tags.map((v) => (\r\n                            <ListItem\r\n                                button\r\n                                key={v.id}\r\n                                onMouseEnter={() => setTagHover(v.id)}\r\n                                onClick={() => {\r\n                                    if (v.type === 0) {\r\n                                        SearchMyFile(\"tag/\" + v.id);\r\n                                    } else {\r\n                                        NavigateTo(v.expression);\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <ListItemIcon className={classes.subMenu}>\r\n                                    {getIcon(\r\n                                        v.type === 0\r\n                                            ? v.icon\r\n                                            : \"FolderHeartOutline\",\r\n                                        v.type === 0 ? v.color : null\r\n                                    )}\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    className={classes.overFlow}\r\n                                    primary={v.name}\r\n                                />\r\n\r\n                                {tagHover === v.id && (\r\n                                    <ListItemSecondaryAction\r\n                                        onClick={() => submitDelete(v.id)}\r\n                                    >\r\n                                        <IconButton\r\n                                            size={\"small\"}\r\n                                            edge=\"end\"\r\n                                            aria-label=\"delete\"\r\n                                        >\r\n                                            <Clear />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                )}\r\n                            </ListItem>\r\n                        ))}\r\n\r\n                        <ListItem button onClick={() => setAddTagModal(true)}>\r\n                            <ListItemIcon className={classes.subMenu}>\r\n                                <TagPlus className={classes.iconFix} />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={\"添加标签...\"} />\r\n                        </ListItem>\r\n                    </List>{\" \"}\r\n                    <Divider />\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        </>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { baseURL } from \"../../middleware/Api\";\r\nimport { showImgPreivew } from \"../../actions/index\";\r\nimport { imgPreviewSuffix } from \"../../config\";\r\nimport { withStyles } from \"@material-ui/core\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport { withRouter } from \"react-router\";\r\nimport { PhotoSlider } from \"react-photo-view\";\r\nimport \"react-photo-view/dist/index.css\";\r\nimport * as explorer from \"../../redux/explorer/reducer\";\r\n\r\nconst styles = () => ({});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        first: state.explorer.imgPreview.first,\r\n        other: state.explorer.imgPreview.other,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        showImgPreivew: (first) => {\r\n            dispatch(showImgPreivew(first));\r\n        },\r\n    };\r\n};\r\n\r\nclass ImagPreviewComponent extends Component {\r\n    state = {\r\n        items: [],\r\n        photoIndex: 0,\r\n        isOpen: false,\r\n    };\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        const items = [];\r\n        let firstOne = 0;\r\n        if (nextProps.first.id !== \"\") {\r\n            if (\r\n                pathHelper.isSharePage(this.props.location.pathname) &&\r\n                !nextProps.first.path\r\n            ) {\r\n                const newImg = {\r\n                    intro: nextProps.first.name,\r\n                    src: baseURL + \"/share/preview/\" + nextProps.first.key,\r\n                };\r\n                firstOne = 0;\r\n                items.push(newImg);\r\n                this.setState({\r\n                    photoIndex: firstOne,\r\n                    items: items,\r\n                    isOpen: true,\r\n                });\r\n                return;\r\n            }\r\n            // eslint-disable-next-line\r\n            nextProps.other.map((value) => {\r\n                const fileType = value.name.split(\".\").pop().toLowerCase();\r\n                if (imgPreviewSuffix.indexOf(fileType) !== -1) {\r\n                    let src = \"\";\r\n                    if (pathHelper.isSharePage(this.props.location.pathname)) {\r\n                        src = baseURL + \"/share/preview/\" + value.key;\r\n                        src =\r\n                            src +\r\n                            \"?path=\" +\r\n                            encodeURIComponent(\r\n                                value.path === \"/\"\r\n                                    ? value.path + value.name\r\n                                    : value.path + \"/\" + value.name\r\n                            );\r\n                    } else {\r\n                        src = baseURL + \"/file/preview/\" + value.id;\r\n                    }\r\n                    const newImg = {\r\n                        intro: value.name,\r\n                        src: src,\r\n                    };\r\n                    if (\r\n                        value.path === nextProps.first.path &&\r\n                        value.name === nextProps.first.name\r\n                    ) {\r\n                        firstOne = items.length;\r\n                    }\r\n                    items.push(newImg);\r\n                }\r\n            });\r\n            this.setState({\r\n                photoIndex: firstOne,\r\n                items: items,\r\n                isOpen: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.props.showImgPreivew(explorer.initState.imgPreview.first);\r\n        this.setState({\r\n            isOpen: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { photoIndex, isOpen, items } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                {isOpen && (\r\n                    <PhotoSlider\r\n                        images={items}\r\n                        visible={isOpen}\r\n                        onClose={() => this.handleClose()}\r\n                        index={photoIndex}\r\n                        onIndexChange={(n) =>\r\n                            this.setState({\r\n                                photoIndex: n,\r\n                            })\r\n                        }\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nImagPreviewComponent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst ImgPreivew = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(ImagPreviewComponent)));\r\n\r\nexport default ImgPreivew;\r\n","import { isMac } from \"../utils\";\r\nimport pathHelper from \"../utils/page\";\r\nimport Auth from \"../middleware/Auth\";\r\nimport {\r\n    changeContextMenu,\r\n    openLoadingDialog,\r\n    showImgPreivew,\r\n    toggleSnackbar,\r\n    showAudioPreview,\r\n} from \"./index\";\r\nimport { isPreviewable } from \"../config\";\r\nimport { push } from \"connected-react-router\";\r\n\r\nexport const removeSelectedTargets = (fileIds) => {\r\n    return {\r\n        type: \"RMOVE_SELECTED_TARGETS\",\r\n        fileIds,\r\n    };\r\n};\r\n\r\nexport const addSelectedTargets = (targets) => {\r\n    return {\r\n        type: \"ADD_SELECTED_TARGETS\",\r\n        targets,\r\n    };\r\n};\r\n\r\nexport const setSelectedTarget = (targets) => {\r\n    return {\r\n        type: \"SET_SELECTED_TARGET\",\r\n        targets,\r\n    };\r\n};\r\n\r\nexport const setLastSelect = (file, index) => {\r\n    return {\r\n        type: \"SET_LAST_SELECT\",\r\n        file,\r\n        index,\r\n    };\r\n};\r\n\r\nexport const setShiftSelectedIds = (shiftSelectedIds) => {\r\n    return {\r\n        type: \"SET_SHIFT_SELECTED_IDS\",\r\n        shiftSelectedIds,\r\n    };\r\n};\r\n\r\nexport const openPreview = () => {\r\n    return (dispatch, getState) => {\r\n        const {\r\n            explorer: { selected },\r\n            router: {\r\n                location: { pathname },\r\n            },\r\n        } = getState();\r\n        const isShare = pathHelper.isSharePage(pathname);\r\n        if (isShare) {\r\n            const user = Auth.GetUser();\r\n            if (!Auth.Check() && user && !user.group.shareDownload) {\r\n                dispatch(toggleSnackbar(\"top\", \"right\", \"请先登录\", \"warning\"));\r\n                dispatch(changeContextMenu(\"file\", false));\r\n                return;\r\n            }\r\n        }\r\n\r\n        dispatch(changeContextMenu(\"file\", false));\r\n        const previewPath =\r\n            selected[0].path === \"/\"\r\n                ? selected[0].path + selected[0].name\r\n                : selected[0].path + \"/\" + selected[0].name;\r\n        switch (isPreviewable(selected[0].name)) {\r\n            case \"img\":\r\n                dispatch(showImgPreivew(selected[0]));\r\n                return;\r\n            case \"msDoc\":\r\n                if (isShare) {\r\n                    dispatch(\r\n                        push(\r\n                            selected[0].key +\r\n                                \"/doc?name=\" +\r\n                                encodeURIComponent(selected[0].name) +\r\n                                \"&share_path=\" +\r\n                                encodeURIComponent(previewPath)\r\n                        )\r\n                    );\r\n                    return;\r\n                }\r\n                dispatch(\r\n                    push(\r\n                        \"/doc?p=\" +\r\n                            encodeURIComponent(previewPath) +\r\n                            \"&id=\" +\r\n                            selected[0].id\r\n                    )\r\n                );\r\n                return;\r\n            case \"audio\":\r\n                //if (isShare) {\r\n                //    dispatch(openMusicDialog());\r\n                //}else{\r\n                    dispatch(showAudioPreview(selected[0]));\r\n                //}\r\n                return;\r\n            case \"video\":\r\n                if (isShare) {\r\n                    dispatch(\r\n                        push(\r\n                            selected[0].key +\r\n                                \"/video?name=\" +\r\n                                encodeURIComponent(selected[0].name) +\r\n                                \"&share_path=\" +\r\n                                encodeURIComponent(previewPath)\r\n                        )\r\n                    );\r\n                    return;\r\n                }\r\n                dispatch(\r\n                    push(\r\n                        \"/video?p=\" +\r\n                            encodeURIComponent(previewPath) +\r\n                            \"&id=\" +\r\n                            selected[0].id\r\n                    )\r\n                );\r\n                return;\r\n            case \"pdf\":\r\n                if (isShare) {\r\n                    dispatch(\r\n                        push(\r\n                            selected[0].key +\r\n                                \"/pdf?name=\" +\r\n                                encodeURIComponent(selected[0].name) +\r\n                                \"&share_path=\" +\r\n                                encodeURIComponent(previewPath)\r\n                        )\r\n                    );\r\n                    return;\r\n                }\r\n                dispatch(\r\n                    push(\r\n                        \"/pdf?p=\" +\r\n                            encodeURIComponent(previewPath) +\r\n                            \"&id=\" +\r\n                            selected[0].id\r\n                    )\r\n                );\r\n                return;\r\n            case \"edit\":\r\n                if (isShare) {\r\n                    dispatch(\r\n                        push(\r\n                            selected[0].key +\r\n                                \"/text?name=\" +\r\n                                encodeURIComponent(selected[0].name) +\r\n                                \"&share_path=\" +\r\n                                encodeURIComponent(previewPath)\r\n                        )\r\n                    );\r\n                    return;\r\n                }\r\n                dispatch(\r\n                    push(\r\n                        \"/text?p=\" +\r\n                            encodeURIComponent(previewPath) +\r\n                            \"&id=\" +\r\n                            selected[0].id\r\n                    )\r\n                );\r\n                return;\r\n            case \"code\":\r\n                if (isShare) {\r\n                    dispatch(\r\n                        push(\r\n                            selected[0].key +\r\n                                \"/code?name=\" +\r\n                                encodeURIComponent(selected[0].name) +\r\n                                \"&share_path=\" +\r\n                                encodeURIComponent(previewPath)\r\n                        )\r\n                    );\r\n                    return;\r\n                }\r\n                dispatch(\r\n                    push(\r\n                        \"/code?p=\" +\r\n                            encodeURIComponent(previewPath) +\r\n                            \"&id=\" +\r\n                            selected[0].id\r\n                    )\r\n                );\r\n                return;\r\n            default:\r\n                dispatch(openLoadingDialog(\"获取下载地址...\"));\r\n                return;\r\n        }\r\n    };\r\n};\r\n\r\nexport const selectFile = (file, event, fileIndex) => {\r\n    const { ctrlKey, metaKey, shiftKey } = event;\r\n    return (dispatch, getState) => {\r\n        // 多种组合操作忽略\r\n        if ([ctrlKey, metaKey, shiftKey].filter(Boolean).length > 1) {\r\n            return;\r\n        }\r\n        const isMacbook = isMac();\r\n        const { explorer } = getState();\r\n        const { selected, lastSelect, dirList, fileList } = explorer;\r\n        if (\r\n            shiftKey &&\r\n            !ctrlKey &&\r\n            !metaKey &&\r\n            selected.length !== 0 &&\r\n            // 点击类型一样\r\n            file.type === lastSelect.file.type\r\n        ) {\r\n            // shift 多选\r\n            // 取消原有选择\r\n            dispatch(removeSelectedTargets(selected.map((v) => v.id)));\r\n            // 添加新选择\r\n            const begin = Math.min(lastSelect.index, fileIndex);\r\n            const end = Math.max(lastSelect.index, fileIndex);\r\n            const list = file.type === \"dir\" ? dirList : fileList;\r\n            const newShiftSelected = list.slice(begin, end + 1);\r\n            return dispatch(addSelectedTargets(newShiftSelected));\r\n        }\r\n        dispatch(setLastSelect(file, fileIndex));\r\n        dispatch(setShiftSelectedIds([]));\r\n        if ((ctrlKey && !isMacbook) || (metaKey && isMacbook)) {\r\n            // Ctrl/Command 单击添加/删除\r\n            const presentIndex = selected.findIndex((value) => {\r\n                return value.id === file.id;\r\n            });\r\n            if (presentIndex !== -1) {\r\n                return dispatch(removeSelectedTargets([file.id]));\r\n            }\r\n            return dispatch(addSelectedTargets([file]));\r\n        }\r\n        // 单选\r\n        return dispatch(setSelectedTarget([file]));\r\n    };\r\n};\r\n","export * from \"./explorer\";\r\n\r\nexport const setNavigator = (path, navigatorLoading) => {\r\n    return {\r\n        type: \"SET_NAVIGATOR\",\r\n        path,\r\n        navigatorLoading,\r\n    };\r\n};\r\n\r\nexport const navigateTo = (path) => {\r\n    return (dispatch, getState) => {\r\n        const state = getState();\r\n        const navigatorLoading = path !== state.navigator.path;\r\n        dispatch(setNavigator(path, navigatorLoading));\r\n    };\r\n};\r\n\r\nexport const navigateUp = () => {\r\n    return (dispatch, getState) => {\r\n        const state = getState();\r\n        const pathSplit = state.navigator.path.split(\"/\");\r\n        pathSplit.pop();\r\n        const newPath = pathSplit.length === 1 ? \"/\" : pathSplit.join(\"/\");\r\n        const navigatorLoading = newPath !== state.navigator.path;\r\n        dispatch(setNavigator(newPath, navigatorLoading));\r\n    };\r\n};\r\n\r\nexport const drawerToggleAction = (open) => {\r\n    return {\r\n        type: \"DRAWER_TOGGLE\",\r\n        open: open,\r\n    };\r\n};\r\n\r\nexport const dragAndDrop = (source, target) => {\r\n    return {\r\n        type: \"DRAG_AND_DROP\",\r\n        source: source,\r\n        target: target,\r\n    };\r\n};\r\n\r\nexport const changeViewMethod = (method) => {\r\n    return {\r\n        type: \"CHANGE_VIEW_METHOD\",\r\n        method: method,\r\n    };\r\n};\r\n\r\nexport const toggleDaylightMode = () => {\r\n    return {\r\n        type: \"TOGGLE_DAYLIGHT_MODE\",\r\n    };\r\n};\r\n\r\nexport const changeContextMenu = (type, open) => {\r\n    return {\r\n        type: \"CHANGE_CONTEXT_MENU\",\r\n        menuType: type,\r\n        open: open,\r\n    };\r\n};\r\n\r\nexport const setNavigatorLoadingStatus = (status) => {\r\n    return {\r\n        type: \"SET_NAVIGATOR_LOADING_STATUE\",\r\n        status: status,\r\n    };\r\n};\r\n\r\nexport const setNavigatorError = (status, msg) => {\r\n    return {\r\n        type: \"SET_NAVIGATOR_ERROR\",\r\n        status: status,\r\n        msg: msg,\r\n    };\r\n};\r\n\r\nexport const openCreateFolderDialog = () => {\r\n    return {\r\n        type: \"OPEN_CREATE_FOLDER_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const openCreateFileDialog = () => {\r\n    return {\r\n        type: \"OPEN_CREATE_FILE_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const setUserPopover = (anchor) => {\r\n    return {\r\n        type: \"SET_USER_POPOVER\",\r\n        anchor: anchor,\r\n    };\r\n};\r\n\r\nexport const setShareUserPopover = (anchor) => {\r\n    return {\r\n        type: \"SET_SHARE_USER_POPOVER\",\r\n        anchor: anchor,\r\n    };\r\n};\r\n\r\nexport const openRenameDialog = () => {\r\n    return {\r\n        type: \"OPEN_RENAME_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const openResaveDialog = (key) => {\r\n    return {\r\n        type: \"OPEN_RESAVE_DIALOG\",\r\n        key: key,\r\n    };\r\n};\r\n\r\nexport const openMoveDialog = () => {\r\n    return {\r\n        type: \"OPEN_MOVE_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const openRemoveDialog = () => {\r\n    return {\r\n        type: \"OPEN_REMOVE_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const openShareDialog = () => {\r\n    return {\r\n        type: \"OPEN_SHARE_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const applyThemes = (theme) => {\r\n    return {\r\n        type: \"APPLY_THEME\",\r\n        theme: theme,\r\n    };\r\n};\r\n\r\nexport const setSessionStatus = (status) => {\r\n    return {\r\n        type: \"SET_SESSION_STATUS\",\r\n        status: status,\r\n    };\r\n};\r\n\r\nexport const openMusicDialog = () => {\r\n    return {\r\n        type: \"OPEN_MUSIC_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const openRemoteDownloadDialog = () => {\r\n    return {\r\n        type: \"OPEN_REMOTE_DOWNLOAD_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const openTorrentDownloadDialog = () => {\r\n    return {\r\n        type: \"OPEN_TORRENT_DOWNLOAD_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const openDecompressDialog = () => {\r\n    return {\r\n        type: \"OPEN_DECOMPRESS_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const openCompressDialog = () => {\r\n    return {\r\n        type: \"OPEN_COMPRESS_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const openGetSourceDialog = () => {\r\n    return {\r\n        type: \"OPEN_GET_SOURCE_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const openCopyDialog = () => {\r\n    return {\r\n        type: \"OPEN_COPY_DIALOG\",\r\n    };\r\n};\r\n\r\nexport const openLoadingDialog = (text) => {\r\n    return {\r\n        type: \"OPEN_LOADING_DIALOG\",\r\n        text: text,\r\n    };\r\n};\r\n\r\nexport const closeAllModals = () => {\r\n    return {\r\n        type: \"CLOSE_ALL_MODALS\",\r\n    };\r\n};\r\n\r\nexport const toggleSnackbar = (vertical, horizontal, msg, color) => {\r\n    return {\r\n        type: \"TOGGLE_SNACKBAR\",\r\n        vertical: vertical,\r\n        horizontal: horizontal,\r\n        msg: msg,\r\n        color: color,\r\n    };\r\n};\r\n\r\nexport const enableLoadUploader = () => {\r\n    return {\r\n        type: \"ENABLE_LOAD_UPLOADER\",\r\n    };\r\n};\r\n\r\nexport const setModalsLoading = (status) => {\r\n    return {\r\n        type: \"SET_MODALS_LOADING\",\r\n        status: status,\r\n    };\r\n};\r\n\r\nexport const refreshFileList = () => {\r\n    return {\r\n        type: \"REFRESH_FILE_LIST\",\r\n    };\r\n};\r\n\r\nexport const searchMyFile = (keywords) => {\r\n    return {\r\n        type: \"SEARCH_MY_FILE\",\r\n        keywords: keywords,\r\n    };\r\n};\r\n\r\nexport const showImgPreivew = (first) => {\r\n    return {\r\n        type: \"SHOW_IMG_PREIVEW\",\r\n        first: first,\r\n    };\r\n};\r\n\r\nexport const showAudioPreview = (first) => {\r\n    return {\r\n        type: \"SHOW_AUDIO_PREVIEW\",\r\n        first: first,\r\n    };\r\n};\r\n\r\nexport const audioPreviewSetIsOpen = (isOpen) => {\r\n    return {\r\n        type: \"AUDIO_PREVIEW_SET_IS_OPEN\",\r\n        isOpen,\r\n    };\r\n};\r\n\r\nexport const audioPreviewSetPlaying = (playingName, paused) => {\r\n    return {\r\n        type: \"AUDIO_PREVIEW_SET_PLAYING\",\r\n        playingName, //the playing content name\r\n        paused,\r\n    };\r\n};\r\n\r\nexport const refreshStorage = () => {\r\n    return {\r\n        type: \"REFRESH_STORAGE\",\r\n    };\r\n};\r\n\r\nexport const saveFile = () => {\r\n    return {\r\n        type: \"SAVE_FILE\",\r\n    };\r\n};\r\n\r\nexport const setSiteConfig = (config) => {\r\n    return {\r\n        type: \"SET_SITE_CONFIG\",\r\n        config: config,\r\n    };\r\n};\r\n","import { ChunkProgress } from \"./uploader/chunk\";\r\n\r\nexport enum PolicyType {\r\n    local = \"local\",\r\n    remote = \"remote\",\r\n    oss = \"oss\",\r\n    qiniu = \"qiniu\",\r\n    onedrive = \"onedrive\",\r\n}\r\n\r\nexport interface Policy {\r\n    id: number;\r\n    name: string;\r\n    allowedSuffix: Nullable<string[]>;\r\n    maxSize: number;\r\n    type: PolicyType;\r\n}\r\n\r\nexport enum TaskType {\r\n    file,\r\n    folder,\r\n}\r\n\r\nexport interface Task {\r\n    type: TaskType;\r\n    name: string;\r\n    policy: Policy;\r\n    dst: string;\r\n    file: File;\r\n    child?: Task[];\r\n    session?: UploadCredential;\r\n    chunkProgress: ChunkProgress[];\r\n    resumed: boolean;\r\n}\r\n\r\ntype Nullable<T> = T | null;\r\n\r\nexport interface Response<T> {\r\n    code: number;\r\n    data: T;\r\n    msg: string;\r\n    error: string;\r\n}\r\n\r\nexport interface UploadSessionRequest {\r\n    path: string;\r\n    size: number;\r\n    name: string;\r\n    policy_id: number;\r\n    last_modified?: number;\r\n}\r\n\r\nexport interface UploadCredential {\r\n    sessionID: string;\r\n    expires: number;\r\n    chunkSize: number;\r\n    uploadURLs: string[];\r\n    credential: string;\r\n}\r\n","export type LogLevel = \"INFO\" | \"WARN\" | \"ERROR\" | \"OFF\";\r\n\r\nexport default class Logger {\r\n    constructor(\r\n        public level: LogLevel = \"OFF\",\r\n        private prefix = \"UPLOAD\",\r\n        private id: number = 1\r\n    ) {}\r\n\r\n    private getPrintPrefix(level: LogLevel) {\r\n        return `Cloudreve-Uploader [${level}][${this.prefix}#${this.id}]:`;\r\n    }\r\n\r\n    info(...args: unknown[]) {\r\n        const allowLevel: LogLevel[] = [\"INFO\"];\r\n        if (allowLevel.includes(this.level)) {\r\n            // eslint-disable-next-line no-console\r\n            console.log(this.getPrintPrefix(\"INFO\"), ...args);\r\n        }\r\n    }\r\n\r\n    warn(...args: unknown[]) {\r\n        const allowLevel: LogLevel[] = [\"INFO\", \"WARN\"];\r\n        if (allowLevel.includes(this.level)) {\r\n            // eslint-disable-next-line no-console\r\n            console.warn(this.getPrintPrefix(\"WARN\"), ...args);\r\n        }\r\n    }\r\n\r\n    error(...args: unknown[]) {\r\n        const allowLevel: LogLevel[] = [\"INFO\", \"WARN\", \"ERROR\"];\r\n        if (allowLevel.includes(this.level)) {\r\n            // eslint-disable-next-line no-console\r\n            console.error(this.getPrintPrefix(\"ERROR\"), ...args);\r\n        }\r\n    }\r\n}\r\n","import Base from \"../uploader/base\";\r\n\r\nexport interface QueueContent {\r\n    uploader: Base;\r\n    resolve: () => void;\r\n    reject: (err?: any) => void;\r\n}\r\n\r\nexport class Pool {\r\n    queue: Array<QueueContent> = [];\r\n    processing: Array<QueueContent> = [];\r\n\r\n    constructor(private limit: number) {}\r\n\r\n    enqueue(uploader: Base) {\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.queue.push({\r\n                uploader,\r\n                resolve,\r\n                reject,\r\n            });\r\n            this.check();\r\n        });\r\n    }\r\n\r\n    release(item: QueueContent) {\r\n        this.processing = this.processing.filter((v) => v !== item);\r\n        this.check();\r\n    }\r\n\r\n    run(item: QueueContent) {\r\n        this.queue = this.queue.filter((v) => v !== item);\r\n        this.processing.push(item);\r\n        item.uploader.run().then(\r\n            () => {\r\n                item.resolve();\r\n                this.release(item);\r\n            },\r\n            (err) => {\r\n                item.reject(err);\r\n                this.release(item);\r\n            }\r\n        );\r\n    }\r\n\r\n    check() {\r\n        const processingNum = this.processing.length;\r\n        const availableNum = this.limit - processingNum;\r\n        this.queue.slice(0, availableNum).forEach((item) => {\r\n            this.run(item);\r\n        });\r\n    }\r\n}\r\n","import { Task } from \"../types\";\r\nimport Logger from \"../logger\";\r\nimport { UploaderError, UploaderErrorName } from \"../errors\";\r\nimport { ChunkProgress } from \"../uploader/chunk\";\r\n\r\nexport const sizeToString = (bytes: number): string => {\r\n    if (bytes === 0) return \"0 B\";\r\n    const k = 1024;\r\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return (bytes / Math.pow(k, i)).toFixed(1) + \" \" + sizes[i];\r\n};\r\n\r\n// 文件分块\r\nexport function getChunks(\r\n    file: File,\r\n    chunkByteSize: number | undefined\r\n): Blob[] {\r\n    // 如果 chunkByteSize 比文件大或为0，则直接取文件的大小\r\n    if (!chunkByteSize || chunkByteSize > file.size || chunkByteSize == 0) {\r\n        chunkByteSize = file.size;\r\n    }\r\n\r\n    const chunks: Blob[] = [];\r\n    const count = Math.ceil(file.size / chunkByteSize);\r\n    for (let i = 0; i < count; i++) {\r\n        const chunk = file.slice(\r\n            chunkByteSize * i,\r\n            i === count - 1 ? file.size : chunkByteSize * (i + 1)\r\n        );\r\n        chunks.push(chunk);\r\n    }\r\n\r\n    if (chunks.length == 0) {\r\n        chunks.push(file.slice(0));\r\n    }\r\n    return chunks;\r\n}\r\n\r\nexport function sumChunk(list: ChunkProgress[]) {\r\n    return list.reduce((data, loaded) => data + loaded.loaded, 0);\r\n}\r\n\r\nconst resumeKeyPrefix = \"cd_upload_ctx_\";\r\n\r\nexport function getResumeCtxKey(task: Task): string {\r\n    return `${resumeKeyPrefix}name_${task.file.name}_dst_${task.dst}_size_${task.file.size}_policy_${task.policy.id}`;\r\n}\r\n\r\nexport function setResumeCtx(task: Task, logger: Logger) {\r\n    const ctxKey = getResumeCtxKey(task);\r\n    try {\r\n        localStorage.setItem(ctxKey, JSON.stringify(task));\r\n    } catch (err) {\r\n        logger.warn(\r\n            new UploaderError(\r\n                UploaderErrorName.WriteCtxFailed,\r\n                `setResumeCtx failed: ${ctxKey}`\r\n            )\r\n        );\r\n    }\r\n}\r\n\r\nexport function removeResumeCtx(task: Task, logger: Logger) {\r\n    const ctxKey = getResumeCtxKey(task);\r\n    try {\r\n        localStorage.removeItem(ctxKey);\r\n    } catch (err) {\r\n        logger.warn(\r\n            new UploaderError(\r\n                UploaderErrorName.RemoveCtxFailed,\r\n                `removeResumeCtx failed. key: ${ctxKey}`\r\n            )\r\n        );\r\n    }\r\n}\r\n\r\nexport function cleanupResumeCtx(logger: Logger) {\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n        const key = localStorage.key(i);\r\n        if (key && key.startsWith(resumeKeyPrefix)) {\r\n            try {\r\n                localStorage.removeItem(key);\r\n            } catch (err) {\r\n                logger.warn(\r\n                    new UploaderError(\r\n                        UploaderErrorName.RemoveCtxFailed,\r\n                        `removeResumeCtx failed. key: ${key}`\r\n                    )\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function getResumeCtx(task: Task, logger: Logger): Task | null {\r\n    const ctxKey = getResumeCtxKey(task);\r\n    let localInfoString: string | null = null;\r\n    try {\r\n        localInfoString = localStorage.getItem(ctxKey);\r\n    } catch {\r\n        logger.warn(\r\n            new UploaderError(\r\n                UploaderErrorName.ReadCtxFailed,\r\n                `getResumeCtx failed. key: ${ctxKey}`\r\n            )\r\n        );\r\n    }\r\n\r\n    if (localInfoString == null) {\r\n        return null;\r\n    }\r\n\r\n    let localInfo: Task | null = null;\r\n    try {\r\n        localInfo = JSON.parse(localInfoString);\r\n    } catch {\r\n        // 本地信息已被破坏，直接删除\r\n        removeResumeCtx(task, logger);\r\n        logger.warn(\r\n            new UploaderError(\r\n                UploaderErrorName.InvalidCtxData,\r\n                `getResumeCtx failed to parse. key: ${ctxKey}`\r\n            )\r\n        );\r\n    }\r\n\r\n    if (\r\n        localInfo &&\r\n        localInfo.session &&\r\n        localInfo.session.expires < Math.floor(Date.now() / 1000)\r\n    ) {\r\n        removeResumeCtx(task, logger);\r\n        logger.warn(\r\n            new UploaderError(\r\n                UploaderErrorName.CtxExpired,\r\n                `upload session already expired at ${localInfo.session.expires}. key: ${ctxKey}`\r\n            )\r\n        );\r\n        return null;\r\n    }\r\n\r\n    return localInfo;\r\n}\r\n","import { Policy } from \"../types\";\r\nimport { FileValidateError } from \"../errors\";\r\n\r\ninterface Validator {\r\n    (file: File, policy: Policy): void;\r\n}\r\n\r\n// validators\r\nconst checkers: Array<Validator> = [\r\n    function checkExt(file: File, policy: Policy) {\r\n        if (\r\n            policy.allowedSuffix != undefined &&\r\n            policy.allowedSuffix.length > 0\r\n        ) {\r\n            const ext = file?.name.split(\".\").pop();\r\n            if (ext === null || !ext || !policy.allowedSuffix.includes(ext))\r\n                throw new FileValidateError(\r\n                    \"File suffix not allowed in policy.\",\r\n                    \"suffix\",\r\n                    policy\r\n                );\r\n        }\r\n    },\r\n\r\n    function checkSize(file: File, policy: Policy) {\r\n        if (policy.maxSize > 0) {\r\n            if (file.size > policy.maxSize) {\r\n                throw new FileValidateError(\r\n                    \"File size exceeds maximum limit.\",\r\n                    \"size\",\r\n                    policy\r\n                );\r\n            }\r\n        }\r\n    },\r\n];\r\n\r\n/* 将每个 Validator 执行\r\n   失败返回 Error\r\n */\r\nexport function validate(file: File, policy: Policy) {\r\n    checkers.forEach((c) => c(file, policy));\r\n}\r\n","import { Policy, Response } from \"../types\";\r\nimport { sizeToString } from \"../utils\";\r\n\r\nexport enum UploaderErrorName {\r\n    InvalidFile = \"InvalidFile\",\r\n    NoPolicySelected = \"NoPolicySelected\",\r\n    UnknownPolicyType = \"UnknownPolicyType\",\r\n    FailedCreateUploadSession = \"FailedCreateUploadSession\",\r\n    FailedDeleteUploadSession = \"FailedDeleteUploadSession\",\r\n    HTTPRequestFailed = \"HTTPRequestFailed\",\r\n    LocalChunkUploadFailed = \"LocalChunkUploadFailed\",\r\n    SlaveChunkUploadFailed = \"SlaveChunkUploadFailed\",\r\n    WriteCtxFailed = \"WriteCtxFailed\",\r\n    RemoveCtxFailed = \"RemoveCtxFailed\",\r\n    ReadCtxFailed = \"ReadCtxFailed\",\r\n    InvalidCtxData = \"InvalidCtxData\",\r\n    CtxExpired = \"CtxExpired\",\r\n    RequestCanceled = \"RequestCanceled\",\r\n}\r\n\r\nconst RETRY_ERROR_LIST = [\r\n    UploaderErrorName.FailedCreateUploadSession,\r\n    UploaderErrorName.HTTPRequestFailed,\r\n    UploaderErrorName.LocalChunkUploadFailed,\r\n    UploaderErrorName.SlaveChunkUploadFailed,\r\n    UploaderErrorName.RequestCanceled,\r\n];\r\n\r\nconst RETRY_CODE_LIST = [-1];\r\n\r\nexport class UploaderError implements Error {\r\n    public stack: string | undefined;\r\n    constructor(public name: UploaderErrorName, public message: string) {\r\n        this.stack = new Error().stack;\r\n    }\r\n\r\n    public Message(i18n: string): string {\r\n        return this.message;\r\n    }\r\n\r\n    public Retryable(): boolean {\r\n        return RETRY_ERROR_LIST.includes(this.name);\r\n    }\r\n}\r\n\r\n// 文件未通过存储策略验证\r\nexport class FileValidateError extends UploaderError {\r\n    // 未通过验证的文件属性\r\n    public field: \"size\" | \"suffix\";\r\n\r\n    // 对应的存储策略\r\n    public policy: Policy;\r\n\r\n    constructor(message: string, field: \"size\" | \"suffix\", policy: Policy) {\r\n        super(UploaderErrorName.InvalidFile, message);\r\n        this.field = field;\r\n        this.policy = policy;\r\n    }\r\n\r\n    public Message(i18n: string): string {\r\n        if (this.field == \"size\") {\r\n            return `文件大小超出存储策略限制（最大：${sizeToString(\r\n                this.policy.maxSize\r\n            )}）`;\r\n        }\r\n\r\n        return `存储策略不支持上传此扩展名的文件（当前支持：${\r\n            this.policy.allowedSuffix\r\n                ? this.policy.allowedSuffix.join(\",\")\r\n                : \"*\"\r\n        }）`;\r\n    }\r\n}\r\n\r\n// 未知存储策略\r\nexport class UnknownPolicyError extends UploaderError {\r\n    // 对应的存储策略\r\n    public policy: Policy;\r\n\r\n    constructor(message: string, policy: Policy) {\r\n        super(UploaderErrorName.UnknownPolicyType, message);\r\n        this.policy = policy;\r\n    }\r\n}\r\n\r\n// 后端 API 出错\r\nexport class APIError extends UploaderError {\r\n    constructor(\r\n        name: UploaderErrorName,\r\n        message: string,\r\n        protected response: Response<any>\r\n    ) {\r\n        super(name, message);\r\n    }\r\n\r\n    public Message(i18n: string): string {\r\n        let msg = `${this.message}: ${this.response.msg}`;\r\n        if (this.response.error) {\r\n            msg += ` (${this.response.error})`;\r\n        }\r\n\r\n        return msg;\r\n    }\r\n\r\n    public Retryable(): boolean {\r\n        return (\r\n            super.Retryable() && RETRY_CODE_LIST.includes(this.response.code)\r\n        );\r\n    }\r\n}\r\n\r\n// 无法创建上传会话\r\nexport class CreateUploadSessionError extends APIError {\r\n    constructor(response: Response<any>) {\r\n        super(UploaderErrorName.FailedCreateUploadSession, \"\", response);\r\n    }\r\n\r\n    public Message(i18n: string): string {\r\n        this.message = \"无法创建上传会话\";\r\n        return super.Message(i18n);\r\n    }\r\n}\r\n\r\n// 无法删除上传会话\r\nexport class DeleteUploadSessionError extends APIError {\r\n    constructor(response: Response<any>) {\r\n        super(UploaderErrorName.FailedDeleteUploadSession, \"\", response);\r\n    }\r\n\r\n    public Message(i18n: string): string {\r\n        this.message = \"无法删除上传会话\";\r\n        return super.Message(i18n);\r\n    }\r\n}\r\n\r\n// HTTP 请求出错\r\nexport class HTTPError extends UploaderError {\r\n    constructor(protected axiosErr: Error, protected url: string) {\r\n        super(UploaderErrorName.HTTPRequestFailed, axiosErr.message);\r\n    }\r\n\r\n    public Message(i18n: string): string {\r\n        return `请求失败: ${this.axiosErr} (${this.url})`;\r\n    }\r\n}\r\n\r\n// 本地分块上传失败\r\nexport class LocalChunkUploadError extends APIError {\r\n    constructor(response: Response<any>, protected chunkIndex: number) {\r\n        super(UploaderErrorName.LocalChunkUploadFailed, \"\", response);\r\n    }\r\n\r\n    public Message(i18n: string): string {\r\n        this.message = `分片 [${this.chunkIndex}] 上传失败`;\r\n        return super.Message(i18n);\r\n    }\r\n}\r\n\r\n// 无法创建上传会话\r\nexport class RequestCanceledError extends UploaderError {\r\n    constructor() {\r\n        super(UploaderErrorName.RequestCanceled, \"Request canceled\");\r\n    }\r\n}\r\n\r\n// 从机分块上传失败\r\nexport class SlaveChunkUploadError extends APIError {\r\n    constructor(response: Response<any>, protected chunkIndex: number) {\r\n        super(UploaderErrorName.SlaveChunkUploadFailed, \"\", response);\r\n    }\r\n\r\n    public Message(i18n: string): string {\r\n        this.message = `分片 [${this.chunkIndex}] 上传失败`;\r\n        return super.Message(i18n);\r\n    }\r\n}\r\n","import axios, { AxiosRequestConfig } from \"axios\";\r\nimport { Response } from \"../types\";\r\nimport { HTTPError, RequestCanceledError } from \"../errors\";\r\n\r\nexport const { CancelToken } = axios;\r\nexport { CancelToken as CancelTokenType, CancelTokenSource } from \"axios\";\r\n\r\nconst defaultConfig = {\r\n    baseURL: \"/api/v3\",\r\n    withCredentials: true,\r\n    transformResponse: [(response: any) => JSON.parse(response)],\r\n};\r\n\r\nexport function requestAPI<T = any>(url: string, config?: AxiosRequestConfig) {\r\n    return axios\r\n        .request<Response<T>>({ ...defaultConfig, ...config, url })\r\n        .catch((err) => {\r\n            if (axios.isCancel(err)) {\r\n                throw new RequestCanceledError();\r\n            }\r\n\r\n            throw new HTTPError(err, url);\r\n        });\r\n}\r\n","// 所有 Uploader 的基类\r\nimport { PolicyType, Task } from \"../types\";\r\nimport UploadManager from \"../index\";\r\nimport Logger from \"../logger\";\r\nimport { validate } from \"../utils/validator\";\r\nimport { CancelToken } from \"../utils/request\";\r\nimport axios, { CancelTokenSource } from \"axios\";\r\nimport { createUploadSession, deleteUploadSession } from \"../api\";\r\nimport * as utils from \"../utils\";\r\nimport { RequestCanceledError, UploaderError } from \"../errors\";\r\n\r\nexport enum Status {\r\n    added,\r\n    initialized,\r\n    queued,\r\n    preparing,\r\n    processing,\r\n    finishing,\r\n    finished,\r\n    error,\r\n    canceled,\r\n}\r\n\r\nexport interface UploadHandlers {\r\n    onTransition: (newStatus: Status) => void;\r\n    onError: (err: Error) => void;\r\n    onProgress: (data: UploadProgress) => void;\r\n    onMsg: (msg: string, color: string) => void;\r\n}\r\n\r\nexport interface UploadProgress {\r\n    total: ProgressCompose;\r\n    chunks?: ProgressCompose[];\r\n}\r\n\r\nexport interface ProgressCompose {\r\n    size: number;\r\n    loaded: number;\r\n    percent: number;\r\n    fromCache?: boolean;\r\n}\r\n\r\nexport interface Progress {\r\n    total: number;\r\n    loaded: number;\r\n}\r\n\r\nconst resumePolicy = [\r\n    PolicyType.local,\r\n    PolicyType.remote,\r\n    PolicyType.qiniu,\r\n    PolicyType.oss,\r\n    PolicyType.onedrive,\r\n];\r\nconst deleteUploadSessionDelay = 500;\r\n\r\nexport default abstract class Base {\r\n    public child?: Base[];\r\n    public status: Status = Status.added;\r\n    public error?: Error;\r\n\r\n    public id = ++Base.id;\r\n    private static id = 0;\r\n\r\n    protected logger: Logger;\r\n    protected subscriber: UploadHandlers;\r\n    // 用于取消请求\r\n    protected cancelToken: CancelTokenSource = CancelToken.source();\r\n    protected progress: UploadProgress;\r\n\r\n    constructor(public task: Task, protected manager: UploadManager) {\r\n        this.logger = new Logger(\r\n            this.manager.logger.level,\r\n            \"UPLOADER\",\r\n            this.id\r\n        );\r\n        this.logger.info(\"Initialize new uploader for task: \", task);\r\n\r\n        this.subscriber = {\r\n            /* eslint-disable @typescript-eslint/no-empty-function */\r\n            onTransition: (newStatus: Status) => {},\r\n            onError: (err: Error) => {},\r\n            onProgress: (data: UploadProgress) => {},\r\n            onMsg: (msg, color: string) => {},\r\n            /* eslint-enable @typescript-eslint/no-empty-function */\r\n        };\r\n    }\r\n\r\n    public subscribe = (handlers: UploadHandlers) => {\r\n        this.subscriber = handlers;\r\n    };\r\n\r\n    public start = async () => {\r\n        this.logger.info(\"Activate uploading task\");\r\n        this.transit(Status.initialized);\r\n\r\n        try {\r\n            validate(this.task.file, this.task.policy);\r\n        } catch (e) {\r\n            this.logger.error(\"File validate failed with error:\", e);\r\n            this.setError(e);\r\n            return;\r\n        }\r\n\r\n        this.logger.info(\"Enqueued in manager pool\");\r\n        this.transit(Status.queued);\r\n        this.manager.pool.enqueue(this).catch((e) => {\r\n            this.logger.info(\"Upload task failed with error:\", e);\r\n            this.setError(e);\r\n        });\r\n    };\r\n\r\n    public run = async () => {\r\n        this.logger.info(\"Start upload task, create upload session...\");\r\n        this.transit(Status.preparing);\r\n        const cachedInfo = utils.getResumeCtx(this.task, this.logger);\r\n        if (cachedInfo == null) {\r\n            this.task.session = await createUploadSession(\r\n                {\r\n                    path: this.task.dst,\r\n                    size: this.task.file.size,\r\n                    name: this.task.file.name,\r\n                    policy_id: this.task.policy.id,\r\n                    last_modified: this.task.file.lastModified,\r\n                },\r\n                this.cancelToken.token\r\n            );\r\n            this.logger.info(\"Upload session created:\", this.task.session);\r\n        } else {\r\n            this.task.session = cachedInfo.session;\r\n            this.task.resumed = true;\r\n            this.task.chunkProgress = cachedInfo.chunkProgress;\r\n            this.logger.info(\"Resume upload from cached ctx:\", cachedInfo);\r\n        }\r\n\r\n        this.transit(Status.processing);\r\n        await this.upload();\r\n    };\r\n\r\n    public abstract async upload(): Promise<any>;\r\n\r\n    public cancel = async () => {\r\n        this.cancelToken.cancel();\r\n        await this.cancelUploadSession();\r\n        this.transit(Status.canceled);\r\n    };\r\n\r\n    public reset = () => {\r\n        this.cancelToken = axios.CancelToken.source();\r\n        this.progress = {\r\n            total: {\r\n                size: 0,\r\n                loaded: 0,\r\n                percent: 0,\r\n            },\r\n        };\r\n    };\r\n\r\n    protected setError(e: Error) {\r\n        if (\r\n            !(e instanceof UploaderError && e.Retryable()) ||\r\n            !resumePolicy.includes(this.task.policy.type)\r\n        ) {\r\n            this.logger.warn(\"Non-resume error occurs, clean resume ctx cache\");\r\n            this.cancelUploadSession();\r\n        }\r\n\r\n        if (!(e instanceof RequestCanceledError)) {\r\n            this.status = Status.error;\r\n            this.error = e;\r\n            this.subscriber.onError(e);\r\n        }\r\n    }\r\n\r\n    protected cancelUploadSession = (): Promise<void> => {\r\n        return new Promise<void>((resolve) => {\r\n            utils.removeResumeCtx(this.task, this.logger);\r\n            if (this.task.session) {\r\n                setTimeout(() => {\r\n                    deleteUploadSession(this.task.session!?.sessionID)\r\n                        .catch((e) => {\r\n                            this.logger.warn(\r\n                                \"Failed to cancel upload session: \",\r\n                                e\r\n                            );\r\n                        })\r\n                        .finally(() => {\r\n                            resolve();\r\n                        });\r\n                }, deleteUploadSessionDelay);\r\n            } else {\r\n                resolve();\r\n            }\r\n        });\r\n    };\r\n\r\n    protected transit(status: Status) {\r\n        this.status = status;\r\n        this.subscriber.onTransition(status);\r\n    }\r\n\r\n    public getProgressInfoItem(\r\n        loaded: number,\r\n        size: number,\r\n        fromCache?: boolean\r\n    ): ProgressCompose {\r\n        return {\r\n            size,\r\n            loaded,\r\n            percent: (loaded / size) * 100,\r\n            ...(fromCache == null ? {} : { fromCache }),\r\n        };\r\n    }\r\n}\r\n","import { UploadCredential, UploadSessionRequest } from \"../types\";\r\nimport { requestAPI } from \"../utils\";\r\nimport {\r\n    CreateUploadSessionError,\r\n    DeleteUploadSessionError,\r\n    LocalChunkUploadError,\r\n    SlaveChunkUploadError,\r\n} from \"../errors\";\r\nimport { ChunkInfo } from \"../uploader/chunk\";\r\nimport { Progress } from \"../uploader/base\";\r\nimport { CancelToken } from \"axios\";\r\n\r\nexport async function createUploadSession(\r\n    req: UploadSessionRequest,\r\n    cancel: CancelToken\r\n): Promise<UploadCredential> {\r\n    const res = await requestAPI<UploadCredential>(\"file/upload\", {\r\n        method: \"put\",\r\n        data: req,\r\n        cancelToken: cancel,\r\n    });\r\n\r\n    if (res.data.code !== 0) {\r\n        throw new CreateUploadSessionError(res.data);\r\n    }\r\n\r\n    return res.data.data;\r\n}\r\n\r\nexport async function deleteUploadSession(id: string): Promise<any> {\r\n    const res = await requestAPI<UploadCredential>(`file/upload/${id}`, {\r\n        method: \"delete\",\r\n    });\r\n\r\n    if (res.data.code !== 0) {\r\n        throw new DeleteUploadSessionError(res.data);\r\n    }\r\n\r\n    return res.data.data;\r\n}\r\n\r\nexport async function localUploadChunk(\r\n    sessionID: string,\r\n    chunk: ChunkInfo,\r\n    onProgress: (p: Progress) => void,\r\n    cancel: CancelToken\r\n): Promise<any> {\r\n    const res = await requestAPI<any>(\r\n        `file/upload/${sessionID}/${chunk.index}`,\r\n        {\r\n            method: \"post\",\r\n            headers: { \"content-type\": \"application/octet-stream\" },\r\n            data: chunk.chunk,\r\n            onUploadProgress: (progressEvent) => {\r\n                onProgress({\r\n                    loaded: progressEvent.loaded,\r\n                    total: progressEvent.total,\r\n                });\r\n            },\r\n            cancelToken: cancel,\r\n        }\r\n    );\r\n\r\n    if (res.data.code !== 0) {\r\n        throw new LocalChunkUploadError(res.data, chunk.index);\r\n    }\r\n\r\n    return res.data.data;\r\n}\r\n\r\nexport async function slaveUploadChunk(\r\n    url: string,\r\n    credential: string,\r\n    chunk: ChunkInfo,\r\n    onProgress: (p: Progress) => void,\r\n    cancel: CancelToken\r\n): Promise<any> {\r\n    const res = await requestAPI<any>(`${url}?chunk=${chunk.index}`, {\r\n        method: \"post\",\r\n        headers: {\r\n            \"content-type\": \"application/octet-stream\",\r\n            Authorization: credential,\r\n        },\r\n        data: chunk.chunk,\r\n        onUploadProgress: (progressEvent) => {\r\n            onProgress({\r\n                loaded: progressEvent.loaded,\r\n                total: progressEvent.total,\r\n            });\r\n        },\r\n        cancelToken: cancel,\r\n        withCredentials: false,\r\n    });\r\n\r\n    if (res.data.code !== 0) {\r\n        throw new SlaveChunkUploadError(res.data, chunk.index);\r\n    }\r\n\r\n    return res.data.data;\r\n}\r\n","import Base from \"./base\";\r\nimport * as utils from \"../utils\";\r\n\r\nexport interface ChunkProgress {\r\n    loaded: number;\r\n    index: number;\r\n}\r\n\r\nexport interface ChunkInfo {\r\n    chunk: Blob;\r\n    index: number;\r\n}\r\n\r\nexport default abstract class Chunk extends Base {\r\n    protected chunks: Blob[];\r\n\r\n    public upload = async () => {\r\n        this.logger.info(\"Preparing uploading file chunks.\");\r\n        this.initBeforeUploadChunks();\r\n\r\n        this.logger.info(\"Starting uploading file chunks:\", this.chunks);\r\n        this.updateLocalCache();\r\n        for (let i = 0; i < this.chunks.length; i++) {\r\n            if (\r\n                this.task.chunkProgress[i].loaded < this.chunks[i].size ||\r\n                this.chunks[i].size == 0\r\n            ) {\r\n                await this.uploadChunk({ chunk: this.chunks[i], index: i });\r\n                this.logger.info(`Chunk [${i}] uploaded.`);\r\n                this.updateLocalCache();\r\n            }\r\n        }\r\n\r\n        utils.removeResumeCtx(this.task, this.logger);\r\n    };\r\n\r\n    private initBeforeUploadChunks() {\r\n        this.chunks = utils.getChunks(\r\n            this.task.file,\r\n            this.task.session?.chunkSize\r\n        );\r\n        const cachedInfo = utils.getResumeCtx(this.task, this.logger);\r\n        if (cachedInfo == null) {\r\n            this.task.chunkProgress = this.chunks.map(\r\n                (value, index): ChunkProgress => ({\r\n                    loaded: 0,\r\n                    index,\r\n                })\r\n            );\r\n        }\r\n\r\n        this.notifyResumeProgress();\r\n    }\r\n\r\n    protected abstract async uploadChunk(chunkInfo: ChunkInfo): Promise<any>;\r\n\r\n    protected updateChunkProgress(loaded: number, index: number) {\r\n        this.task.chunkProgress[index].loaded = loaded;\r\n        this.notifyResumeProgress();\r\n    }\r\n\r\n    private notifyResumeProgress() {\r\n        this.progress = {\r\n            total: this.getProgressInfoItem(\r\n                utils.sumChunk(this.task.chunkProgress),\r\n                this.task.file.size + 1\r\n            ),\r\n            chunks: this.chunks.map((chunk, index) => {\r\n                return this.getProgressInfoItem(\r\n                    this.task.chunkProgress[index].loaded,\r\n                    chunk.size,\r\n                    false\r\n                );\r\n            }),\r\n        };\r\n        this.subscriber.onProgress(this.progress);\r\n    }\r\n\r\n    private updateLocalCache() {\r\n        utils.setResumeCtx(this.task, this.logger);\r\n    }\r\n}\r\n","import Chunk, { ChunkInfo } from \"./chunk\";\r\nimport { localUploadChunk } from \"../api\";\r\n\r\nexport default class Local extends Chunk {\r\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\r\n        return localUploadChunk(\r\n            this.task.session?.sessionID!,\r\n            chunkInfo,\r\n            (p) => {\r\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\r\n            },\r\n            this.cancelToken.token\r\n        );\r\n    }\r\n}\r\n","import Chunk, { ChunkInfo } from \"./chunk\";\r\nimport { slaveUploadChunk } from \"../api\";\r\n\r\nexport default class Remote extends Chunk {\r\n    protected async uploadChunk(chunkInfo: ChunkInfo) {\r\n        return slaveUploadChunk(\r\n            `${this.task.session?.uploadURLs[0]!}`,\r\n            this.task.session?.credential!,\r\n            chunkInfo,\r\n            (p) => {\r\n                this.updateChunkProgress(p.loaded, chunkInfo.index);\r\n            },\r\n            this.cancelToken.token\r\n        );\r\n    }\r\n}\r\n","import { Policy, PolicyType, Task, TaskType } from \"./types\";\r\nimport Logger, { LogLevel } from \"./logger\";\r\nimport { UnknownPolicyError, UploaderError, UploaderErrorName } from \"./errors\";\r\nimport Base from \"./uploader/base\";\r\nimport Local from \"./uploader/local\";\r\nimport { Pool } from \"./utils/pool\";\r\nimport { cleanupResumeCtx } from \"./utils\";\r\nimport Remote from \"./uploader/remote\";\r\n\r\nexport interface Option {\r\n    logLevel: LogLevel;\r\n    concurrentLimit: number;\r\n}\r\n\r\nexport default class UploadManager {\r\n    public logger: Logger;\r\n\r\n    public pool: Pool;\r\n\r\n    private static id = 0;\r\n    private policy?: Policy;\r\n    private input: HTMLInputElement;\r\n\r\n    private id = ++UploadManager.id;\r\n\r\n    constructor(o: Option) {\r\n        this.logger = new Logger(o.logLevel, \"MANAGER\");\r\n        this.logger.info(`Initialized with log level: ${o.logLevel}`);\r\n\r\n        this.pool = new Pool(o.concurrentLimit);\r\n\r\n        const input = document.createElement(\"input\");\r\n        input.type = \"file\";\r\n        input.id = `upload-input-${this.id}`;\r\n        input.multiple = true;\r\n        input.hidden = true;\r\n        document.body.appendChild(input);\r\n        this.input = input;\r\n    }\r\n\r\n    dispatchUploader(task: Task): Base {\r\n        if (task.type == TaskType.folder) {\r\n            //return new Folder(task, this);\r\n        }\r\n\r\n        switch (task.policy.type) {\r\n            case PolicyType.local:\r\n                return new Local(task, this);\r\n            case PolicyType.remote:\r\n                return new Remote(task, this);\r\n            default:\r\n                throw new UnknownPolicyError(\r\n                    \"Unknown policy type.\",\r\n                    task.policy\r\n                );\r\n        }\r\n    }\r\n\r\n    // 设定当前存储策略\r\n    public setPolicy(p: Policy) {\r\n        this.policy = p;\r\n        if (p == undefined) {\r\n            this.logger.info(`Currently no policy selected`);\r\n            return;\r\n        }\r\n\r\n        this.logger.info(`Switching policy to:`, p);\r\n\r\n        if (p.allowedSuffix != undefined && p.allowedSuffix.length > 0) {\r\n            const acceptVal = p.allowedSuffix\r\n                .map((v) => {\r\n                    return \".\" + v;\r\n                })\r\n                .join(\",\");\r\n            this.logger.info(`Set allowed file suffix to ${acceptVal}`);\r\n            this.input.setAttribute(\"accept\", acceptVal);\r\n        } else {\r\n            this.logger.info(`Set allowed file suffix to *`);\r\n            this.input.removeAttribute(\"accept\");\r\n        }\r\n    }\r\n\r\n    // 选择文件\r\n    public select = (dst: string): Promise<Base[]> => {\r\n        return new Promise<Base[]>((resolve) => {\r\n            if (this.policy == undefined) {\r\n                this.logger.warn(\r\n                    `Calling file selector while no policy is set`\r\n                );\r\n                throw new UploaderError(\r\n                    UploaderErrorName.NoPolicySelected,\r\n                    \"No policy selected.\"\r\n                );\r\n            }\r\n\r\n            this.input.onchange = (ev: Event) => {\r\n                const target = ev.target as HTMLInputElement;\r\n                if (!ev || !target || !target.files) return;\r\n                if (target.files.length > 0) {\r\n                    resolve(\r\n                        Array.from(target.files).map(\r\n                            (file): Base =>\r\n                                this.dispatchUploader({\r\n                                    type: TaskType.file,\r\n                                    policy: this.policy as Policy,\r\n                                    dst: dst,\r\n                                    file: file,\r\n                                    name: file.name,\r\n                                    chunkProgress: [],\r\n                                    resumed: false,\r\n                                })\r\n                        )\r\n                    );\r\n                }\r\n            };\r\n\r\n            this.input.value = \"\";\r\n            this.input.click();\r\n        });\r\n    };\r\n\r\n    public cleanupSessions = () => {\r\n        cleanupResumeCtx(this.logger);\r\n    };\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Badge, makeStyles } from \"@material-ui/core\";\r\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\r\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\r\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\r\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\r\nimport PublishIcon from \"@material-ui/icons/Publish\";\r\nimport {\r\n    openCreateFileDialog,\r\n    openCreateFolderDialog,\r\n    toggleSnackbar,\r\n} from \"../../actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport AutoHidden from \"./AutoHidden\";\r\nimport statusHelper from \"../../utils/page\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport { FilePlus, FolderUpload } from \"mdi-material-ui\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    fab: {\r\n        margin: 0,\r\n        top: \"auto\",\r\n        right: 20,\r\n        bottom: 20,\r\n        left: \"auto\",\r\n        zIndex: 5,\r\n        position: \"fixed\",\r\n    },\r\n    badge: {\r\n        position: \"absolute\",\r\n        bottom: 26,\r\n        top: \"auto\",\r\n        zIndex: 9999,\r\n        right: 7,\r\n    },\r\n    \"@global\": {\r\n        \".MuiSpeedDialAction-staticTooltipLabel\": {\r\n            width: 100,\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function UploadButton(props) {\r\n    const [open, setOpen] = useState(false);\r\n    const [queued, setQueued] = useState(5);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const OpenNewFolderDialog = useCallback(\r\n        () => dispatch(openCreateFolderDialog()),\r\n        [dispatch]\r\n    );\r\n    const OpenNewFileDialog = useCallback(\r\n        () => dispatch(openCreateFileDialog()),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        setQueued(props.Queued);\r\n    }, [props.Queued]);\r\n\r\n    const uploadClicked = () => {\r\n        if (open) {\r\n            if (queued !== 0) {\r\n                props.openFileList();\r\n            } else {\r\n                props.selectFile();\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <AutoHidden enable hide={props.taskListOpen}>\r\n            <Badge\r\n                badgeContent={queued}\r\n                classes={{\r\n                    badge: classes.badge, // class name, e.g. `root-x`\r\n                }}\r\n                className={classes.fab}\r\n                invisible={queued === 0}\r\n                color=\"primary\"\r\n            >\r\n                <Backdrop open={open && statusHelper.isMobile()} />\r\n                <SpeedDial\r\n                    ariaLabel=\"SpeedDial openIcon example\"\r\n                    hidden={false}\r\n                    tooltipTitle=\"上传文件\"\r\n                    icon={\r\n                        <SpeedDialIcon\r\n                            openIcon={\r\n                                !statusHelper.isMobile() && <PublishIcon />\r\n                            }\r\n                        />\r\n                    }\r\n                    onClose={handleClose}\r\n                    FabProps={{\r\n                        onClick: () =>\r\n                            !statusHelper.isMobile() && uploadClicked(),\r\n                        color: \"secondary\",\r\n                    }}\r\n                    onOpen={handleOpen}\r\n                    open={open}\r\n                >\r\n                    {statusHelper.isMobile() && (\r\n                        <SpeedDialAction\r\n                            key=\"UploadFile\"\r\n                            icon={<PublishIcon />}\r\n                            tooltipOpen\r\n                            tooltipTitle=\"上传文件\"\r\n                            onClick={() => uploadClicked()}\r\n                            title={\"上传文件\"}\r\n                        />\r\n                    )}\r\n                    {!statusHelper.isMobile() && (\r\n                        <SpeedDialAction\r\n                            key=\"UploadFolder\"\r\n                            icon={<FolderUpload />}\r\n                            tooltipOpen\r\n                            tooltipTitle=\"上传目录\"\r\n                            onClick={() => props.selectFile()}\r\n                            title={\"上传目录\"}\r\n                        />\r\n                    )}\r\n                    <SpeedDialAction\r\n                        key=\"NewFolder\"\r\n                        icon={<CreateNewFolderIcon />}\r\n                        tooltipOpen\r\n                        tooltipTitle=\"新建目录\"\r\n                        onClick={() => OpenNewFolderDialog()}\r\n                        title={\"新建目录\"}\r\n                    />\r\n                    <SpeedDialAction\r\n                        key=\"NewFile\"\r\n                        icon={<FilePlus />}\r\n                        tooltipOpen\r\n                        tooltipTitle=\"新建文件\"\r\n                        onClick={() => OpenNewFileDialog()}\r\n                        title={\"新建文件\"}\r\n                    />\r\n                </SpeedDial>\r\n            </Badge>\r\n        </AutoHidden>\r\n    );\r\n}\r\n","import React, { useMemo, useState } from \"react\";\r\nimport {\r\n    Divider,\r\n    IconButton,\r\n    ListItem,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    makeStyles,\r\n    Tooltip,\r\n} from \"@material-ui/core\";\r\nimport TypeIcon from \"../../FileManager/TypeIcon\";\r\nimport { useUpload } from \"../UseUpload\";\r\nimport { Status } from \"../core/uploader/base\";\r\nimport { UploaderError } from \"../core/errors\";\r\nimport { sizeToString } from \"../../../utils\";\r\nimport { darken, lighten } from \"@material-ui/core/styles/colorManipulator\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    progressContent: {\r\n        position: \"relative\",\r\n        zIndex: 9,\r\n    },\r\n    progress: {\r\n        transition: \"width .4s linear\",\r\n        zIndex: 1,\r\n        height: \"100%\",\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: 0,\r\n    },\r\n    progressContainer: {\r\n        position: \"relative\",\r\n    },\r\n    listAction: {\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n    },\r\n    fileName: {\r\n        wordBreak: \"break-all\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            whiteSpace: \"nowrap\",\r\n            overflow: \"hidden\",\r\n            textOverflow: \"ellipsis\",\r\n        },\r\n    },\r\n    successStatus: {\r\n        color: theme.palette.success.main,\r\n    },\r\n    errorStatus: {\r\n        color: theme.palette.warning.main,\r\n        wordBreak: \"break-all\",\r\n    },\r\n    disabledBadge: {\r\n        marginLeft: theme.spacing(1),\r\n        height: 18,\r\n    },\r\n    delete: {\r\n        zIndex: 9,\r\n    },\r\n    fileNameContainer: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n}));\r\n\r\nconst getSpeedText = (speed, speedAvg, useSpeedAvg) => {\r\n    let displayedSpeed = speedAvg;\r\n    if (!useSpeedAvg) {\r\n        displayedSpeed = speed;\r\n    }\r\n\r\n    return `${sizeToString(displayedSpeed ? displayedSpeed : 0)} /s`;\r\n};\r\n\r\nexport default function UploadTask({ uploader, useAvgSpeed, onCancel }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const { status, error, progress, speed, speedAvg, retry } = useUpload(\r\n        uploader\r\n    );\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const statusText = useMemo(() => {\r\n        let errMsg;\r\n        switch (status) {\r\n            case Status.preparing:\r\n                return <div>准备中...</div>;\r\n            case Status.error:\r\n                errMsg = error.message;\r\n                if (error instanceof UploaderError) {\r\n                    errMsg = error.Message(\"\");\r\n                }\r\n\r\n                return (\r\n                    <div className={classes.errorStatus}>\r\n                        {errMsg}\r\n                        <br />\r\n                    </div>\r\n                );\r\n            case Status.processing:\r\n                if (progress) {\r\n                    return (\r\n                        <div>\r\n                            {`${getSpeedText(\r\n                                speed,\r\n                                speedAvg,\r\n                                useAvgSpeed\r\n                            )} 已上传 ${sizeToString(\r\n                                progress.total.loaded\r\n                            )} , 共 ${sizeToString(\r\n                                progress.total.size\r\n                            )} - ${progress.total.percent.toFixed(2)}%`}\r\n                        </div>\r\n                    );\r\n                }\r\n                break;\r\n            default:\r\n                return <div>未知</div>;\r\n        }\r\n    }, [status, error, progress, speed, speedAvg, useAvgSpeed]);\r\n\r\n    const resumeLabel = useMemo(\r\n        () =>\r\n            uploader.task.resumed && !fullScreen ? (\r\n                <Chip\r\n                    className={classes.disabledBadge}\r\n                    size=\"small\"\r\n                    label={\"断点续传\"}\r\n                />\r\n            ) : null,\r\n        [status, fullScreen]\r\n    );\r\n\r\n    const progressBar = useMemo(\r\n        () =>\r\n            status === Status.processing && progress ? (\r\n                <div\r\n                    style={{\r\n                        backgroundColor:\r\n                            theme.palette.type === \"light\"\r\n                                ? lighten(theme.palette.primary.main, 0.8)\r\n                                : darken(theme.palette.background.paper, 0.2),\r\n                        width: progress.total.percent + \"%\",\r\n                    }}\r\n                    className={classes.progress}\r\n                />\r\n            ) : null,\r\n        [status, progress, theme]\r\n    );\r\n\r\n    const cancel = () => {\r\n        setLoading(true);\r\n        uploader.cancel().then(() => {\r\n            setLoading(false);\r\n            onCancel(uploader);\r\n        });\r\n    };\r\n\r\n    const secondaryAction = useMemo(() => {\r\n        if (status === Status.error) {\r\n            return (\r\n                <Tooltip title={\"重试\"}>\r\n                    <IconButton aria-label=\"Delete\" onClick={() => retry()}>\r\n                        <RefreshIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Tooltip title={\"取消并删除\"}>\r\n                <IconButton\r\n                    aria-label=\"Delete\"\r\n                    disabled={loading}\r\n                    onClick={() => cancel()}\r\n                >\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </Tooltip>\r\n        );\r\n    }, [status, loading]);\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.progressContainer}>\r\n                {progressBar}\r\n                <ListItem className={classes.progressContent} button>\r\n                    <TypeIcon fileName={uploader.task.name} isUpload />\r\n                    <ListItemText\r\n                        className={classes.listAction}\r\n                        primary={\r\n                            <div className={classes.fileNameContainer}>\r\n                                <div className={classes.fileName}>\r\n                                    {uploader.task.name}\r\n                                </div>\r\n                                <div>{resumeLabel}</div>\r\n                            </div>\r\n                        }\r\n                        secondary={statusText}\r\n                    />\r\n                    <ListItemSecondaryAction className={classes.delete}>\r\n                        {secondaryAction}\r\n                    </ListItemSecondaryAction>\r\n                </ListItem>\r\n            </div>\r\n            <Divider />\r\n        </>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { Status } from \"./core/uploader/base\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\n\r\nexport function useUpload(uploader) {\r\n    const lastTimeRef = useRef(null);\r\n    const startTimeRef = useRef(null);\r\n    const startLoadedRef = useRef(0);\r\n    const [status, setStatus] = useState(uploader.status);\r\n    const [error, setError] = useState(uploader.error);\r\n    const [progress, setProgress] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        lastTimeRef.current = Date.now();\r\n        startTimeRef.current = Date.now();\r\n        /* eslint-disable @typescript-eslint/no-empty-function */\r\n        uploader.subscribe({\r\n            onTransition: (newStatus) => {\r\n                setStatus(newStatus);\r\n            },\r\n            onError: (err) => {\r\n                setError(err);\r\n                setStatus(uploader.status);\r\n            },\r\n            onProgress: (data) => {\r\n                setProgress(data);\r\n            },\r\n            onMsg: (msg, color) => {\r\n                ToggleSnackbar(\"top\", \"right\", msg, color);\r\n            },\r\n        });\r\n        /* eslint-enable @typescript-eslint/no-empty-function */\r\n        if (status === Status.added) {\r\n            uploader.start();\r\n        }\r\n    }, []);\r\n\r\n    // 获取上传速度\r\n    const [speed, speedAvg] = React.useMemo(() => {\r\n        if (\r\n            progress == null ||\r\n            progress.total == null ||\r\n            progress.total.loaded == null\r\n        )\r\n            return [0, 0];\r\n        const duration = (Date.now() - (lastTimeRef.current || 0)) / 1000;\r\n        const durationTotal = (Date.now() - (startTimeRef.current || 0)) / 1000;\r\n        const res =\r\n            progress.total.loaded > startLoadedRef.current\r\n                ? Math.floor(\r\n                      (progress.total.loaded - startLoadedRef.current) /\r\n                          duration\r\n                  )\r\n                : 0;\r\n        const resAvg =\r\n            progress.total.loaded > 0\r\n                ? Math.floor(progress.total.loaded / durationTotal)\r\n                : 0;\r\n\r\n        startLoadedRef.current = progress.total.loaded;\r\n        lastTimeRef.current = Date.now();\r\n        return [res, resAvg];\r\n    }, [progress, lastTimeRef, startTimeRef]);\r\n\r\n    const retry = () => {\r\n        uploader.reset();\r\n        lastTimeRef.current = Date.now();\r\n        startTimeRef.current = Date.now();\r\n        uploader.start();\r\n    };\r\n\r\n    return { status, error, progress, speed, speedAvg, retry };\r\n}\r\n","import {\r\n    ListItemIcon,\r\n    makeStyles,\r\n    Menu,\r\n    MenuItem,\r\n    Tooltip,\r\n} from \"@material-ui/core\";\r\nimport React, { useCallback } from \"react\";\r\nimport { DeleteSweep } from \"@material-ui/icons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { refreshStorage, toggleSnackbar } from \"../../../actions\";\r\nimport API from \"../../../middleware/Api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nconst menuItems = [\r\n    {\r\n        item: [],\r\n    },\r\n];\r\n\r\nexport default function MoreActions({ anchorEl, onClose, uploadManager }) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const RefreshStorage = useCallback(() => dispatch(refreshStorage()), [\r\n        dispatch,\r\n    ]);\r\n\r\n    const actionClicked = (next) => () => {\r\n        onClose();\r\n        next();\r\n    };\r\n\r\n    const cleanupSessions = () => {\r\n        uploadManager.cleanupSessions();\r\n        API.delete(\"/file/upload\")\r\n            .then((response) => {\r\n                if (response.rawData.code === 0) {\r\n                    ToggleSnackbar(\"top\", \"right\", \"上传会话已清除\", \"success\");\r\n                } else {\r\n                    ToggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        response.rawData.msg,\r\n                        \"warning\"\r\n                    );\r\n                }\r\n                RefreshStorage();\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? \"uploader-action-popover\" : undefined;\r\n\r\n    return (\r\n        <Menu id={id} open={open} anchorEl={anchorEl} onClose={onClose}>\r\n            <Tooltip title={\"清空服务端所有未完成的上传会话\"}>\r\n                <MenuItem onClick={actionClicked(() => cleanupSessions())}>\r\n                    <ListItemIcon>\r\n                        <DeleteSweep fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    清空所有上传会话\r\n                </MenuItem>\r\n            </Tooltip>\r\n        </Menu>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    Accordion,\r\n    AccordionDetails,\r\n    AppBar,\r\n    Dialog,\r\n    DialogContent,\r\n    IconButton,\r\n    List,\r\n    makeStyles,\r\n    Slide,\r\n    Toolbar,\r\n    Tooltip,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandLess\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport classnames from \"classnames\";\r\nimport UploadTask from \"./UploadTask\";\r\nimport { MoreHoriz } from \"@material-ui/icons\";\r\nimport MoreActions from \"./MoreActions\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    rootOverwrite: {\r\n        top: \"auto!important\",\r\n        left: \"auto!important\",\r\n    },\r\n    appBar: {\r\n        position: \"relative\",\r\n    },\r\n    flex: {\r\n        flex: 1,\r\n    },\r\n    popup: {\r\n        alignItems: \"flex-end\",\r\n        justifyContent: \"flex-end\",\r\n    },\r\n    dialog: {\r\n        margin: 0,\r\n        right: 10,\r\n        bottom: 10,\r\n        zIndex: 9999,\r\n        position: \"fixed\",\r\n        inset: \"-1!important\",\r\n    },\r\n    paddingZero: {\r\n        padding: 0,\r\n    },\r\n    dialogContent: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: 500,\r\n            maxHeight: \"calc(100vh - 140px)\",\r\n        },\r\n        padding: 0,\r\n        paddingTop: \"0!important\",\r\n    },\r\n    expandIcon: {\r\n        transform: \"rotate(0deg)\",\r\n        transition: theme.transitions.create(\"transform\", {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandIconExpanded: {\r\n        transform: \"rotate(180deg)\",\r\n    },\r\n    toolbar: {\r\n        paddingLeft: theme.spacing(1),\r\n        paddingRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function TaskList({\r\n    open,\r\n    onClose,\r\n    selectFile,\r\n    taskList,\r\n    onCancel,\r\n    uploadManager,\r\n}) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n    const [expanded, setExpanded] = useState(true);\r\n    const [useAvgSpeed, setUseAvgSpeed] = useState(true);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleActionClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleActionClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const close = (e, reason) => {\r\n        if (reason !== \"backdropClick\") {\r\n            onClose();\r\n        } else {\r\n            setExpanded(false);\r\n        }\r\n    };\r\n    const handlePanelChange = (event, isExpanded) => {\r\n        setExpanded(isExpanded);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <MoreActions\r\n                onClose={handleActionClose}\r\n                uploadManager={uploadManager}\r\n                anchorEl={anchorEl}\r\n            />\r\n            <Dialog\r\n                classes={{\r\n                    container: classes.popup, // class name, e.g. `classes-nesting-root-x`\r\n                    root: classnames({\r\n                        [classes.rootOverwrite]: !fullScreen,\r\n                    }),\r\n                }}\r\n                className={classnames({\r\n                    [classes.dialog]: !fullScreen,\r\n                })}\r\n                fullScreen={fullScreen}\r\n                open={open}\r\n                onClose={close}\r\n                TransitionComponent={Transition}\r\n                disableEnforceFocus={!expanded}\r\n                hideBackdrop={!expanded}\r\n                disableBackdropClick={!expanded}\r\n                disableScrollLock={!expanded}\r\n            >\r\n                <Accordion\r\n                    expanded={expanded || fullScreen}\r\n                    onChange={handlePanelChange}\r\n                >\r\n                    <AppBar className={classes.appBar}>\r\n                        <Toolbar disableGutters className={classes.toolbar}>\r\n                            <Tooltip title={\"隐藏队列\"}>\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    onClick={close}\r\n                                    aria-label=\"Close\"\r\n                                >\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Typography\r\n                                variant=\"h6\"\r\n                                color=\"inherit\"\r\n                                className={classes.flex}\r\n                            >\r\n                                上传队列\r\n                            </Typography>\r\n                            <Tooltip title={\"更多操作\"}>\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    onClick={handleActionClick}\r\n                                >\r\n                                    <MoreHoriz />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title={\"添加新文件\"}>\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    onClick={selectFile}\r\n                                >\r\n                                    <AddIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            {!fullScreen && (\r\n                                <Tooltip title={\"展开/折叠队列\"}>\r\n                                    <IconButton\r\n                                        color=\"inherit\"\r\n                                        onClick={() => setExpanded(!expanded)}\r\n                                    >\r\n                                        <ExpandMoreIcon\r\n                                            className={classnames({\r\n                                                [classes.expandIconExpanded]: expanded,\r\n                                                [classes.expandIcon]: true,\r\n                                            })}\r\n                                        />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            )}\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <AccordionDetails className={classes.paddingZero}>\r\n                        <DialogContent className={classes.dialogContent}>\r\n                            <List className={classes.paddingZero}>\r\n                                {taskList.map((uploader) => (\r\n                                    <UploadTask\r\n                                        onCancel={onCancel}\r\n                                        key={uploader.id}\r\n                                        useAvgSpeed={useAvgSpeed}\r\n                                        uploader={uploader}\r\n                                    />\r\n                                ))}\r\n                            </List>\r\n                        </DialogContent>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport UploadManager from \"./core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport UploadButton from \"../Dial/Create\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { UploaderError } from \"./core/errors\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport TaskList from \"./Popup/TaskList\";\r\n\r\nexport default function Uploader() {\r\n    const [uploaders, setUploaders] = useState([]);\r\n    const [taskListOpen, setTaskListOpen] = useState(false);\r\n    const keywords = useSelector((state) => state.explorer.keywords);\r\n    const policy = useSelector((state) => state.explorer.currentPolicy);\r\n    const isLogin = useSelector((state) => state.viewUpdate.isLogin);\r\n    const path = useSelector((state) => state.navigator.path);\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const enableUploader = useMemo(\r\n        () =>\r\n            pathHelper.isHomePage(location.pathname) &&\r\n            isLogin &&\r\n            keywords === \"\",\r\n        [location.pathname, isLogin, keywords]\r\n    );\r\n\r\n    const uploadManager = useMemo(() => {\r\n        return new UploadManager({\r\n            logLevel: \"INFO\",\r\n            concurrentLimit: 5,\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        uploadManager.setPolicy(policy);\r\n    }, [policy]);\r\n\r\n    const openFileList = () => {\r\n        alert(\"openFileList\");\r\n    };\r\n\r\n    const selectFile = () => {\r\n        setTaskListOpen(true);\r\n\r\n        // eslint-disable-next-line no-unreachable\r\n        uploadManager\r\n            .select(path)\r\n            .then((tasks) => {\r\n                setTaskListOpen(true);\r\n                setUploaders((uploaders) => [...uploaders, ...tasks]);\r\n            })\r\n            .catch((e) => {\r\n                if (e instanceof UploaderError) {\r\n                    ToggleSnackbar(\"top\", \"right\", e.Message(\"\"), \"warning\");\r\n                } else {\r\n                    ToggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        \"出现未知错误：\" + e.message,\r\n                        \"error\"\r\n                    );\r\n                }\r\n            });\r\n    };\r\n\r\n    const deleteTask = (uploader) => {\r\n        setUploaders((uploaders) =>\r\n            uploaders.filter((u) => u.id != uploader.id)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {enableUploader && (\r\n                <>\r\n                    <UploadButton\r\n                        taskListOpen={taskListOpen}\r\n                        selectFile={selectFile}\r\n                        Queued={uploaders.length}\r\n                        openFileList={() => setTaskListOpen(true)}\r\n                    />\r\n                    <TaskList\r\n                        uploadManager={uploadManager}\r\n                        taskList={uploaders}\r\n                        open={taskListOpen}\r\n                        onCancel={deleteTask}\r\n                        selectFile={selectFile}\r\n                        onClose={() => setTaskListOpen(false)}\r\n                    />\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n","export const imgPreviewSuffix = [\r\n    \"bmp\",\r\n    \"png\",\r\n    \"gif\",\r\n    \"jpg\",\r\n    \"jpeg\",\r\n    \"svg\",\r\n    \"webp\",\r\n];\r\nexport const msDocPreviewSuffix = [\r\n    \"ppt\",\r\n    \"pptx\",\r\n    \"pps\",\r\n    \"doc\",\r\n    \"docx\",\r\n    \"xlsx\",\r\n    \"xls\",\r\n];\r\nexport const audioPreviewSuffix = [\"mp3\", \"ogg\",\"flac\"];\r\nexport const videoPreviewSuffix = [\"mp4\", \"mkv\", \"webm\"];\r\nexport const pdfPreviewSuffix = [\"pdf\"];\r\nexport const editSuffix = [\"md\", \"txt\"];\r\nexport const codePreviewSuffix = {\r\n    json: \"json\",\r\n    php: \"php\",\r\n    py: \"python\",\r\n    bat: \"bat\",\r\n    cpp: \"cpp\",\r\n    c: \"cpp\",\r\n    h: \"cpp\",\r\n    cs: \"csharp\",\r\n    css: \"css\",\r\n    dockerfile: \"dockerfile\",\r\n    go: \"go\",\r\n    html: \"html\",\r\n    ini: \"ini\",\r\n    java: \"java\",\r\n    js: \"javascript\",\r\n    jsx: \"javascript\",\r\n    less: \"less\",\r\n    lua: \"lua\",\r\n    sh: \"shell\",\r\n    sql: \"sql\",\r\n    xml: \"xml\",\r\n    yaml: \"yaml\",\r\n};\r\nexport const mediaType = {\r\n    audio: [\"mp3\", \"flac\", \"ape\", \"wav\", \"acc\", \"ogg\"],\r\n    video: [\"mp4\", \"flv\", \"avi\", \"wmv\", \"mkv\", \"rm\", \"rmvb\", \"mov\", \"ogv\"],\r\n    image: [\"bmp\", \"iff\", \"png\", \"gif\", \"jpg\", \"jpeg\", \"psd\", \"svg\", \"webp\"],\r\n    pdf: [\"pdf\"],\r\n    word: [\"doc\", \"docx\"],\r\n    ppt: [\"ppt\", \"pptx\"],\r\n    excel: [\"xls\", \"xlsx\", \"csv\"],\r\n    text: [\"txt\", \"md\", \"html\"],\r\n    torrent: [\"torrent\"],\r\n    zip: [\"zip\", \"gz\", \"tar\", \"rar\", \"7z\"],\r\n    excute: [\"exe\"],\r\n    android: [\"apk\"],\r\n    php: [\"php\"],\r\n    go: [\"go\"],\r\n    python: [\"py\"],\r\n    cpp: [\"cpp\"],\r\n    c: [\"c\"],\r\n    js: [\"js\", \"jsx\"],\r\n};\r\nexport const policyTypeMap = {\r\n    local: \"本机\",\r\n    remote: \"从机\",\r\n    qiniu: \"七牛\",\r\n    upyun: \"又拍云\",\r\n    oss: \"阿里云 OSS\",\r\n    cos: \"腾讯云\",\r\n    onedrive: \"OneDrive\",\r\n    s3: \"Amazon S3\",\r\n};\r\nexport const isPreviewable = (name) => {\r\n    const suffix = name.split(\".\").pop().toLowerCase();\r\n    if (imgPreviewSuffix.indexOf(suffix) !== -1) {\r\n        return \"img\";\r\n    } else if (msDocPreviewSuffix.indexOf(suffix) !== -1) {\r\n        return \"msDoc\";\r\n    } else if (audioPreviewSuffix.indexOf(suffix) !== -1) {\r\n        return \"audio\";\r\n    } else if (videoPreviewSuffix.indexOf(suffix) !== -1) {\r\n        return \"video\";\r\n    } else if (editSuffix.indexOf(suffix) !== -1) {\r\n        return \"edit\";\r\n    } else if (pdfPreviewSuffix.indexOf(suffix) !== -1) {\r\n        return \"pdf\";\r\n    } else if (Object.keys(codePreviewSuffix).indexOf(suffix) !== -1) {\r\n        return \"code\";\r\n    }\r\n    return false;\r\n};\r\nexport const isTorrent = (name) => {\r\n    const suffix = name.split(\".\").pop().toLowerCase();\r\n    if (mediaType.torrent.indexOf(suffix) !== -1) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nexport const isCompressFile = (name) => {\r\n    const suffix = name.split(\".\").pop().toLowerCase();\r\n    return suffix === \"zip\";\r\n};\r\n\r\nconst taskStatus = [\"排队中\", \"处理中\", \"失败\", \"取消\", \"已完成\"];\r\nconst taskType = [\"压缩\", \"解压缩\", \"文件中转\", \"导入外部目录\"];\r\nconst taskProgress = [\r\n    \"等待中\",\r\n    \"压缩中\",\r\n    \"解压缩中\",\r\n    \"下载中\",\r\n    \"转存中\",\r\n    \"索引中\",\r\n    \"插入中\",\r\n];\r\n\r\nexport const getTaskStatus = (status) => {\r\n    return taskStatus[status];\r\n};\r\n\r\nexport const getTaskType = (status) => {\r\n    return taskType[status];\r\n};\r\n\r\nexport const getTaskProgress = (type, status) => {\r\n    if (type === 2) {\r\n        return \"已完成 \" + (status + 1) + \" 个文件\";\r\n    }\r\n    return taskProgress[status];\r\n};\r\n","import dayjs from \"dayjs\";\r\nimport timezone from \"dayjs/plugin/timezone\";\r\nimport utc from \"dayjs/plugin/utc\";\r\nimport Auth from \"../middleware/Auth\";\r\ndayjs.extend(utc);\r\ndayjs.extend(timezone);\r\n\r\nconst defaultTimeZone = \"Asia/Shanghai\";\r\nconst preferTimeZone = Auth.GetPreference(\"timeZone\");\r\nexport let timeZone = preferTimeZone ? preferTimeZone : defaultTimeZone;\r\n\r\nexport function refreshTimeZone() {\r\n    timeZone = Auth.GetPreference(\"timeZone\");\r\n    timeZone = timeZone ? timeZone : defaultTimeZone;\r\n}\r\n\r\nexport function formatLocalTime(time, format) {\r\n    return dayjs(time).tz(timeZone).format(format);\r\n}\r\n\r\nexport function validateTimeZone(name) {\r\n    try {\r\n        dayjs().tz(name).format();\r\n    } catch (e) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n","import React from \"react\";\r\nimport { mediaType } from \"../../config\";\r\nimport ImageIcon from \"@material-ui/icons/PhotoSizeSelectActual\";\r\nimport VideoIcon from \"@material-ui/icons/Videocam\";\r\nimport AudioIcon from \"@material-ui/icons/Audiotrack\";\r\nimport PdfIcon from \"@material-ui/icons/PictureAsPdf\";\r\nimport {\r\n    Android,\r\n    FileExcelBox,\r\n    FilePowerpointBox,\r\n    FileWordBox,\r\n    LanguageC,\r\n    LanguageCpp,\r\n    LanguageGo,\r\n    LanguageJavascript,\r\n    LanguagePhp,\r\n    LanguagePython,\r\n    MagnetOn,\r\n    ScriptText,\r\n    WindowRestore,\r\n    ZipBox,\r\n} from \"mdi-material-ui\";\r\nimport FileShowIcon from \"@material-ui/icons/InsertDriveFile\";\r\nimport { lighten } from \"@material-ui/core/styles\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport { Avatar } from \"@material-ui/core\";\r\n\r\nconst icons = {\r\n    audio: {\r\n        color: \"#651fff\",\r\n        icon: AudioIcon,\r\n    },\r\n    video: {\r\n        color: \"#d50000\",\r\n        icon: VideoIcon,\r\n    },\r\n    image: {\r\n        color: \"#d32f2f\",\r\n        icon: ImageIcon,\r\n    },\r\n    pdf: {\r\n        color: \"#f44336\",\r\n        icon: PdfIcon,\r\n    },\r\n    word: {\r\n        color: \"#538ce5\",\r\n        icon: FileWordBox,\r\n    },\r\n    ppt: {\r\n        color: \"rgb(239, 99, 63)\",\r\n        icon: FilePowerpointBox,\r\n    },\r\n    excel: {\r\n        color: \"#4caf50\",\r\n        icon: FileExcelBox,\r\n    },\r\n    text: {\r\n        color: \"#607d8b\",\r\n        icon: ScriptText,\r\n    },\r\n    torrent: {\r\n        color: \"#5c6bc0\",\r\n        icon: MagnetOn,\r\n    },\r\n    zip: {\r\n        color: \"#f9a825\",\r\n        icon: ZipBox,\r\n    },\r\n    excute: {\r\n        color: \"#1a237e\",\r\n        icon: WindowRestore,\r\n    },\r\n    android: {\r\n        color: \"#8bc34a\",\r\n        icon: Android,\r\n    },\r\n    file: {\r\n        color: \"#607d8b\",\r\n        icon: FileShowIcon,\r\n    },\r\n    php: {\r\n        color: \"#777bb3\",\r\n        icon: LanguagePhp,\r\n    },\r\n    go: {\r\n        color: \"#16b3da\",\r\n        icon: LanguageGo,\r\n    },\r\n    python: {\r\n        color: \"#3776ab\",\r\n        icon: LanguagePython,\r\n    },\r\n    c: {\r\n        color: \"#a8b9cc\",\r\n        icon: LanguageC,\r\n    },\r\n    cpp: {\r\n        color: \"#004482\",\r\n        icon: LanguageCpp,\r\n    },\r\n    js: {\r\n        color: \"#f4d003\",\r\n        icon: LanguageJavascript,\r\n    },\r\n};\r\n\r\nconst getColor = (theme, color) =>\r\n    theme.palette.type === \"light\" ? color : lighten(color, 0.2);\r\n\r\nlet color;\r\n\r\nconst TypeIcon = (props) => {\r\n    const theme = useTheme();\r\n\r\n    const fileSuffix = props.fileName.split(\".\").pop().toLowerCase();\r\n    let fileType = \"file\";\r\n    Object.keys(mediaType).forEach((k) => {\r\n        if (mediaType[k].indexOf(fileSuffix) !== -1) {\r\n            fileType = k;\r\n        }\r\n    });\r\n    const IconComponent = icons[fileType].icon;\r\n    color = getColor(theme, icons[fileType].color);\r\n    if (props.getColorValue) {\r\n        props.getColorValue(color);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.isUpload && (\r\n                <Avatar\r\n                    className={props.className}\r\n                    style={{\r\n                        backgroundColor: color,\r\n                    }}\r\n                >\r\n                    <IconComponent\r\n                        className={props.iconClassName}\r\n                        style={{\r\n                            color: theme.palette.background.paper,\r\n                        }}\r\n                    />\r\n                </Avatar>\r\n            )}\r\n            {!props.isUpload && (\r\n                <IconComponent\r\n                    className={props.className}\r\n                    style={{\r\n                        color: color,\r\n                    }}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TypeIcon;\r\n","import { ThunkAction } from \"redux-thunk\";\r\nimport { AnyAction } from \"redux\";\r\nexport interface ActionSetSubtitle extends AnyAction {\r\n    type: \"SET_SUBTITLE\";\r\n    title: string;\r\n}\r\n\r\nexport const setSubtitle = (title: string): ActionSetSubtitle => {\r\n    return {\r\n        type: \"SET_SUBTITLE\",\r\n        title,\r\n    };\r\n};\r\n\r\nexport const closeContextMenu = () => {\r\n    return {\r\n        type: \"CLOSE_CONTEXT_MENU\",\r\n    };\r\n};\r\n\r\nexport const changeSubTitle = (\r\n    title: string\r\n): ThunkAction<any, any, any, any> => {\r\n    return (dispatch, getState) => {\r\n        const state = getState();\r\n        document.title =\r\n            title === null || title === undefined\r\n                ? state.siteConfig.title\r\n                : title + \" - \" + state.siteConfig.title;\r\n        dispatch(setSubtitle(title));\r\n    };\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === \"installed\") {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                \"New content is available and will be used when all \" +\r\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log(\"Content is cached for offline use.\");\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error during service worker registration:\", error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get(\"content-type\");\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null &&\r\n                    contentType.indexOf(\"javascript\") === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                \"No internet connection found. App is running in offline mode.\"\r\n            );\r\n        });\r\n}\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === \"localhost\" ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === \"[::1]\" ||\r\n        // 127.0.0.1/8 is considered localhost for IPv4.\r\n        window.location.hostname.match(\r\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n        )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener(\"load\", () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        \"This web app is being served cache-first by a service \" +\r\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function unregister() {\r\n    if (\"serviceWorker\" in navigator) {\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Auth from \"./Auth\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction AuthRoute({ children, ...rest }) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                Auth.Check(rest.isLogin) ? (\r\n                    children\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/login\",\r\n                            state: { from: location },\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n\r\nexport default AuthRoute;\r\n","import React from \"react\";\r\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        fontSize: \"160px\",\r\n    },\r\n    emptyContainer: {\r\n        bottom: \"0\",\r\n        height: \"300px\",\r\n        margin: \"50px auto\",\r\n        width: \"300px\",\r\n        color: lighten(theme.palette.text.disabled, 0.4),\r\n        textAlign: \"center\",\r\n        paddingTop: \"20px\",\r\n    },\r\n    emptyInfoBig: {\r\n        fontSize: \"25px\",\r\n        color: lighten(theme.palette.text.disabled, 0.4),\r\n    },\r\n}));\r\n\r\nexport default function Notice(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.emptyContainer}>\r\n            <SentimentVeryDissatisfiedIcon className={classes.icon} />\r\n            <div className={classes.emptyInfoBig}>{props.msg}</div>\r\n        </div>\r\n    );\r\n}\r\n","import { Link, makeStyles } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router\";\r\nimport pageHelper from \"../../utils/page\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    icp: {\r\n        padding: \"8px 24px\",\r\n        position: \"absolute\",\r\n        bottom: 0,\r\n    },\r\n}));\r\n\r\nexport const ICPFooter = () => {\r\n    const siteICPId = useSelector((state) => state.siteConfig.siteICPId);\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    const [show, setShow] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // 只在分享和登录界面显示\r\n        const isSharePage = pageHelper.isSharePage(location.pathname);\r\n        const isLoginPage = pageHelper.isLoginPage(location.pathname);\r\n        setShow(siteICPId && (isSharePage || isLoginPage));\r\n    }, [siteICPId, location]);\r\n\r\n    if (!show) {\r\n        return <></>;\r\n    }\r\n    return (\r\n        <div className={classes.icp}>\r\n            {`备案号: `}\r\n            <Link\r\n                href=\"https://beian.miit.gov.cn/\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n            >\r\n                {siteICPId}\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport ContentLoader from \"react-content-loader\";\r\n\r\nconst MyLoader = () => (\r\n    <ContentLoader\r\n        height={80}\r\n        width={200}\r\n        speed={2}\r\n        primaryColor=\"#f3f3f3\"\r\n        secondaryColor=\"#e4e4e4\"\r\n    >\r\n        <rect x=\"4\" y=\"4\" rx=\"7\" ry=\"7\" width=\"392\" height=\"116\" />\r\n    </ContentLoader>\r\n);\r\n\r\nfunction captchaPlacholder() {\r\n    return <MyLoader />;\r\n}\r\n\r\nexport default captchaPlacholder;\r\n","import React, {\r\n    forwardRef,\r\n    useCallback,\r\n    useEffect,\r\n    useRef,\r\n    useState,\r\n} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../actions\";\r\nimport API from \"../middleware/Api\";\r\nimport { FormControl, Input, InputLabel } from \"@material-ui/core\";\r\nimport Placeholder from \"../component/Placeholder/Captcha\";\r\nimport { defaultValidate, useStyle } from \"./useCaptcha\";\r\n\r\nconst NormalCaptcha = forwardRef(function NormalCaptcha(\r\n    { captchaRef, setLoading },\r\n    ref\r\n) {\r\n    const classes = useStyle();\r\n\r\n    const [captcha, setCaptcha] = useState(\"\");\r\n    const [captchaData, setCaptchaData] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const refreshCaptcha = () => {\r\n        API.get(\"/site/captcha\")\r\n            .then((response) => {\r\n                setCaptchaData(response.data);\r\n                setLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"无法加载验证码：\" + error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        ref.current = refreshCaptcha;\r\n        refreshCaptcha();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        captchaRef.current.captchaCode = captcha;\r\n    }, [captcha]);\r\n\r\n    return (\r\n        <div className={classes.captchaContainer}>\r\n            <FormControl margin=\"normal\" required fullWidth>\r\n                <InputLabel htmlFor=\"captcha\">验证码</InputLabel>\r\n                <Input\r\n                    name=\"captcha\"\r\n                    onChange={(e) => setCaptcha(e.target.value)}\r\n                    type=\"text\"\r\n                    id=\"captcha\"\r\n                    value={captcha}\r\n                    autoComplete\r\n                />\r\n            </FormControl>{\" \"}\r\n            <div>\r\n                {captchaData === null && (\r\n                    <div className={classes.captchaPlaceholder}>\r\n                        <Placeholder />\r\n                    </div>\r\n                )}\r\n                {captchaData !== null && (\r\n                    <img\r\n                        src={captchaData}\r\n                        alt=\"captcha\"\r\n                        onClick={refreshCaptcha}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default function useNormalCaptcha(captchaRefreshRef, setLoading) {\r\n    const isValidate = useRef({\r\n        isValidate: true,\r\n    });\r\n\r\n    const captchaParamsRef = useRef({\r\n        captchaCode: \"\",\r\n    });\r\n\r\n    const CaptchaRender = useCallback(\r\n        function Normal() {\r\n            return (\r\n                <NormalCaptcha\r\n                    captchaRef={captchaParamsRef}\r\n                    ref={captchaRefreshRef}\r\n                    setLoading={setLoading}\r\n                />\r\n            );\r\n        },\r\n        [captchaParamsRef, captchaRefreshRef, setLoading]\r\n    );\r\n\r\n    return {\r\n        isValidate,\r\n        validate: defaultValidate,\r\n        captchaParamsRef,\r\n        CaptchaRender,\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class ReCAPTCHA extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.handleExpired = this.handleExpired.bind(this);\r\n        this.handleErrored = this.handleErrored.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleRecaptchaRef = this.handleRecaptchaRef.bind(this);\r\n    }\r\n\r\n    getValue() {\r\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\r\n            return this.props.grecaptcha.getResponse(this._widgetId);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    getWidgetId() {\r\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\r\n            return this._widgetId;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    execute() {\r\n        const { grecaptcha } = this.props;\r\n\r\n        if (grecaptcha && this._widgetId !== undefined) {\r\n            return grecaptcha.execute(this._widgetId);\r\n        } else {\r\n            this._executeRequested = true;\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\r\n            this.props.grecaptcha.reset(this._widgetId);\r\n        }\r\n    }\r\n\r\n    handleExpired() {\r\n        if (this.props.onExpired) {\r\n            this.props.onExpired();\r\n        } else {\r\n            this.handleChange(null);\r\n        }\r\n    }\r\n\r\n    handleErrored() {\r\n        if (this.props.onErrored) this.props.onErrored();\r\n    }\r\n\r\n    handleChange(token) {\r\n        if (this.props.onChange) this.props.onChange(token);\r\n    }\r\n\r\n    explicitRender() {\r\n        if (\r\n            this.props.grecaptcha &&\r\n            this.props.grecaptcha.render &&\r\n            this._widgetId === undefined\r\n        ) {\r\n            const wrapper = document.createElement(\"div\");\r\n            this._widgetId = this.props.grecaptcha.render(wrapper, {\r\n                sitekey: this.props.sitekey,\r\n                callback: this.handleChange,\r\n                theme: this.props.theme,\r\n                type: this.props.type,\r\n                tabindex: this.props.tabindex,\r\n                \"expired-callback\": this.handleExpired,\r\n                \"error-callback\": this.handleErrored,\r\n                size: this.props.size,\r\n                stoken: this.props.stoken,\r\n                hl: this.props.hl,\r\n                badge: this.props.badge,\r\n            });\r\n            this.captcha.appendChild(wrapper);\r\n        }\r\n        if (\r\n            this._executeRequested &&\r\n            this.props.grecaptcha &&\r\n            this._widgetId !== undefined\r\n        ) {\r\n            this._executeRequested = false;\r\n            this.execute();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.explicitRender();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.explicitRender();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this._widgetId !== undefined) {\r\n            this.delayOfCaptchaIframeRemoving();\r\n            this.reset();\r\n        }\r\n    }\r\n\r\n    delayOfCaptchaIframeRemoving() {\r\n        const temporaryNode = document.createElement(\"div\");\r\n        document.body.appendChild(temporaryNode);\r\n        temporaryNode.style.display = \"none\";\r\n\r\n        // move of the recaptcha to a temporary node\r\n        while (this.captcha.firstChild) {\r\n            temporaryNode.appendChild(this.captcha.firstChild);\r\n        }\r\n\r\n        // delete the temporary node after reset will be done\r\n        setTimeout(() => {\r\n            document.body.removeChild(temporaryNode);\r\n        }, 5000);\r\n    }\r\n\r\n    handleRecaptchaRef(elem) {\r\n        this.captcha = elem;\r\n    }\r\n\r\n    render() {\r\n        // consume properties owned by the reCATPCHA, pass the rest to the div so the user can style it.\r\n        /* eslint-disable no-unused-vars */\r\n        /* eslint-disable @typescript-eslint/no-unused-vars */\r\n        const {\r\n            sitekey,\r\n            onChange,\r\n            theme,\r\n            type,\r\n            tabindex,\r\n            onExpired,\r\n            onErrored,\r\n            size,\r\n            stoken,\r\n            grecaptcha,\r\n            badge,\r\n            hl,\r\n            ...childProps\r\n        } = this.props;\r\n        /* eslint-enable no-unused-vars */\r\n        return <div {...childProps} ref={this.handleRecaptchaRef} />;\r\n    }\r\n}\r\n\r\nReCAPTCHA.displayName = \"ReCAPTCHA\";\r\nReCAPTCHA.propTypes = {\r\n    sitekey: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func,\r\n    grecaptcha: PropTypes.object,\r\n    theme: PropTypes.oneOf([\"dark\", \"light\"]),\r\n    type: PropTypes.oneOf([\"image\", \"audio\"]),\r\n    tabindex: PropTypes.number,\r\n    onExpired: PropTypes.func,\r\n    onErrored: PropTypes.func,\r\n    size: PropTypes.oneOf([\"compact\", \"normal\", \"invisible\"]),\r\n    stoken: PropTypes.string,\r\n    hl: PropTypes.string,\r\n    badge: PropTypes.oneOf([\"bottomright\", \"bottomleft\", \"inline\"]),\r\n};\r\nReCAPTCHA.defaultProps = {\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    onChange: () => {},\r\n    theme: \"light\",\r\n    type: \"image\",\r\n    tabindex: 0,\r\n    size: \"normal\",\r\n    badge: \"bottomright\",\r\n};\r\n","import ReCAPTCHA from \"./ReCaptchaWrapper\";\r\nimport makeAsyncScriptLoader from \"react-async-script\";\r\n\r\nconst callbackName = \"onloadcallback\";\r\nconst globalName = \"grecaptcha\";\r\n\r\nfunction getURL() {\r\n    const hostname = \"recaptcha.net\";\r\n    return `https://${hostname}/recaptcha/api.js?onload=${callbackName}&render=explicit`;\r\n}\r\n\r\nexport default makeAsyncScriptLoader(getURL, {\r\n    callbackName,\r\n    globalName,\r\n})(ReCAPTCHA);\r\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FormControl } from \"@material-ui/core\";\r\nimport ReCaptcha from \"../component/Login/ReCaptcha\";\r\nimport { defaultValidate, useStyle } from \"./useCaptcha\";\r\n\r\nconst Recaptcha = ({ captchaRef, setLoading }) => {\r\n    const classes = useStyle();\r\n\r\n    const [captcha, setCaptcha] = useState(\"\");\r\n\r\n    const reCaptchaKey = useSelector(\r\n        (state) => state.siteConfig.captcha_ReCaptchaKey\r\n    );\r\n\r\n    useEffect(() => {\r\n        captchaRef.current.captchaCode = captcha;\r\n    }, [captcha]);\r\n\r\n    useEffect(() => setLoading(false), []);\r\n\r\n    return (\r\n        <div className={classes.captchaContainer}>\r\n            <FormControl margin=\"normal\" required fullWidth>\r\n                <div>\r\n                    <ReCaptcha\r\n                        style={{\r\n                            display: \"inline-block\",\r\n                        }}\r\n                        sitekey={reCaptchaKey}\r\n                        onChange={(value) => setCaptcha(value)}\r\n                        id=\"captcha\"\r\n                        name=\"captcha\"\r\n                    />\r\n                </div>\r\n            </FormControl>{\" \"}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default function useRecaptcha(setLoading) {\r\n    const isValidate = useRef({\r\n        isValidate: true,\r\n    });\r\n\r\n    const captchaParamsRef = useRef({\r\n        captchaCode: \"\",\r\n    });\r\n\r\n    const CaptchaRender = useCallback(\r\n        function RecaptchaRender() {\r\n            return (\r\n                <Recaptcha\r\n                    captchaRef={captchaParamsRef}\r\n                    setLoading={setLoading}\r\n                />\r\n            );\r\n        },\r\n        [captchaParamsRef, setLoading]\r\n    );\r\n\r\n    return {\r\n        isValidate,\r\n        validate: defaultValidate,\r\n        captchaParamsRef,\r\n        CaptchaRender,\r\n    };\r\n}\r\n","import React, { forwardRef, useCallback, useRef } from \"react\";\r\nimport Script from \"react-load-script\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst TCaptcha = forwardRef(function TCaptcha(\r\n    { captchaRef, setLoading, isValidateRef, submitRef },\r\n    ref\r\n) {\r\n    const appid = useSelector(\r\n        (state) => state.siteConfig.tcaptcha_captcha_app_id\r\n    );\r\n    const onLoad = () => {\r\n        try {\r\n            ref.current = new window.TencentCaptcha(appid, function (res) {\r\n                if (res.ret === 0) {\r\n                    captchaRef.current.ticket = res.ticket;\r\n                    captchaRef.current.randstr = res.randstr;\r\n\r\n                    isValidateRef.current.isValidate = true;\r\n                    submitRef.current.submit();\r\n                    console.log(submitRef);\r\n                } else {\r\n                    submitRef.current.setLoading(false);\r\n                }\r\n            });\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n        setLoading(false);\r\n    };\r\n    return (\r\n        <Script\r\n            url={\"https://ssl.captcha.qq.com/TCaptcha.js\"}\r\n            onLoad={onLoad}\r\n        />\r\n    );\r\n});\r\n\r\nexport default function useTCaptcha(setLoading) {\r\n    const isValidate = useRef({\r\n        isValidate: false,\r\n    });\r\n    const captchaParamsRef = useRef({\r\n        ticket: \"\",\r\n        randstr: \"\",\r\n    });\r\n    const submitRef = useRef({\r\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n        submit: () => {},\r\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n        setLoading: () => {},\r\n    });\r\n\r\n    const captchaRef = useRef();\r\n\r\n    const CaptchaRender = useCallback(\r\n        function TCaptchaRender() {\r\n            return (\r\n                <TCaptcha\r\n                    captchaRef={captchaParamsRef}\r\n                    setLoading={setLoading}\r\n                    isValidateRef={isValidate}\r\n                    submitRef={submitRef}\r\n                    ref={captchaRef}\r\n                />\r\n            );\r\n        },\r\n        [captchaParamsRef, setLoading, isValidate, submitRef, captchaRef]\r\n    );\r\n\r\n    return {\r\n        isValidate: isValidate,\r\n        validate: (submit, setLoading) => {\r\n            submitRef.current.submit = submit;\r\n            submitRef.current.setLoading = setLoading;\r\n            captchaRef.current.show();\r\n        },\r\n        captchaParamsRef,\r\n        CaptchaRender,\r\n    };\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { useRef, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport useNormalCaptcha from \"./normal\";\r\nimport useRecaptcha from \"./recaptcha\";\r\nimport useTCaptcha from \"./tcaptcha\";\r\n\r\nexport const useStyle = makeStyles((theme) => ({\r\n    captchaContainer: {\r\n        display: \"flex\",\r\n        marginTop: \"10px\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"block\",\r\n        },\r\n    },\r\n}));\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/no-empty-function\r\nexport const defaultValidate = (submit, setLoading) => {};\r\n\r\nexport const useCaptcha = () => {\r\n    const captchaType = useSelector((state) => state.siteConfig.captcha_type);\r\n\r\n    const [captchaLoading, setCaptchaLoading] = useState(true);\r\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n    const captchaRefreshRef = useRef(() => {});\r\n\r\n    const normal = useNormalCaptcha(captchaRefreshRef, setCaptchaLoading);\r\n    const recaptcha = useRecaptcha(setCaptchaLoading);\r\n    const tcaptcha = useTCaptcha(setCaptchaLoading);\r\n\r\n    switch (captchaType) {\r\n        case \"normal\":\r\n            return { ...normal, captchaRefreshRef, captchaLoading };\r\n        case \"recaptcha\":\r\n            return { ...recaptcha, captchaRefreshRef, captchaLoading };\r\n        case \"tcaptcha\":\r\n            return { ...tcaptcha, captchaRefreshRef, captchaLoading };\r\n        default:\r\n            return { ...normal, captchaRefreshRef, captchaLoading };\r\n    }\r\n};\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Divider,\r\n    FormControl,\r\n    Input,\r\n    InputLabel,\r\n    Link,\r\n    makeStyles,\r\n    Paper,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport {\r\n    applyThemes,\r\n    setSessionStatus,\r\n    toggleSnackbar,\r\n} from \"../../actions/index\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport API from \"../../middleware/Api\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport { bufferDecode, bufferEncode } from \"../../utils/index\";\r\nimport { Fingerprint, VpnKey } from \"@material-ui/icons\";\r\nimport VpnIcon from \"@material-ui/icons/VpnKeyOutlined\";\r\nimport { useLocation } from \"react-router\";\r\nimport { ICPFooter } from \"../Common/ICPFooter\";\r\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"110px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: 400,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: 110,\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\r\n            3\r\n        )}px`,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    link: {\r\n        marginTop: \"20px\",\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    captchaContainer: {\r\n        display: \"flex\",\r\n        marginTop: \"10px\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"block\",\r\n        },\r\n    },\r\n    captchaPlaceholder: {\r\n        width: 200,\r\n    },\r\n    buttonContainer: {\r\n        display: \"flex\",\r\n    },\r\n    authnLink: {\r\n        textAlign: \"center\",\r\n        marginTop: 16,\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction LoginForm() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pwd, setPwd] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [useAuthn, setUseAuthn] = useState(false);\r\n    const [twoFA, setTwoFA] = useState(false);\r\n    const [faCode, setFACode] = useState(\"\");\r\n\r\n    const loginCaptcha = useSelector((state) => state.siteConfig.loginCaptcha);\r\n    const title = useSelector((state) => state.siteConfig.title);\r\n    const authn = useSelector((state) => state.siteConfig.authn);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const ApplyThemes = useCallback((theme) => dispatch(applyThemes(theme)), [\r\n        dispatch,\r\n    ]);\r\n    const SetSessionStatus = useCallback(\r\n        (status) => dispatch(setSessionStatus(status)),\r\n        [dispatch]\r\n    );\r\n\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const {\r\n        captchaLoading,\r\n        isValidate,\r\n        validate,\r\n        CaptchaRender,\r\n        captchaRefreshRef,\r\n        captchaParamsRef,\r\n    } = useCaptcha();\r\n    const query = useQuery();\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        setEmail(query.get(\"username\"));\r\n    }, [location]);\r\n\r\n    const afterLogin = (data) => {\r\n        Auth.authenticate(data);\r\n\r\n        // 设置用户主题色\r\n        if (data[\"preferred_theme\"] !== \"\") {\r\n            ApplyThemes(data[\"preferred_theme\"]);\r\n        }\r\n\r\n        // 设置登录状态\r\n        SetSessionStatus(true);\r\n\r\n        history.push(\"/home\");\r\n        ToggleSnackbar(\"top\", \"right\", \"登录成功\", \"success\");\r\n\r\n        localStorage.removeItem(\"siteConfigCache\");\r\n    };\r\n\r\n    const authnLogin = (e) => {\r\n        e.preventDefault();\r\n        if (!navigator.credentials) {\r\n            ToggleSnackbar(\"top\", \"right\", \"当前浏览器或环境不支持\", \"warning\");\r\n\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        API.get(\"/user/authn/\" + email)\r\n            .then((response) => {\r\n                const credentialRequestOptions = response.data;\r\n                console.log(credentialRequestOptions);\r\n                credentialRequestOptions.publicKey.challenge = bufferDecode(\r\n                    credentialRequestOptions.publicKey.challenge\r\n                );\r\n                credentialRequestOptions.publicKey.allowCredentials.forEach(\r\n                    function (listItem) {\r\n                        listItem.id = bufferDecode(listItem.id);\r\n                    }\r\n                );\r\n\r\n                return navigator.credentials.get({\r\n                    publicKey: credentialRequestOptions.publicKey,\r\n                });\r\n            })\r\n            .then((assertion) => {\r\n                const authData = assertion.response.authenticatorData;\r\n                const clientDataJSON = assertion.response.clientDataJSON;\r\n                const rawId = assertion.rawId;\r\n                const sig = assertion.response.signature;\r\n                const userHandle = assertion.response.userHandle;\r\n\r\n                return API.post(\r\n                    \"/user/authn/finish/\" + email,\r\n                    JSON.stringify({\r\n                        id: assertion.id,\r\n                        rawId: bufferEncode(rawId),\r\n                        type: assertion.type,\r\n                        response: {\r\n                            authenticatorData: bufferEncode(authData),\r\n                            clientDataJSON: bufferEncode(clientDataJSON),\r\n                            signature: bufferEncode(sig),\r\n                            userHandle: bufferEncode(userHandle),\r\n                        },\r\n                    })\r\n                );\r\n            })\r\n            .then((response) => {\r\n                afterLogin(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const login = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (!isValidate.current.isValidate && loginCaptcha) {\r\n            validate(() => login(e), setLoading);\r\n            return;\r\n        }\r\n        API.post(\"/user/session\", {\r\n            userName: email,\r\n            Password: pwd,\r\n            ...captchaParamsRef.current,\r\n        })\r\n            .then((response) => {\r\n                setLoading(false);\r\n                if (response.rawData.code === 203) {\r\n                    setTwoFA(true);\r\n                } else {\r\n                    afterLogin(response.data);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\r\n                captchaRefreshRef.current();\r\n            });\r\n    };\r\n\r\n    const twoFALogin = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        API.post(\"/user/2fa\", {\r\n            code: faCode,\r\n        })\r\n            .then((response) => {\r\n                setLoading(false);\r\n                afterLogin(response.data);\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            {!twoFA && (\r\n                <>\r\n                    <Paper className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            登录 {title}\r\n                        </Typography>\r\n                        {!useAuthn && (\r\n                            <form className={classes.form} onSubmit={login}>\r\n                                <FormControl margin=\"normal\" required fullWidth>\r\n                                    <InputLabel htmlFor=\"email\">\r\n                                        电子邮箱\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        id=\"email\"\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        onChange={(e) =>\r\n                                            setEmail(e.target.value)\r\n                                        }\r\n                                        autoComplete\r\n                                        value={email}\r\n                                        autoFocus\r\n                                    />\r\n                                </FormControl>\r\n                                <FormControl margin=\"normal\" required fullWidth>\r\n                                    <InputLabel htmlFor=\"password\">\r\n                                        密码\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        name=\"password\"\r\n                                        onChange={(e) => setPwd(e.target.value)}\r\n                                        type=\"password\"\r\n                                        id=\"password\"\r\n                                        value={pwd}\r\n                                        autoComplete\r\n                                    />\r\n                                </FormControl>\r\n                                {loginCaptcha && <CaptchaRender />}\r\n\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={\r\n                                        loading ||\r\n                                        (loginCaptcha ? captchaLoading : false)\r\n                                    }\r\n                                    className={classes.submit}\r\n                                >\r\n                                    登录\r\n                                </Button>\r\n                            </form>\r\n                        )}\r\n                        {useAuthn && (\r\n                            <form className={classes.form}>\r\n                                <FormControl margin=\"normal\" required fullWidth>\r\n                                    <InputLabel htmlFor=\"email\">\r\n                                        电子邮箱\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        id=\"email\"\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        onChange={(e) =>\r\n                                            setEmail(e.target.value)\r\n                                        }\r\n                                        autoComplete\r\n                                        value={email}\r\n                                        autoFocus\r\n                                    />\r\n                                </FormControl>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={loading}\r\n                                    onClick={authnLogin}\r\n                                    className={classes.submit}\r\n                                >\r\n                                    下一步\r\n                                </Button>\r\n                            </form>\r\n                        )}\r\n                        <Divider />\r\n                        <div className={classes.link}>\r\n                            <div>\r\n                                <Link href={\"/forget\"}>忘记密码</Link>\r\n                            </div>\r\n                            <div>\r\n                                <Link href={\"/signup\"}>注册账号</Link>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <ICPFooter />\r\n                    </Paper>\r\n\r\n                    {authn && (\r\n                        <div className={classes.authnLink}>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                onClick={() => setUseAuthn(!useAuthn)}\r\n                            >\r\n                                {!useAuthn && (\r\n                                    <>\r\n                                        <Fingerprint\r\n                                            style={{\r\n                                                marginRight: 8,\r\n                                            }}\r\n                                        />\r\n                                        使用外部验证器登录\r\n                                    </>\r\n                                )}\r\n                                {useAuthn && (\r\n                                    <>\r\n                                        <VpnKey\r\n                                            style={{\r\n                                                marginRight: 8,\r\n                                            }}\r\n                                        />\r\n                                        使用密码登录\r\n                                    </>\r\n                                )}\r\n                            </Button>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n            {twoFA && (\r\n                <Paper className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <VpnIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        二步验证\r\n                    </Typography>\r\n                    <form className={classes.form} onSubmit={twoFALogin}>\r\n                        <FormControl margin=\"normal\" required fullWidth>\r\n                            <InputLabel htmlFor=\"code\">\r\n                                请输入六位二步验证代码\r\n                            </InputLabel>\r\n                            <Input\r\n                                id=\"code\"\r\n                                type=\"number\"\r\n                                name=\"code\"\r\n                                onChange={(event) =>\r\n                                    setFACode(event.target.value)\r\n                                }\r\n                                autoComplete\r\n                                value={faCode}\r\n                                autoFocus\r\n                            />\r\n                        </FormControl>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={loading}\r\n                            className={classes.submit}\r\n                        >\r\n                            继续登录\r\n                        </Button>{\" \"}\r\n                    </form>{\" \"}\r\n                    <Divider />\r\n                </Paper>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n    withStyles,\r\n    ButtonBase,\r\n    Typography,\r\n    Tooltip,\r\n    fade,\r\n} from \"@material-ui/core\";\r\nimport TypeIcon from \"./TypeIcon\";\r\nimport { lighten } from \"@material-ui/core/styles\";\r\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\r\nimport statusHelper from \"../../utils/page\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport { Folder } from \"@material-ui/icons\";\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        padding: \"7px\",\r\n    },\r\n\r\n    selected: {\r\n        \"&:hover\": {\r\n            border: \"1px solid #d0d0d0\",\r\n        },\r\n        backgroundColor: fade(\r\n            theme.palette.primary.main,\r\n            theme.palette.type === \"dark\" ? 0.3 : 0.18\r\n        ),\r\n    },\r\n    notSelected: {\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.background.default,\r\n            border: \"1px solid #d0d0d0\",\r\n        },\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n\r\n    button: {\r\n        height: \"50px\",\r\n        border: \"1px solid \" + theme.palette.divider,\r\n        width: \"100%\",\r\n        borderRadius: \"6px\",\r\n        boxSizing: \"border-box\",\r\n        transition:\r\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n        display: \"flex\",\r\n        justifyContent: \"left\",\r\n        alignItems: \"initial\",\r\n    },\r\n    icon: {\r\n        margin: \"10px 10px 10px 16px\",\r\n        height: \"30px\",\r\n        minWidth: \"30px\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        borderRadius: \"90%\",\r\n        paddingTop: \"3px\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    folderNameSelected: {\r\n        color:\r\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\r\n        fontWeight: \"500\",\r\n    },\r\n    folderNameNotSelected: {\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    folderName: {\r\n        marginTop: \"15px\",\r\n        textOverflow: \"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"hidden\",\r\n        marginRight: \"20px\",\r\n    },\r\n    checkIcon: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selected: state.explorer.selected,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {};\r\n};\r\n\r\nclass SmallIconCompoment extends Component {\r\n    state = {};\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const isSelected =\r\n            this.props.selected.findIndex((value) => {\r\n                return value === this.props.file;\r\n            }) !== -1;\r\n        const isMobile = statusHelper.isMobile();\r\n\r\n        return (\r\n            <ButtonBase\r\n                focusRipple\r\n                className={classNames(\r\n                    {\r\n                        [classes.selected]: isSelected,\r\n                        [classes.notSelected]: !isSelected,\r\n                    },\r\n                    classes.button\r\n                )}\r\n            >\r\n                <div\r\n                    onClick={this.props.onIconClick}\r\n                    className={classNames(classes.icon, {\r\n                        [classes.iconSelected]: isSelected,\r\n                        [classes.iconNotSelected]: !isSelected,\r\n                    })}\r\n                >\r\n                    {(!isSelected || !isMobile) && (\r\n                        <>\r\n                            {this.props.isFolder && <Folder />}\r\n                            {!this.props.isFolder && (\r\n                                <TypeIcon fileName={this.props.file.name} />\r\n                            )}\r\n                        </>\r\n                    )}\r\n                    {isSelected && isMobile && (\r\n                        <Grow in={isSelected && isMobile}>\r\n                            <CheckCircleRoundedIcon\r\n                                className={classes.checkIcon}\r\n                            />\r\n                        </Grow>\r\n                    )}\r\n                </div>\r\n                <Tooltip\r\n                    title={this.props.file.name}\r\n                    aria-label={this.props.file.name}\r\n                >\r\n                    <Typography\r\n                        className={classNames(classes.folderName, {\r\n                            [classes.folderNameSelected]: isSelected,\r\n                            [classes.folderNameNotSelected]: !isSelected,\r\n                        })}\r\n                        variant=\"body2\"\r\n                    >\r\n                        {this.props.file.name}\r\n                    </Typography>\r\n                </Tooltip>\r\n            </ButtonBase>\r\n        );\r\n    }\r\n}\r\n\r\nSmallIconCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    file: PropTypes.object.isRequired,\r\n};\r\n\r\nconst SmallIcon = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(SmallIconCompoment));\r\n\r\nexport default SmallIcon;\r\n","import {\r\n    ButtonBase,\r\n    Divider,\r\n    Tooltip,\r\n    Typography,\r\n    withStyles,\r\n    fade,\r\n} from \"@material-ui/core\";\r\nimport { lighten } from \"@material-ui/core/styles\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport ContentLoader from \"react-content-loader\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { baseURL } from \"../../middleware/Api\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport TypeIcon from \"./TypeIcon\";\r\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\r\nimport statusHelper from \"../../utils/page\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        padding: \"7px\",\r\n    },\r\n\r\n    selected: {\r\n        \"&:hover\": {\r\n            border: \"1px solid #d0d0d0\",\r\n        },\r\n        backgroundColor: fade(\r\n            theme.palette.primary.main,\r\n            theme.palette.type === \"dark\" ? 0.3 : 0.18\r\n        ),\r\n    },\r\n\r\n    notSelected: {\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.background.default,\r\n            border: \"1px solid #d0d0d0\",\r\n        },\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n\r\n    button: {\r\n        border: \"1px solid \" + theme.palette.divider,\r\n        width: \"100%\",\r\n        borderRadius: \"6px\",\r\n        boxSizing: \"border-box\",\r\n        transition:\r\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n        alignItems: \"initial\",\r\n        display: \"initial\",\r\n    },\r\n    folderNameSelected: {\r\n        color:\r\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\r\n        fontWeight: \"500\",\r\n    },\r\n    folderNameNotSelected: {\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    folderName: {\r\n        marginTop: \"15px\",\r\n        textOverflow: \"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"hidden\",\r\n        marginRight: \"20px\",\r\n    },\r\n    preview: {\r\n        overflow: \"hidden\",\r\n        height: \"150px\",\r\n        width: \"100%\",\r\n        borderRadius: \"6px 6px 0 0\",\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    previewIcon: {\r\n        overflow: \"hidden\",\r\n        height: \"149px\",\r\n        width: \"100%\",\r\n        borderRadius: \"5px 5px 0 0\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        paddingTop: \"50px\",\r\n    },\r\n    iconBig: {\r\n        fontSize: 50,\r\n    },\r\n    picPreview: {\r\n        objectFit: \"cover\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    },\r\n    fileInfo: {\r\n        height: \"50px\",\r\n        display: \"flex\",\r\n    },\r\n    icon: {\r\n        margin: \"10px 10px 10px 16px\",\r\n        height: \"30px\",\r\n        minWidth: \"30px\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        borderRadius: \"90%\",\r\n        paddingTop: \"3px\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    loadingAnimation: {\r\n        borderRadius: \"6px 6px 0 0\",\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n    },\r\n    shareFix: {\r\n        marginLeft: \"20px\",\r\n    },\r\n    checkIcon: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        path: state.navigator.path,\r\n        selected: state.explorer.selected,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {};\r\n};\r\n\r\nclass FileIconCompoment extends Component {\r\n    static defaultProps = {\r\n        share: false,\r\n    };\r\n\r\n    state = {\r\n        loading: false,\r\n        showPicIcon: false,\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const isSelected =\r\n            this.props.selected.findIndex((value) => {\r\n                return value === this.props.file;\r\n            }) !== -1;\r\n        const isSharePage = pathHelper.isSharePage(\r\n            this.props.location.pathname\r\n        );\r\n        const isMobile = statusHelper.isMobile();\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <ButtonBase\r\n                    focusRipple\r\n                    className={classNames(\r\n                        {\r\n                            [classes.selected]: isSelected,\r\n                            [classes.notSelected]: !isSelected,\r\n                        },\r\n                        classes.button\r\n                    )}\r\n                >\r\n                    {this.props.file.pic !== \"\" &&\r\n                        !this.state.showPicIcon &&\r\n                        this.props.file.pic !== \" \" &&\r\n                        this.props.file.pic !== \"null,null\" && (\r\n                            <div className={classes.preview}>\r\n                                <LazyLoadImage\r\n                                    className={classNames({\r\n                                        [classes.hide]: this.state.loading,\r\n                                        [classes.picPreview]: !this.state\r\n                                            .loading,\r\n                                    })}\r\n                                    src={\r\n                                        baseURL +\r\n                                        (isSharePage\r\n                                            ? \"/share/thumb/\" +\r\n                                              window.shareInfo.key +\r\n                                              \"/\" +\r\n                                              this.props.file.id +\r\n                                              \"?path=\" +\r\n                                              encodeURIComponent(\r\n                                                  this.props.file.path\r\n                                              )\r\n                                            : \"/file/thumb/\" +\r\n                                              this.props.file.id)\r\n                                    }\r\n                                    afterLoad={() =>\r\n                                        this.setState({ loading: false })\r\n                                    }\r\n                                    beforeLoad={() =>\r\n                                        this.setState({ loading: true })\r\n                                    }\r\n                                    onError={() =>\r\n                                        this.setState({ showPicIcon: true })\r\n                                    }\r\n                                />\r\n                                <ContentLoader\r\n                                    height={150}\r\n                                    width={170}\r\n                                    className={classNames(\r\n                                        {\r\n                                            [classes.hide]: !this.state.loading,\r\n                                        },\r\n                                        classes.loadingAnimation\r\n                                    )}\r\n                                >\r\n                                    <rect\r\n                                        x=\"0\"\r\n                                        y=\"0\"\r\n                                        width=\"100%\"\r\n                                        height=\"150\"\r\n                                    />\r\n                                </ContentLoader>\r\n                            </div>\r\n                        )}\r\n                    {(this.props.file.pic === \"\" ||\r\n                        this.state.showPicIcon ||\r\n                        this.props.file.pic === \" \" ||\r\n                        this.props.file.pic === \"null,null\") && (\r\n                        <div className={classes.previewIcon}>\r\n                            <TypeIcon\r\n                                className={classes.iconBig}\r\n                                fileName={this.props.file.name}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {(this.props.file.pic === \"\" ||\r\n                        this.state.showPicIcon ||\r\n                        this.props.file.pic === \" \" ||\r\n                        this.props.file.pic === \"null,null\") && <Divider />}\r\n                    <div className={classes.fileInfo}>\r\n                        {!this.props.share && (\r\n                            <div\r\n                                onClick={this.props.onIconClick}\r\n                                className={classNames(classes.icon, {\r\n                                    [classes.iconSelected]: isSelected,\r\n                                    [classes.iconNotSelected]: !isSelected,\r\n                                })}\r\n                            >\r\n                                {(!isSelected || !isMobile) && (\r\n                                    <TypeIcon fileName={this.props.file.name} />\r\n                                )}\r\n                                {isSelected && isMobile && (\r\n                                    <Grow in={isSelected && isMobile}>\r\n                                        <CheckCircleRoundedIcon\r\n                                            className={classes.checkIcon}\r\n                                        />\r\n                                    </Grow>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                        <Tooltip\r\n                            title={this.props.file.name}\r\n                            aria-label={this.props.file.name}\r\n                        >\r\n                            <Typography\r\n                                variant=\"body2\"\r\n                                className={classNames(classes.folderName, {\r\n                                    [classes.folderNameSelected]: isSelected,\r\n                                    [classes.folderNameNotSelected]: !isSelected,\r\n                                    [classes.shareFix]: this.props.share,\r\n                                })}\r\n                            >\r\n                                {this.props.file.name}\r\n                            </Typography>\r\n                        </Tooltip>\r\n                    </div>\r\n                </ButtonBase>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFileIconCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    file: PropTypes.object.isRequired,\r\n};\r\n\r\nconst FileIcon = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(FileIconCompoment)));\r\n\r\nexport default FileIcon;\r\n","import React from \"react\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n    ButtonBase,\r\n    Typography,\r\n    Tooltip,\r\n    makeStyles,\r\n    fade,\r\n} from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { lighten } from \"@material-ui/core/styles\";\r\nimport statusHelper from \"../../utils/page\";\r\nimport TypeIcon from \"./TypeIcon\";\r\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        padding: \"7px\",\r\n    },\r\n\r\n    selected: {\r\n        \"&:hover\": {\r\n            border: \"1px solid #d0d0d0\",\r\n        },\r\n        backgroundColor: fade(\r\n            theme.palette.primary.main,\r\n            theme.palette.type === \"dark\" ? 0.3 : 0.18\r\n        ),\r\n    },\r\n\r\n    notSelected: {\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.background.default,\r\n            border: \"1px solid #d0d0d0\",\r\n        },\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n\r\n    button: {\r\n        height: \"50px\",\r\n        border: \"1px solid \" + theme.palette.divider,\r\n        width: \"100%\",\r\n        borderRadius: \"6px\",\r\n        boxSizing: \"border-box\",\r\n        transition:\r\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n        display: \"flex\",\r\n        justifyContent: \"left\",\r\n        alignItems: \"initial\",\r\n    },\r\n    icon: {\r\n        margin: \"10px 10px 10px 16px\",\r\n        height: \"30px\",\r\n        minWidth: \"30px\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        borderRadius: \"90%\",\r\n        paddingTop: \"3px\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    folderNameSelected: {\r\n        color:\r\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\r\n        fontWeight: \"500\",\r\n    },\r\n    folderNameNotSelected: {\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    folderName: {\r\n        marginTop: \"15px\",\r\n        textOverflow: \"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n        overflow: \"hidden\",\r\n        marginRight: \"20px\",\r\n    },\r\n    active: {\r\n        boxShadow: \"0 0 0 2px \" + theme.palette.primary.light,\r\n    },\r\n    checkIcon: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\nexport default function Folder({ folder, isActive, onIconClick }) {\r\n    const selected = useSelector((state) => state.explorer.selected);\r\n    const classes = useStyles();\r\n    const isMobile = statusHelper.isMobile();\r\n    const isSelected =\r\n        selected.findIndex((value) => {\r\n            return value === folder;\r\n        }) !== -1;\r\n\r\n    return (\r\n        <ButtonBase\r\n            focusRipple\r\n            className={classNames(\r\n                {\r\n                    [classes.selected]: isSelected,\r\n                    [classes.notSelected]: !isSelected,\r\n                    [classes.active]: isActive,\r\n                },\r\n                classes.button\r\n            )}\r\n        >\r\n            <div\r\n                onClick={onIconClick}\r\n                className={classNames(classes.icon, {\r\n                    [classes.iconSelected]: isSelected,\r\n                    [classes.iconNotSelected]: !isSelected,\r\n                })}\r\n            >\r\n                {(!isSelected || !isMobile) && <FolderIcon />}\r\n                {isSelected && isMobile && (\r\n                    <CheckCircleRoundedIcon className={classes.checkIcon} />\r\n                )}\r\n            </div>\r\n            <Tooltip title={folder.name} aria-label={folder.name}>\r\n                <Typography\r\n                    variant=\"body2\"\r\n                    className={classNames(classes.folderName, {\r\n                        [classes.folderNameSelected]: isSelected,\r\n                        [classes.folderNameNotSelected]: !isSelected,\r\n                    })}\r\n                >\r\n                    {folder.name}\r\n                </Typography>\r\n            </Tooltip>\r\n        </ButtonBase>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport SmallIcon from \"../SmallIcon\";\r\nimport FileIcon from \"../FileIcon\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Folder from \"../Folder\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    dragging: {\r\n        width: \"200px\",\r\n    },\r\n    cardDragged: {\r\n        position: \"absolute\",\r\n        \"transform-origin\": \"bottom left\",\r\n    },\r\n}));\r\n\r\nconst diliverIcon = (object, viewMethod, classes) => {\r\n    if (object.type === \"dir\") {\r\n        return (\r\n            <div className={classes.dragging}>\r\n                <SmallIcon file={object} isFolder />\r\n            </div>\r\n        );\r\n    }\r\n    if (object.type === \"file\" && viewMethod === \"icon\") {\r\n        return (\r\n            <div className={classes.dragging}>\r\n                <FileIcon file={object} />\r\n            </div>\r\n        );\r\n    }\r\n    if (\r\n        (object.type === \"file\" && viewMethod === \"smallIcon\") ||\r\n        viewMethod === \"list\"\r\n    ) {\r\n        return (\r\n            <div className={classes.dragging}>\r\n                <SmallIcon file={object} />\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst Preview = (props) => {\r\n    const selected = useSelector((state) => state.explorer.selected);\r\n    const viewMethod = useSelector(\r\n        (state) => state.viewUpdate.explorerViewMethod\r\n    );\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            {selected.length === 0 &&\r\n                diliverIcon(props.object, viewMethod, classes)}\r\n            {selected.length > 0 && (\r\n                <>\r\n                    {selected.slice(0, 3).map((card, i) => (\r\n                        <div\r\n                            key={card.id}\r\n                            className={classes.cardDragged}\r\n                            style={{\r\n                                zIndex: selected.length - i,\r\n                                transform: `rotateZ(${-i * 2.5}deg)`,\r\n                            }}\r\n                        >\r\n                            {diliverIcon(card, viewMethod, classes)}\r\n                        </div>\r\n                    ))}\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\nexport default Preview;\r\n","import React from \"react\";\r\nimport { useDragLayer } from \"react-dnd\";\r\nimport Preview from \"./Preview\";\r\nimport { useSelector } from \"react-redux\";\r\nconst layerStyles = {\r\n    position: \"fixed\",\r\n    pointerEvents: \"none\",\r\n    zIndex: 100,\r\n    left: 0,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n};\r\n\r\nfunction getItemStyles(\r\n    initialOffset,\r\n    currentOffset,\r\n    pointerOffset,\r\n    viewMethod\r\n) {\r\n    if (!initialOffset || !currentOffset) {\r\n        return {\r\n            display: \"none\",\r\n        };\r\n    }\r\n    let { x, y } = currentOffset;\r\n    if (viewMethod === \"list\") {\r\n        x += pointerOffset.x - initialOffset.x;\r\n        y += pointerOffset.y - initialOffset.y;\r\n    }\r\n\r\n    const transform = `translate(${x}px, ${y}px)`;\r\n    return {\r\n        opacity: 0.5,\r\n        transform,\r\n        WebkitTransform: transform,\r\n    };\r\n}\r\nconst CustomDragLayer = (props) => {\r\n    const {\r\n        itemType,\r\n        isDragging,\r\n        item,\r\n        initialOffset,\r\n        currentOffset,\r\n        pointerOffset,\r\n    } = useDragLayer((monitor) => ({\r\n        item: monitor.getItem(),\r\n        itemType: monitor.getItemType(),\r\n        initialOffset: monitor.getInitialSourceClientOffset(),\r\n        currentOffset: monitor.getSourceClientOffset(),\r\n        pointerOffset: monitor.getInitialClientOffset(),\r\n        isDragging: monitor.isDragging(),\r\n    }));\r\n    const viewMethod = useSelector(\r\n        (state) => state.viewUpdate.explorerViewMethod\r\n    );\r\n    function renderItem() {\r\n        switch (itemType) {\r\n            case \"object\":\r\n                return <Preview object={item.object} />;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n    if (!isDragging) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div style={layerStyles}>\r\n            <div\r\n                style={getItemStyles(\r\n                    initialOffset,\r\n                    currentOffset,\r\n                    pointerOffset,\r\n                    viewMethod\r\n                )}\r\n            >\r\n                {renderItem()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default CustomDragLayer;\r\n","import * as actions from \"./action\";\r\nimport * as reducers from \"./reducer\";\r\n\r\nexport default {\r\n    actions,\r\n    reducers,\r\n};\r\n","import {\r\n    Divider,\r\n    ListItemIcon,\r\n    MenuItem,\r\n    Typography,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { Archive, InfoOutlined, Unarchive } from \"@material-ui/icons\";\r\nimport RenameIcon from \"@material-ui/icons/BorderColor\";\r\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\r\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport NewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\r\nimport OpenFolderIcon from \"@material-ui/icons/FolderOpen\";\r\nimport MoveIcon from \"@material-ui/icons/Input\";\r\nimport LinkIcon from \"@material-ui/icons/InsertLink\";\r\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport { FolderUpload, MagnetOn, FilePlus } from \"mdi-material-ui\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n    openCompressDialog,\r\n    openCreateFileDialog,\r\n    refreshFileList,\r\n} from \"../../actions\";\r\nimport {\r\n    changeContextMenu,\r\n    navigateTo,\r\n    openCopyDialog,\r\n    openCreateFolderDialog,\r\n    openDecompressDialog,\r\n    openGetSourceDialog,\r\n    openLoadingDialog,\r\n    openMoveDialog,\r\n    openMusicDialog,\r\n    openRemoteDownloadDialog,\r\n    openRemoveDialog,\r\n    openRenameDialog,\r\n    openShareDialog,\r\n    openTorrentDownloadDialog,\r\n    setNavigatorLoadingStatus,\r\n    setSelectedTarget,\r\n    showImgPreivew,\r\n    toggleSnackbar,\r\n} from \"../../actions/index\";\r\nimport { isCompressFile, isPreviewable, isTorrent } from \"../../config\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport { allowSharePreview } from \"../../utils/index\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport { openPreview } from \"../../actions\";\r\nimport {\r\n    setSideBar,\r\n    toggleObjectInfoSidebar,\r\n} from \"../../redux/explorer/action\";\r\n\r\nconst styles = () => ({\r\n    propover: {},\r\n    divider: {\r\n        marginTop: 4,\r\n        marginBottom: 4,\r\n    },\r\n});\r\n\r\nconst StyledListItemIcon = withStyles({\r\n    root: {\r\n        minWidth: 38,\r\n    },\r\n})(ListItemIcon);\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        menuType: state.viewUpdate.contextType,\r\n        menuOpen: state.viewUpdate.contextOpen,\r\n        isMultiple: state.explorer.selectProps.isMultiple,\r\n        withFolder: state.explorer.selectProps.withFolder,\r\n        withFile: state.explorer.selectProps.withFile,\r\n        path: state.navigator.path,\r\n        selected: state.explorer.selected,\r\n        keywords: state.explorer.keywords,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeContextMenu: (type, open) => {\r\n            dispatch(changeContextMenu(type, open));\r\n        },\r\n        setNavigatorLoadingStatus: (status) => {\r\n            dispatch(setNavigatorLoadingStatus(status));\r\n        },\r\n        setSelectedTarget: (targets) => {\r\n            dispatch(setSelectedTarget(targets));\r\n        },\r\n        navigateTo: (path) => {\r\n            dispatch(navigateTo(path));\r\n        },\r\n        openCreateFolderDialog: () => {\r\n            dispatch(openCreateFolderDialog());\r\n        },\r\n        openCreateFileDialog: () => {\r\n            dispatch(openCreateFileDialog());\r\n        },\r\n        openRenameDialog: () => {\r\n            dispatch(openRenameDialog());\r\n        },\r\n        openMoveDialog: () => {\r\n            dispatch(openMoveDialog());\r\n        },\r\n        openRemoveDialog: () => {\r\n            dispatch(openRemoveDialog());\r\n        },\r\n        openShareDialog: () => {\r\n            dispatch(openShareDialog());\r\n        },\r\n        showImgPreivew: (first) => {\r\n            dispatch(showImgPreivew(first));\r\n        },\r\n        openMusicDialog: () => {\r\n            dispatch(openMusicDialog());\r\n        },\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        openRemoteDownloadDialog: () => {\r\n            dispatch(openRemoteDownloadDialog());\r\n        },\r\n        openTorrentDownloadDialog: () => {\r\n            dispatch(openTorrentDownloadDialog());\r\n        },\r\n        openGetSourceDialog: () => {\r\n            dispatch(openGetSourceDialog());\r\n        },\r\n        openCopyDialog: () => {\r\n            dispatch(openCopyDialog());\r\n        },\r\n        openLoadingDialog: (text) => {\r\n            dispatch(openLoadingDialog(text));\r\n        },\r\n        openDecompressDialog: () => {\r\n            dispatch(openDecompressDialog());\r\n        },\r\n        openCompressDialog: () => {\r\n            dispatch(openCompressDialog());\r\n        },\r\n        refreshFileList: () => {\r\n            dispatch(refreshFileList());\r\n        },\r\n        openPreview: () => {\r\n            dispatch(openPreview());\r\n        },\r\n        toggleObjectInfoSidebar: (open) => {\r\n            dispatch(toggleObjectInfoSidebar(open));\r\n        },\r\n    };\r\n};\r\n\r\nclass ContextMenuCompoment extends Component {\r\n    X = 0;\r\n    Y = 0;\r\n\r\n    state = {};\r\n\r\n    componentDidMount = () => {\r\n        window.document.addEventListener(\"mousemove\", this.setPoint);\r\n    };\r\n\r\n    setPoint = (e) => {\r\n        this.Y = e.clientY;\r\n        this.X = e.clientX;\r\n    };\r\n\r\n    openArchiveDownload = () => {\r\n        this.props.changeContextMenu(\"file\", false);\r\n        this.props.openLoadingDialog(\"打包中...\");\r\n    };\r\n\r\n    openDownload = () => {\r\n        if (!allowSharePreview()) {\r\n            this.props.toggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                \"未登录用户无法预览\",\r\n                \"warning\"\r\n            );\r\n            this.props.changeContextMenu(\"file\", false);\r\n            return;\r\n        }\r\n        this.props.changeContextMenu(\"file\", false);\r\n        this.props.openLoadingDialog(\"获取下载地址...\");\r\n    };\r\n\r\n    enterFolder = () => {\r\n        this.props.navigateTo(\r\n            this.props.path === \"/\"\r\n                ? this.props.path + this.props.selected[0].name\r\n                : this.props.path + \"/\" + this.props.selected[0].name\r\n        );\r\n    };\r\n\r\n    clickUpload = (id) => {\r\n        this.props.changeContextMenu(\"empty\", false);\r\n        const uploadButton = document.getElementsByClassName(id)[0];\r\n        if (document.body.contains(uploadButton)) {\r\n            uploadButton.click();\r\n        } else {\r\n            this.props.toggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                \"上传组件还未加载完成\",\r\n                \"warning\"\r\n            );\r\n        }\r\n    };\r\n\r\n    // 暂时只对空白处右键菜单使用这个函数，疑似有bug会导致的一个菜单被默认选中。\r\n    // 相关issue： https://github.com/mui-org/material-ui/issues/23747\r\n    renderMenuItems = (items) => {\r\n        const res = [];\r\n        let key = 0;\r\n\r\n        [\"top\", \"center\", \"bottom\"].forEach((position) => {\r\n            let visibleCount = 0;\r\n            items[position].forEach((item) => {\r\n                if (item.condition) {\r\n                    res.push(\r\n                        <MenuItem dense key={key} onClick={item.onClick}>\r\n                            <ListItemIcon>{item.icon}</ListItemIcon>\r\n                            <Typography variant=\"inherit\">\r\n                                {item.text}\r\n                            </Typography>\r\n                        </MenuItem>\r\n                    );\r\n                    key++;\r\n                    visibleCount++;\r\n                }\r\n            });\r\n            if (visibleCount > 0 && position != \"bottom\") {\r\n                res.push(\r\n                    <Divider key={key} className={this.props.classes.divider} />\r\n                );\r\n                key++;\r\n            }\r\n        });\r\n\r\n        return res;\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const user = Auth.GetUser();\r\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\r\n        const emptyMenuList = {\r\n            top: [\r\n                {\r\n                    condition: true,\r\n                    onClick: () => {\r\n                        this.props.refreshFileList();\r\n                        this.props.changeContextMenu(\r\n                            this.props.menuType,\r\n                            false\r\n                        );\r\n                    },\r\n                    icon: <RefreshIcon />,\r\n                    text: \"刷新\",\r\n                },\r\n            ],\r\n            center: [\r\n                {\r\n                    condition: true,\r\n                    onClick: () => this.clickUpload(\"uploadFileForm\"),\r\n                    icon: <UploadIcon />,\r\n                    text: \"上传文件\",\r\n                },\r\n                {\r\n                    condition: true,\r\n                    onClick: () => this.clickUpload(\"uploadFolderForm\"),\r\n                    icon: <FolderUpload />,\r\n                    text: \"上传目录\",\r\n                },\r\n                {\r\n                    condition: user.group.allowRemoteDownload,\r\n                    onClick: () => this.props.openRemoteDownloadDialog(),\r\n                    icon: <DownloadIcon />,\r\n                    text: \"离线下载\",\r\n                },\r\n            ],\r\n            bottom: [\r\n                {\r\n                    condition: true,\r\n                    onClick: () => this.props.openCreateFolderDialog(),\r\n                    icon: <NewFolderIcon />,\r\n                    text: \"创建文件夹\",\r\n                },\r\n                {\r\n                    condition: true,\r\n                    onClick: () => this.props.openCreateFileDialog(),\r\n                    icon: <FilePlus />,\r\n                    text: \"创建文件\",\r\n                },\r\n            ],\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Menu\r\n                    keepMounted\r\n                    open={this.props.menuOpen}\r\n                    onClose={() =>\r\n                        this.props.changeContextMenu(this.props.menuType, false)\r\n                    }\r\n                    anchorReference=\"anchorPosition\"\r\n                    anchorPosition={{ top: this.Y, left: this.X }}\r\n                    anchorOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"left\",\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"left\",\r\n                    }}\r\n                >\r\n                    {this.props.menuType === \"empty\" && (\r\n                        <div>\r\n                            <MenuItem\r\n                                dense\r\n                                onClick={() => {\r\n                                    this.props.refreshFileList();\r\n                                    this.props.changeContextMenu(\r\n                                        this.props.menuType,\r\n                                        false\r\n                                    );\r\n                                }}\r\n                            >\r\n                                <StyledListItemIcon>\r\n                                    <RefreshIcon />\r\n                                </StyledListItemIcon>\r\n                                <Typography variant=\"inherit\">刷新</Typography>\r\n                            </MenuItem>\r\n                            <Divider className={classes.divider} />\r\n                            <MenuItem\r\n                                dense\r\n                                onClick={() =>\r\n                                    this.clickUpload(\"uploadFileForm\")\r\n                                }\r\n                            >\r\n                                <StyledListItemIcon>\r\n                                    <UploadIcon />\r\n                                </StyledListItemIcon>\r\n                                <Typography variant=\"inherit\">\r\n                                    上传文件\r\n                                </Typography>\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                dense\r\n                                onClick={() =>\r\n                                    this.clickUpload(\"uploadFolderForm\")\r\n                                }\r\n                            >\r\n                                <StyledListItemIcon>\r\n                                    <FolderUpload />\r\n                                </StyledListItemIcon>\r\n                                <Typography variant=\"inherit\">\r\n                                    上传目录\r\n                                </Typography>\r\n                            </MenuItem>\r\n                            {user.group.allowRemoteDownload && (\r\n                                <MenuItem\r\n                                    dense\r\n                                    onClick={() =>\r\n                                        this.props.openRemoteDownloadDialog()\r\n                                    }\r\n                                >\r\n                                    <StyledListItemIcon>\r\n                                        <DownloadIcon />\r\n                                    </StyledListItemIcon>\r\n                                    <Typography variant=\"inherit\">\r\n                                        离线下载\r\n                                    </Typography>\r\n                                </MenuItem>\r\n                            )}\r\n\r\n                            <Divider className={classes.divider} />\r\n                            <MenuItem\r\n                                dense\r\n                                onClick={() =>\r\n                                    this.props.openCreateFolderDialog()\r\n                                }\r\n                            >\r\n                                <StyledListItemIcon>\r\n                                    <NewFolderIcon />\r\n                                </StyledListItemIcon>\r\n                                <Typography variant=\"inherit\">\r\n                                    创建文件夹\r\n                                </Typography>\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                dense\r\n                                onClick={() =>\r\n                                    this.props.openCreateFileDialog()\r\n                                }\r\n                            >\r\n                                <StyledListItemIcon>\r\n                                    <FilePlus />\r\n                                </StyledListItemIcon>\r\n                                <Typography variant=\"inherit\">\r\n                                    创建文件\r\n                                </Typography>\r\n                            </MenuItem>\r\n                        </div>\r\n                    )}\r\n                    {this.props.menuType !== \"empty\" && (\r\n                        <div>\r\n                            {!this.props.isMultiple && this.props.withFolder && (\r\n                                <div>\r\n                                    <MenuItem dense onClick={this.enterFolder}>\r\n                                        <StyledListItemIcon>\r\n                                            <OpenFolderIcon />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            进入\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                    {isHomePage && (\r\n                                        <Divider className={classes.divider} />\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                            {!this.props.isMultiple &&\r\n                                this.props.withFile &&\r\n                                (!this.props.share ||\r\n                                    this.props.share.preview) &&\r\n                                isPreviewable(this.props.selected[0].name) && (\r\n                                    <div>\r\n                                        <MenuItem\r\n                                            dense\r\n                                            onClick={() =>\r\n                                                this.props.openPreview()\r\n                                            }\r\n                                        >\r\n                                            <StyledListItemIcon>\r\n                                                <OpenIcon />\r\n                                            </StyledListItemIcon>\r\n                                            <Typography variant=\"inherit\">\r\n                                                打开\r\n                                            </Typography>\r\n                                        </MenuItem>\r\n                                    </div>\r\n                                )}\r\n\r\n                            {!this.props.isMultiple && this.props.withFile && (\r\n                                <div>\r\n                                    <MenuItem\r\n                                        dense\r\n                                        onClick={() => this.openDownload()}\r\n                                    >\r\n                                        <StyledListItemIcon>\r\n                                            <DownloadIcon />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            下载\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                    {isHomePage && (\r\n                                        <Divider className={classes.divider} />\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n\r\n                            {(this.props.isMultiple || this.props.withFolder) &&\r\n                                (user.group.allowArchiveDownload ||\r\n                                    !isHomePage) && (\r\n                                    <MenuItem\r\n                                        dense\r\n                                        onClick={() =>\r\n                                            this.openArchiveDownload()\r\n                                        }\r\n                                    >\r\n                                        <StyledListItemIcon>\r\n                                            <DownloadIcon />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            打包下载\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                )}\r\n\r\n                            {!this.props.isMultiple &&\r\n                                this.props.withFile &&\r\n                                isHomePage &&\r\n                                this.props.selected[0].source_enabled && (\r\n                                    <MenuItem\r\n                                        dense\r\n                                        onClick={() =>\r\n                                            this.props.openGetSourceDialog()\r\n                                        }\r\n                                    >\r\n                                        <StyledListItemIcon>\r\n                                            <LinkIcon />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            获取外链\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                )}\r\n\r\n                            {!this.props.isMultiple &&\r\n                                isHomePage &&\r\n                                user.group.allowRemoteDownload &&\r\n                                this.props.withFile &&\r\n                                isTorrent(this.props.selected[0].name) && (\r\n                                    <MenuItem\r\n                                        dense\r\n                                        onClick={() =>\r\n                                            this.props.openTorrentDownloadDialog()\r\n                                        }\r\n                                    >\r\n                                        <StyledListItemIcon>\r\n                                            <MagnetOn />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            创建离线下载任务\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                )}\r\n                            {!this.props.isMultiple &&\r\n                                isHomePage &&\r\n                                user.group.compress &&\r\n                                this.props.withFile &&\r\n                                isCompressFile(this.props.selected[0].name) && (\r\n                                    <MenuItem\r\n                                        dense\r\n                                        onClick={() =>\r\n                                            this.props.openDecompressDialog()\r\n                                        }\r\n                                    >\r\n                                        <StyledListItemIcon>\r\n                                            <Unarchive />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            解压缩\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                )}\r\n\r\n                            {isHomePage && user.group.compress && (\r\n                                <MenuItem\r\n                                    dense\r\n                                    onClick={() =>\r\n                                        this.props.openCompressDialog()\r\n                                    }\r\n                                >\r\n                                    <StyledListItemIcon>\r\n                                        <Archive />\r\n                                    </StyledListItemIcon>\r\n                                    <Typography variant=\"inherit\">\r\n                                        创建压缩文件\r\n                                    </Typography>\r\n                                </MenuItem>\r\n                            )}\r\n\r\n                            {!this.props.isMultiple && isHomePage && (\r\n                                <MenuItem\r\n                                    dense\r\n                                    onClick={() => this.props.openShareDialog()}\r\n                                >\r\n                                    <StyledListItemIcon>\r\n                                        <ShareIcon />\r\n                                    </StyledListItemIcon>\r\n                                    <Typography variant=\"inherit\">\r\n                                        创建分享链接\r\n                                    </Typography>\r\n                                </MenuItem>\r\n                            )}\r\n\r\n                            {!this.props.isMultiple && isHomePage && (\r\n                                <MenuItem\r\n                                    dense\r\n                                    onClick={() =>\r\n                                        this.props.toggleObjectInfoSidebar(true)\r\n                                    }\r\n                                >\r\n                                    <StyledListItemIcon>\r\n                                        <InfoOutlined />\r\n                                    </StyledListItemIcon>\r\n                                    <Typography variant=\"inherit\">\r\n                                        详细信息\r\n                                    </Typography>\r\n                                </MenuItem>\r\n                            )}\r\n\r\n                            {!this.props.isMultiple && isHomePage && (\r\n                                <Divider className={classes.divider} />\r\n                            )}\r\n\r\n                            {!this.props.isMultiple && isHomePage && (\r\n                                <div>\r\n                                    <MenuItem\r\n                                        dense\r\n                                        onClick={() =>\r\n                                            this.props.openRenameDialog()\r\n                                        }\r\n                                    >\r\n                                        <StyledListItemIcon>\r\n                                            <RenameIcon />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            重命名\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                    {this.props.keywords === \"\" && (\r\n                                        <MenuItem\r\n                                            dense\r\n                                            onClick={() =>\r\n                                                this.props.openCopyDialog()\r\n                                            }\r\n                                        >\r\n                                            <StyledListItemIcon>\r\n                                                <FileCopyIcon />\r\n                                            </StyledListItemIcon>\r\n                                            <Typography variant=\"inherit\">\r\n                                                复制\r\n                                            </Typography>\r\n                                        </MenuItem>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                            {isHomePage && (\r\n                                <div>\r\n                                    {this.props.keywords === \"\" && (\r\n                                        <MenuItem\r\n                                            dense\r\n                                            onClick={() =>\r\n                                                this.props.openMoveDialog()\r\n                                            }\r\n                                        >\r\n                                            <StyledListItemIcon>\r\n                                                <MoveIcon />\r\n                                            </StyledListItemIcon>\r\n                                            <Typography variant=\"inherit\">\r\n                                                移动\r\n                                            </Typography>\r\n                                        </MenuItem>\r\n                                    )}\r\n\r\n                                    <Divider className={classes.divider} />\r\n                                    <MenuItem\r\n                                        dense\r\n                                        className={classes.propover}\r\n                                        onClick={() =>\r\n                                            this.props.openRemoveDialog()\r\n                                        }\r\n                                    >\r\n                                        <StyledListItemIcon>\r\n                                            <DeleteIcon />\r\n                                        </StyledListItemIcon>\r\n                                        <Typography variant=\"inherit\">\r\n                                            删除\r\n                                        </Typography>\r\n                                    </MenuItem>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nContextMenuCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    menuType: PropTypes.string.isRequired,\r\n};\r\n\r\nconst ContextMenu = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(ContextMenuCompoment)));\r\n\r\nexport default ContextMenu;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport classNames from \"classnames\";\r\nimport { sizeToString } from \"../../utils/index\";\r\nimport {\r\n    withStyles,\r\n    TableCell,\r\n    TableRow,\r\n    Typography,\r\n    fade,\r\n} from \"@material-ui/core\";\r\nimport TypeIcon from \"./TypeIcon\";\r\nimport { lighten } from \"@material-ui/core/styles\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport { withRouter } from \"react-router\";\r\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturn\";\r\nimport CheckCircleRoundedIcon from \"@material-ui/icons/CheckCircleRounded\";\r\nimport statusHelper from \"../../utils/page\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport dayjs from \"dayjs\";\r\nimport { formatLocalTime } from \"../../utils/datetime\";\r\n\r\nconst styles = (theme) => ({\r\n    selected: {\r\n        \"&:hover\": {},\r\n        backgroundColor: fade(theme.palette.primary.main, 0.18),\r\n    },\r\n\r\n    selectedShared: {\r\n        \"&:hover\": {},\r\n        backgroundColor: fade(theme.palette.primary.main, 0.18),\r\n    },\r\n\r\n    notSelected: {\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    icon: {\r\n        verticalAlign: \"middle\",\r\n        marginRight: \"20px\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    tableIcon: {\r\n        marginRight: \"20px\",\r\n        verticalAlign: \"middle\",\r\n    },\r\n    folderNameSelected: {\r\n        color:\r\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\r\n        fontWeight: \"500\",\r\n        userSelect: \"none\",\r\n    },\r\n    folderNameNotSelected: {\r\n        color: theme.palette.text.secondary,\r\n        userSelect: \"none\",\r\n    },\r\n    folderName: {\r\n        marginRight: \"20px\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n    hideAuto: {\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    tableRow: {\r\n        padding: \"10px 16px\",\r\n    },\r\n    checkIcon: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n    active: {\r\n        backgroundColor: fade(theme.palette.primary.main, 0.1),\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selected: state.explorer.selected,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n    return {};\r\n};\r\n\r\nclass TableRowCompoment extends Component {\r\n    state = {};\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const isShare = pathHelper.isSharePage(this.props.location.pathname);\r\n\r\n        let icon;\r\n        if (this.props.file.type === \"dir\") {\r\n            icon = <FolderIcon className={classes.icon} />;\r\n        } else if (this.props.file.type === \"up\") {\r\n            icon = <KeyboardReturnIcon className={classes.icon} />;\r\n        } else {\r\n            icon = (\r\n                <TypeIcon\r\n                    className={classes.tableIcon}\r\n                    fileName={this.props.file.name}\r\n                />\r\n            );\r\n        }\r\n        const isSelected =\r\n            this.props.selected.findIndex((value) => {\r\n                return value === this.props.file;\r\n            }) !== -1;\r\n        const isMobile = statusHelper.isMobile();\r\n\r\n        return (\r\n            <TableRow\r\n                ref={this.props.pref}\r\n                onContextMenu={this.props.contextMenu}\r\n                onClick={this.props.handleClick}\r\n                onDoubleClick={this.props.handleDoubleClick.bind(this)}\r\n                className={classNames({\r\n                    [classes.selected]: isSelected && !isShare,\r\n                    [classes.selectedShared]: isSelected && isShare,\r\n                    [classes.notSelected]: !isSelected,\r\n                    [classes.active]: this.props.isActive,\r\n                })}\r\n            >\r\n                <TableCell\r\n                    ref={this.props.dref}\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    className={classes.tableRow}\r\n                >\r\n                    <Typography\r\n                        variant=\"body2\"\r\n                        className={classNames(classes.folderName, {\r\n                            [classes.folderNameSelected]: isSelected,\r\n                            [classes.folderNameNotSelected]: !isSelected,\r\n                        })}\r\n                    >\r\n                        <div\r\n                            onClick={\r\n                                this.props.file.type !== \"up\"\r\n                                    ? this.props.onIconClick\r\n                                    : null\r\n                            }\r\n                        >\r\n                            {(!isSelected || !isMobile) && icon}\r\n                            {isSelected && isMobile && (\r\n                                <Grow in={isSelected && isMobile}>\r\n                                    <CheckCircleRoundedIcon\r\n                                        className={classNames(\r\n                                            classes.checkIcon,\r\n                                            classes.icon\r\n                                        )}\r\n                                    />\r\n                                </Grow>\r\n                            )}\r\n                        </div>\r\n                        {this.props.file.name}\r\n                    </Typography>\r\n                </TableCell>\r\n                <TableCell\r\n                    className={classNames(classes.hideAuto, classes.tableRow)}\r\n                >\r\n                    <Typography\r\n                        variant=\"body2\"\r\n                        className={classNames(classes.folderName, {\r\n                            [classes.folderNameSelected]: isSelected,\r\n                            [classes.folderNameNotSelected]: !isSelected,\r\n                        })}\r\n                    >\r\n                        {\" \"}\r\n                        {this.props.file.type !== \"dir\" &&\r\n                            this.props.file.type !== \"up\" &&\r\n                            sizeToString(this.props.file.size)}\r\n                    </Typography>\r\n                </TableCell>\r\n                <TableCell\r\n                    className={classNames(classes.hideAuto, classes.tableRow)}\r\n                >\r\n                    <Typography\r\n                        variant=\"body2\"\r\n                        className={classNames(classes.folderName, {\r\n                            [classes.folderNameSelected]: isSelected,\r\n                            [classes.folderNameNotSelected]: !isSelected,\r\n                        })}\r\n                    >\r\n                        {\" \"}\r\n                        {formatLocalTime(\r\n                            this.props.file.date,\r\n                            \"YYYY-MM-DD H:mm:ss\"\r\n                        )}\r\n                    </Typography>\r\n                </TableCell>\r\n            </TableRow>\r\n        );\r\n    }\r\n}\r\n\r\nTableRowCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    file: PropTypes.object.isRequired,\r\n};\r\n\r\nconst TableItem = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(TableRowCompoment)));\r\n\r\nexport default TableItem;\r\n","import React from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport Folder from \"../Folder\";\r\nimport classNames from \"classnames\";\r\nimport TableItem from \"../TableRow\";\r\nexport default function FolderDropWarpper({\r\n    isListView,\r\n    folder,\r\n    onIconClick,\r\n    contextMenu,\r\n    handleClick,\r\n    handleDoubleClick,\r\n    className,\r\n    pref,\r\n}) {\r\n    const [{ canDrop, isOver }, drop] = useDrop({\r\n        accept: \"object\",\r\n        drop: () => ({ folder }),\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n    const isActive = canDrop && isOver;\r\n    if (!isListView) {\r\n        return (\r\n            <div ref={drop}>\r\n                <Folder\r\n                    folder={folder}\r\n                    onIconClick={onIconClick}\r\n                    isActive={isActive}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <TableItem\r\n            pref={pref}\r\n            dref={drop}\r\n            className={className}\r\n            onIconClick={onIconClick}\r\n            contextMenu={contextMenu}\r\n            handleClick={handleClick}\r\n            handleDoubleClick={handleDoubleClick}\r\n            file={folder}\r\n            isActive={isActive}\r\n        />\r\n    );\r\n}\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    changeContextMenu,\r\n    setSelectedTarget,\r\n    selectFile as selectFileAction,\r\n    navigateTo,\r\n    showImgPreivew,\r\n    openMusicDialog,\r\n    toggleSnackbar,\r\n    dragAndDrop,\r\n    openLoadingDialog,\r\n} from \"../../actions/index\";\r\nimport statusHelper from \"../../utils/page\";\r\nimport FileIcon from \"./FileIcon\";\r\nimport SmallIcon from \"./SmallIcon\";\r\nimport TableItem from \"./TableRow\";\r\nimport classNames from \"classnames\";\r\nimport { isPreviewable } from \"../../config\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport { getEmptyImage } from \"react-dnd-html5-backend\";\r\nimport DropWarpper from \"./DnD/DropWarpper\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport { pathBack } from \"../../utils\";\r\nimport { openPreview } from \"../../actions\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    container: {\r\n        padding: \"7px\",\r\n    },\r\n    fixFlex: {\r\n        minWidth: 0,\r\n    },\r\n    dragging: {\r\n        opacity: 0.4,\r\n    },\r\n}));\r\n\r\nexport default function ObjectIcon(props) {\r\n    const path = useSelector((state) => state.navigator.path);\r\n    const selected = useSelector((state) => state.explorer.selected);\r\n    const viewMethod = useSelector(\r\n        (state) => state.viewUpdate.explorerViewMethod\r\n    );\r\n    const navigatorPath = useSelector((state) => state.navigator.path);\r\n    const location = useLocation();\r\n\r\n    const dispatch = useDispatch();\r\n    const ContextMenu = useCallback(\r\n        (type, open) => dispatch(changeContextMenu(type, open)),\r\n        [dispatch]\r\n    );\r\n    const SetSelectedTarget = useCallback(\r\n        (targets) => dispatch(setSelectedTarget(targets)),\r\n        [dispatch]\r\n    );\r\n\r\n    const NavitateTo = useCallback((targets) => dispatch(navigateTo(targets)), [\r\n        dispatch,\r\n    ]);\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const DragAndDrop = useCallback(\r\n        (source, target) => dispatch(dragAndDrop(source, target)),\r\n        [dispatch]\r\n    );\r\n    const OpenLoadingDialog = useCallback(\r\n        (text) => dispatch(openLoadingDialog(text)),\r\n        [dispatch]\r\n    );\r\n    const OpenPreview = useCallback(() => dispatch(openPreview()), [dispatch]);\r\n\r\n    const classes = useStyles();\r\n\r\n    const contextMenu = (e) => {\r\n        if (props.file.type === \"up\") {\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n        if (\r\n            selected.findIndex((value) => {\r\n                return value === props.file;\r\n            }) === -1\r\n        ) {\r\n            SetSelectedTarget([props.file]);\r\n        }\r\n        ContextMenu(\"file\", true);\r\n    };\r\n\r\n    const selectFile = (e) => {\r\n        dispatch(selectFileAction(props.file, e, props.index));\r\n    };\r\n    const enterFolder = () => {\r\n        NavitateTo(\r\n            path === \"/\" ? path + props.file.name : path + \"/\" + props.file.name\r\n        );\r\n    };\r\n    const handleClick = (e) => {\r\n        if (props.file.type === \"up\") {\r\n            NavitateTo(pathBack(navigatorPath));\r\n        }\r\n        if (\r\n            statusHelper.isMobile() ||\r\n            statusHelper.isSharePage(location.pathname)\r\n        ) {\r\n            selectFile(e);\r\n            if (props.file.type === \"dir\" && !e.ctrlKey) {\r\n                enterFolder();\r\n                return;\r\n            }\r\n        } else {\r\n            selectFile(e);\r\n        }\r\n    };\r\n\r\n    const handleDoubleClick = () => {\r\n        if (props.file.type === \"up\") {\r\n            return;\r\n        }\r\n        if (props.file.type === \"dir\") {\r\n            enterFolder();\r\n            return;\r\n        }\r\n        const isShare = statusHelper.isSharePage(location.pathname);\r\n        if (isShare) {\r\n            const user = Auth.GetUser();\r\n            if (!Auth.Check() && user && !user.group.shareDownload) {\r\n                ToggleSnackbar(\"top\", \"right\", \"请先登录\", \"warning\");\r\n                return;\r\n            }\r\n        }\r\n        if (window.shareInfo && !window.shareInfo.preview) {\r\n            OpenLoadingDialog(\"获取下载地址...\");\r\n            return;\r\n        }\r\n\r\n        OpenPreview();\r\n    };\r\n\r\n    const handleIconClick = (e) => {\r\n        if (statusHelper.isMobile()) {\r\n            e.stopPropagation();\r\n            e.ctrlKey = true;\r\n            selectFile(e);\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const [{ isDragging }, drag, preview] = useDrag({\r\n        item: {\r\n            object: props.file,\r\n            type: \"object\",\r\n            selected: [...selected],\r\n            viewMethod: viewMethod,\r\n        },\r\n        end: (item, monitor) => {\r\n            const dropResult = monitor.getDropResult();\r\n            if (item && dropResult) {\r\n                if (dropResult.folder) {\r\n                    if (\r\n                        item.object.id !== dropResult.folder.id ||\r\n                        item.object.type !== dropResult.folder.type\r\n                    ) {\r\n                        DragAndDrop(item.object, dropResult.folder);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        canDrag: () => {\r\n            return (\r\n                !statusHelper.isMobile() &&\r\n                statusHelper.isHomePage(location.pathname)\r\n            );\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n\r\n    useEffect(() => {\r\n        preview(getEmptyImage(), { captureDraggingState: true });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    if (viewMethod === \"list\") {\r\n        return (\r\n            <>\r\n                {props.file.type === \"dir\" && (\r\n                    <DropWarpper\r\n                        isListView={true}\r\n                        pref={drag}\r\n                        className={classNames(classes.container, {\r\n                            [classes.dragging]: isDragging,\r\n                        })}\r\n                        onIconClick={handleIconClick}\r\n                        contextMenu={contextMenu}\r\n                        handleClick={handleClick}\r\n                        handleDoubleClick={handleDoubleClick.bind(this)}\r\n                        folder={props.file}\r\n                    />\r\n                )}\r\n                {props.file.type !== \"dir\" && (\r\n                    <TableItem\r\n                        pref={drag}\r\n                        className={classNames(classes.container, {\r\n                            [classes.dragging]: isDragging,\r\n                        })}\r\n                        onIconClick={handleIconClick}\r\n                        contextMenu={contextMenu}\r\n                        handleClick={handleClick}\r\n                        handleDoubleClick={handleDoubleClick.bind(this)}\r\n                        file={props.file}\r\n                    />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div\r\n            ref={drag}\r\n            className={classNames({\r\n                [classes.container]: viewMethod !== \"list\",\r\n                [classes.dragging]: isDragging,\r\n            })}\r\n        >\r\n            <div\r\n                className={classes.fixFlex}\r\n                onContextMenu={contextMenu}\r\n                onClick={handleClick}\r\n                onDoubleClick={handleDoubleClick.bind(this)}\r\n            >\r\n                {props.file.type === \"dir\" && viewMethod !== \"list\" && (\r\n                    <DropWarpper\r\n                        isListView={false}\r\n                        onIconClick={handleIconClick}\r\n                        folder={props.file}\r\n                    />\r\n                )}\r\n                {props.file.type === \"file\" && viewMethod === \"icon\" && (\r\n                    <FileIcon\r\n                        onIconClick={handleIconClick}\r\n                        ref={drag}\r\n                        file={props.file}\r\n                    />\r\n                )}\r\n                {props.file.type === \"file\" && viewMethod === \"smallIcon\" && (\r\n                    <SmallIcon\r\n                        onIconClick={handleIconClick}\r\n                        file={props.file}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import {\r\n    CircularProgress,\r\n    Grid,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Typography,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport SadIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\r\nimport EmptyIcon from \"@material-ui/icons/Unarchive\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { configure, GlobalHotKeys } from \"react-hotkeys\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n    changeContextMenu,\r\n    navigateTo,\r\n    navigateUp,\r\n    openRemoveDialog,\r\n    setSelectedTarget,\r\n} from \"../../actions/index\";\r\nimport explorer from \"../../redux/explorer\";\r\nimport { isMac } from \"../../utils\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport ContextMenu from \"./ContextMenu\";\r\nimport ImgPreivew from \"./ImgPreview\";\r\nimport ObjectIcon from \"./ObjectIcon\";\r\n\r\nconst styles = (theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: \"center\",\r\n        color: theme.palette.text.secondary,\r\n        margin: \"10px\",\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        padding: \"10px\",\r\n        overflowY: \"auto\",\r\n        height: \"calc(100vh - 113px)\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            overflowY: \"auto\",\r\n            height: \"calc(100vh - 113px)\",\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            height: \"100%\",\r\n        },\r\n    },\r\n    rootTable: {\r\n        padding: \"0px\",\r\n        backgroundColor: theme.palette.background.paper.white,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            overflowY: \"auto\",\r\n            height: \"calc(100vh - 113px)\",\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            height: \"100%\",\r\n        },\r\n    },\r\n    typeHeader: {\r\n        margin: \"10px 25px\",\r\n        color: \"#6b6b6b\",\r\n        fontWeight: \"500\",\r\n    },\r\n    loading: {\r\n        justifyContent: \"center\",\r\n        display: \"flex\",\r\n        marginTop: \"40px\",\r\n    },\r\n    errorBox: {\r\n        padding: theme.spacing(4),\r\n    },\r\n    errorMsg: {\r\n        marginTop: \"10px\",\r\n    },\r\n    emptyContainer: {\r\n        bottom: \"0\",\r\n        height: \"300px\",\r\n        margin: \"50px auto\",\r\n        width: \"300px\",\r\n        color: theme.palette.text.disabled,\r\n        textAlign: \"center\",\r\n        paddingTop: \"20px\",\r\n    },\r\n    emptyIcon: {\r\n        fontSize: \"160px\",\r\n    },\r\n    emptyInfoBig: {\r\n        fontSize: \"25px\",\r\n        color: theme.palette.text.disabled,\r\n    },\r\n    emptyInfoSmall: {\r\n        color: theme.palette.text.hint,\r\n    },\r\n    hideAuto: {\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    flexFix: {\r\n        minWidth: 0,\r\n    },\r\n    upButton: {\r\n        marginLeft: \"20px\",\r\n        marginTop: \"10px\",\r\n        marginBottom: \"10px\",\r\n    },\r\n    clickAway: {\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n    },\r\n    rootShare: {\r\n        height: \"100%\",\r\n        minHeight: 500,\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        path: state.navigator.path,\r\n        drawerDesktopOpen: state.viewUpdate.open,\r\n        viewMethod: state.viewUpdate.explorerViewMethod,\r\n        sortMethod: state.viewUpdate.sortMethod,\r\n        fileList: state.explorer.fileList,\r\n        dirList: state.explorer.dirList,\r\n        loading: state.viewUpdate.navigatorLoading,\r\n        navigatorError: state.viewUpdate.navigatorError,\r\n        navigatorErrorMsg: state.viewUpdate.navigatorErrorMsg,\r\n        keywords: state.explorer.keywords,\r\n        selected: state.explorer.selected,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        navigateToPath: (path) => {\r\n            dispatch(navigateTo(path));\r\n        },\r\n\r\n        changeContextMenu: (type, open) => {\r\n            dispatch(changeContextMenu(type, open));\r\n        },\r\n        navigateUp: () => {\r\n            dispatch(navigateUp());\r\n        },\r\n        setSelectedTarget: (targets) => {\r\n            dispatch(setSelectedTarget(targets));\r\n        },\r\n        openRemoveDialog: () => {\r\n            dispatch(openRemoveDialog());\r\n        },\r\n        changeSort: (method) => {\r\n            dispatch(explorer.actions.changeSortMethod(method));\r\n        },\r\n    };\r\n};\r\n\r\nclass ExplorerCompoment extends Component {\r\n    constructor() {\r\n        super();\r\n        this.keyMap = {\r\n            DELETE_FILE: \"del\",\r\n            SELECT_ALL: `${isMac() ? \"command\" : \"ctrl\"}+a`,\r\n        };\r\n\r\n        this.handlers = {\r\n            DELETE_FILE: () => {\r\n                if (this.props.selected.length > 0 && !this.props.share) {\r\n                    this.props.openRemoveDialog();\r\n                }\r\n            },\r\n            SELECT_ALL: (e) => {\r\n                e.preventDefault();\r\n                if (\r\n                    this.props.selected.length >=\r\n                    this.props.dirList.length + this.props.fileList.length\r\n                ) {\r\n                    this.props.setSelectedTarget([]);\r\n                } else {\r\n                    this.props.setSelectedTarget([\r\n                        ...this.props.dirList,\r\n                        ...this.props.fileList,\r\n                    ]);\r\n                }\r\n            },\r\n        };\r\n\r\n        configure({\r\n            ignoreTags: [\"input\", \"select\", \"textarea\"],\r\n        });\r\n    }\r\n\r\n    contextMenu = (e) => {\r\n        e.preventDefault();\r\n        if (\r\n            this.props.keywords === \"\" &&\r\n            !pathHelper.isSharePage(this.props.location.pathname)\r\n        ) {\r\n            if (!this.props.loading) {\r\n                this.props.changeContextMenu(\"empty\", true);\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        this.away = 0;\r\n    }\r\n\r\n    ClickAway = (e) => {\r\n        const element = e.target;\r\n        if (element.dataset.clickaway) {\r\n            this.props.setSelectedTarget([]);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\r\n\r\n        const showView =\r\n            !this.props.loading &&\r\n            (this.props.dirList.length !== 0 ||\r\n                this.props.fileList.length !== 0);\r\n        const listView = (\r\n            <Table className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>\r\n                            <TableSortLabel\r\n                                active={\r\n                                    this.props.sortMethod === \"namePos\" ||\r\n                                    this.props.sortMethod === \"nameRev\"\r\n                                }\r\n                                direction={\r\n                                    this.props.sortMethod === \"namePos\"\r\n                                        ? \"asc\"\r\n                                        : \"des\"\r\n                                }\r\n                                onClick={() => {\r\n                                    this.props.changeSort(\r\n                                        this.props.sortMethod === \"namePos\"\r\n                                            ? \"nameRev\"\r\n                                            : \"namePos\"\r\n                                    );\r\n                                }}\r\n                            >\r\n                                名称\r\n                                {this.props.sortMethod === \"namePos\" ||\r\n                                this.props.sortMethod === \"nameRev\" ? (\r\n                                    <span className={classes.visuallyHidden}>\r\n                                        {this.props.sortMethod === \"nameRev\"\r\n                                            ? \"sorted descending\"\r\n                                            : \"sorted ascending\"}\r\n                                    </span>\r\n                                ) : null}\r\n                            </TableSortLabel>\r\n                        </TableCell>\r\n                        <TableCell className={classes.hideAuto}>\r\n                            <TableSortLabel\r\n                                active={\r\n                                    this.props.sortMethod === \"sizePos\" ||\r\n                                    this.props.sortMethod === \"sizeRes\"\r\n                                }\r\n                                direction={\r\n                                    this.props.sortMethod === \"sizePos\"\r\n                                        ? \"asc\"\r\n                                        : \"des\"\r\n                                }\r\n                                onClick={() => {\r\n                                    this.props.changeSort(\r\n                                        this.props.sortMethod === \"sizePos\"\r\n                                            ? \"sizeRes\"\r\n                                            : \"sizePos\"\r\n                                    );\r\n                                }}\r\n                            >\r\n                                大小\r\n                                {this.props.sortMethod === \"sizePos\" ||\r\n                                this.props.sortMethod === \"sizeRes\" ? (\r\n                                    <span className={classes.visuallyHidden}>\r\n                                        {this.props.sortMethod === \"sizeRes\"\r\n                                            ? \"sorted descending\"\r\n                                            : \"sorted ascending\"}\r\n                                    </span>\r\n                                ) : null}\r\n                            </TableSortLabel>\r\n                        </TableCell>\r\n                        <TableCell className={classes.hideAuto}>\r\n                            <TableSortLabel\r\n                                active={\r\n                                    this.props.sortMethod === \"timePos\" ||\r\n                                    this.props.sortMethod === \"timeRev\"\r\n                                }\r\n                                direction={\r\n                                    this.props.sortMethod === \"timePos\"\r\n                                        ? \"asc\"\r\n                                        : \"des\"\r\n                                }\r\n                                onClick={() => {\r\n                                    this.props.changeSort(\r\n                                        this.props.sortMethod === \"timePos\"\r\n                                            ? \"timeRev\"\r\n                                            : \"timePos\"\r\n                                    );\r\n                                }}\r\n                            >\r\n                                日期\r\n                                {this.props.sortMethod === \"timePos\" ||\r\n                                this.props.sortMethod === \"timeRev\" ? (\r\n                                    <span className={classes.visuallyHidden}>\r\n                                        {this.props.sortMethod === \"sizeRes\"\r\n                                            ? \"sorted descending\"\r\n                                            : \"sorted ascending\"}\r\n                                    </span>\r\n                                ) : null}\r\n                            </TableSortLabel>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {pathHelper.isMobile() && this.props.path !== \"/\" && (\r\n                        <ObjectIcon\r\n                            file={{\r\n                                type: \"up\",\r\n                                name: \"上级目录\",\r\n                            }}\r\n                        />\r\n                    )}\r\n                    {this.props.dirList.map((value, index) => (\r\n                        <ObjectIcon key={value.id} file={value} index={index} />\r\n                    ))}\r\n                    {this.props.fileList.map((value, index) => (\r\n                        <ObjectIcon key={value.id} file={value} index={index} />\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        );\r\n\r\n        const normalView = (\r\n            <div className={classes.flexFix}>\r\n                {this.props.dirList.length !== 0 && (\r\n                    <>\r\n                        <Typography\r\n                            data-clickAway={\"true\"}\r\n                            variant=\"body2\"\r\n                            className={classes.typeHeader}\r\n                        >\r\n                            文件夹\r\n                        </Typography>\r\n                        <Grid\r\n                            data-clickAway={\"true\"}\r\n                            container\r\n                            spacing={0}\r\n                            alignItems=\"flex-start\"\r\n                        >\r\n                            {this.props.dirList.map((value, index) => (\r\n                                <Grid\r\n                                    key={value.id}\r\n                                    item\r\n                                    xs={6}\r\n                                    md={3}\r\n                                    sm={4}\r\n                                    lg={2}\r\n                                >\r\n                                    <ObjectIcon\r\n                                        key={value.id}\r\n                                        file={value}\r\n                                        index={index}\r\n                                    />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </>\r\n                )}\r\n                {this.props.fileList.length !== 0 && (\r\n                    <>\r\n                        <Typography\r\n                            data-clickAway={\"true\"}\r\n                            variant=\"body2\"\r\n                            className={classes.typeHeader}\r\n                        >\r\n                            文件\r\n                        </Typography>\r\n                        <Grid\r\n                            data-clickAway={\"true\"}\r\n                            container\r\n                            spacing={0}\r\n                            alignItems=\"flex-start\"\r\n                        >\r\n                            {this.props.fileList.map((value, index) => (\r\n                                <Grid\r\n                                    key={value.id}\r\n                                    item\r\n                                    xs={6}\r\n                                    md={3}\r\n                                    sm={4}\r\n                                    lg={2}\r\n                                >\r\n                                    <ObjectIcon\r\n                                        key={value.id}\r\n                                        index={index}\r\n                                        file={value}\r\n                                    />\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    </>\r\n                )}\r\n            </div>\r\n        );\r\n        const view = this.props.viewMethod === \"list\" ? listView : normalView;\r\n        return (\r\n            <div\r\n                onContextMenu={this.contextMenu}\r\n                onClick={this.ClickAway}\r\n                className={classNames(\r\n                    {\r\n                        [classes.root]: this.props.viewMethod !== \"list\",\r\n                        [classes.rootTable]: this.props.viewMethod === \"list\",\r\n                        [classes.rootShare]: this.props.share,\r\n                    },\r\n                    classes.button\r\n                )}\r\n            >\r\n                <GlobalHotKeys handlers={this.handlers} keyMap={this.keyMap} />\r\n                <ContextMenu share={this.props.share} />\r\n                <ImgPreivew />\r\n                {this.props.navigatorError && (\r\n                    <Paper elevation={1} className={classes.errorBox}>\r\n                        <Typography variant=\"h5\" component=\"h3\">\r\n                            :( 请求时出现错误\r\n                        </Typography>\r\n                        <Typography\r\n                            color={\"textSecondary\"}\r\n                            className={classes.errorMsg}\r\n                        >\r\n                            {this.props.navigatorErrorMsg.message}\r\n                        </Typography>\r\n                    </Paper>\r\n                )}\r\n\r\n                {this.props.loading && !this.props.navigatorError && (\r\n                    <div className={classes.loading}>\r\n                        <CircularProgress />\r\n                    </div>\r\n                )}\r\n\r\n                {this.props.keywords === \"\" &&\r\n                    isHomePage &&\r\n                    this.props.dirList.length === 0 &&\r\n                    this.props.fileList.length === 0 &&\r\n                    !this.props.loading &&\r\n                    !this.props.navigatorError && (\r\n                        <div className={classes.emptyContainer}>\r\n                            <EmptyIcon className={classes.emptyIcon} />\r\n                            <div className={classes.emptyInfoBig}>\r\n                                拖拽文件至此\r\n                            </div>\r\n                            <div className={classes.emptyInfoSmall}>\r\n                                或点击右下方“上传文件”按钮添加文件\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                {((this.props.keywords !== \"\" &&\r\n                    this.props.dirList.length === 0 &&\r\n                    this.props.fileList.length === 0 &&\r\n                    !this.props.loading &&\r\n                    !this.props.navigatorError) ||\r\n                    (this.props.dirList.length === 0 &&\r\n                        this.props.fileList.length === 0 &&\r\n                        !this.props.loading &&\r\n                        !this.props.navigatorError &&\r\n                        !isHomePage)) && (\r\n                    <div className={classes.emptyContainer}>\r\n                        <SadIcon className={classes.emptyIcon} />\r\n                        <div className={classes.emptyInfoBig}>\r\n                            什么都没有找到\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {showView && view}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nExplorerCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    path: PropTypes.string.isRequired,\r\n};\r\n\r\nconst Explorer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(ExplorerCompoment)));\r\n\r\nexport default Explorer;\r\n","import React, { useEffect } from \"react\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport classNames from \"classnames\";\r\nimport MoreIcon from \"@material-ui/icons/MoreHoriz\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    expandMore: {\r\n        color: \"#8d8d8d\",\r\n    },\r\n    active: {\r\n        boxShadow: \"0 0 0 2px \" + theme.palette.primary.light,\r\n    },\r\n    button: {\r\n        textTransform: \"none\",\r\n    },\r\n}));\r\n\r\nexport default function PathButton(props) {\r\n    const inputRef = React.useRef(null);\r\n\r\n    const [{ canDrop, isOver }, drop] = useDrop({\r\n        accept: \"object\",\r\n        drop: () => {\r\n            if (props.more) {\r\n                inputRef.current.click();\r\n            } else {\r\n                return {\r\n                    folder: {\r\n                        id: -1,\r\n                        path: props.path,\r\n                        name: props.folder === \"/\" ? \"\" : props.folder,\r\n                    },\r\n                };\r\n            }\r\n        },\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n\r\n    const isActive = canDrop && isOver;\r\n\r\n    useEffect(() => {\r\n        if (props.more && isActive) {\r\n            inputRef.current.click();\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [isActive]);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <span onClick={props.onClick} ref={inputRef}>\r\n            <Button\r\n                ref={drop}\r\n                className={classNames(\r\n                    {\r\n                        [classes.active]: isActive,\r\n                    },\r\n                    classes.button\r\n                )}\r\n                component=\"span\"\r\n                title={props.title}\r\n            >\r\n                {props.more && <MoreIcon />}\r\n                {!props.more && (\r\n                    <>\r\n                        {props.folder}\r\n                        {props.last && (\r\n                            <ExpandMore className={classes.expandMore} />\r\n                        )}\r\n                    </>\r\n                )}\r\n            </Button>\r\n        </span>\r\n    );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport { MenuItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport classNames from \"classnames\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    active: {\r\n        border: \"2px solid \" + theme.palette.primary.light,\r\n    },\r\n}));\r\n\r\nexport default function DropDownItem(props) {\r\n    const [{ canDrop, isOver }, drop] = useDrop({\r\n        accept: \"object\",\r\n        drop: () => {\r\n            console.log({\r\n                folder: {\r\n                    id: -1,\r\n                    path: props.path,\r\n                    name: props.folder === \"/\" ? \"\" : props.folder,\r\n                },\r\n            });\r\n        },\r\n        collect: (monitor) => ({\r\n            isOver: monitor.isOver(),\r\n            canDrop: monitor.canDrop(),\r\n        }),\r\n    });\r\n\r\n    const isActive = canDrop && isOver;\r\n\r\n    useEffect(() => {\r\n        props.setActiveStatus(props.id, isActive);\r\n        // eslint-disable-next-line\r\n    }, [isActive]);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <MenuItem\r\n            ref={drop}\r\n            className={classNames({\r\n                [classes.active]: isActive,\r\n            })}\r\n            onClick={(e) => props.navigateTo(e, props.id)}\r\n        >\r\n            <ListItemIcon>\r\n                <FolderIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={props.folder} />\r\n        </MenuItem>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport DropDownItem from \"./DropDownItem\";\r\n\r\nexport default function DropDown(props) {\r\n    let timer;\r\n    let first = props.folders.length;\r\n    const status = [];\r\n    for (let index = 0; index < props.folders.length; index++) {\r\n        status[index] = false;\r\n    }\r\n\r\n    const setActiveStatus = (id, value) => {\r\n        status[id] = value;\r\n        if (value) {\r\n            clearTimeout(timer);\r\n        } else {\r\n            let shouldClose = true;\r\n            status.forEach((element) => {\r\n                if (element) {\r\n                    shouldClose = false;\r\n                }\r\n            });\r\n            if (shouldClose) {\r\n                if (first <= 0) {\r\n                    timer = setTimeout(() => {\r\n                        props.onClose();\r\n                    }, 100);\r\n                } else {\r\n                    first--;\r\n                }\r\n            }\r\n        }\r\n        console.log(status);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {props.folders.map((folder, id) => (\r\n                <DropDownItem\r\n                    key={id}\r\n                    path={\"/\" + props.folders.slice(0, id).join(\"/\")}\r\n                    navigateTo={props.navigateTo}\r\n                    id={id}\r\n                    setActiveStatus={setActiveStatus}\r\n                    folder={folder}\r\n                />\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport NewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport {\r\n    drawerToggleAction,\r\n    navigateTo,\r\n    navigateUp,\r\n    openCompressDialog,\r\n    openCreateFolderDialog,\r\n    openShareDialog,\r\n    refreshFileList,\r\n    setNavigatorError,\r\n    setNavigatorLoadingStatus,\r\n    setSelectedTarget,\r\n} from \"../../../actions/index\";\r\nimport explorer from \"../../../redux/explorer\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { fixUrlHash, setGetParameter } from \"../../../utils/index\";\r\nimport {\r\n    Divider,\r\n    ListItemIcon,\r\n    Menu,\r\n    MenuItem,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\nimport PathButton from \"./PathButton\";\r\nimport DropDown from \"./DropDown\";\r\nimport pathHelper from \"../../../utils/page\";\r\nimport classNames from \"classnames\";\r\nimport Auth from \"../../../middleware/Auth\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { Archive } from \"@material-ui/icons\";\r\nimport { FilePlus } from \"mdi-material-ui\";\r\nimport { openCreateFileDialog } from \"../../../actions\";\r\nimport SubActions from \"./SubActions\";\r\nimport { setCurrentPolicy } from \"../../../redux/explorer/action\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        path: state.navigator.path,\r\n        refresh: state.navigator.refresh,\r\n        drawerDesktopOpen: state.viewUpdate.open,\r\n        viewMethod: state.viewUpdate.explorerViewMethod,\r\n        keywords: state.explorer.keywords,\r\n        sortMethod: state.viewUpdate.sortMethod,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        navigateToPath: (path) => {\r\n            dispatch(navigateTo(path));\r\n        },\r\n        navigateUp: () => {\r\n            dispatch(navigateUp());\r\n        },\r\n        setNavigatorError: (status, msg) => {\r\n            dispatch(setNavigatorError(status, msg));\r\n        },\r\n        updateFileList: (list) => {\r\n            dispatch(explorer.actions.updateFileList(list));\r\n        },\r\n        setNavigatorLoadingStatus: (status) => {\r\n            dispatch(setNavigatorLoadingStatus(status));\r\n        },\r\n        refreshFileList: () => {\r\n            dispatch(refreshFileList());\r\n        },\r\n        setSelectedTarget: (target) => {\r\n            dispatch(setSelectedTarget(target));\r\n        },\r\n        openCreateFolderDialog: () => {\r\n            dispatch(openCreateFolderDialog());\r\n        },\r\n        openCreateFileDialog: () => {\r\n            dispatch(openCreateFileDialog());\r\n        },\r\n        openShareDialog: () => {\r\n            dispatch(openShareDialog());\r\n        },\r\n        handleDesktopToggle: (open) => {\r\n            dispatch(drawerToggleAction(open));\r\n        },\r\n        openCompressDialog: () => {\r\n            dispatch(openCompressDialog());\r\n        },\r\n        setCurrentPolicy: (policy) => {\r\n            dispatch(setCurrentPolicy(policy));\r\n        },\r\n    };\r\n};\r\n\r\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nconst styles = (theme) => ({\r\n    container: {\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            display: \"none\",\r\n        },\r\n        height: \"49px\",\r\n        overflow: \"hidden\",\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    navigatorContainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    nav: {\r\n        height: \"48px\",\r\n        padding: \"5px 15px\",\r\n        display: \"flex\",\r\n    },\r\n    optionContainer: {\r\n        paddingTop: \"6px\",\r\n        marginRight: \"10px\",\r\n    },\r\n    rightIcon: {\r\n        marginTop: \"6px\",\r\n        verticalAlign: \"top\",\r\n        color: \"#868686\",\r\n    },\r\n    expandMore: {\r\n        color: \"#8d8d8d\",\r\n    },\r\n    roundBorder: {\r\n        borderRadius: \"4px 4px 0 0\",\r\n    },\r\n});\r\n\r\nclass NavigatorComponent extends Component {\r\n    keywords = \"\";\r\n    currentID = 0;\r\n\r\n    state = {\r\n        hidden: false,\r\n        hiddenFolders: [],\r\n        folders: [],\r\n        anchorEl: null,\r\n        hiddenMode: false,\r\n        anchorHidden: null,\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.element = React.createRef();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const url = new URL(fixUrlHash(window.location.href));\r\n        const c = url.searchParams.get(\"path\");\r\n        this.renderPath(c === null ? \"/\" : c);\r\n\r\n        if (!this.props.isShare) {\r\n            // 如果是在个人文件管理页，首次加载时打开侧边栏\r\n            this.props.handleDesktopToggle(true);\r\n        }\r\n\r\n        // 后退操作时重新导航\r\n        window.onpopstate = () => {\r\n            const url = new URL(fixUrlHash(window.location.href));\r\n            const c = url.searchParams.get(\"path\");\r\n            if (c !== null) {\r\n                this.props.navigateToPath(c);\r\n            }\r\n        };\r\n    };\r\n\r\n    renderPath = (path = null) => {\r\n        this.props.setNavigatorError(false, null);\r\n        this.setState({\r\n            folders:\r\n                path !== null\r\n                    ? path.substr(1).split(\"/\")\r\n                    : this.props.path.substr(1).split(\"/\"),\r\n        });\r\n        let newPath = path !== null ? path : this.props.path;\r\n        const apiURL = this.props.share\r\n            ? \"/share/list/\" + this.props.share.key\r\n            : this.keywords === \"\"\r\n            ? \"/directory\"\r\n            : \"/file/search/\";\r\n        newPath = this.keywords === \"\" ? newPath : this.keywords;\r\n\r\n        API.get(apiURL + encodeURIComponent(newPath))\r\n            .then((response) => {\r\n                this.currentID = response.data.parent;\r\n                this.props.updateFileList(response.data.objects);\r\n                this.props.setNavigatorLoadingStatus(false);\r\n                if (this.keywords === \"\") {\r\n                    setGetParameter(\"path\", encodeURIComponent(newPath));\r\n                }\r\n                if (response.data.policy) {\r\n                    this.props.setCurrentPolicy({\r\n                        id: response.data.policy.id,\r\n                        name: response.data.policy.name,\r\n                        type: response.data.policy.type,\r\n                        maxSize: response.data.policy.max_size,\r\n                        allowedSuffix: response.data.policy.file_type,\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.props.setNavigatorError(true, error);\r\n            });\r\n\r\n        this.checkOverFlow(true);\r\n    };\r\n\r\n    redresh = (path) => {\r\n        this.props.setNavigatorLoadingStatus(true);\r\n        this.props.setNavigatorError(false, \"error\");\r\n        this.renderPath(path);\r\n    };\r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        if (this.props.keywords !== nextProps.keywords) {\r\n            this.keywords = nextProps.keywords;\r\n        }\r\n        if (this.props.path !== nextProps.path) {\r\n            this.renderPath(nextProps.path);\r\n        }\r\n        if (this.props.refresh !== nextProps.refresh) {\r\n            this.redresh(nextProps.path);\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.props.updateFileList([]);\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevStates) => {\r\n        if (this.state.folders !== prevStates.folders) {\r\n            this.checkOverFlow(true);\r\n        }\r\n        if (this.props.drawerDesktopOpen !== prevProps.drawerDesktopOpen) {\r\n            delay(500).then(() => this.checkOverFlow());\r\n        }\r\n    };\r\n\r\n    checkOverFlow = (force) => {\r\n        if (this.overflowInitLock && !force) {\r\n            return;\r\n        }\r\n        if (this.element.current !== null) {\r\n            const hasOverflowingChildren =\r\n                this.element.current.offsetHeight <\r\n                    this.element.current.scrollHeight ||\r\n                this.element.current.offsetWidth <\r\n                    this.element.current.scrollWidth;\r\n            if (hasOverflowingChildren) {\r\n                this.overflowInitLock = true;\r\n                this.setState({ hiddenMode: true });\r\n            }\r\n            if (!hasOverflowingChildren && this.state.hiddenMode) {\r\n                this.setState({ hiddenMode: false });\r\n            }\r\n        }\r\n    };\r\n\r\n    navigateTo = (event, id) => {\r\n        if (id === this.state.folders.length - 1) {\r\n            //最后一个路径\r\n            this.setState({ anchorEl: event.currentTarget });\r\n        } else if (\r\n            id === -1 &&\r\n            this.state.folders.length === 1 &&\r\n            this.state.folders[0] === \"\"\r\n        ) {\r\n            this.props.refreshFileList();\r\n            this.handleClose();\r\n        } else if (id === -1) {\r\n            this.props.navigateToPath(\"/\");\r\n            this.handleClose();\r\n        } else {\r\n            this.props.navigateToPath(\r\n                \"/\" + this.state.folders.slice(0, id + 1).join(\"/\")\r\n            );\r\n            this.handleClose();\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null, anchorHidden: null, anchorSort: null });\r\n    };\r\n\r\n    showHiddenPath = (e) => {\r\n        this.setState({ anchorHidden: e.currentTarget });\r\n    };\r\n\r\n    performAction = (e) => {\r\n        this.handleClose();\r\n        if (e === \"refresh\") {\r\n            this.redresh();\r\n            return;\r\n        }\r\n        const presentPath = this.props.path.split(\"/\");\r\n        const newTarget = [\r\n            {\r\n                id: this.currentID,\r\n                type: \"dir\",\r\n                name: presentPath.pop(),\r\n                path: presentPath.length === 1 ? \"/\" : presentPath.join(\"/\"),\r\n            },\r\n        ];\r\n        //this.props.navitateUp();\r\n        switch (e) {\r\n            case \"share\":\r\n                this.props.setSelectedTarget(newTarget);\r\n                this.props.openShareDialog();\r\n                break;\r\n            case \"newfolder\":\r\n                this.props.openCreateFolderDialog();\r\n                break;\r\n            case \"compress\":\r\n                this.props.setSelectedTarget(newTarget);\r\n                this.props.openCompressDialog();\r\n                break;\r\n            case \"newFile\":\r\n                this.props.openCreateFileDialog();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\r\n        const user = Auth.GetUser();\r\n\r\n        const presentFolderMenu = (\r\n            <Menu\r\n                id=\"presentFolderMenu\"\r\n                anchorEl={this.state.anchorEl}\r\n                open={Boolean(this.state.anchorEl)}\r\n                onClose={this.handleClose}\r\n                disableAutoFocusItem={true}\r\n            >\r\n                <MenuItem onClick={() => this.performAction(\"refresh\")}>\r\n                    <ListItemIcon>\r\n                        <RefreshIcon />\r\n                    </ListItemIcon>\r\n                    刷新\r\n                </MenuItem>\r\n                {this.props.keywords === \"\" && isHomePage && (\r\n                    <div>\r\n                        <Divider />\r\n                        <MenuItem onClick={() => this.performAction(\"share\")}>\r\n                            <ListItemIcon>\r\n                                <ShareIcon />\r\n                            </ListItemIcon>\r\n                            分享\r\n                        </MenuItem>\r\n                        {user.group.compress && (\r\n                            <MenuItem\r\n                                onClick={() => this.performAction(\"compress\")}\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <Archive />\r\n                                </ListItemIcon>\r\n                                压缩\r\n                            </MenuItem>\r\n                        )}\r\n                        <Divider />\r\n                        <MenuItem\r\n                            onClick={() => this.performAction(\"newfolder\")}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <NewFolderIcon />\r\n                            </ListItemIcon>\r\n                            创建文件夹\r\n                        </MenuItem>\r\n                        <MenuItem onClick={() => this.performAction(\"newFile\")}>\r\n                            <ListItemIcon>\r\n                                <FilePlus />\r\n                            </ListItemIcon>\r\n                            创建文件\r\n                        </MenuItem>\r\n                    </div>\r\n                )}\r\n            </Menu>\r\n        );\r\n\r\n        return (\r\n            <div\r\n                className={classNames(\r\n                    {\r\n                        [classes.roundBorder]: this.props.isShare,\r\n                    },\r\n                    classes.container\r\n                )}\r\n            >\r\n                <div className={classes.navigatorContainer}>\r\n                    <div className={classes.nav} ref={this.element}>\r\n                        <span>\r\n                            <PathButton\r\n                                folder=\"/\"\r\n                                path=\"/\"\r\n                                onClick={(e) => this.navigateTo(e, -1)}\r\n                            />\r\n                            <RightIcon className={classes.rightIcon} />\r\n                        </span>\r\n                        {this.state.hiddenMode && (\r\n                            <span>\r\n                                <PathButton\r\n                                    more\r\n                                    title=\"显示路径\"\r\n                                    onClick={this.showHiddenPath}\r\n                                />\r\n                                <Menu\r\n                                    id=\"hiddenPathMenu\"\r\n                                    anchorEl={this.state.anchorHidden}\r\n                                    open={Boolean(this.state.anchorHidden)}\r\n                                    onClose={this.handleClose}\r\n                                    disableAutoFocusItem={true}\r\n                                >\r\n                                    <DropDown\r\n                                        onClose={this.handleClose}\r\n                                        folders={this.state.folders.slice(\r\n                                            0,\r\n                                            -1\r\n                                        )}\r\n                                        navigateTo={this.navigateTo}\r\n                                    />\r\n                                </Menu>\r\n                                <RightIcon className={classes.rightIcon} />\r\n                                {/* <Button component=\"span\" onClick={(e)=>this.navigateTo(e,this.state.folders.length-1)}>\r\n                                    {this.state.folders.slice(-1)}  \r\n                                    <ExpandMore className={classes.expandMore}/>\r\n                                </Button> */}\r\n                                <PathButton\r\n                                    folder={this.state.folders.slice(-1)}\r\n                                    path={\r\n                                        \"/\" +\r\n                                        this.state.folders\r\n                                            .slice(0, -1)\r\n                                            .join(\"/\")\r\n                                    }\r\n                                    last={true}\r\n                                    onClick={(e) =>\r\n                                        this.navigateTo(\r\n                                            e,\r\n                                            this.state.folders.length - 1\r\n                                        )\r\n                                    }\r\n                                />\r\n                                {presentFolderMenu}\r\n                            </span>\r\n                        )}\r\n                        {!this.state.hiddenMode &&\r\n                            this.state.folders.map((folder, id, folders) => (\r\n                                <span key={id}>\r\n                                    {folder !== \"\" && (\r\n                                        <span>\r\n                                            <PathButton\r\n                                                folder={folder}\r\n                                                path={\r\n                                                    \"/\" +\r\n                                                    folders\r\n                                                        .slice(0, id)\r\n                                                        .join(\"/\")\r\n                                                }\r\n                                                last={id === folders.length - 1}\r\n                                                onClick={(e) =>\r\n                                                    this.navigateTo(e, id)\r\n                                                }\r\n                                            />\r\n                                            {id === folders.length - 1 &&\r\n                                                presentFolderMenu}\r\n                                            {id !== folders.length - 1 && (\r\n                                                <RightIcon\r\n                                                    className={\r\n                                                        classes.rightIcon\r\n                                                    }\r\n                                                />\r\n                                            )}\r\n                                        </span>\r\n                                    )}\r\n                                </span>\r\n                            ))}\r\n                    </div>\r\n                    <div className={classes.optionContainer}>\r\n                        <SubActions isSmall share={this.props.share} />\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNavigatorComponent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    path: PropTypes.string.isRequired,\r\n};\r\n\r\nconst Navigator = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(NavigatorComponent)));\r\n\r\nexport default Navigator;\r\n","import React from \"react\";\r\nimport { BulletList } from \"react-content-loader\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    loader: {\r\n        width: \"100%\",\r\n        // padding: 40,\r\n        // [theme.breakpoints.down(\"md\")]: {\r\n        //     width: \"100%\",\r\n        //     padding: 10\r\n        // }\r\n    },\r\n}));\r\n\r\nconst MyLoader = (props) => (\r\n    <BulletList\r\n        backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\r\n        foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\r\n        className={props.className}\r\n    />\r\n);\r\n\r\nfunction ListLoading() {\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <MyLoader\r\n                dark={theme.palette.type === \"dark\"}\r\n                className={classes.loader}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListLoading;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { Clear, Folder } from \"@material-ui/icons\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { setSideBar } from \"../../../redux/explorer/action\";\r\nimport TypeIcon from \"../TypeIcon\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { navigateTo, toggleSnackbar } from \"../../../actions\";\r\nimport { filename, sizeToString } from \"../../../utils\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport ListLoading from \"../../Placeholder/ListLoading\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { formatLocalTime } from \"../../../utils/datetime\";\r\n\r\nconst drawerWidth = 350;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        boxShadow:\r\n            \"0px 8px 10px -5px rgb(0 0 0 / 20%), 0px 16px 24px 2px rgb(0 0 0 / 14%), 0px 6px 30px 5px rgb(0 0 0 / 12%)\",\r\n    },\r\n    drawerContainer: {\r\n        overflow: \"auto\",\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        padding: theme.spacing(3),\r\n        placeContent: \"space-between\",\r\n    },\r\n    fileIcon: { width: 33, height: 33 },\r\n    fileIconSVG: { fontSize: 20 },\r\n    folderIcon: {\r\n        color: theme.palette.text.secondary,\r\n        width: 33,\r\n        height: 33,\r\n    },\r\n    fileName: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        wordBreak: \"break-all\",\r\n        flexGrow: 2,\r\n    },\r\n    closeIcon: {\r\n        placeSelf: \"flex-start\",\r\n        marginTop: 2,\r\n    },\r\n    propsContainer: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    propsLabel: {\r\n        color: theme.palette.text.secondary,\r\n        padding: theme.spacing(1),\r\n    },\r\n    propsTime: {\r\n        color: theme.palette.text.disabled,\r\n        padding: theme.spacing(1),\r\n    },\r\n    propsValue: {\r\n        padding: theme.spacing(1),\r\n        wordBreak: \"break-all\",\r\n    },\r\n    appBar: {\r\n        position: \"relative\",\r\n    },\r\n    title: {\r\n        marginLeft: theme.spacing(2),\r\n        flex: 1,\r\n    },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function SideDrawer() {\r\n    const dispatch = useDispatch();\r\n    const sideBarOpen = useSelector((state) => state.explorer.sideBarOpen);\r\n    const selected = useSelector((state) => state.explorer.selected);\r\n    const SetSideBar = useCallback((open) => dispatch(setSideBar(open)), [\r\n        dispatch,\r\n    ]);\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const NavigateTo = useCallback((k) => dispatch(navigateTo(k)), [dispatch]);\r\n    const keywords = useSelector((state) => state.explorer.keywords);\r\n    const [target, setTarget] = useState(null);\r\n    const [details, setDetails] = useState(null);\r\n    const loadProps = (object) => {\r\n        API.get(\r\n            \"/object/property/\" +\r\n                object.id +\r\n                \"?trace_root=\" +\r\n                (keywords !== \"\" ? \"true\" : \"false\") +\r\n                \"&is_folder=\" +\r\n                (object.type === \"dir\").toString()\r\n        )\r\n            .then((response) => {\r\n                setDetails(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setDetails(null);\r\n        if (sideBarOpen) {\r\n            if (selected.length !== 1) {\r\n                SetSideBar(false);\r\n            } else {\r\n                setTarget(selected[0]);\r\n                loadProps(selected[0]);\r\n            }\r\n        }\r\n    }, [selected, sideBarOpen]);\r\n\r\n    const classes = useStyles();\r\n    const propsItem = [\r\n        {\r\n            label: \"大小\",\r\n            value: (d, t) =>\r\n                sizeToString(d.size) +\r\n                \"  (\" +\r\n                d.size.toLocaleString() +\r\n                \" 字节)\",\r\n            show: (d) => true,\r\n        },\r\n        {\r\n            label: \"存储策略\",\r\n            value: (d, t) => d.policy,\r\n            show: (d) => d.type === \"file\",\r\n        },\r\n        {\r\n            label: \"包含目录\",\r\n            value: (d, t) => d.child_folder_num.toLocaleString() + \" \" + \"个\",\r\n            show: (d) => d.type === \"dir\",\r\n        },\r\n        {\r\n            label: \"包含文件\",\r\n            value: (d, t) => d.child_file_num.toLocaleString() + \" \" + \"个\",\r\n            show: (d) => d.type === \"dir\",\r\n        },\r\n        {\r\n            label: \"所在目录\",\r\n            // eslint-disable-next-line react/display-name\r\n            value: (d, t) => {\r\n                const path = d.path === \"\" ? t.path : d.path;\r\n                const name = filename(path);\r\n                return (\r\n                    <Tooltip title={path}>\r\n                        <Link\r\n                            href={\"javascript:void\"}\r\n                            onClick={() => NavigateTo(path)}\r\n                        >\r\n                            {name === \"\" ? \"根目录\" : name}\r\n                        </Link>\r\n                    </Tooltip>\r\n                );\r\n            },\r\n            show: (d) => true,\r\n        },\r\n        {\r\n            label: \"修改于\",\r\n            value: (d, t) =>\r\n                formatLocalTime(d.updated_at, \"YYYY/MM/DD  H:mm:ss\"),\r\n            show: (d) => true,\r\n        },\r\n        {\r\n            label: \"创建于\",\r\n            value: (d) => formatLocalTime(d.created_at, \"YYYY/MM/DD  H:mm:ss\"),\r\n            show: (d) => true,\r\n        },\r\n    ];\r\n    const content = (\r\n        <Grid container className={classes.propsContainer}>\r\n            {!details && <ListLoading />}\r\n            {details && (\r\n                <>\r\n                    {propsItem.map((item) => {\r\n                        if (item.show(target)) {\r\n                            return (\r\n                                <>\r\n                                    <Grid\r\n                                        item\r\n                                        xs={5}\r\n                                        className={classes.propsLabel}\r\n                                    >\r\n                                        {item.label}\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        xs={7}\r\n                                        className={classes.propsValue}\r\n                                    >\r\n                                        {item.value(details, target)}\r\n                                    </Grid>\r\n                                </>\r\n                            );\r\n                        }\r\n                    })}\r\n                    {target.type === \"dir\" && (\r\n                        <Grid item xs={12} className={classes.propsTime}>\r\n                            统计于{\" \"}\r\n                            <TimeAgo\r\n                                datetime={details.query_date}\r\n                                locale=\"zh_CN\"\r\n                            />\r\n                        </Grid>\r\n                    )}\r\n                </>\r\n            )}\r\n        </Grid>\r\n    );\r\n    return (\r\n        <>\r\n            <Hidden smUp>\r\n                <Dialog\r\n                    fullScreen\r\n                    open={sideBarOpen}\r\n                    TransitionComponent={Transition}\r\n                >\r\n                    {target && (\r\n                        <>\r\n                            <AppBar className={classes.appBar}>\r\n                                <Toolbar>\r\n                                    <IconButton\r\n                                        edge=\"start\"\r\n                                        color=\"inherit\"\r\n                                        onClick={() => SetSideBar(false)}\r\n                                        aria-label=\"close\"\r\n                                    >\r\n                                        <Clear />\r\n                                    </IconButton>\r\n                                    <Typography\r\n                                        variant=\"h6\"\r\n                                        className={classes.title}\r\n                                    >\r\n                                        {target.name}\r\n                                    </Typography>\r\n                                </Toolbar>\r\n                            </AppBar>\r\n                            {content}\r\n                        </>\r\n                    )}\r\n                </Dialog>\r\n            </Hidden>\r\n            <Hidden xsDown>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                    open={sideBarOpen}\r\n                    anchor=\"right\"\r\n                >\r\n                    <Toolbar />\r\n                    <div className={classes.drawerContainer}>\r\n                        {target && (\r\n                            <>\r\n                                <div className={classes.header}>\r\n                                    {target.type === \"dir\" && (\r\n                                        <Folder\r\n                                            className={classes.folderIcon}\r\n                                        />\r\n                                    )}\r\n                                    {target.type !== \"dir\" && (\r\n                                        <TypeIcon\r\n                                            isUpload\r\n                                            className={classes.fileIcon}\r\n                                            iconClassName={classes.fileIconSVG}\r\n                                            fileName={target.name}\r\n                                        />\r\n                                    )}\r\n                                    <div className={classes.fileName}>\r\n                                        <Typography variant=\"h6\" gutterBottom>\r\n                                            {target.name}\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <IconButton\r\n                                        onClick={() => SetSideBar(false)}\r\n                                        className={classes.closeIcon}\r\n                                        aria-label=\"close\"\r\n                                        size={\"small\"}\r\n                                    >\r\n                                        <Clear />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                        <Divider />\r\n                        {content}\r\n                    </div>\r\n                </Drawer>\r\n            </Hidden>\r\n        </>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport HTML5Backend from \"react-dnd-html5-backend\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n    closeAllModals,\r\n    navigateTo,\r\n    setSelectedTarget,\r\n    toggleSnackbar,\r\n} from \"../../actions\";\r\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport DragLayer from \"./DnD/DragLayer\";\r\nimport Explorer from \"./Explorer\";\r\nimport Modals from \"./Modals\";\r\nimport Navigator from \"./Navigator/Navigator\";\r\nimport SideDrawer from \"./Sidebar/SideDrawer\";\r\n\r\nconst mapStateToProps = () => ({});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeSubTitle: (text) => {\r\n            dispatch(changeSubTitle(text));\r\n        },\r\n        setSelectedTarget: (targets) => {\r\n            dispatch(setSelectedTarget(targets));\r\n        },\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        closeAllModals: () => {\r\n            dispatch(closeAllModals());\r\n        },\r\n        navigateTo: (path) => {\r\n            dispatch(navigateTo(path));\r\n        },\r\n    };\r\n};\r\n\r\nclass FileManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.image = React.createRef();\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.setSelectedTarget([]);\r\n        this.props.closeAllModals();\r\n        this.props.navigateTo(\"/\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (pathHelper.isHomePage(this.props.location.pathname)) {\r\n            this.props.changeSubTitle(null);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <DndProvider backend={HTML5Backend}>\r\n                    <Modals share={this.props.share} />\r\n                    <Navigator\r\n                        isShare={this.props.isShare}\r\n                        share={this.props.share}\r\n                    />\r\n                    <Explorer share={this.props.share} />\r\n                    <DragLayer />\r\n                </DndProvider>\r\n                <SideDrawer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFileManager.propTypes = {};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(FileManager));\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport DPlayer from \"react-dplayer\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\r\nimport { getBaseURL } from \"../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\r\nimport pathHelper from \"../../utils/page\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"30px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: 50,\r\n    },\r\n    player: {\r\n        borderRadius: \"4px\",\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function VideoViewer() {\r\n    const math = useRouteMatch();\r\n    const location = useLocation();\r\n    const query = useQuery();\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const SetSubTitle = useCallback(\r\n        (title) => dispatch(changeSubTitle(title)),\r\n        [dispatch]\r\n    );\r\n    useEffect(() => {\r\n        if (!pathHelper.isSharePage(location.pathname)) {\r\n            const path = query.get(\"p\").split(\"/\");\r\n            SetSubTitle(path[path.length - 1]);\r\n        } else {\r\n            SetSubTitle(query.get(\"name\"));\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [math.params[0], location]);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.layout}>\r\n            <Paper className={classes.root} elevation={1}>\r\n                <DPlayer\r\n                    className={classes.player}\r\n                    options={{\r\n                        video: {\r\n                            url:\r\n                                getBaseURL() +\r\n                                (pathHelper.isSharePage(location.pathname)\r\n                                    ? \"/share/preview/\" +\r\n                                      id +\r\n                                      (query.get(\"share_path\") !== \"\"\r\n                                          ? \"?path=\" +\r\n                                            encodeURIComponent(\r\n                                                query.get(\"share_path\")\r\n                                            )\r\n                                          : \"\")\r\n                                    : \"/file/preview/\" + query.get(\"id\")),\r\n                        },\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\n\r\nimport {\r\n    Tooltip,\r\n    Card,\r\n    Avatar,\r\n    CardHeader,\r\n    Typography,\r\n    Grid,\r\n    IconButton,\r\n} from \"@material-ui/core\";\r\nimport API from \"../../middleware/Api\";\r\nimport TypeIcon from \"../FileManager/TypeIcon\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useLocation } from \"react-router\";\r\nimport TimeAgo from \"timeago-react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardContainer: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    card: {\r\n        maxWidth: 400,\r\n        margin: \"0 auto\",\r\n    },\r\n    actions: {\r\n        display: \"flex\",\r\n    },\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"50px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n    shareTitle: {\r\n        maxWidth: \"200px\",\r\n    },\r\n    avatarFile: {\r\n        backgroundColor: theme.palette.primary.light,\r\n    },\r\n    avatarFolder: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n    },\r\n    gird: {\r\n        marginTop: \"30px\",\r\n    },\r\n    loadMore: {\r\n        textAlign: \"right\",\r\n        marginTop: \"20px\",\r\n        marginBottom: \"40px\",\r\n    },\r\n    badge: {\r\n        marginLeft: theme.spacing(1),\r\n        height: 17,\r\n    },\r\n    orderSelect: {\r\n        textAlign: \"right\",\r\n        marginTop: 5,\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function SearchResult() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const query = useQuery();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [total, setTotal] = useState(0);\r\n    const [shareList, setShareList] = useState([]);\r\n    const [orderBy, setOrderBy] = useState(\"created_at DESC\");\r\n\r\n    const search = useCallback((keywords, page, orderBy) => {\r\n        const order = orderBy.split(\" \");\r\n        API.get(\r\n            \"/share/search?page=\" +\r\n                page +\r\n                \"&order_by=\" +\r\n                order[0] +\r\n                \"&order=\" +\r\n                order[1] +\r\n                \"&keywords=\" +\r\n                encodeURIComponent(keywords)\r\n        )\r\n            .then((response) => {\r\n                if (response.data.items.length === 0) {\r\n                    ToggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        \"找不到符合条件的分享\",\r\n                        \"info\"\r\n                    );\r\n                }\r\n                setTotal(response.data.total);\r\n                setShareList(response.data.items);\r\n            })\r\n            .catch(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"加载失败\", \"error\");\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const keywords = query.get(\"keywords\");\r\n        if (keywords) {\r\n            search(keywords, page, orderBy);\r\n        } else {\r\n            ToggleSnackbar(\"top\", \"right\", \"请输入搜索关键词\", \"warning\");\r\n        }\r\n    }, [location]);\r\n\r\n    const handlePageChange = (event, value) => {\r\n        setPage(value);\r\n        const keywords = query.get(\"keywords\");\r\n        search(keywords, value, orderBy);\r\n    };\r\n\r\n    const handleOrderChange = (event) => {\r\n        setOrderBy(event.target.value);\r\n        const keywords = query.get(\"keywords\");\r\n        search(keywords, page, event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <Grid container>\r\n                <Grid sm={6} xs={6}>\r\n                    <Typography color=\"textSecondary\" variant=\"h4\">\r\n                        搜索结果\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid sm={6} xs={6} className={classes.orderSelect}>\r\n                    <FormControl>\r\n                        <Select\r\n                            color={\"secondary\"}\r\n                            onChange={handleOrderChange}\r\n                            value={orderBy}\r\n                        >\r\n                            <MenuItem value={\"created_at DESC\"}>\r\n                                创建日期由晚到早\r\n                            </MenuItem>\r\n                            <MenuItem value={\"created_at ASC\"}>\r\n                                创建日期由早到晚\r\n                            </MenuItem>\r\n                            <MenuItem value={\"downloads DESC\"}>\r\n                                下载次数由大到小\r\n                            </MenuItem>\r\n                            <MenuItem value={\"downloads ASC\"}>\r\n                                下载次数由小到大\r\n                            </MenuItem>\r\n                            <MenuItem value={\"views DESC\"}>\r\n                                浏览次数由大到小\r\n                            </MenuItem>\r\n                            <MenuItem value={\"views ASC\"}>\r\n                                浏览次数由小到大\r\n                            </MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={24} className={classes.gird}>\r\n                {shareList.map((value) => (\r\n                    <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={4}\r\n                        key={value.id}\r\n                        className={classes.cardContainer}\r\n                    >\r\n                        <Card className={classes.card}>\r\n                            <CardHeader\r\n                                avatar={\r\n                                    <div>\r\n                                        {!value.is_dir && (\r\n                                            <TypeIcon\r\n                                                fileName={\r\n                                                    value.source\r\n                                                        ? value.source.name\r\n                                                        : \"\"\r\n                                                }\r\n                                                isUpload\r\n                                            />\r\n                                        )}{\" \"}\r\n                                        {value.is_dir && (\r\n                                            <Avatar\r\n                                                className={classes.avatarFolder}\r\n                                            >\r\n                                                <FolderIcon />\r\n                                            </Avatar>\r\n                                        )}\r\n                                    </div>\r\n                                }\r\n                                action={\r\n                                    <Tooltip placement=\"top\" title=\"打开\">\r\n                                        <IconButton\r\n                                            onClick={() =>\r\n                                                history.push(\"/s/\" + value.key)\r\n                                            }\r\n                                        >\r\n                                            <OpenIcon />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                }\r\n                                title={\r\n                                    <Tooltip\r\n                                        placement=\"top\"\r\n                                        title={\r\n                                            value.source\r\n                                                ? value.source.name\r\n                                                : \"[原始对象不存在]\"\r\n                                        }\r\n                                    >\r\n                                        <Typography\r\n                                            noWrap\r\n                                            className={classes.shareTitle}\r\n                                        >\r\n                                            {value.source\r\n                                                ? value.source.name\r\n                                                : \"[原始对象不存在]\"}{\" \"}\r\n                                        </Typography>\r\n                                    </Tooltip>\r\n                                }\r\n                                subheader={\r\n                                    <span>\r\n                                        分享于{\" \"}\r\n                                        <TimeAgo\r\n                                            datetime={value.create_date}\r\n                                            locale=\"zh_CN\"\r\n                                        />\r\n                                    </span>\r\n                                }\r\n                            />\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            <div className={classes.loadMore}>\r\n                <Pagination\r\n                    count={Math.ceil(total / 18)}\r\n                    onChange={handlePageChange}\r\n                    color=\"secondary\"\r\n                />\r\n            </div>{\" \"}\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport UnlockIcon from \"@material-ui/icons/LockOpen\";\r\nimport EyeIcon from \"@material-ui/icons/RemoveRedEye\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport {\r\n    withStyles,\r\n    Tooltip,\r\n    Card,\r\n    Avatar,\r\n    CardHeader,\r\n    CardActions,\r\n    Typography,\r\n    Grid,\r\n    IconButton,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Button,\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport API from \"../../middleware/Api\";\r\nimport TypeIcon from \"../FileManager/TypeIcon\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { VisibilityOff, VpnKey } from \"@material-ui/icons\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport ToggleIcon from \"material-ui-toggle-icon\";\r\nimport { formatLocalTime } from \"../../utils/datetime\";\r\n\r\nconst styles = (theme) => ({\r\n    cardContainer: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    card: {\r\n        maxWidth: 400,\r\n        margin: \"0 auto\",\r\n    },\r\n    actions: {\r\n        display: \"flex\",\r\n    },\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"50px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n    shareTitle: {\r\n        maxWidth: \"200px\",\r\n    },\r\n    avatarFile: {\r\n        backgroundColor: theme.palette.primary.light,\r\n    },\r\n    avatarFolder: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n    },\r\n    gird: {\r\n        marginTop: \"30px\",\r\n    },\r\n    loadMore: {\r\n        textAlign: \"right\",\r\n        marginTop: \"20px\",\r\n        marginBottom: \"40px\",\r\n    },\r\n    badge: {\r\n        marginLeft: theme.spacing(1),\r\n        height: 17,\r\n    },\r\n    orderSelect: {\r\n        textAlign: \"right\",\r\n        marginTop: 5,\r\n    },\r\n});\r\nconst mapStateToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n    };\r\n};\r\n\r\nclass MyShareCompoment extends Component {\r\n    state = {\r\n        page: 1,\r\n        total: 0,\r\n        shareList: [],\r\n        showPwd: null,\r\n        orderBy: \"created_at DESC\",\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.loadList(1, this.state.orderBy);\r\n    };\r\n\r\n    showPwd = (pwd) => {\r\n        this.setState({ showPwd: pwd });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ showPwd: null });\r\n    };\r\n\r\n    removeShare = (id) => {\r\n        API.delete(\"/share/\" + id)\r\n            .then(() => {\r\n                let oldList = this.state.shareList;\r\n                oldList = oldList.filter((value) => {\r\n                    return value.key !== id;\r\n                });\r\n                this.setState({\r\n                    shareList: oldList,\r\n                    total: this.state.total - 1,\r\n                });\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"分享已取消\",\r\n                    \"success\"\r\n                );\r\n                if (oldList.length === 0) {\r\n                    this.loadList(1, this.state.orderBy);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    changePermission = (id) => {\r\n        const newPwd = Math.random().toString(36).substr(2).slice(2, 8);\r\n        const oldList = this.state.shareList;\r\n        const shareIndex = oldList.findIndex((value) => {\r\n            return value.key === id;\r\n        });\r\n        API.patch(\"/share/\" + id, {\r\n            prop: \"password\",\r\n            value: oldList[shareIndex].password === \"\" ? newPwd : \"\",\r\n        })\r\n            .then((response) => {\r\n                oldList[shareIndex].password = response.data;\r\n                this.setState({\r\n                    shareList: oldList,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    changePreviewOption = (id) => {\r\n        const oldList = this.state.shareList;\r\n        const shareIndex = oldList.findIndex((value) => {\r\n            return value.key === id;\r\n        });\r\n        API.patch(\"/share/\" + id, {\r\n            prop: \"preview_enabled\",\r\n            value: oldList[shareIndex].preview ? \"false\" : \"true\",\r\n        })\r\n            .then((response) => {\r\n                oldList[shareIndex].preview = response.data;\r\n                this.setState({\r\n                    shareList: oldList,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    loadList = (page, orderBy) => {\r\n        const order = orderBy.split(\" \");\r\n        API.get(\r\n            \"/share?page=\" +\r\n                page +\r\n                \"&order_by=\" +\r\n                order[0] +\r\n                \"&order=\" +\r\n                order[1]\r\n        )\r\n            .then((response) => {\r\n                if (response.data.items.length === 0) {\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        \"没有更多了\",\r\n                        \"info\"\r\n                    );\r\n                }\r\n                this.setState({\r\n                    total: response.data.total,\r\n                    shareList: response.data.items,\r\n                });\r\n            })\r\n            .catch(() => {\r\n                this.props.toggleSnackbar(\"top\", \"right\", \"加载失败\", \"error\");\r\n            });\r\n    };\r\n\r\n    handlePageChange = (event, value) => {\r\n        this.setState({\r\n            page: value,\r\n        });\r\n        this.loadList(value, this.state.orderBy);\r\n    };\r\n\r\n    handleOrderChange = (event) => {\r\n        this.setState({\r\n            orderBy: event.target.value,\r\n        });\r\n        this.loadList(this.state.page, event.target.value);\r\n    };\r\n\r\n    isExpired = (share) => {\r\n        return share.expire < -1 || share.remain_downloads === 0;\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.layout}>\r\n                <Grid container>\r\n                    <Grid sm={6} xs={6}>\r\n                        <Typography color=\"textSecondary\" variant=\"h4\">\r\n                            我的分享\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid sm={6} xs={6} className={classes.orderSelect}>\r\n                        <FormControl>\r\n                            <Select\r\n                                color={\"secondary\"}\r\n                                onChange={this.handleOrderChange}\r\n                                value={this.state.orderBy}\r\n                            >\r\n                                <MenuItem value={\"created_at DESC\"}>\r\n                                    创建日期由晚到早\r\n                                </MenuItem>\r\n                                <MenuItem value={\"created_at ASC\"}>\r\n                                    创建日期由早到晚\r\n                                </MenuItem>\r\n                                <MenuItem value={\"downloads DESC\"}>\r\n                                    下载次数由大到小\r\n                                </MenuItem>\r\n                                <MenuItem value={\"downloads ASC\"}>\r\n                                    下载次数由小到大\r\n                                </MenuItem>\r\n                                <MenuItem value={\"views DESC\"}>\r\n                                    浏览次数由大到小\r\n                                </MenuItem>\r\n                                <MenuItem value={\"views ASC\"}>\r\n                                    浏览次数由小到大\r\n                                </MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={24} className={classes.gird}>\r\n                    {this.state.shareList.map((value) => (\r\n                        <Grid\r\n                            item\r\n                            xs={12}\r\n                            sm={4}\r\n                            key={value.id}\r\n                            className={classes.cardContainer}\r\n                        >\r\n                            <Card className={classes.card}>\r\n                                <CardHeader\r\n                                    avatar={\r\n                                        <div>\r\n                                            {!value.is_dir && (\r\n                                                <TypeIcon\r\n                                                    fileName={\r\n                                                        value.source\r\n                                                            ? value.source.name\r\n                                                            : \"\"\r\n                                                    }\r\n                                                    isUpload\r\n                                                />\r\n                                            )}{\" \"}\r\n                                            {value.is_dir && (\r\n                                                <Avatar\r\n                                                    className={\r\n                                                        classes.avatarFolder\r\n                                                    }\r\n                                                >\r\n                                                    <FolderIcon />\r\n                                                </Avatar>\r\n                                            )}\r\n                                        </div>\r\n                                    }\r\n                                    title={\r\n                                        <Tooltip\r\n                                            placement=\"top\"\r\n                                            title={\r\n                                                value.source\r\n                                                    ? value.source.name\r\n                                                    : \"[原始对象不存在]\"\r\n                                            }\r\n                                        >\r\n                                            <Typography\r\n                                                noWrap\r\n                                                className={classes.shareTitle}\r\n                                            >\r\n                                                {value.source\r\n                                                    ? value.source.name\r\n                                                    : \"[原始对象不存在]\"}{\" \"}\r\n                                            </Typography>\r\n                                        </Tooltip>\r\n                                    }\r\n                                    subheader={\r\n                                        <span>\r\n                                            {formatLocalTime(\r\n                                                value.create_date,\r\n                                                \"YYYY-MM-DD H:mm:ss\"\r\n                                            )}\r\n                                            {this.isExpired(value) && (\r\n                                                <Chip\r\n                                                    size=\"small\"\r\n                                                    className={classes.badge}\r\n                                                    label=\"已失效\"\r\n                                                />\r\n                                            )}\r\n                                        </span>\r\n                                    }\r\n                                />\r\n                                <Divider />\r\n                                <CardActions\r\n                                    disableActionSpacing\r\n                                    style={{\r\n                                        display: \"block\",\r\n                                        textAlign: \"right\",\r\n                                    }}\r\n                                >\r\n                                    <Tooltip placement=\"top\" title=\"打开\">\r\n                                        <IconButton\r\n                                            onClick={() =>\r\n                                                this.props.history.push(\r\n                                                    \"/s/\" +\r\n                                                        value.key +\r\n                                                        (value.password === \"\"\r\n                                                            ? \"\"\r\n                                                            : \"?password=\" +\r\n                                                              value.password)\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            <OpenIcon fontSize={\"small\"} />\r\n                                        </IconButton>\r\n                                    </Tooltip>{\" \"}\r\n                                    {value.password !== \"\" && (\r\n                                        <>\r\n                                            <Tooltip\r\n                                                placement=\"top\"\r\n                                                title=\"变更为公开分享\"\r\n                                                onClick={() =>\r\n                                                    this.changePermission(\r\n                                                        value.key\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                <IconButton>\r\n                                                    <LockIcon\r\n                                                        fontSize={\"small\"}\r\n                                                    />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                            <Tooltip\r\n                                                placement=\"top\"\r\n                                                title=\"查看密码\"\r\n                                                onClick={() =>\r\n                                                    this.showPwd(value.password)\r\n                                                }\r\n                                            >\r\n                                                <IconButton>\r\n                                                    <VpnKey\r\n                                                        fontSize={\"small\"}\r\n                                                    />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </>\r\n                                    )}\r\n                                    {value.password === \"\" && (\r\n                                        <Tooltip\r\n                                            placement=\"top\"\r\n                                            title=\"变更为私密分享\"\r\n                                            onClick={() =>\r\n                                                this.changePermission(value.key)\r\n                                            }\r\n                                        >\r\n                                            <IconButton>\r\n                                                <UnlockIcon\r\n                                                    fontSize={\"small\"}\r\n                                                />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    )}\r\n                                    <Tooltip\r\n                                        placement=\"top\"\r\n                                        title={\r\n                                            value.preview\r\n                                                ? \"禁止预览\"\r\n                                                : \"允许预览\"\r\n                                        }\r\n                                        onClick={() =>\r\n                                            this.changePreviewOption(value.key)\r\n                                        }\r\n                                    >\r\n                                        <IconButton>\r\n                                            <ToggleIcon\r\n                                                on={value.preview}\r\n                                                onIcon={\r\n                                                    <EyeIcon\r\n                                                        fontSize={\"small\"}\r\n                                                    />\r\n                                                }\r\n                                                offIcon={\r\n                                                    <VisibilityOff\r\n                                                        fontSize={\"small\"}\r\n                                                    />\r\n                                                }\r\n                                            />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                    <Tooltip\r\n                                        placement=\"top\"\r\n                                        title=\"取消分享\"\r\n                                        onClick={() =>\r\n                                            this.removeShare(value.key)\r\n                                        }\r\n                                    >\r\n                                        <IconButton>\r\n                                            <DeleteIcon fontSize={\"small\"} />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n                <div className={classes.loadMore}>\r\n                    <Pagination\r\n                        count={Math.ceil(this.state.total / 18)}\r\n                        onChange={this.handlePageChange}\r\n                        color=\"secondary\"\r\n                    />\r\n                </div>{\" \"}\r\n                <Dialog\r\n                    open={this.state.showPwd !== null}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle> 分享密码 </DialogTitle>{\" \"}\r\n                    <DialogContent>\r\n                        <TextField\r\n                            id=\"standard-name\"\r\n                            value={this.state.showPwd}\r\n                            margin=\"normal\"\r\n                            autoFocus\r\n                        />\r\n                    </DialogContent>{\" \"}\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"default\">\r\n                            关闭{\" \"}\r\n                        </Button>{\" \"}\r\n                    </DialogActions>{\" \"}\r\n                </Dialog>{\" \"}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst MyShare = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(MyShareCompoment)));\r\n\r\nexport default MyShare;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentFix: {\r\n        padding: \"10px 24px 0px 24px\",\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: \"relative\",\r\n    },\r\n    buttonProgress: {\r\n        color: theme.palette.secondary.light,\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    content: {\r\n        padding: 0,\r\n    },\r\n}));\r\n\r\nexport default function SelectFileDialog(props) {\r\n    const [files, setFiles] = useState(props.files);\r\n\r\n    useEffect(() => {\r\n        setFiles(props.files);\r\n    }, [props.files]);\r\n\r\n    const handleChange = (index) => (event) => {\r\n        const filesCopy = [...files];\r\n        // eslint-disable-next-line\r\n        filesCopy.map((v, k) => {\r\n            if (v.index === index) {\r\n                filesCopy[k] = {\r\n                    ...filesCopy[k],\r\n                    selected: event.target.checked ? \"true\" : \"false\",\r\n                };\r\n            }\r\n        });\r\n        setFiles(filesCopy);\r\n    };\r\n\r\n    const submit = () => {\r\n        const index = [];\r\n        // eslint-disable-next-line\r\n        files.map((v) => {\r\n            if (v.selected === \"true\") {\r\n                index.push(parseInt(v.index));\r\n            }\r\n        });\r\n        props.onSubmit(index);\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">选择要下载的文件</DialogTitle>\r\n            <DialogContent dividers={\"paper\"} className={classes.content}>\r\n                {files.map((v, k) => {\r\n                    return (\r\n                        <MenuItem key={k}>\r\n                            <FormGroup row>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            onChange={handleChange(v.index)}\r\n                                            checked={v.selected === \"true\"}\r\n                                            value=\"checkedA\"\r\n                                        />\r\n                                    }\r\n                                    label={v.path}\r\n                                />\r\n                            </FormGroup>\r\n                        </MenuItem>\r\n                    );\r\n                })}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={props.onClose}>取消</Button>\r\n                <div className={classes.wrapper}>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        onClick={submit}\r\n                        disabled={props.modalsLoading}\r\n                    >\r\n                        确定\r\n                        {props.modalsLoading && (\r\n                            <CircularProgress\r\n                                size={24}\r\n                                className={classes.buttonProgress}\r\n                            />\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import {\r\n    Card,\r\n    CardContent,\r\n    darken,\r\n    IconButton,\r\n    lighten,\r\n    LinearProgress,\r\n    makeStyles,\r\n    Typography,\r\n    useTheme,\r\n} from \"@material-ui/core\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { ExpandMore, HighlightOff } from \"@material-ui/icons\";\r\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\r\nimport classNames from \"classnames\";\r\nimport React, { useCallback, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport API from \"../../middleware/Api\";\r\nimport { hex2bin, sizeToString } from \"../../utils\";\r\nimport TypeIcon from \"../FileManager/TypeIcon\";\r\nimport SelectFileDialog from \"../Modals/SelectFile\";\r\nimport { useHistory } from \"react-router\";\r\nconst ExpansionPanel = withStyles({\r\n    root: {\r\n        maxWidth: \"100%\",\r\n        boxShadow: \"none\",\r\n        \"&:not(:last-child)\": {\r\n            borderBottom: 0,\r\n        },\r\n        \"&:before\": {\r\n            display: \"none\",\r\n        },\r\n        \"&$expanded\": {},\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanel);\r\n\r\nconst ExpansionPanelSummary = withStyles({\r\n    root: {\r\n        minHeight: 0,\r\n        padding: 0,\r\n\r\n        \"&$expanded\": {\r\n            minHeight: 56,\r\n        },\r\n    },\r\n    content: {\r\n        maxWidth: \"100%\",\r\n        margin: 0,\r\n        display: \"flex\",\r\n        \"&$expanded\": {\r\n            margin: \"0\",\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanelSummary);\r\n\r\nconst ExpansionPanelDetails = withStyles((theme) => ({\r\n    root: {\r\n        display: \"block\",\r\n        padding: theme.spacing(0),\r\n    },\r\n}))(MuiExpansionPanelDetails);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        marginTop: \"20px\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    iconContainer: {\r\n        width: \"90px\",\r\n        height: \"96px\",\r\n        padding: \" 35px 29px 29px 29px\",\r\n        paddingLeft: \"35px\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    content: {\r\n        width: \"100%\",\r\n        minWidth: 0,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            borderInlineStart: \"1px \" + theme.palette.divider + \" solid\",\r\n        },\r\n    },\r\n    contentSide: {\r\n        minWidth: 0,\r\n        paddingTop: \"24px\",\r\n        paddingRight: \"28px\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    iconBig: {\r\n        fontSize: \"30px\",\r\n    },\r\n    iconMultiple: {\r\n        fontSize: \"30px\",\r\n        color: \"#607D8B\",\r\n    },\r\n    progress: {\r\n        marginTop: 8,\r\n        marginBottom: 4,\r\n    },\r\n    expand: {\r\n        transition: \".15s transform ease-in-out\",\r\n    },\r\n    expanded: {\r\n        transform: \"rotate(180deg)\",\r\n    },\r\n    subFileName: {\r\n        display: \"flex\",\r\n    },\r\n    subFileIcon: {\r\n        marginRight: \"20px\",\r\n    },\r\n    scroll: {\r\n        overflowY: \"auto\",\r\n    },\r\n    action: {\r\n        padding: theme.spacing(2),\r\n        textAlign: \"right\",\r\n    },\r\n    actionButton: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    info: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    infoTitle: {\r\n        fontWeight: 700,\r\n    },\r\n    infoValue: {\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    bitmap: {\r\n        width: \"100%\",\r\n        height: \"50px\",\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n}));\r\n\r\nexport default function DownloadingCard(props) {\r\n    const canvasRef = React.createRef();\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n\r\n    const [expanded, setExpanded] = React.useState(\"\");\r\n    const [task, setTask] = React.useState(props.task);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [selectDialogOpen, setSelectDialogOpen] = React.useState(false);\r\n    const [selectFileOption, setSelectFileOption] = React.useState([]);\r\n\r\n    const handleChange = (panel) => (event, newExpanded) => {\r\n        setExpanded(newExpanded ? panel : false);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        setTask(props.task);\r\n    }, [props.task]);\r\n\r\n    useEffect(() => {\r\n        if (task.info.bitfield === \"\") {\r\n            return;\r\n        }\r\n        let result = \"\";\r\n        task.info.bitfield.match(/.{1,2}/g).forEach((str) => {\r\n            result += hex2bin(str);\r\n        });\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext(\"2d\");\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n        context.strokeStyle = theme.palette.primary.main;\r\n        for (let i = 0; i < canvas.width; i++) {\r\n            let bit =\r\n                result[\r\n                    Math.round(((i + 1) / canvas.width) * task.info.numPieces)\r\n                ];\r\n            bit = bit ? bit : result.slice(-1);\r\n            if (bit === \"1\") {\r\n                context.beginPath();\r\n                context.moveTo(i, 0);\r\n                context.lineTo(i, canvas.height);\r\n                context.stroke();\r\n            }\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [task.info.bitfield, task.info.numPieces, theme]);\r\n\r\n    const getPercent = (completed, total) => {\r\n        if (total === 0) {\r\n            return 0;\r\n        }\r\n        return (completed / total) * 100;\r\n    };\r\n\r\n    const activeFiles = useCallback(() => {\r\n        return task.info.files.filter((v) => v.selected === \"true\");\r\n    }, [task.info.files]);\r\n\r\n    const deleteFile = (index) => {\r\n        setLoading(true);\r\n        const current = activeFiles();\r\n        const newIndex = [];\r\n        const newFiles = [];\r\n        // eslint-disable-next-line\r\n        current.map((v) => {\r\n            if (v.index !== index && v.selected) {\r\n                newIndex.push(parseInt(v.index));\r\n                newFiles.push({\r\n                    ...v,\r\n                    selected: \"true\",\r\n                });\r\n            } else {\r\n                newFiles.push({\r\n                    ...v,\r\n                    selected: \"false\",\r\n                });\r\n            }\r\n        });\r\n        API.put(\"/aria2/select/\" + task.info.gid, {\r\n            indexes: newIndex,\r\n        })\r\n            .then(() => {\r\n                setTask({\r\n                    ...task,\r\n                    info: {\r\n                        ...task.info,\r\n                        files: newFiles,\r\n                    },\r\n                });\r\n                ToggleSnackbar(\"top\", \"right\", \"文件已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const getDownloadName = useCallback(() => {\r\n        if (task.info.bittorrent.info.name !== \"\") {\r\n            return task.info.bittorrent.info.name;\r\n        }\r\n        return task.name === \".\" ? \"[未知]\" : task.name;\r\n    }, [task]);\r\n\r\n    const getIcon = useCallback(() => {\r\n        if (task.info.bittorrent.mode === \"multi\") {\r\n            return (\r\n                <Badge badgeContent={activeFiles().length} color=\"secondary\">\r\n                    <PermMediaIcon className={classes.iconMultiple} />\r\n                </Badge>\r\n            );\r\n        } else {\r\n            return (\r\n                <TypeIcon\r\n                    className={classes.iconBig}\r\n                    fileName={getDownloadName(task)}\r\n                />\r\n            );\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [task, classes]);\r\n\r\n    const cancel = () => {\r\n        setLoading(true);\r\n        API.delete(\"/aria2/task/\" + task.info.gid)\r\n            .then(() => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"任务已取消，状态会在稍后更新\",\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const changeSelectedFile = (fileIndex) => {\r\n        setLoading(true);\r\n        API.put(\"/aria2/select/\" + task.info.gid, {\r\n            indexes: fileIndex,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"操作成功，状态会在稍后更新\",\r\n                    \"success\"\r\n                );\r\n                setSelectDialogOpen(false);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <SelectFileDialog\r\n                open={selectDialogOpen}\r\n                onClose={() => setSelectDialogOpen(false)}\r\n                modalsLoading={loading}\r\n                files={selectFileOption}\r\n                onSubmit={changeSelectedFile}\r\n            />\r\n            <ExpansionPanel\r\n                square\r\n                expanded={expanded === task.info.gid}\r\n                onChange={handleChange(task.info.gid)}\r\n            >\r\n                <ExpansionPanelSummary\r\n                    aria-controls=\"panel1d-content\"\r\n                    id=\"panel1d-header\"\r\n                >\r\n                    <div className={classes.iconContainer}>{getIcon()}</div>\r\n                    <CardContent className={classes.content}>\r\n                        <Typography color=\"primary\" noWrap>\r\n                            <Tooltip title={getDownloadName()}>\r\n                                <span>{getDownloadName()}</span>\r\n                            </Tooltip>\r\n                        </Typography>\r\n                        <LinearProgress\r\n                            color=\"secondary\"\r\n                            variant=\"determinate\"\r\n                            className={classes.progress}\r\n                            value={getPercent(task.downloaded, task.total)}\r\n                        />\r\n                        <Typography\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                            noWrap\r\n                        >\r\n                            {task.total > 0 && (\r\n                                <span>\r\n                                    {getPercent(\r\n                                        task.downloaded,\r\n                                        task.total\r\n                                    ).toFixed(2)}\r\n                                    % -{\" \"}\r\n                                    {task.downloaded === 0\r\n                                        ? \"0Bytes\"\r\n                                        : sizeToString(task.downloaded)}\r\n                                    /\r\n                                    {task.total === 0\r\n                                        ? \"0Bytes\"\r\n                                        : sizeToString(task.total)}{\" \"}\r\n                                    -{\" \"}\r\n                                    {task.speed === \"0\"\r\n                                        ? \"0B/s\"\r\n                                        : sizeToString(task.speed) + \"/s\"}\r\n                                </span>\r\n                            )}\r\n                            {task.total === 0 && <span> - </span>}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardContent className={classes.contentSide}>\r\n                        <IconButton>\r\n                            <ExpandMore\r\n                                className={classNames(\r\n                                    {\r\n                                        [classes.expanded]:\r\n                                            expanded === task.info.gid,\r\n                                    },\r\n                                    classes.expand\r\n                                )}\r\n                            />\r\n                        </IconButton>\r\n                    </CardContent>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                    <Divider />\r\n                    {task.info.bittorrent.mode === \"multi\" && (\r\n                        <div className={classes.scroll}>\r\n                            <Table size=\"small\">\r\n                                <TableBody>\r\n                                    {activeFiles().map((value) => {\r\n                                        return (\r\n                                            <TableRow\r\n                                                key={value.index}\r\n                                                style={{\r\n                                                    background:\r\n                                                        \"linear-gradient(to right, \" +\r\n                                                        (theme.palette.type ===\r\n                                                        \"dark\"\r\n                                                            ? darken(\r\n                                                                  theme.palette\r\n                                                                      .primary\r\n                                                                      .main,\r\n                                                                  0.4\r\n                                                              )\r\n                                                            : lighten(\r\n                                                                  theme.palette\r\n                                                                      .primary\r\n                                                                      .main,\r\n                                                                  0.85\r\n                                                              )) +\r\n                                                        \" 0%,\" +\r\n                                                        (theme.palette.type ===\r\n                                                        \"dark\"\r\n                                                            ? darken(\r\n                                                                  theme.palette\r\n                                                                      .primary\r\n                                                                      .main,\r\n                                                                  0.4\r\n                                                              )\r\n                                                            : lighten(\r\n                                                                  theme.palette\r\n                                                                      .primary\r\n                                                                      .main,\r\n                                                                  0.85\r\n                                                              )) +\r\n                                                        \" \" +\r\n                                                        getPercent(\r\n                                                            value.completedLength,\r\n                                                            value.length\r\n                                                        ).toFixed(0) +\r\n                                                        \"%,\" +\r\n                                                        theme.palette.background\r\n                                                            .paper +\r\n                                                        \" \" +\r\n                                                        getPercent(\r\n                                                            value.completedLength,\r\n                                                            value.length\r\n                                                        ).toFixed(0) +\r\n                                                        \"%,\" +\r\n                                                        theme.palette.background\r\n                                                            .paper +\r\n                                                        \" 100%)\",\r\n                                                }}\r\n                                            >\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                >\r\n                                                    <Typography\r\n                                                        className={\r\n                                                            classes.subFileName\r\n                                                        }\r\n                                                    >\r\n                                                        <TypeIcon\r\n                                                            className={\r\n                                                                classes.subFileIcon\r\n                                                            }\r\n                                                            fileName={\r\n                                                                value.path\r\n                                                            }\r\n                                                        />\r\n                                                        {value.path}\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                >\r\n                                                    <Typography noWrap>\r\n                                                        {\" \"}\r\n                                                        {sizeToString(\r\n                                                            value.length\r\n                                                        )}\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                >\r\n                                                    <Typography noWrap>\r\n                                                        {getPercent(\r\n                                                            value.completedLength,\r\n                                                            value.length\r\n                                                        ).toFixed(2)}\r\n                                                        %\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    <Tooltip title=\"删除此文件\">\r\n                                                        <IconButton\r\n                                                            onClick={() =>\r\n                                                                deleteFile(\r\n                                                                    value.index\r\n                                                                )\r\n                                                            }\r\n                                                            disabled={loading}\r\n                                                            size={\"small\"}\r\n                                                        >\r\n                                                            <HighlightOff />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className={classes.action}>\r\n                        <Button\r\n                            className={classes.actionButton}\r\n                            variant=\"outlined\"\r\n                            color=\"secondary\"\r\n                            onClick={() =>\r\n                                history.push(\r\n                                    \"/#/home?path=\" +\r\n                                        encodeURIComponent(task.dst)\r\n                                )\r\n                            }\r\n                        >\r\n                            打开存放目录\r\n                        </Button>\r\n                        {task.info.bittorrent.mode === \"multi\" && (\r\n                            <Button\r\n                                className={classes.actionButton}\r\n                                variant=\"outlined\"\r\n                                color=\"secondary\"\r\n                                disabled={loading}\r\n                                onClick={() => {\r\n                                    setSelectDialogOpen(true);\r\n                                    setSelectFileOption([\r\n                                        ...props.task.info.files,\r\n                                    ]);\r\n                                }}\r\n                            >\r\n                                选择要下载的文件\r\n                            </Button>\r\n                        )}\r\n                        <Button\r\n                            className={classes.actionButton}\r\n                            onClick={cancel}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            disabled={loading}\r\n                        >\r\n                            取消任务\r\n                        </Button>\r\n                    </div>\r\n                    <Divider />\r\n                    <div className={classes.info}>\r\n                        {task.info.bitfield !== \"\" && (\r\n                            <canvas\r\n                                width={\"700\"}\r\n                                height={\"100\"}\r\n                                ref={canvasRef}\r\n                                className={classes.bitmap}\r\n                            />\r\n                        )}\r\n\r\n                        <Grid container>\r\n                            <Grid container xs={12} sm={4}>\r\n                                <Grid item xs={4} className={classes.infoTitle}>\r\n                                    更新于：\r\n                                </Grid>\r\n                                <Grid item xs={8} className={classes.infoValue}>\r\n                                    <TimeAgo\r\n                                        datetime={task.update}\r\n                                        locale=\"zh_CN\"\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container xs={12} sm={4}>\r\n                                <Grid item xs={4} className={classes.infoTitle}>\r\n                                    上传大小：\r\n                                </Grid>\r\n                                <Grid item xs={8} className={classes.infoValue}>\r\n                                    {sizeToString(task.info.uploadLength)}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container xs={12} sm={4}>\r\n                                <Grid item xs={4} className={classes.infoTitle}>\r\n                                    上传速度：\r\n                                </Grid>\r\n                                <Grid item xs={8} className={classes.infoValue}>\r\n                                    {sizeToString(task.info.uploadSpeed)} / s\r\n                                </Grid>\r\n                            </Grid>\r\n                            {task.info.bittorrent.mode !== \"\" && (\r\n                                <>\r\n                                    <Grid container xs={12} sm={8}>\r\n                                        <Grid\r\n                                            item\r\n                                            sm={2}\r\n                                            xs={4}\r\n                                            className={classes.infoTitle}\r\n                                        >\r\n                                            InfoHash：\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            sm={10}\r\n                                            xs={8}\r\n                                            style={{\r\n                                                wordBreak: \"break-all\",\r\n                                            }}\r\n                                            className={classes.infoValue}\r\n                                        >\r\n                                            {task.info.infoHash}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container xs={12} sm={4}>\r\n                                        <Grid\r\n                                            item\r\n                                            xs={4}\r\n                                            className={classes.infoTitle}\r\n                                        >\r\n                                            做种者：\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            xs={8}\r\n                                            className={classes.infoValue}\r\n                                        >\r\n                                            {task.info.numSeeders}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container xs={12} sm={4}>\r\n                                        <Grid\r\n                                            item\r\n                                            xs={4}\r\n                                            className={classes.infoTitle}\r\n                                        >\r\n                                            做种中：\r\n                                        </Grid>\r\n                                        <Grid\r\n                                            item\r\n                                            xs={8}\r\n                                            className={classes.infoValue}\r\n                                        >\r\n                                            {task.info.seeder === \"true\"\r\n                                                ? \"是\"\r\n                                                : \"否\"}\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </>\r\n                            )}\r\n                            <Grid container xs={12} sm={4}>\r\n                                <Grid item xs={4} className={classes.infoTitle}>\r\n                                    分片大小：\r\n                                </Grid>\r\n                                <Grid item xs={8} className={classes.infoValue}>\r\n                                    {sizeToString(task.info.pieceLength)}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container xs={12} sm={4}>\r\n                                <Grid item xs={4} className={classes.infoTitle}>\r\n                                    分片数量：\r\n                                </Grid>\r\n                                <Grid item xs={8} className={classes.infoValue}>\r\n                                    {task.info.numPieces}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        </Card>\r\n    );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    IconButton,\r\n    makeStyles,\r\n    Typography,\r\n    useTheme,\r\n} from \"@material-ui/core\";\r\nimport { sizeToString } from \"../../utils\";\r\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\r\nimport TypeIcon from \"../FileManager/TypeIcon\";\r\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { ExpandMore } from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport API from \"../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport { useHistory } from \"react-router\";\r\nimport { formatLocalTime } from \"../../utils/datetime\";\r\n\r\nconst ExpansionPanel = withStyles({\r\n    root: {\r\n        maxWidth: \"100%\",\r\n        boxShadow: \"none\",\r\n        \"&:not(:last-child)\": {\r\n            borderBottom: 0,\r\n        },\r\n        \"&:before\": {\r\n            display: \"none\",\r\n        },\r\n        \"&$expanded\": {},\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanel);\r\n\r\nconst ExpansionPanelSummary = withStyles({\r\n    root: {\r\n        minHeight: 0,\r\n        padding: 0,\r\n\r\n        \"&$expanded\": {\r\n            minHeight: 56,\r\n        },\r\n    },\r\n    content: {\r\n        maxWidth: \"100%\",\r\n        margin: 0,\r\n        display: \"flex\",\r\n        \"&$expanded\": {\r\n            margin: \"0\",\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanelSummary);\r\n\r\nconst ExpansionPanelDetails = withStyles((theme) => ({\r\n    root: {\r\n        display: \"block\",\r\n        padding: theme.spacing(0),\r\n    },\r\n}))(MuiExpansionPanelDetails);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        marginTop: \"20px\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    iconContainer: {\r\n        width: \"90px\",\r\n        height: \"96px\",\r\n        padding: \" 35px 29px 29px 29px\",\r\n        paddingLeft: \"35px\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    content: {\r\n        width: \"100%\",\r\n        minWidth: 0,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            borderInlineStart: \"1px \" + theme.palette.divider + \" solid\",\r\n        },\r\n        textAlign: \"left\",\r\n    },\r\n    contentSide: {\r\n        minWidth: 0,\r\n        paddingTop: \"24px\",\r\n        paddingRight: \"28px\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    iconBig: {\r\n        fontSize: \"30px\",\r\n    },\r\n    iconMultiple: {\r\n        fontSize: \"30px\",\r\n        color: \"#607D8B\",\r\n    },\r\n    progress: {\r\n        marginTop: 8,\r\n        marginBottom: 4,\r\n    },\r\n    expand: {\r\n        transition: \".15s transform ease-in-out\",\r\n    },\r\n    expanded: {\r\n        transform: \"rotate(180deg)\",\r\n    },\r\n    subFileName: {\r\n        display: \"flex\",\r\n    },\r\n    subFileIcon: {\r\n        marginRight: \"20px\",\r\n    },\r\n    scroll: {\r\n        overflowY: \"auto\",\r\n    },\r\n    action: {\r\n        padding: theme.spacing(2),\r\n        textAlign: \"right\",\r\n    },\r\n    actionButton: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    info: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    infoTitle: {\r\n        fontWeight: 700,\r\n    },\r\n    infoValue: {\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nexport default function FinishedCard(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const handleChange = () => (event, newExpanded) => {\r\n        setExpanded(!!newExpanded);\r\n    };\r\n\r\n    const getPercent = (completed, total) => {\r\n        if (total === 0) {\r\n            return 0;\r\n        }\r\n        return (completed / total) * 100;\r\n    };\r\n\r\n    const cancel = () => {\r\n        setLoading(true);\r\n        API.delete(\"/aria2/task/\" + props.task.gid)\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"删除成功\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                window.location.reload();\r\n            });\r\n    };\r\n\r\n    const getDownloadName = useCallback(() => {\r\n        return props.task.name === \".\" ? \"[未知]\" : props.task.name;\r\n    }, [props.task.name]);\r\n\r\n    const activeFiles = useCallback(() => {\r\n        return props.task.files.filter((v) => v.selected === \"true\");\r\n    }, [props.task.files]);\r\n\r\n    const getIcon = useCallback(() => {\r\n        if (props.task.files.length > 1) {\r\n            return (\r\n                <Badge badgeContent={activeFiles().length} color=\"secondary\">\r\n                    <PermMediaIcon className={classes.iconMultiple} />\r\n                </Badge>\r\n            );\r\n        } else {\r\n            return (\r\n                <TypeIcon\r\n                    className={classes.iconBig}\r\n                    fileName={getDownloadName(props.task)}\r\n                />\r\n            );\r\n        }\r\n    }, [props.task, classes]);\r\n\r\n    const getTaskError = (error) => {\r\n        try {\r\n            const res = JSON.parse(error);\r\n            return res.msg + \"：\" + res.error;\r\n        } catch (e) {\r\n            return \"文件转存失败\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <ExpansionPanel\r\n                square\r\n                expanded={expanded}\r\n                onChange={handleChange(\"\")}\r\n            >\r\n                <ExpansionPanelSummary\r\n                    aria-controls=\"panel1d-content\"\r\n                    id=\"panel1d-header\"\r\n                >\r\n                    <div className={classes.iconContainer}>{getIcon()}</div>\r\n                    <CardContent className={classes.content}>\r\n                        <Typography color=\"primary\" noWrap>\r\n                            <Tooltip title={getDownloadName()}>\r\n                                <span>{getDownloadName()}</span>\r\n                            </Tooltip>\r\n                        </Typography>\r\n                        {props.task.status === 3 && (\r\n                            <Tooltip title={props.task.error}>\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    color=\"error\"\r\n                                    noWrap\r\n                                >\r\n                                    下载出错：{props.task.error}\r\n                                </Typography>\r\n                            </Tooltip>\r\n                        )}\r\n                        {props.task.status === 5 && (\r\n                            <Typography\r\n                                variant=\"body2\"\r\n                                color=\"textSecondary\"\r\n                                noWrap\r\n                            >\r\n                                已取消\r\n                                {props.task.error !== \"\" && (\r\n                                    <span>：{props.task.error}</span>\r\n                                )}\r\n                            </Typography>\r\n                        )}\r\n                        {props.task.status === 4 &&\r\n                            props.task.task_status === 4 && (\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    style={{\r\n                                        color: theme.palette.success.main,\r\n                                    }}\r\n                                    noWrap\r\n                                >\r\n                                    已完成\r\n                                </Typography>\r\n                            )}\r\n                        {props.task.status === 4 &&\r\n                            props.task.task_status === 0 && (\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    style={{\r\n                                        color: theme.palette.success.light,\r\n                                    }}\r\n                                    noWrap\r\n                                >\r\n                                    已完成，转存排队中\r\n                                </Typography>\r\n                            )}\r\n                        {props.task.status === 4 &&\r\n                            props.task.task_status === 1 && (\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    style={{\r\n                                        color: theme.palette.success.light,\r\n                                    }}\r\n                                    noWrap\r\n                                >\r\n                                    已完成，转存处理中\r\n                                </Typography>\r\n                            )}\r\n                        {props.task.status === 4 &&\r\n                            props.task.task_status === 2 && (\r\n                                <Typography\r\n                                    variant=\"body2\"\r\n                                    color={\"error\"}\r\n                                    noWrap\r\n                                >\r\n                                    {getTaskError(props.task.task_error)}\r\n                                </Typography>\r\n                            )}\r\n                    </CardContent>\r\n                    <CardContent className={classes.contentSide}>\r\n                        <IconButton>\r\n                            <ExpandMore\r\n                                className={classNames(\r\n                                    {\r\n                                        [classes.expanded]: expanded,\r\n                                    },\r\n                                    classes.expand\r\n                                )}\r\n                            />\r\n                        </IconButton>\r\n                    </CardContent>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails>\r\n                    <Divider />\r\n                    {props.task.files.length > 1 && (\r\n                        <div className={classes.scroll}>\r\n                            <Table>\r\n                                <TableBody>\r\n                                    {activeFiles().map((value) => {\r\n                                        return (\r\n                                            <TableRow key={value.index}>\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                >\r\n                                                    <Typography\r\n                                                        className={\r\n                                                            classes.subFileName\r\n                                                        }\r\n                                                    >\r\n                                                        <TypeIcon\r\n                                                            className={\r\n                                                                classes.subFileIcon\r\n                                                            }\r\n                                                            fileName={\r\n                                                                value.path\r\n                                                            }\r\n                                                        />\r\n                                                        {value.path}\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                >\r\n                                                    <Typography noWrap>\r\n                                                        {\" \"}\r\n                                                        {sizeToString(\r\n                                                            value.length\r\n                                                        )}\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                >\r\n                                                    <Typography noWrap>\r\n                                                        {getPercent(\r\n                                                            value.completedLength,\r\n                                                            value.length\r\n                                                        ).toFixed(2)}\r\n                                                        %\r\n                                                    </Typography>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className={classes.action}>\r\n                        <Button\r\n                            className={classes.actionButton}\r\n                            variant=\"outlined\"\r\n                            color=\"secondary\"\r\n                            onClick={() =>\r\n                                history.push(\r\n                                    \"/#/home?path=\" +\r\n                                        encodeURIComponent(props.task.dst)\r\n                                )\r\n                            }\r\n                        >\r\n                            打开存放目录\r\n                        </Button>\r\n                        <Button\r\n                            className={classes.actionButton}\r\n                            onClick={cancel}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            disabled={loading}\r\n                        >\r\n                            删除记录\r\n                        </Button>\r\n                    </div>\r\n                    <Divider />\r\n                    <div className={classes.info}>\r\n                        <Grid container>\r\n                            <Grid container xs={12} sm={6}>\r\n                                <Grid item xs={4} className={classes.infoTitle}>\r\n                                    创建日期：\r\n                                </Grid>\r\n                                <Grid item xs={8} className={classes.infoValue}>\r\n                                    {formatLocalTime(\r\n                                        props.task.create,\r\n                                        \"YYYY-MM-DD H:mm:ss\"\r\n                                    )}\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container xs={12} sm={6}>\r\n                                <Grid item xs={4} className={classes.infoTitle}>\r\n                                    最后更新：\r\n                                </Grid>\r\n                                <Grid item xs={8} className={classes.infoValue}>\r\n                                    {formatLocalTime(\r\n                                        props.task.update,\r\n                                        \"YYYY-MM-DD H:mm:ss\"\r\n                                    )}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        </Card>\r\n    );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { openRemoteDownloadDialog } from \"../../actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport AutoHidden from \"./AutoHidden\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport Modals from \"../FileManager/Modals\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    fab: {\r\n        margin: 0,\r\n        top: \"auto\",\r\n        right: 20,\r\n        bottom: 20,\r\n        left: \"auto\",\r\n        zIndex: 5,\r\n        position: \"fixed\",\r\n    },\r\n}));\r\n\r\nexport default function RemoteDownloadButton() {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const OpenRemoteDownloadDialog = useCallback(\r\n        () => dispatch(openRemoteDownloadDialog()),\r\n        [dispatch]\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Modals />\r\n            <AutoHidden enable>\r\n                <Fab\r\n                    className={classes.fab}\r\n                    color=\"secondary\"\r\n                    onClick={() => OpenRemoteDownloadDialog()}\r\n                >\r\n                    <Add />\r\n                </Fab>\r\n            </AutoHidden>\r\n        </>\r\n    );\r\n}\r\n","import { Button, IconButton, Typography, withStyles } from \"@material-ui/core\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport API from \"../../middleware/Api\";\r\nimport DownloadingCard from \"./DownloadingCard\";\r\nimport FinishedCard from \"./FinishedCard\";\r\nimport RemoteDownloadButton from \"../Dial/Aria2\";\r\nimport Auth from \"../../middleware/Auth\";\r\n\r\nconst styles = (theme) => ({\r\n    actions: {\r\n        display: \"flex\",\r\n    },\r\n    title: {\r\n        marginTop: \"20px\",\r\n    },\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"30px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 700,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n    shareTitle: {\r\n        maxWidth: \"200px\",\r\n    },\r\n    avatarFile: {\r\n        backgroundColor: theme.palette.primary.light,\r\n    },\r\n    avatarFolder: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n    },\r\n    gird: {\r\n        marginTop: \"30px\",\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    loadingAnimation: {\r\n        borderRadius: \"6px 6px 0 0\",\r\n    },\r\n    shareFix: {\r\n        marginLeft: \"20px\",\r\n    },\r\n    loadMore: {\r\n        textAlign: \"center\",\r\n        marginTop: \"20px\",\r\n        marginBottom: \"20px\",\r\n    },\r\n    margin: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n});\r\nconst mapStateToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n    };\r\n};\r\n\r\nclass DownloadComponent extends Component {\r\n    page = 0;\r\n    interval = 0;\r\n    previousDownloading = -1;\r\n\r\n    state = {\r\n        downloading: [],\r\n        loading: false,\r\n        finishedList: [],\r\n        continue: true,\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.loadDownloading();\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.interval);\r\n    }\r\n\r\n    loadDownloading = () => {\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n        API.get(\"/aria2/downloading\")\r\n            .then((response) => {\r\n                this.setState({\r\n                    downloading: response.data,\r\n                    loading: false,\r\n                });\r\n                // 设定自动更新\r\n                clearTimeout(this.interval);\r\n                if (response.data.length > 0) {\r\n                    this.interval = setTimeout(\r\n                        this.loadDownloading,\r\n                        1000 *\r\n                            response.data.reduce(function (prev, current) {\r\n                                return prev.interval < current.interval\r\n                                    ? prev\r\n                                    : current;\r\n                            }).interval\r\n                    );\r\n                }\r\n\r\n                // 下载中条目变更时刷新已完成列表\r\n                if (response.data.length !== this.previousDownloading) {\r\n                    this.page = 0;\r\n                    this.setState({\r\n                        finishedList: [],\r\n                        continue: true,\r\n                    });\r\n                    this.loadMore();\r\n                }\r\n                this.previousDownloading = response.data.length;\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    loadMore = () => {\r\n        this.setState({\r\n            loading: true,\r\n        });\r\n        API.get(\"/aria2/finished?page=\" + ++this.page)\r\n            .then((response) => {\r\n                this.setState({\r\n                    finishedList: [\r\n                        ...this.state.finishedList,\r\n                        ...response.data,\r\n                    ],\r\n                    loading: false,\r\n                    continue: response.data.length >= 10,\r\n                });\r\n            })\r\n            .catch(() => {\r\n                this.props.toggleSnackbar(\"top\", \"right\", \"加载失败\", \"error\");\r\n                this.setState({\r\n                    loading: false,\r\n                });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const user = Auth.GetUser();\r\n\r\n        return (\r\n            <div className={classes.layout}>\r\n                {user.group.allowRemoteDownload && <RemoteDownloadButton />}\r\n                <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"h4\"\r\n                    className={classes.title}\r\n                >\r\n                    进行中\r\n                    <IconButton\r\n                        disabled={this.state.loading}\r\n                        onClick={this.loadDownloading}\r\n                    >\r\n                        <RefreshIcon />\r\n                    </IconButton>\r\n                </Typography>\r\n                {this.state.downloading.map((value, k) => (\r\n                    <DownloadingCard key={k} task={value} />\r\n                ))}\r\n                <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"h4\"\r\n                    className={classes.title}\r\n                >\r\n                    已完成\r\n                </Typography>\r\n                <div className={classes.loadMore}>\r\n                    {this.state.finishedList.map((value, k) => {\r\n                        if (value.files) {\r\n                            return <FinishedCard key={k} task={value} />;\r\n                        }\r\n                        return null;\r\n                    })}\r\n                    <Button\r\n                        size=\"large\"\r\n                        className={classes.margin}\r\n                        disabled={!this.state.continue}\r\n                        onClick={this.loadMore}\r\n                    >\r\n                        加载更多\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst Download = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(DownloadComponent));\r\n\r\nexport default Download;\r\n","import React from \"react\";\r\nimport { Facebook } from \"react-content-loader\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    loader: {\r\n        width: \"80%\",\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            width: \" 50%\",\r\n        },\r\n\r\n        marginTop: 30,\r\n    },\r\n}));\r\n\r\nconst MyLoader = (props) => {\r\n    return (\r\n        <Facebook\r\n            backgroundColor={props.dark ? \"#333\" : \"#f5f6f7\"}\r\n            foregroundColor={props.dark ? \"#636363\" : \"#eee\"}\r\n            className={props.className}\r\n        />\r\n    );\r\n};\r\n\r\nfunction PageLoading() {\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                textAlign: \"center\",\r\n            }}\r\n        >\r\n            <MyLoader\r\n                dark={theme.palette.type === \"dark\"}\r\n                className={classes.loader}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageLoading;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\n\r\nimport {\r\n    withStyles,\r\n    Button,\r\n    Card,\r\n    Divider,\r\n    CardHeader,\r\n    CardContent,\r\n    CardActions,\r\n    TextField,\r\n    Avatar,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router\";\r\nimport { formatLocalTime } from \"../../utils/datetime\";\r\n\r\nconst styles = (theme) => ({\r\n    card: {\r\n        maxWidth: 400,\r\n        margin: \"0 auto\",\r\n    },\r\n    actions: {\r\n        display: \"flex\",\r\n    },\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"110px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n    continue: {\r\n        marginLeft: \"auto\",\r\n        marginRight: \"10px\",\r\n        marginRottom: \"10px\",\r\n    },\r\n});\r\nconst mapStateToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n    };\r\n};\r\n\r\nclass LockedFileCompoment extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        this.state = {\r\n            pwd: query.get(\"password\"),\r\n        };\r\n    }\r\n\r\n    handleChange = (name) => (event) => {\r\n        this.setState({ [name]: event.target.value });\r\n    };\r\n\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.pwd === \"\") {\r\n            return;\r\n        }\r\n        this.props.setPassowrd(this.state.pwd);\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.layout}>\r\n                <Card className={classes.card}>\r\n                    <CardHeader\r\n                        avatar={\r\n                            <Avatar\r\n                                aria-label=\"Recipe\"\r\n                                src={\r\n                                    \"/api/v3/user/avatar/\" +\r\n                                    this.props.share.creator.key +\r\n                                    \"/l\"\r\n                                }\r\n                            />\r\n                        }\r\n                        title={this.props.share.creator.nick + \" 的加密分享\"}\r\n                        subheader={formatLocalTime(\r\n                            this.props.share.create_date,\r\n                            \"YYYY-MM-DD H:mm:ss\"\r\n                        )}\r\n                    />\r\n                    <Divider />\r\n                    <CardContent>\r\n                        <form onSubmit={this.submit}>\r\n                            <TextField\r\n                                id=\"pwd\"\r\n                                label=\"输入分享密码\"\r\n                                value={this.state.pwd}\r\n                                onChange={this.handleChange(\"pwd\")}\r\n                                margin=\"normal\"\r\n                                type=\"password\"\r\n                                autoFocus\r\n                                fullWidth\r\n                                color=\"secondary\"\r\n                            />\r\n                        </form>\r\n                    </CardContent>\r\n                    <CardActions\r\n                        className={classes.actions}\r\n                        disableActionSpacing\r\n                    >\r\n                        <Button\r\n                            onClick={this.submit}\r\n                            color=\"secondary\"\r\n                            className={classes.continue}\r\n                            variant=\"contained\"\r\n                            disabled={\r\n                                this.state.pwd === \"\" || this.props.loading\r\n                            }\r\n                        >\r\n                            继续\r\n                        </Button>\r\n                    </CardActions>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst LockedFile = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(LockedFileCompoment)));\r\n\r\nexport default LockedFile;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Avatar, Typography } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { formatLocalTime } from \"../../utils/datetime\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    boxHeader: {\r\n        textAlign: \"center\",\r\n        padding: 24,\r\n    },\r\n    avatar: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        margin: \"0 auto\",\r\n        width: 50,\r\n        height: 50,\r\n        cursor: \"pointer\",\r\n    },\r\n    shareDes: {\r\n        marginTop: 12,\r\n    },\r\n    shareInfo: {\r\n        color: theme.palette.text.disabled,\r\n        fontSize: 14,\r\n    },\r\n}));\r\n\r\nexport default function Creator(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const getSecondDes = () => {\r\n        if (props.share.expire > 0) {\r\n            if (props.share.expire >= 24 * 3600) {\r\n                return (\r\n                    Math.round(props.share.expire / (24 * 3600)) + \" 天后到期\"\r\n                );\r\n            }\r\n            return Math.round(props.share.expire / 3600) + \" 小时后到期\";\r\n        }\r\n        return formatLocalTime(props.share.create_date, \"YYYY-MM-DD H:mm:ss\");\r\n    };\r\n\r\n    const userProfile = () => {\r\n        history.push(\"/profile/\" + props.share.creator.key);\r\n        props.onClose && props.onClose();\r\n    };\r\n\r\n    return (\r\n        <div className={classes.boxHeader}>\r\n            <Avatar\r\n                className={classes.avatar}\r\n                alt={props.share.creator.nick}\r\n                src={\"/api/v3/user/avatar/\" + props.share.creator.key + \"/l\"}\r\n                onClick={() => userProfile()}\r\n            />\r\n            <Typography variant=\"h6\" className={classes.shareDes}>\r\n                {props.isFolder && (\r\n                    <>\r\n                        此分享由{\" \"}\r\n                        <Link\r\n                            onClick={() => userProfile()}\r\n                            href={\"javascript:void(0)\"}\r\n                            color=\"inherit\"\r\n                        >\r\n                            {props.share.creator.nick}\r\n                        </Link>{\" \"}\r\n                        创建\r\n                    </>\r\n                )}\r\n                {!props.isFolder && (\r\n                    <>\r\n                        {\" \"}\r\n                        <Link\r\n                            onClick={() => userProfile()}\r\n                            href={\"javascript:void(0)\"}\r\n                            color=\"inherit\"\r\n                        >\r\n                            {props.share.creator.nick}\r\n                        </Link>{\" \"}\r\n                        向您分享了 1 个文件\r\n                    </>\r\n                )}\r\n            </Typography>\r\n            <Typography className={classes.shareInfo}>\r\n                {props.share.views} 次浏览 • {props.share.downloads} 次下载 •{\" \"}\r\n                {getSecondDes()}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { sizeToString, vhCheck } from \"../../utils\";\r\nimport {\r\n    openMusicDialog,\r\n    openResaveDialog,\r\n    setSelectedTarget,\r\n    showImgPreivew,\r\n    toggleSnackbar,\r\n} from \"../../actions\";\r\nimport { isPreviewable } from \"../../config\";\r\nimport { withStyles, Button, Typography } from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TypeIcon from \"../FileManager/TypeIcon\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport API from \"../../middleware/Api\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Creator from \"./Creator\";\r\nimport pathHelper from \"../../utils/page\";\r\n\r\nvhCheck();\r\nconst styles = (theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"90px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginTop: \"90px\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            marginTop: 0,\r\n            marginLeft: 0,\r\n            marginRight: 0,\r\n        },\r\n        justifyContent: \"center\",\r\n        display: \"flex\",\r\n    },\r\n    player: {\r\n        borderRadius: \"4px\",\r\n    },\r\n    fileCotainer: {\r\n        width: \"200px\",\r\n        margin: \"0 auto\",\r\n    },\r\n    buttonCotainer: {\r\n        width: \"400px\",\r\n        margin: \"0 auto\",\r\n        textAlign: \"center\",\r\n        marginTop: \"20px\",\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    icon: {\r\n        borderRadius: \"10%\",\r\n        marginTop: 2,\r\n    },\r\n\r\n    box: {\r\n        width: \"100%\",\r\n        maxWidth: 440,\r\n        backgroundColor: theme.palette.background.paper,\r\n        borderRadius: 12,\r\n        boxShadow: \"0 8px 16px rgba(29,39,55,.25)\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            height: \"calc(var(--vh, 100vh) - 56px)\",\r\n            borderRadius: 0,\r\n            maxWidth: 1000,\r\n        },\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    boxContent: {\r\n        padding: 24,\r\n        display: \"flex\",\r\n        flex: \"1\",\r\n    },\r\n    fileName: {\r\n        marginLeft: 20,\r\n    },\r\n    fileSize: {\r\n        color: theme.palette.text.disabled,\r\n        fontSize: 14,\r\n    },\r\n    boxFooter: {\r\n        display: \"flex\",\r\n        padding: \"20px 16px\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    downloadButton: {\r\n        marginLeft: 8,\r\n    },\r\n});\r\nconst mapStateToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        openMusicDialog: () => {\r\n            dispatch(openMusicDialog());\r\n        },\r\n        setSelectedTarget: (targets) => {\r\n            dispatch(setSelectedTarget(targets));\r\n        },\r\n        showImgPreivew: (first) => {\r\n            dispatch(showImgPreivew(first));\r\n        },\r\n        openResave: (key) => {\r\n            dispatch(openResaveDialog(key));\r\n        },\r\n    };\r\n};\r\n\r\nconst Modals = React.lazy(() => import(\"../FileManager/Modals\"));\r\nconst ImgPreview = React.lazy(() => import(\"../FileManager/ImgPreview\"));\r\n\r\nclass SharedFileCompoment extends Component {\r\n    state = {\r\n        anchorEl: null,\r\n        open: false,\r\n        purchaseCallback: null,\r\n        loading: false,\r\n    };\r\n\r\n    downloaded = false;\r\n\r\n    // TODO merge into react thunk\r\n    preview = () => {\r\n        if (pathHelper.isSharePage(this.props.location.pathname)) {\r\n            const user = Auth.GetUser();\r\n            if (!Auth.Check() && user && !user.group.shareDownload) {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"请先登录\",\r\n                    \"warning\"\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        switch (isPreviewable(this.props.share.source.name)) {\r\n            case \"img\":\r\n                this.props.showImgPreivew({\r\n                    key: this.props.share.key,\r\n                    name: this.props.share.source.name,\r\n                });\r\n                return;\r\n            case \"msDoc\":\r\n                this.props.history.push(\r\n                    this.props.share.key +\r\n                        \"/doc?name=\" +\r\n                        encodeURIComponent(this.props.share.source.name)\r\n                );\r\n                return;\r\n            case \"audio\":\r\n                this.props.setSelectedTarget([\r\n                    {\r\n                        key: this.props.share.key,\r\n                        type: \"share\",\r\n                    },\r\n                ]);\r\n                this.props.openMusicDialog();\r\n                return;\r\n            case \"video\":\r\n                this.props.history.push(\r\n                    this.props.share.key +\r\n                        \"/video?name=\" +\r\n                        encodeURIComponent(this.props.share.source.name)\r\n                );\r\n                return;\r\n            case \"edit\":\r\n                this.props.history.push(\r\n                    this.props.share.key +\r\n                        \"/text?name=\" +\r\n                        encodeURIComponent(this.props.share.source.name)\r\n                );\r\n                return;\r\n            case \"pdf\":\r\n                this.props.history.push(\r\n                    this.props.share.key +\r\n                        \"/pdf?name=\" +\r\n                        encodeURIComponent(this.props.share.source.name)\r\n                );\r\n                return;\r\n            case \"code\":\r\n                this.props.history.push(\r\n                    this.props.share.key +\r\n                        \"/code?name=\" +\r\n                        encodeURIComponent(this.props.share.source.name)\r\n                );\r\n                return;\r\n            default:\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"此文件无法预览\",\r\n                    \"warning\"\r\n                );\r\n                return;\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.props.setSelectedTarget([]);\r\n    }\r\n\r\n    scoreHandle = (callback) => (event) => {\r\n        callback(event);\r\n    };\r\n\r\n    download = () => {\r\n        this.setState({ loading: true });\r\n        API.put(\"/share/download/\" + this.props.share.key)\r\n            .then((response) => {\r\n                this.downloaded = true;\r\n                window.location.assign(response.data);\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"warning\"\r\n                );\r\n            })\r\n            .then(() => {\r\n                this.setState({ loading: false });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className={classes.layout}>\r\n                <Modals />\r\n                <ImgPreview />\r\n                <div className={classes.box}>\r\n                    <Creator share={this.props.share} />\r\n                    <Divider />\r\n                    <div className={classes.boxContent}>\r\n                        <TypeIcon\r\n                            className={classes.icon}\r\n                            isUpload\r\n                            fileName={this.props.share.source.name}\r\n                        />\r\n                        <div className={classes.fileName}>\r\n                            <Typography style={{ wordBreak: \"break-all\" }}>\r\n                                {this.props.share.source.name}\r\n                            </Typography>\r\n                            <Typography className={classes.fileSize}>\r\n                                {sizeToString(this.props.share.source.size)}\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                    <Divider />\r\n                    <div className={classes.boxFooter}>\r\n                        <div className={classes.actionLeft}>\r\n                            {this.props.share.preview && (\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"secondary\"\r\n                                    onClick={this.scoreHandle(this.preview)}\r\n                                    disabled={this.state.loading}\r\n                                >\r\n                                    预览\r\n                                </Button>\r\n                            )}\r\n                        </div>\r\n                        <div className={classes.actions}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                className={classes.downloadButton}\r\n                                onClick={this.scoreHandle(this.download)}\r\n                                disabled={this.state.loading}\r\n                            >\r\n                                下载\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst SharedFile = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(SharedFileCompoment)));\r\n\r\nexport default SharedFile;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    openMusicDialog,\r\n    openResaveDialog,\r\n    setSelectedTarget,\r\n    setShareUserPopover,\r\n    showImgPreivew,\r\n    toggleSnackbar,\r\n} from \"../../actions\";\r\nimport { withStyles, Typography } from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport FileManager from \"../FileManager/FileManager\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Creator from \"./Creator\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport pathHelper from \"../../utils/page\";\r\nconst styles = (theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: 30,\r\n        marginBottom: 30,\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            marginTop: theme.spacing(2),\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: theme.spacing(1),\r\n        },\r\n    },\r\n    managerContainer: {\r\n        overflowY: \"auto\",\r\n    },\r\n});\r\n\r\nconst ReadMe = React.lazy(() => import(\"./ReadMe\"));\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        anchorEl: state.viewUpdate.shareUserPopoverAnchorEl,\r\n        fileList: state.explorer.fileList,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        openMusicDialog: () => {\r\n            dispatch(openMusicDialog());\r\n        },\r\n        setSelectedTarget: (targets) => {\r\n            dispatch(setSelectedTarget(targets));\r\n        },\r\n        showImgPreivew: (first) => {\r\n            dispatch(showImgPreivew(first));\r\n        },\r\n        openResave: (key) => {\r\n            dispatch(openResaveDialog(key));\r\n        },\r\n        setShareUserPopover: (e) => {\r\n            dispatch(setShareUserPopover(e));\r\n        },\r\n    };\r\n};\r\n\r\nclass SharedFolderComponent extends Component {\r\n    state = {};\r\n\r\n    UNSAFE_componentWillMount() {\r\n        window.shareInfo = this.props.share;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.shareInfo = null;\r\n        this.props.setSelectedTarget([]);\r\n    }\r\n\r\n    handleClickAway = () => {\r\n        if (!pathHelper.isMobile()) {\r\n            this.props.setSelectedTarget([]);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        let readmeShowed = false;\r\n        const id = this.props.anchorEl !== null ? \"simple-popover\" : undefined;\r\n\r\n        return (\r\n            <div className={classes.layout}>\r\n                <ClickAwayListener onClickAway={this.handleClickAway}>\r\n                    <Paper className={classes.managerContainer}>\r\n                        <FileManager isShare share={this.props.share} />\r\n                    </Paper>\r\n                </ClickAwayListener>\r\n                {/* eslint-disable-next-line */}\r\n                {this.props.fileList.map((value) => {\r\n                    if (\r\n                        (value.name.toLowerCase() === \"readme.md\" ||\r\n                            value.name.toLowerCase() === \"readme.txt\") &&\r\n                        !readmeShowed\r\n                    ) {\r\n                        readmeShowed = true;\r\n                        return <ReadMe share={this.props.share} file={value} />;\r\n                    }\r\n                })}\r\n                <Popover\r\n                    id={id}\r\n                    open={this.props.anchorEl !== null}\r\n                    anchorEl={this.props.anchorEl}\r\n                    onClose={() => this.props.setShareUserPopover(null)}\r\n                    anchorOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"center\",\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: \"top\",\r\n                        horizontal: \"center\",\r\n                    }}\r\n                >\r\n                    <Typography>\r\n                        <Creator\r\n                            isFolder\r\n                            onClose={() => this.props.setShareUserPopover(null)}\r\n                            share={this.props.share}\r\n                        />\r\n                    </Typography>\r\n                </Popover>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst SharedFolder = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(SharedFolderComponent)));\r\n\r\nexport default SharedFolder;\r\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\r\nimport PageLoading from \"../Placeholder/PageLoading\";\r\nimport { useParams } from \"react-router\";\r\nimport API from \"../../middleware/Api\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Notice from \"./NotFound\";\r\nimport LockedFile from \"./LockedFile\";\r\nimport SharedFile from \"./SharedFile\";\r\nimport SharedFolder from \"./SharedFolder\";\r\n\r\nexport default function SharePreload() {\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n\r\n    const [share, setShare] = useState(undefined);\r\n    const [loading, setLoading] = useState(false);\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const SetSubTitle = useCallback(\r\n        (title) => dispatch(changeSubTitle(title)),\r\n        [dispatch]\r\n    );\r\n\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (share) {\r\n            if (share.locked) {\r\n                SetSubTitle(share.creator.nick + \"的加密分享\");\r\n                if (password !== \"\") {\r\n                    ToggleSnackbar(\"top\", \"right\", \"密码不正确\", \"warning\");\r\n                }\r\n            } else {\r\n                SetSubTitle(share.source.name);\r\n            }\r\n        } else {\r\n            SetSubTitle();\r\n        }\r\n    }, [share, SetSubTitle, ToggleSnackbar]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            SetSubTitle();\r\n        };\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        let withPassword = \"\";\r\n        if (password !== \"\") {\r\n            withPassword = \"?password=\" + password;\r\n        }\r\n        API.get(\"/share/info/\" + id + withPassword)\r\n            .then((response) => {\r\n                setShare(response.data);\r\n                setLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                if (error.code === 404) {\r\n                    setShare(null);\r\n                } else {\r\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                }\r\n            });\r\n    }, [id, password, ToggleSnackbar]);\r\n\r\n    return (\r\n        <Suspense fallback={<PageLoading />}>\r\n            {share === undefined && <PageLoading />}\r\n            {share === null && <Notice msg={\"分享不存在或已过期\"} />}\r\n            {share && share.locked && (\r\n                <LockedFile\r\n                    loading={loading}\r\n                    setPassowrd={setPassword}\r\n                    share={share}\r\n                />\r\n            )}\r\n            {share && !share.locked && !share.is_dir && (\r\n                <SharedFile share={share} />\r\n            )}\r\n            {share && !share.locked && share.is_dir && (\r\n                <SharedFolder share={share} />\r\n            )}\r\n        </Suspense>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\r\nimport API from \"../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\r\nimport pathHelper from \"../../utils/page\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    layout: {\r\n        width: \"auto\",\r\n    },\r\n\r\n    container: {\r\n        border: \"none\",\r\n        width: \"100%\",\r\n        height: \"calc(100vh - 18px)\",\r\n        marginBottom: -3,\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function DocViewer() {\r\n    const [url, setURL] = useState(\"\");\r\n    const math = useRouteMatch();\r\n    const location = useLocation();\r\n    const query = useQuery();\r\n    const { id } = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const SetSubTitle = useCallback(\r\n        (title) => dispatch(changeSubTitle(title)),\r\n        [dispatch]\r\n    );\r\n\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!pathHelper.isSharePage(location.pathname)) {\r\n            const path = query.get(\"p\").split(\"/\");\r\n            SetSubTitle(path[path.length - 1]);\r\n        } else {\r\n            SetSubTitle(query.get(\"name\"));\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [math.params[0], location]);\r\n\r\n    useEffect(() => {\r\n        let requestURL = \"/file/doc/\" + query.get(\"id\");\r\n        if (pathHelper.isSharePage(location.pathname)) {\r\n            requestURL = \"/share/doc/\" + id;\r\n            if (query.get(\"share_path\") !== \"\") {\r\n                requestURL +=\r\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\r\n            }\r\n        }\r\n        API.get(requestURL)\r\n            .then((response) => {\r\n                setURL(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, [math.params[0], location]);\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.layout}>\r\n            {url !== \"\" && (\r\n                <iframe title={\"ms\"} className={classes.container} src={url} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Dialog } from \"@material-ui/core\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { FolderOpenOutlined, LabelOutlined } from \"@material-ui/icons\";\r\nimport PathSelector from \"../FileManager/PathSelector\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    formGroup: {\r\n        display: \"flex\",\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    formIcon: {\r\n        marginTop: 21,\r\n        marginRight: 19,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    input: {\r\n        width: 250,\r\n    },\r\n    dialogContent: {\r\n        paddingTop: 24,\r\n        paddingRight: 24,\r\n        paddingBottom: 8,\r\n        paddingLeft: 24,\r\n    },\r\n    button: {\r\n        marginTop: 8,\r\n    },\r\n}));\r\n\r\nexport default function CreateWebDAVAccount(props) {\r\n    const [value, setValue] = useState({\r\n        name: \"\",\r\n        path: \"/\",\r\n    });\r\n    const [pathSelectDialog, setPathSelectDialog] = React.useState(false);\r\n    const [selectedPath, setSelectedPath] = useState(\"\");\r\n    // eslint-disable-next-line\r\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\r\n    const classes = useStyles();\r\n\r\n    const setMoveTarget = (folder) => {\r\n        const path =\r\n            folder.path === \"/\"\r\n                ? folder.path + folder.name\r\n                : folder.path + \"/\" + folder.name;\r\n        setSelectedPath(path);\r\n        setSelectedPathName(folder.name);\r\n    };\r\n\r\n    const handleInputChange = (name) => (e) => {\r\n        setValue({\r\n            ...value,\r\n            [name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const selectPath = () => {\r\n        setValue({\r\n            ...value,\r\n            path: selectedPath === \"//\" ? \"/\" : selectedPath,\r\n        });\r\n        setPathSelectDialog(false);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <Dialog\r\n                open={pathSelectDialog}\r\n                onClose={() => setPathSelectDialog(false)}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">选择目录</DialogTitle>\r\n                <PathSelector\r\n                    presentPath=\"/\"\r\n                    selected={[]}\r\n                    onSelect={setMoveTarget}\r\n                />\r\n\r\n                <DialogActions>\r\n                    <Button onClick={() => setPathSelectDialog(false)}>\r\n                        取消\r\n                    </Button>\r\n                    <Button\r\n                        onClick={selectPath}\r\n                        color=\"primary\"\r\n                        disabled={selectedPath === \"\"}\r\n                    >\r\n                        确定\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <div className={classes.dialogContent}>\r\n                <div className={classes.formContainer}>\r\n                    <div className={classes.formGroup}>\r\n                        <div className={classes.formIcon}>\r\n                            <LabelOutlined />\r\n                        </div>\r\n\r\n                        <TextField\r\n                            className={classes.input}\r\n                            value={value.name}\r\n                            onChange={handleInputChange(\"name\")}\r\n                            label=\"备注名\"\r\n                        />\r\n                    </div>\r\n                    <div className={classes.formGroup}>\r\n                        <div className={classes.formIcon}>\r\n                            <FolderOpenOutlined />\r\n                        </div>\r\n                        <div>\r\n                            <TextField\r\n                                value={value.path}\r\n                                onChange={handleInputChange(\"path\")}\r\n                                className={classes.input}\r\n                                label=\"相对根目录\"\r\n                            />\r\n                            <br />\r\n                            <Button\r\n                                className={classes.button}\r\n                                color=\"primary\"\r\n                                onClick={() => setPathSelectDialog(true)}\r\n                            >\r\n                                选择目录\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <DialogActions>\r\n                <Button onClick={props.onClose}>取消</Button>\r\n                <Button\r\n                    disabled={value.path === \"\" || value.name === \"\"}\r\n                    color=\"primary\"\r\n                    onClick={() => props.callback(value)}\r\n                >\r\n                    确定\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { makeStyles, Typography } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport API from \"../../middleware/Api\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport CreateWebDAVAccount from \"../Modals/CreateWebDAVAccount\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"50px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: \"50px\",\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    cardContent: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    tableContainer: {\r\n        overflowX: \"auto\",\r\n    },\r\n    create: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    copy: {\r\n        marginLeft: 10,\r\n    },\r\n}));\r\n\r\nexport default function WebDAV() {\r\n    const [tab, setTab] = useState(0);\r\n    const [create, setCreate] = useState(false);\r\n    const [accounts, setAccounts] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const copyToClipboard = (text) => {\r\n        navigator.clipboard.writeText(text);\r\n        ToggleSnackbar(\"top\", \"center\", \"已复制到剪切板\", \"success\");\r\n    };\r\n\r\n    const loadList = () => {\r\n        API.get(\"/webdav/accounts\")\r\n            .then((response) => {\r\n                setAccounts(response.data.accounts);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n    useEffect(() => {\r\n        loadList();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const deleteAccount = (id) => {\r\n        const account = accounts[id];\r\n        API.delete(\"/webdav/accounts/\" + account.ID)\r\n            .then(() => {\r\n                let accountCopy = [...accounts];\r\n                accountCopy = accountCopy.filter((v, i) => {\r\n                    return i !== id;\r\n                });\r\n                setAccounts(accountCopy);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const addAccount = (account) => {\r\n        setCreate(false);\r\n        API.post(\"/webdav/accounts\", {\r\n            path: account.path,\r\n            name: account.name,\r\n        })\r\n            .then((response) => {\r\n                setAccounts([\r\n                    {\r\n                        ID: response.data.id,\r\n                        Password: response.data.password,\r\n                        CreatedAt: response.data.created_at,\r\n                        Name: account.name,\r\n                        Root: account.path,\r\n                    },\r\n                    ...accounts,\r\n                ]);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const user = Auth.GetUser();\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <CreateWebDAVAccount\r\n                callback={addAccount}\r\n                open={create}\r\n                onClose={() => setCreate(false)}\r\n            />\r\n            <Typography color=\"textSecondary\" variant=\"h4\">\r\n                WebDAV\r\n            </Typography>\r\n            <Paper elevation={3} className={classes.content}>\r\n                <Tabs\r\n                    value={tab}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    onChange={(event, newValue) => setTab(newValue)}\r\n                    aria-label=\"disabled tabs example\"\r\n                >\r\n                    <Tab label=\"账号管理\" />\r\n                </Tabs>\r\n                <div className={classes.cardContent}>\r\n                    {tab === 0 && (\r\n                        <div>\r\n                            <Alert severity=\"info\">\r\n                                WebDAV的地址为：\r\n                                {window.location.origin + \"/dav\"}\r\n                                ；登陆用户名统一为：{user.user_name}{\" \"}\r\n                                ；密码为所创建账号的密码。\r\n                            </Alert>\r\n                            <TableContainer className={classes.tableContainer}>\r\n                                <Table\r\n                                    className={classes.table}\r\n                                    aria-label=\"simple table\"\r\n                                >\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            <TableCell>备注名</TableCell>\r\n                                            <TableCell>密码</TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                根目录\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                创建日期\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                操作\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {accounts.map((row, id) => (\r\n                                            <TableRow key={id}>\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                >\r\n                                                    {row.Name}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {row.Password}\r\n                                                    <Link\r\n                                                        className={classes.copy}\r\n                                                        onClick={() =>\r\n                                                            copyToClipboard(\r\n                                                                row.Password\r\n                                                            )\r\n                                                        }\r\n                                                        href={\"javascript:void\"}\r\n                                                    >\r\n                                                        复制\r\n                                                    </Link>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    {row.Root}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <TimeAgo\r\n                                                        datetime={row.CreatedAt}\r\n                                                        locale=\"zh_CN\"\r\n                                                    />\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <IconButton\r\n                                                        size={\"small\"}\r\n                                                        onClick={() =>\r\n                                                            deleteAccount(id)\r\n                                                        }\r\n                                                    >\r\n                                                        <Delete />\r\n                                                    </IconButton>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                            <Button\r\n                                onClick={() => setCreate(true)}\r\n                                className={classes.create}\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                            >\r\n                                创建新账号\r\n                            </Button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { makeStyles, Typography } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport API from \"../../middleware/Api\";\r\nimport { getTaskProgress, getTaskStatus, getTaskType } from \"../../config\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { formatLocalTime } from \"../../utils/datetime\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"50px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 1100,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: \"50px\",\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4),\r\n        overflowX: \"auto\",\r\n    },\r\n    cardContent: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    tableContainer: {\r\n        overflowX: \"auto\",\r\n    },\r\n    create: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    noWrap: {\r\n        wordBreak: \"keepAll\",\r\n    },\r\n    footer: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function Tasks() {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [total, setTotal] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const loadList = (page) => {\r\n        API.get(\"/user/setting/tasks?page=\" + page)\r\n            .then((response) => {\r\n                setTasks(response.data.tasks);\r\n                setTotal(response.data.total);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList(page);\r\n        // eslint-disable-next-line\r\n    }, [page]);\r\n\r\n    const getError = (error) => {\r\n        if (error === \"\") {\r\n            return \"-\";\r\n        }\r\n        try {\r\n            const res = JSON.parse(error);\r\n            return res.msg;\r\n        } catch (e) {\r\n            return \"未知\";\r\n        }\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <Typography color=\"textSecondary\" variant=\"h4\">\r\n                任务队列\r\n            </Typography>\r\n            <Paper elevation={3} className={classes.content}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell nowrap=\"nowrap\">创建于</TableCell>\r\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\r\n                                任务类型\r\n                            </TableCell>\r\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\r\n                                状态\r\n                            </TableCell>\r\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\r\n                                最后进度\r\n                            </TableCell>\r\n                            <TableCell nowrap=\"nowrap\">错误信息</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {tasks.map((row, id) => (\r\n                            <TableRow key={id}>\r\n                                <TableCell\r\n                                    nowrap=\"nowrap\"\r\n                                    component=\"th\"\r\n                                    scope=\"row\"\r\n                                >\r\n                                    {formatLocalTime(\r\n                                        row.create_date,\r\n                                        \"YYYY-MM-DD H:mm:ss\"\r\n                                    )}\r\n                                </TableCell>\r\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\r\n                                    {getTaskType(row.type)}\r\n                                </TableCell>\r\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\r\n                                    {getTaskStatus(row.status)}\r\n                                </TableCell>\r\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\r\n                                    {getTaskProgress(row.type, row.progress)}\r\n                                </TableCell>\r\n                                <TableCell className={classes.noWrap}>\r\n                                    {getError(row.error)}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n                <div className={classes.footer}>\r\n                    <Pagination\r\n                        count={Math.ceil(total / 10)}\r\n                        onChange={(e, v) => setPage(v)}\r\n                        color=\"secondary\"\r\n                    />\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport API from \"../../middleware/Api\";\r\n\r\nimport {\r\n    withStyles,\r\n    Paper,\r\n    Avatar,\r\n    Typography,\r\n    Tabs,\r\n    Tab,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Grid,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { formatLocalTime } from \"../../utils/datetime\";\r\n\r\nconst styles = (theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"50px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        marginBottom: \"30px\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: 700,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n    userNav: {\r\n        height: \"270px\",\r\n        backgroundColor: theme.palette.primary.main,\r\n        padding: \"20px 20px 2em\",\r\n        backgroundImage:\r\n            \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.light.replace(\"#\", \"%23\") +\r\n            \"' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\r\n            \"' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\r\n            \"' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\r\n            \"' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.primary.main.replace(\"#\", \"%23\") +\r\n            \"' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\r\n            \"' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\r\n            \"' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='\" +\r\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\r\n            \"' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\\\")\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"bottom\",\r\n    },\r\n    avatarContainer: {\r\n        height: \"80px\",\r\n        width: \"80px\",\r\n        borderRaidus: \"50%\",\r\n        margin: \"auto\",\r\n        marginTop: \"50px\",\r\n        boxShadow:\r\n            \"0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)\",\r\n        border: \"2px solid #fff\",\r\n    },\r\n    nickName: {\r\n        width: \"200px\",\r\n        margin: \"auto\",\r\n        textAlign: \"center\",\r\n        marginTop: \"1px\",\r\n        fontSize: \"25px\",\r\n        color: \"#ffffff\",\r\n        opacity: \"0.81\",\r\n    },\r\n    th: {\r\n        minWidth: \"106px\",\r\n    },\r\n    mobileHide: {\r\n        [theme.breakpoints.down(\"md\")]: {\r\n            display: \"none\",\r\n        },\r\n    },\r\n    tableLink: {\r\n        cursor: \"pointer\",\r\n    },\r\n    navigator: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    pageInfo: {\r\n        marginTop: \"14px\",\r\n        marginLeft: \"23px\",\r\n    },\r\n    infoItem: {\r\n        paddingLeft: \"46px!important\",\r\n        paddingBottom: \"20px!important\",\r\n    },\r\n    infoContainer: {\r\n        marginTop: \"30px\",\r\n    },\r\n    tableContainer: {\r\n        overflowX: \"auto\",\r\n    },\r\n});\r\nconst mapStateToProps = () => {\r\n    return {};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n    };\r\n};\r\n\r\nclass ProfileCompoment extends Component {\r\n    state = {\r\n        listType: 0,\r\n        shareList: [],\r\n        page: 1,\r\n        user: null,\r\n        total: 0,\r\n    };\r\n\r\n    handleChange = (event, listType) => {\r\n        this.setState({ listType });\r\n        if (listType === 1) {\r\n            this.loadList(1, \"hot\");\r\n        } else if (listType === 0) {\r\n            this.loadList(1, \"default\");\r\n        }\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.loadList(1, \"default\");\r\n    };\r\n\r\n    loadList = (page, order) => {\r\n        API.get(\r\n            \"/user/profile/\" +\r\n                this.props.match.params.id +\r\n                \"?page=\" +\r\n                page +\r\n                \"&type=\" +\r\n                order\r\n        )\r\n            .then((response) => {\r\n                this.setState({\r\n                    shareList: response.data.items,\r\n                    user: response.data.user,\r\n                    total: response.data.total,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    loadNext = () => {\r\n        this.loadList(\r\n            this.state.page + 1,\r\n            this.state.listType === 0 ? \"default\" : \"hot\"\r\n        );\r\n    };\r\n\r\n    loadPrev = () => {\r\n        this.loadList(\r\n            this.state.page - 1,\r\n            this.state.listType === 0 ? \"default\" : \"hot\"\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.layout}>\r\n                {this.state.user === null && <div></div>}\r\n                {this.state.user !== null && (\r\n                    <Paper square>\r\n                        <div className={classes.userNav}>\r\n                            <div>\r\n                                <Avatar\r\n                                    className={classes.avatarContainer}\r\n                                    src={\r\n                                        \"/api/v3/user/avatar/\" +\r\n                                        this.state.user.id +\r\n                                        \"/l\"\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <Typography className={classes.nickName} noWrap>\r\n                                    {this.state.user.nick}\r\n                                </Typography>\r\n                            </div>\r\n                        </div>\r\n                        <Tabs\r\n                            value={this.state.listType}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            onChange={this.handleChange}\r\n                            centered\r\n                        >\r\n                            <Tab label=\"全部分享\" />\r\n                            <Tab label=\"热门分享\" />\r\n                            <Tab label=\"个人资料\" />\r\n                        </Tabs>\r\n                        {this.state.listType === 2 && (\r\n                            <div className={classes.infoContainer}>\r\n                                <Grid container spacing={24}>\r\n                                    <Grid\r\n                                        item\r\n                                        md={4}\r\n                                        xs={12}\r\n                                        className={classes.infoItem}\r\n                                    >\r\n                                        <Typography\r\n                                            color=\"textSecondary\"\r\n                                            variant=\"h6\"\r\n                                        >\r\n                                            UID\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {this.state.user.id}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        md={4}\r\n                                        xs={12}\r\n                                        className={classes.infoItem}\r\n                                    >\r\n                                        <Typography\r\n                                            color=\"textSecondary\"\r\n                                            variant=\"h6\"\r\n                                        >\r\n                                            昵称\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {this.state.user.nick}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        md={4}\r\n                                        xs={12}\r\n                                        className={classes.infoItem}\r\n                                    >\r\n                                        <Typography\r\n                                            color=\"textSecondary\"\r\n                                            variant=\"h6\"\r\n                                        >\r\n                                            用户组\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {this.state.user.group}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        md={4}\r\n                                        xs={12}\r\n                                        className={classes.infoItem}\r\n                                    >\r\n                                        <Typography\r\n                                            color=\"textSecondary\"\r\n                                            variant=\"h6\"\r\n                                        >\r\n                                            分享总数\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {this.state.total}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid\r\n                                        item\r\n                                        md={4}\r\n                                        xs={12}\r\n                                        className={classes.infoItem}\r\n                                    >\r\n                                        <Typography\r\n                                            color=\"textSecondary\"\r\n                                            variant=\"h6\"\r\n                                        >\r\n                                            注册日期\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            {this.state.user.date}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n                        )}\r\n                        {(this.state.listType === 0 ||\r\n                            this.state.listType === 1) && (\r\n                            <div>\r\n                                <div className={classes.tableContainer}>\r\n                                    <Table className={classes.table}>\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell>文件名</TableCell>\r\n                                                <TableCell\r\n                                                    className={\r\n                                                        classes.mobileHide\r\n                                                    }\r\n                                                >\r\n                                                    分享日期\r\n                                                </TableCell>\r\n                                                <TableCell\r\n                                                    className={[\r\n                                                        classes.th,\r\n                                                        classes.mobileHide,\r\n                                                    ]}\r\n                                                >\r\n                                                    下载次数\r\n                                                </TableCell>\r\n                                                <TableCell\r\n                                                    className={[\r\n                                                        classes.th,\r\n                                                        classes.mobileHide,\r\n                                                    ]}\r\n                                                >\r\n                                                    浏览次数\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {this.state.shareList.map(\r\n                                                (row, id) => (\r\n                                                    <TableRow\r\n                                                        key={id}\r\n                                                        className={\r\n                                                            classes.tableLink\r\n                                                        }\r\n                                                        onClick={() =>\r\n                                                            this.props.history.push(\r\n                                                                \"/s/\" + row.key\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        <TableCell>\r\n                                                            <Typography>\r\n                                                                {row.source\r\n                                                                    ? row.source\r\n                                                                          .name\r\n                                                                    : \"[已失效]\"}\r\n                                                            </Typography>\r\n                                                        </TableCell>\r\n                                                        <TableCell\r\n                                                            nowrap={\"nowrap\"}\r\n                                                            className={\r\n                                                                classes.mobileHide\r\n                                                            }\r\n                                                        >\r\n                                                            {formatLocalTime(\r\n                                                                row.create_date,\r\n                                                                \"YYYY-MM-DD H:mm:ss\"\r\n                                                            )}\r\n                                                        </TableCell>\r\n                                                        <TableCell\r\n                                                            className={\r\n                                                                classes.mobileHide\r\n                                                            }\r\n                                                        >\r\n                                                            {row.downloads}\r\n                                                        </TableCell>\r\n                                                        <TableCell\r\n                                                            className={\r\n                                                                classes.mobileHide\r\n                                                            }\r\n                                                        >\r\n                                                            {row.views}\r\n                                                        </TableCell>\r\n                                                    </TableRow>\r\n                                                )\r\n                                            )}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </div>\r\n                                {this.state.shareList.length !== 0 &&\r\n                                    this.state.listType === 0 && (\r\n                                        <div className={classes.navigator}>\r\n                                            <Pagination\r\n                                                count={Math.ceil(\r\n                                                    this.state.total / 10\r\n                                                )}\r\n                                                onChange={(e, v) =>\r\n                                                    this.loadList(\r\n                                                        v,\r\n                                                        this.state.listType ===\r\n                                                            0\r\n                                                            ? \"default\"\r\n                                                            : \"hot\"\r\n                                                    )\r\n                                                }\r\n                                                color=\"secondary\"\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n                            </div>\r\n                        )}\r\n                    </Paper>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst Profile = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(ProfileCompoment)));\r\n\r\nexport default Profile;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Divider,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    makeStyles,\r\n    Paper,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport { Add, Fingerprint, HighlightOff } from \"@material-ui/icons\";\r\nimport API from \"../../middleware/Api\";\r\nimport { bufferDecode, bufferEncode } from \"../../utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    sectionTitle: {\r\n        paddingBottom: \"10px\",\r\n        paddingTop: \"30px\",\r\n    },\r\n    rightIcon: {\r\n        marginTop: \"4px\",\r\n        marginRight: \"10px\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    desenList: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n    },\r\n    iconFix: {\r\n        marginRight: \"11px\",\r\n        marginLeft: \"7px\",\r\n        minWidth: 40,\r\n    },\r\n    flexContainer: {\r\n        display: \"flex\",\r\n    },\r\n}));\r\n\r\nexport default function Authn(props) {\r\n    const [selected, setSelected] = useState(\"\");\r\n    const [confirm, setConfirm] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const deleteCredential = (id) => {\r\n        API.patch(\"/user/setting/authn\", {\r\n            id: id,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"凭证已删除\", \"success\");\r\n                props.remove(id);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setConfirm(false);\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    const addCredential = () => {\r\n        if (!navigator.credentials) {\r\n            ToggleSnackbar(\"top\", \"right\", \"当前浏览器或环境不支持\", \"warning\");\r\n\r\n            return;\r\n        }\r\n        API.put(\"/user/authn\", {})\r\n            .then((response) => {\r\n                const credentialCreationOptions = response.data;\r\n                credentialCreationOptions.publicKey.challenge = bufferDecode(\r\n                    credentialCreationOptions.publicKey.challenge\r\n                );\r\n                credentialCreationOptions.publicKey.user.id = bufferDecode(\r\n                    credentialCreationOptions.publicKey.user.id\r\n                );\r\n                if (credentialCreationOptions.publicKey.excludeCredentials) {\r\n                    for (\r\n                        let i = 0;\r\n                        i <\r\n                        credentialCreationOptions.publicKey.excludeCredentials\r\n                            .length;\r\n                        i++\r\n                    ) {\r\n                        credentialCreationOptions.publicKey.excludeCredentials[\r\n                            i\r\n                        ].id = bufferDecode(\r\n                            credentialCreationOptions.publicKey\r\n                                .excludeCredentials[i].id\r\n                        );\r\n                    }\r\n                }\r\n\r\n                return navigator.credentials.create({\r\n                    publicKey: credentialCreationOptions.publicKey,\r\n                });\r\n            })\r\n            .then((credential) => {\r\n                const attestationObject = credential.response.attestationObject;\r\n                const clientDataJSON = credential.response.clientDataJSON;\r\n                const rawId = credential.rawId;\r\n                return API.put(\r\n                    \"/user/authn/finish\",\r\n                    JSON.stringify({\r\n                        id: credential.id,\r\n                        rawId: bufferEncode(rawId),\r\n                        type: credential.type,\r\n                        response: {\r\n                            attestationObject: bufferEncode(attestationObject),\r\n                            clientDataJSON: bufferEncode(clientDataJSON),\r\n                        },\r\n                    })\r\n                );\r\n            })\r\n            .then((response) => {\r\n                props.add(response.data);\r\n                ToggleSnackbar(\"top\", \"right\", \"验证器已添加\", \"success\");\r\n                return;\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={confirm} onClose={() => setConfirm(false)}>\r\n                <DialogTitle>删除凭证</DialogTitle>\r\n                <DialogContent>确定要吊销这个凭证吗？</DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setConfirm(false)} color=\"default\">\r\n                        取消\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => deleteCredential(selected)}\r\n                        color=\"primary\"\r\n                    >\r\n                        确定\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Typography className={classes.sectionTitle} variant=\"subtitle2\">\r\n                外部认证器\r\n            </Typography>\r\n            <Paper>\r\n                <List className={classes.desenList}>\r\n                    {props.list.map((v) => (\r\n                        <>\r\n                            <ListItem\r\n                                button\r\n                                style={{\r\n                                    paddingRight: 60,\r\n                                }}\r\n                                onClick={() => {\r\n                                    setConfirm(true);\r\n                                    setSelected(v.id);\r\n                                }}\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <Fingerprint />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={v.fingerprint} />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    onClick={() => deleteCredential(v.id)}\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <HighlightOff\r\n                                        className={classes.rightIcon}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                        </>\r\n                    ))}\r\n                    <ListItem button onClick={() => addCredential()}>\r\n                        <ListItemIcon className={classes.iconFix}>\r\n                            <Add />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"添加新验证器\" />\r\n\r\n                        <ListItemSecondaryAction\r\n                            className={classes.flexContainer}\r\n                        >\r\n                            <RightIcon className={classes.rightIcon} />\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                </List>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { FormLabel, makeStyles } from \"@material-ui/core\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    DialogContentText,\r\n    CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { toggleSnackbar, setModalsLoading } from \"../../actions/index\";\r\nimport PathSelector from \"../FileManager/PathSelector\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport API from \"../../middleware/Api\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {\r\n    refreshTimeZone,\r\n    timeZone,\r\n    validateTimeZone,\r\n} from \"../../utils/datetime\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Auth from \"../../middleware/Auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nexport default function TimeZoneDialog(props) {\r\n    const [timeZoneValue, setTimeZoneValue] = useState(timeZone);\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const saveZoneInfo = () => {\r\n        if (!validateTimeZone(timeZoneValue)) {\r\n            ToggleSnackbar(\"top\", \"right\", \"无效的时区名称\", \"warning\");\r\n            return;\r\n        }\r\n        Auth.SetPreference(\"timeZone\", timeZoneValue);\r\n        refreshTimeZone();\r\n        props.onClose();\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"form-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"form-dialog-title\">更改时区</DialogTitle>\r\n\r\n            <DialogContent>\r\n                <FormControl>\r\n                    <TextField\r\n                        label={\"IANA 时区名称标识\"}\r\n                        value={timeZoneValue}\r\n                        onChange={(e) => setTimeZoneValue(e.target.value)}\r\n                    />\r\n                </FormControl>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Button onClick={props.onClose}>取消</Button>\r\n                <div className={classes.wrapper}>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        disabled={timeZoneValue === \"\"}\r\n                        onClick={() => saveZoneInfo()}\r\n                    >\r\n                        确定\r\n                        {props.modalsLoading && (\r\n                            <CircularProgress\r\n                                size={24}\r\n                                className={classes.buttonProgress}\r\n                            />\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PhotoIcon from \"@material-ui/icons/InsertPhoto\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport DateIcon from \"@material-ui/icons/DateRange\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport LinkIcon from \"@material-ui/icons/Phonelink\";\r\nimport InputIcon from \"@material-ui/icons/Input\";\r\nimport SecurityIcon from \"@material-ui/icons/Security\";\r\nimport NickIcon from \"@material-ui/icons/PermContactCalendar\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport VerifyIcon from \"@material-ui/icons/VpnKey\";\r\nimport ColorIcon from \"@material-ui/icons/Palette\";\r\nimport {\r\n    applyThemes,\r\n    changeViewMethod,\r\n    toggleDaylightMode,\r\n    toggleSnackbar,\r\n} from \"../../actions\";\r\nimport axios from \"axios\";\r\nimport FingerprintIcon from \"@material-ui/icons/Fingerprint\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport {\r\n    ListItemIcon,\r\n    withStyles,\r\n    Button,\r\n    Divider,\r\n    TextField,\r\n    Avatar,\r\n    Paper,\r\n    Typography,\r\n    List,\r\n    ListItem,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    ListItemAvatar,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Switch,\r\n} from \"@material-ui/core\";\r\nimport { blue, green, yellow } from \"@material-ui/core/colors\";\r\nimport API from \"../../middleware/Api\";\r\nimport Auth from \"../../middleware/Auth\";\r\nimport { withRouter } from \"react-router\";\r\nimport QRCode from \"qrcode-react\";\r\nimport { Brightness3, ListAlt, PermContactCalendar,Schedule } from \"@material-ui/icons\";\r\nimport { transformTime } from \"../../utils\";\r\nimport Authn from \"./Authn\";\r\nimport { formatLocalTime, timeZone } from \"../../utils/datetime\";\r\nimport TimeZoneDialog from \"../Modals/TimeZone\";\r\n\r\nconst styles = (theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\r\n            width: 700,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n    },\r\n    sectionTitle: {\r\n        paddingBottom: \"10px\",\r\n        paddingTop: \"30px\",\r\n    },\r\n    rightIcon: {\r\n        marginTop: \"4px\",\r\n        marginRight: \"10px\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    uploadFromFile: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n    userGravatar: {\r\n        backgroundColor: yellow[100],\r\n        color: yellow[800],\r\n    },\r\n    policySelected: {\r\n        backgroundColor: green[100],\r\n        color: green[800],\r\n    },\r\n    infoText: {\r\n        marginRight: \"17px\",\r\n    },\r\n    infoTextWithIcon: {\r\n        marginRight: \"17px\",\r\n        marginTop: \"1px\",\r\n    },\r\n    rightIconWithText: {\r\n        marginTop: \"0px\",\r\n        marginRight: \"10px\",\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    iconFix: {\r\n        marginRight: \"11px\",\r\n        marginLeft: \"7px\",\r\n        minWidth: 40,\r\n    },\r\n    flexContainer: {\r\n        display: \"flex\",\r\n    },\r\n    desenList: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n    },\r\n    flexContainerResponse: {\r\n        display: \"flex\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"initial\",\r\n        },\r\n    },\r\n    desText: {\r\n        marginTop: \"10px\",\r\n    },\r\n    secondColor: {\r\n        height: \"20px\",\r\n        width: \"20px\",\r\n        backgroundColor: theme.palette.secondary.main,\r\n        borderRadius: \"50%\",\r\n        marginRight: \"17px\",\r\n    },\r\n    firstColor: {\r\n        height: \"20px\",\r\n        width: \"20px\",\r\n        backgroundColor: theme.palette.primary.main,\r\n        borderRadius: \"50%\",\r\n        marginRight: \"6px\",\r\n    },\r\n    themeBlock: {\r\n        height: \"20px\",\r\n        width: \"20px\",\r\n    },\r\n    paddingBottom: {\r\n        marginBottom: \"30px\",\r\n    },\r\n    paddingText: {\r\n        paddingRight: theme.spacing(2),\r\n    },\r\n    qrcode: {\r\n        width: 128,\r\n        marginTop: 16,\r\n        marginRight: 16,\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        title: state.siteConfig.title,\r\n        authn: state.siteConfig.authn,\r\n        viewMethod: state.viewUpdate.explorerViewMethod,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n        applyThemes: (color) => {\r\n            dispatch(applyThemes(color));\r\n        },\r\n        toggleDaylightMode: () => {\r\n            dispatch(toggleDaylightMode());\r\n        },\r\n        changeView: (method) => {\r\n            dispatch(changeViewMethod(method));\r\n        },\r\n    };\r\n};\r\n\r\nclass UserSettingCompoment extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.fileInput = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        avatarModal: false,\r\n        nickModal: false,\r\n        changePassword: false,\r\n        loading: \"\",\r\n        oldPwd: \"\",\r\n        newPwd: \"\",\r\n        webdavPwd: \"\",\r\n        newPwdRepeat: \"\",\r\n        twoFactor: false,\r\n        authCode: \"\",\r\n        changeTheme: false,\r\n        chosenTheme: null,\r\n        showWebDavUrl: false,\r\n        showWebDavUserName: false,\r\n        changeWebDavPwd: false,\r\n        groupBackModal: false,\r\n        changePolicy: false,\r\n        changeTimeZone: false,\r\n        settings: {\r\n            uid: 0,\r\n            group_expires: 0,\r\n            policy: {\r\n                current: {\r\n                    name: \"-\",\r\n                    id: \"\",\r\n                },\r\n                options: [],\r\n            },\r\n            qq: \"\",\r\n            homepage: true,\r\n            two_factor: \"\",\r\n            two_fa_secret: \"\",\r\n            prefer_theme: \"\",\r\n            themes: {},\r\n            authn: [],\r\n        },\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            avatarModal: false,\r\n            nickModal: false,\r\n            changePassword: false,\r\n            loading: \"\",\r\n            twoFactor: false,\r\n            changeTheme: false,\r\n            showWebDavUrl: false,\r\n            showWebDavUserName: false,\r\n            changeWebDavPwd: false,\r\n            groupBackModal: false,\r\n            changePolicy: false,\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadSetting();\r\n    }\r\n\r\n    toggleViewMethod = () => {\r\n        const newMethod =\r\n            this.props.viewMethod === \"icon\"\r\n                ? \"list\"\r\n                : this.props.viewMethod === \"list\"\r\n                ? \"smallIcon\"\r\n                : \"icon\";\r\n        Auth.SetPreference(\"view_method\", newMethod);\r\n        this.props.changeView(newMethod);\r\n    };\r\n\r\n    loadSetting = () => {\r\n        API.get(\"/user/setting\")\r\n            .then((response) => {\r\n                const theme = JSON.parse(response.data.themes);\r\n                response.data.themes = theme;\r\n                this.setState({\r\n                    settings: response.data,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    useGravatar = () => {\r\n        this.setState({\r\n            loading: \"gravatar\",\r\n        });\r\n        API.put(\"/user/setting/avatar\")\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"头像已更新，刷新后生效\",\r\n                    \"success\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    changeNick = () => {\r\n        this.setState({\r\n            loading: \"nick\",\r\n        });\r\n        API.patch(\"/user/setting/nick\", {\r\n            nick: this.state.nick,\r\n        })\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"昵称已更改，刷新后生效\",\r\n                    \"success\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n                this.handleClose();\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    uploadAvatar = () => {\r\n        this.setState({\r\n            loading: \"avatar\",\r\n        });\r\n        const formData = new FormData();\r\n        formData.append(\"avatar\", this.fileInput.current.files[0]);\r\n        API.post(\"/user/setting/avatar\", formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n        })\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"头像已更新，刷新后生效\",\r\n                    \"success\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    handleToggle = () => {\r\n        API.patch(\"/user/setting/homepage\", {\r\n            status: !this.state.settings.homepage,\r\n        })\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"设置已保存\",\r\n                    \"success\"\r\n                );\r\n                this.setState({\r\n                    settings: {\r\n                        ...this.state.settings,\r\n                        homepage: !this.state.settings.homepage,\r\n                    },\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    changhePwd = () => {\r\n        if (this.state.newPwd !== this.state.newPwdRepeat) {\r\n            this.props.toggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                \"两次密码输入不一致\",\r\n                \"warning\"\r\n            );\r\n            return;\r\n        }\r\n        this.setState({\r\n            loading: \"changePassword\",\r\n        });\r\n        API.patch(\"/user/setting/password\", {\r\n            old: this.state.oldPwd,\r\n            new: this.state.newPwd,\r\n        })\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"密码已更新\",\r\n                    \"success\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n                this.handleClose();\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    changeTheme = () => {\r\n        this.setState({\r\n            loading: \"changeTheme\",\r\n        });\r\n        API.patch(\"/user/setting/theme\", {\r\n            theme: this.state.chosenTheme,\r\n        })\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"主题配色已更换\",\r\n                    \"success\"\r\n                );\r\n                this.props.applyThemes(this.state.chosenTheme);\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    changheWebdavPwd = () => {\r\n        this.setState({\r\n            loading: \"changheWebdavPwd\",\r\n        });\r\n        axios\r\n            .post(\"/Member/setWebdavPwd\", {\r\n                pwd: this.state.webdavPwd,\r\n            })\r\n            .then((response) => {\r\n                if (response.data.error === \"1\") {\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        response.data.msg,\r\n                        \"error\"\r\n                    );\r\n                    this.setState({\r\n                        loading: \"\",\r\n                    });\r\n                } else {\r\n                    this.props.toggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        response.data.msg,\r\n                        \"success\"\r\n                    );\r\n                    this.setState({\r\n                        loading: \"\",\r\n                        changeWebDavPwd: false,\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    init2FA = () => {\r\n        if (this.state.settings.two_factor) {\r\n            this.setState({ twoFactor: true });\r\n            return;\r\n        }\r\n        API.get(\"/user/setting/2fa\")\r\n            .then((response) => {\r\n                this.setState({\r\n                    two_fa_secret: response.data,\r\n                    twoFactor: true,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n            });\r\n    };\r\n\r\n    twoFactor = () => {\r\n        this.setState({\r\n            loading: \"twoFactor\",\r\n        });\r\n        API.patch(\"/user/setting/2fa\", {\r\n            code: this.state.authCode,\r\n        })\r\n            .then(() => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"设定已保存\",\r\n                    \"success\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                    settings: {\r\n                        ...this.state.settings,\r\n                        two_factor: !this.state.settings.two_factor,\r\n                    },\r\n                });\r\n                this.handleClose();\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"error\"\r\n                );\r\n                this.setState({\r\n                    loading: \"\",\r\n                });\r\n            });\r\n    };\r\n\r\n    handleChange = (name) => (event) => {\r\n        this.setState({ [name]: event.target.value });\r\n    };\r\n\r\n    handleAlignment = (event, chosenTheme) => this.setState({ chosenTheme });\r\n\r\n    toggleThemeMode = (current) => {\r\n        if (current !== null) {\r\n            this.props.toggleDaylightMode();\r\n            Auth.SetPreference(\"theme_mode\", null);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const user = Auth.GetUser();\r\n        const dark = Auth.GetPreference(\"theme_mode\");\r\n\r\n        return (\r\n            <div>\r\n                <div className={classes.layout}>\r\n                    <Typography\r\n                        className={classes.sectionTitle}\r\n                        variant=\"subtitle2\"\r\n                    >\r\n                        个人资料\r\n                    </Typography>\r\n                    <Paper>\r\n                        <List className={classes.desenList}>\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    this.setState({ avatarModal: true })\r\n                                }\r\n                            >\r\n                                <ListItemAvatar>\r\n                                    <Avatar\r\n                                        src={\r\n                                            \"/api/v3/user/avatar/\" +\r\n                                            user.id +\r\n                                            \"/l\"\r\n                                        }\r\n                                    />\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary=\"头像\" />\r\n                                <ListItemSecondaryAction>\r\n                                    <RightIcon className={classes.rightIcon} />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem button>\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <PermContactCalendar />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"UID\" />\r\n\r\n                                <ListItemSecondaryAction>\r\n                                    <Typography\r\n                                        className={classes.infoTextWithIcon}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {this.state.settings.uid}\r\n                                    </Typography>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    this.setState({ nickModal: true })\r\n                                }\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <NickIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"昵称\" />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    onClick={() =>\r\n                                        this.setState({ nickModal: true })\r\n                                    }\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <Typography\r\n                                        className={classes.infoTextWithIcon}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {user.nickname}\r\n                                    </Typography>\r\n                                    <RightIcon\r\n                                        className={classes.rightIconWithText}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem button>\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <EmailIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Email\" />\r\n\r\n                                <ListItemSecondaryAction>\r\n                                    <Typography\r\n                                        className={classes.infoText}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {user.user_name}\r\n                                    </Typography>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem button>\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <GroupIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"用户组\" />\r\n\r\n                                <ListItemSecondaryAction>\r\n                                    <Typography\r\n                                        className={classes.infoText}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {user.group.name}\r\n                                    </Typography>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem button>\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <DateIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"注册时间\" />\r\n\r\n                                <ListItemSecondaryAction>\r\n                                    <Typography\r\n                                        className={classes.infoText}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {formatLocalTime(\r\n                                            user.created_at,\r\n                                            \"YYYY-MM-DD H:mm:ss\"\r\n                                        )}\r\n                                    </Typography>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Paper>\r\n                    <Typography\r\n                        className={classes.sectionTitle}\r\n                        variant=\"subtitle2\"\r\n                    >\r\n                        安全隐私\r\n                    </Typography>\r\n                    <Paper>\r\n                        <List className={classes.desenList}>\r\n                            <ListItem button>\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <HomeIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"个人主页\" />\r\n\r\n                                <ListItemSecondaryAction>\r\n                                    <Switch\r\n                                        onChange={this.handleToggle}\r\n                                        checked={this.state.settings.homepage}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    this.setState({ changePassword: true })\r\n                                }\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <LockIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"登录密码\" />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <RightIcon className={classes.rightIcon} />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem button onClick={() => this.init2FA()}>\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <VerifyIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"二步验证\" />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <Typography\r\n                                        className={classes.infoTextWithIcon}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {!this.state.settings.two_factor\r\n                                            ? \"未开启\"\r\n                                            : \"已开启\"}\r\n                                    </Typography>\r\n                                    <RightIcon\r\n                                        className={classes.rightIconWithText}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Paper>\r\n\r\n                    <Authn\r\n                        list={this.state.settings.authn}\r\n                        add={(credential) => {\r\n                            this.setState({\r\n                                settings: {\r\n                                    ...this.state.settings,\r\n                                    authn: [\r\n                                        ...this.state.settings.authn,\r\n                                        credential,\r\n                                    ],\r\n                                },\r\n                            });\r\n                        }}\r\n                        remove={(id) => {\r\n                            let credentials = [...this.state.settings.authn];\r\n                            credentials = credentials.filter((v) => {\r\n                                return v.id !== id;\r\n                            });\r\n                            this.setState({\r\n                                settings: {\r\n                                    ...this.state.settings,\r\n                                    authn: credentials,\r\n                                },\r\n                            });\r\n                        }}\r\n                    />\r\n\r\n                    <Typography\r\n                        className={classes.sectionTitle}\r\n                        variant=\"subtitle2\"\r\n                    >\r\n                        个性化\r\n                    </Typography>\r\n                    <Paper>\r\n                        <List className={classes.desenList}>\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    this.setState({ changeTheme: true })\r\n                                }\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <ColorIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"主题配色\" />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <div className={classes.firstColor}></div>\r\n                                    <div className={classes.secondColor}></div>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem\r\n                                button\r\n                                onClick={() => this.toggleThemeMode(dark)}\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <Brightness3 />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"黑暗模式\" />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <Typography\r\n                                        className={classes.infoTextWithIcon}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {dark &&\r\n                                            (dark === \"dark\"\r\n                                                ? \"偏好开启\"\r\n                                                : \"偏好关闭\")}\r\n                                        {dark === null && \"跟随系统\"}\r\n                                    </Typography>\r\n                                    <RightIcon\r\n                                        className={classes.rightIconWithText}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem\r\n                                button\r\n                                onClick={() => this.toggleViewMethod()}\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <ListAlt />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"文件列表\" />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <Typography\r\n                                        className={classes.infoTextWithIcon}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {this.props.viewMethod === \"icon\" &&\r\n                                            \"大图标\"}\r\n                                        {this.props.viewMethod === \"list\" &&\r\n                                            \"列表\"}\r\n                                        {this.props.viewMethod ===\r\n                                            \"smallIcon\" && \"小图标\"}\r\n                                    </Typography>\r\n                                    <RightIcon\r\n                                        className={classes.rightIconWithText}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                            <ListItem\r\n                                onClick={() =>\r\n                                    this.setState({ changeTimeZone: true })\r\n                                }\r\n                                button\r\n                            >\r\n                                <ListItemIcon className={classes.iconFix}>\r\n                                    <Schedule />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"时区\" />\r\n\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.flexContainer}\r\n                                >\r\n                                    <Typography\r\n                                        className={classes.infoTextWithIcon}\r\n                                        color=\"textSecondary\"\r\n                                    >\r\n                                        {timeZone}\r\n                                    </Typography>\r\n                                    <RightIcon\r\n                                        className={classes.rightIconWithText}\r\n                                    />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Paper>\r\n                    {user.group.webdav && (\r\n                        <div>\r\n                            <Typography\r\n                                className={classes.sectionTitle}\r\n                                variant=\"subtitle2\"\r\n                            >\r\n                                WebDAV\r\n                            </Typography>\r\n                            <Paper>\r\n                                <List className={classes.desenList}>\r\n                                    <ListItem\r\n                                        button\r\n                                        onClick={() =>\r\n                                            this.setState({\r\n                                                showWebDavUrl: true,\r\n                                            })\r\n                                        }\r\n                                    >\r\n                                        <ListItemIcon\r\n                                            className={classes.iconFix}\r\n                                        >\r\n                                            <LinkIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"连接地址\" />\r\n\r\n                                        <ListItemSecondaryAction\r\n                                            className={classes.flexContainer}\r\n                                        >\r\n                                            <RightIcon\r\n                                                className={classes.rightIcon}\r\n                                            />\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                    <ListItem\r\n                                        button\r\n                                        onClick={() =>\r\n                                            this.setState({\r\n                                                showWebDavUserName: true,\r\n                                            })\r\n                                        }\r\n                                    >\r\n                                        <ListItemIcon\r\n                                            className={classes.iconFix}\r\n                                        >\r\n                                            <InputIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"用户名\" />\r\n\r\n                                        <ListItemSecondaryAction\r\n                                            className={classes.flexContainer}\r\n                                        >\r\n                                            <RightIcon\r\n                                                className={classes.rightIcon}\r\n                                            />\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                    <ListItem\r\n                                        button\r\n                                        onClick={() =>\r\n                                            this.props.history.push(\"/webdav?\")\r\n                                        }\r\n                                    >\r\n                                        <ListItemIcon\r\n                                            className={classes.iconFix}\r\n                                        >\r\n                                            <SecurityIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary=\"账号管理\" />\r\n\r\n                                        <ListItemSecondaryAction\r\n                                            className={classes.flexContainer}\r\n                                        >\r\n                                            <RightIcon\r\n                                                className={classes.rightIcon}\r\n                                            />\r\n                                        </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                </List>\r\n                            </Paper>\r\n                        </div>\r\n                    )}\r\n                    <div className={classes.paddingBottom}></div>\r\n                </div>\r\n                <TimeZoneDialog\r\n                    onClose={() => this.setState({ changeTimeZone: false })}\r\n                    open={this.state.changeTimeZone}\r\n                />\r\n                <Dialog\r\n                    open={this.state.avatarModal}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle>修改头像</DialogTitle>\r\n                    <List>\r\n                        <ListItem\r\n                            button\r\n                            component=\"label\"\r\n                            disabled={this.state.loading === \"avatar\"}\r\n                        >\r\n                            <input\r\n                                type=\"file\"\r\n                                accept=\"image/*\"\r\n                                style={{ display: \"none\" }}\r\n                                ref={this.fileInput}\r\n                                onChange={this.uploadAvatar}\r\n                            />\r\n                            <ListItemAvatar>\r\n                                <Avatar className={classes.uploadFromFile}>\r\n                                    <PhotoIcon />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary=\"从文件上传\" />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            button\r\n                            onClick={this.useGravatar}\r\n                            disabled={this.state.loading === \"gravatar\"}\r\n                        >\r\n                            <ListItemAvatar>\r\n                                <Avatar className={classes.userGravatar}>\r\n                                    <FingerprintIcon />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                className={classes.paddingText}\r\n                                primary=\"使用 Gravatar 头像 \"\r\n                            />\r\n                        </ListItem>\r\n                    </List>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            取消\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog open={this.state.nickModal} onClose={this.handleClose}>\r\n                    <DialogTitle>修改昵称</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            id=\"standard-name\"\r\n                            label=\"昵称\"\r\n                            className={classes.textField}\r\n                            value={this.state.nick}\r\n                            onChange={this.handleChange(\"nick\")}\r\n                            margin=\"normal\"\r\n                            autoFocus\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"default\">\r\n                            取消\r\n                        </Button>\r\n                        <Button\r\n                            onClick={this.changeNick}\r\n                            color=\"primary\"\r\n                            disabled={\r\n                                this.state.loading === \"nick\" ||\r\n                                this.state.nick === \"\"\r\n                            }\r\n                        >\r\n                            保存\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.state.changePassword}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle>修改登录密码</DialogTitle>\r\n                    <DialogContent>\r\n                        <div>\r\n                            <TextField\r\n                                id=\"standard-name\"\r\n                                label=\"原密码\"\r\n                                type=\"password\"\r\n                                className={classes.textField}\r\n                                value={this.state.oldPwd}\r\n                                onChange={this.handleChange(\"oldPwd\")}\r\n                                margin=\"normal\"\r\n                                autoFocus\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <TextField\r\n                                id=\"standard-name\"\r\n                                label=\"新密码\"\r\n                                type=\"password\"\r\n                                className={classes.textField}\r\n                                value={this.state.newPwd}\r\n                                onChange={this.handleChange(\"newPwd\")}\r\n                                margin=\"normal\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <TextField\r\n                                id=\"standard-name\"\r\n                                label=\"确认新密码\"\r\n                                type=\"password\"\r\n                                className={classes.textField}\r\n                                value={this.state.newPwdRepeat}\r\n                                onChange={this.handleChange(\"newPwdRepeat\")}\r\n                                margin=\"normal\"\r\n                            />\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"default\">\r\n                            取消\r\n                        </Button>\r\n                        <Button\r\n                            onClick={this.changhePwd}\r\n                            color=\"primary\"\r\n                            disabled={\r\n                                this.state.loading === \"changePassword\" ||\r\n                                this.state.oldPwd === \"\" ||\r\n                                this.state.newPwdRepeat === \"\" ||\r\n                                this.state.newPwd === \"\"\r\n                            }\r\n                        >\r\n                            保存\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog open={this.state.twoFactor} onClose={this.handleClose}>\r\n                    <DialogTitle>\r\n                        {this.state.settings.two_factor ? \"关闭\" : \"启用\"}\r\n                        二步验证\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <div className={classes.flexContainerResponse}>\r\n                            {!this.state.settings.two_factor && (\r\n                                <div className={classes.qrcode}>\r\n                                    <QRCode\r\n                                        value={\r\n                                            \"otpauth://totp/\" +\r\n                                            this.props.title +\r\n                                            \"?secret=\" +\r\n                                            this.state.two_fa_secret\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                            )}\r\n\r\n                            <div className={classes.desText}>\r\n                                {!this.state.settings.two_factor && (\r\n                                    <Typography>\r\n                                        请使用任意二步验证APP或者支持二步验证的密码管理软件扫描左侧二维码添加本站。扫描完成后请填写二步验证APP给出的6位验证码以开启二步验证。\r\n                                    </Typography>\r\n                                )}\r\n                                {this.state.settings.two_factor && (\r\n                                    <Typography>\r\n                                        请验证当前二步验证代码。\r\n                                    </Typography>\r\n                                )}\r\n                                <TextField\r\n                                    id=\"standard-name\"\r\n                                    label=\"6位验证码\"\r\n                                    type=\"number\"\r\n                                    className={classes.textField}\r\n                                    value={this.state.authCode}\r\n                                    onChange={this.handleChange(\"authCode\")}\r\n                                    margin=\"normal\"\r\n                                    autoFocus\r\n                                    fullWidth\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"default\">\r\n                            取消\r\n                        </Button>\r\n                        <Button\r\n                            onClick={this.twoFactor}\r\n                            color=\"primary\"\r\n                            disabled={\r\n                                this.state.loading === \"twoFactor\" ||\r\n                                this.state.authCode === \"\"\r\n                            }\r\n                        >\r\n                            {this.state.settings.two_factor ? \"关闭\" : \"启用\"}\r\n                            二步验证\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.state.changeTheme}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle>更改主题配色</DialogTitle>\r\n                    <DialogContent>\r\n                        <ToggleButtonGroup\r\n                            value={this.state.chosenTheme}\r\n                            exclusive\r\n                            onChange={this.handleAlignment}\r\n                        >\r\n                            {Object.keys(this.state.settings.themes).map(\r\n                                (value, key) => (\r\n                                    <ToggleButton value={value} key={key}>\r\n                                        <div\r\n                                            className={classes.themeBlock}\r\n                                            style={{ backgroundColor: value }}\r\n                                        />\r\n                                    </ToggleButton>\r\n                                )\r\n                            )}\r\n                        </ToggleButtonGroup>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"default\">\r\n                            取消\r\n                        </Button>\r\n                        <Button\r\n                            onClick={this.changeTheme}\r\n                            color=\"primary\"\r\n                            disabled={\r\n                                this.state.loading === \"changeTheme\" ||\r\n                                this.state.chosenTheme === null\r\n                            }\r\n                        >\r\n                            保存\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.state.showWebDavUrl}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle>WebDAV连接地址</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            id=\"standard-name\"\r\n                            className={classes.textField}\r\n                            value={window.location.origin + \"/dav\"}\r\n                            margin=\"normal\"\r\n                            autoFocus\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"default\">\r\n                            关闭\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.state.showWebDavUserName}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <DialogTitle>WebDAV用户名</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            id=\"standard-name\"\r\n                            className={classes.textField}\r\n                            value={user.user_name}\r\n                            margin=\"normal\"\r\n                            autoFocus\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"default\">\r\n                            关闭\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst UserSetting = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(UserSettingCompoment)));\r\n\r\nexport default UserSetting;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport RegIcon from \"@material-ui/icons/AssignmentIndOutlined\";\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Divider,\r\n    FormControl,\r\n    Input,\r\n    InputLabel,\r\n    Link,\r\n    makeStyles,\r\n    Paper,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { toggleSnackbar } from \"../../actions/index\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport API from \"../../middleware/Api\";\r\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\r\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"110px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: 400,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: 110,\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\r\n            3\r\n        )}px`,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: \"100%\", // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    link: {\r\n        marginTop: \"20px\",\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    captchaContainer: {\r\n        display: \"flex\",\r\n        marginTop: \"10px\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"block\",\r\n        },\r\n    },\r\n    captchaPlaceholder: {\r\n        width: 200,\r\n    },\r\n    buttonContainer: {\r\n        display: \"flex\",\r\n    },\r\n    authnLink: {\r\n        textAlign: \"center\",\r\n        marginTop: 16,\r\n    },\r\n    avatarSuccess: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\nfunction Register() {\r\n    const [input, setInput] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        password_repeat: \"\",\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    const [emailActive, setEmailActive] = useState(false);\r\n\r\n    const title = useSelector((state) => state.siteConfig.title);\r\n    const regCaptcha = useSelector((state) => state.siteConfig.regCaptcha);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const history = useHistory();\r\n\r\n    const handleInputChange = (name) => (e) => {\r\n        setInput({\r\n            ...input,\r\n            [name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const {\r\n        captchaLoading,\r\n        isValidate,\r\n        validate,\r\n        CaptchaRender,\r\n        captchaRefreshRef,\r\n        captchaParamsRef,\r\n    } = useCaptcha();\r\n    const classes = useStyles();\r\n\r\n    const register = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (input.password !== input.password_repeat) {\r\n            ToggleSnackbar(\"top\", \"right\", \"两次密码输入不一致\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        if (!isValidate.current.isValidate && regCaptcha) {\r\n            validate(() => register(e), setLoading);\r\n            return;\r\n        }\r\n        API.post(\"/user\", {\r\n            userName: input.email,\r\n            Password: input.password,\r\n            ...captchaParamsRef.current,\r\n        })\r\n            .then((response) => {\r\n                setLoading(false);\r\n                if (response.rawData.code === 203) {\r\n                    setEmailActive(true);\r\n                } else {\r\n                    history.push(\"/login?username=\" + input.email);\r\n                    ToggleSnackbar(\"top\", \"right\", \"注册成功\", \"success\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\r\n                captchaRefreshRef.current();\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <>\r\n                {!emailActive && (\r\n                    <Paper className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <RegIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            注册 {title}\r\n                        </Typography>\r\n\r\n                        <form className={classes.form} onSubmit={register}>\r\n                            <FormControl margin=\"normal\" required fullWidth>\r\n                                <InputLabel htmlFor=\"email\">\r\n                                    电子邮箱\r\n                                </InputLabel>\r\n                                <Input\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    onChange={handleInputChange(\"email\")}\r\n                                    autoComplete\r\n                                    value={input.email}\r\n                                    autoFocus\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl margin=\"normal\" required fullWidth>\r\n                                <InputLabel htmlFor=\"password\">密码</InputLabel>\r\n                                <Input\r\n                                    name=\"password\"\r\n                                    onChange={handleInputChange(\"password\")}\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    value={input.password}\r\n                                    autoComplete\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl margin=\"normal\" required fullWidth>\r\n                                <InputLabel htmlFor=\"password\">\r\n                                    确认密码\r\n                                </InputLabel>\r\n                                <Input\r\n                                    name=\"pwdRepeat\"\r\n                                    onChange={handleInputChange(\r\n                                        \"password_repeat\"\r\n                                    )}\r\n                                    type=\"password\"\r\n                                    id=\"pwdRepeat\"\r\n                                    value={input.password_repeat}\r\n                                    autoComplete\r\n                                />\r\n                            </FormControl>\r\n                            {regCaptcha && <CaptchaRender />}\r\n\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={\r\n                                    loading ||\r\n                                    (regCaptcha ? captchaLoading : false)\r\n                                }\r\n                                className={classes.submit}\r\n                            >\r\n                                注册账号\r\n                            </Button>\r\n                        </form>\r\n\r\n                        <Divider />\r\n                        <div className={classes.link}>\r\n                            <div>\r\n                                <Link href={\"/login\"}>返回登录</Link>\r\n                            </div>\r\n                            <div>\r\n                                <Link href={\"/forget\"}>忘记密码</Link>\r\n                            </div>\r\n                        </div>\r\n                    </Paper>\r\n                )}\r\n                {emailActive && (\r\n                    <Paper className={classes.paper}>\r\n                        <Avatar className={classes.avatarSuccess}>\r\n                            <EmailIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            邮件激活\r\n                        </Typography>\r\n                        <Typography style={{ marginTop: \"10px\" }}>\r\n                            一封激活邮件已经发送至您的邮箱，请访问邮件中的链接以继续完成注册。\r\n                        </Typography>\r\n                    </Paper>\r\n                )}\r\n            </>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useCallback, useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { toggleSnackbar } from \"../../actions/index\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport API from \"../../middleware/Api\";\r\nimport { Button, Paper, Avatar, Typography } from \"@material-ui/core\";\r\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\r\nimport { useLocation } from \"react-router\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"110px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: 400,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: 110,\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\r\n            3\r\n        )}px`,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction Activation() {\r\n    const query = useQuery();\r\n    const location = useLocation();\r\n\r\n    const [success, setSuccess] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const history = useHistory();\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        API.get(\r\n            \"/user/activate/\" + query.get(\"id\") + \"?sign=\" + query.get(\"sign\")\r\n        )\r\n            .then((response) => {\r\n                setEmail(response.data);\r\n                setSuccess(true);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\r\n                history.push(\"/login\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, [location]);\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            {success && (\r\n                <Paper className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <EmailIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        激活成功\r\n                    </Typography>\r\n                    <Typography style={{ marginTop: \"20px\" }}>\r\n                        您的账号已被成功激活。\r\n                    </Typography>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={() => history.push(\"/login?username=\" + email)}\r\n                    >\r\n                        返回登录\r\n                    </Button>\r\n                </Paper>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Activation;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { toggleSnackbar } from \"../../actions/index\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport API from \"../../middleware/Api\";\r\nimport {\r\n    Button,\r\n    FormControl,\r\n    Divider,\r\n    Link,\r\n    Input,\r\n    InputLabel,\r\n    Paper,\r\n    Avatar,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { useLocation } from \"react-router\";\r\nimport KeyIcon from \"@material-ui/icons/VpnKeyOutlined\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"110px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: 400,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: 110,\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\r\n            3\r\n        )}px`,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    link: {\r\n        marginTop: \"20px\",\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n}));\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nfunction ResetForm() {\r\n    const query = useQuery();\r\n    const [input, setInput] = useState({\r\n        password: \"\",\r\n        password_repeat: \"\",\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    const handleInputChange = (name) => (e) => {\r\n        setInput({\r\n            ...input,\r\n            [name]: e.target.value,\r\n        });\r\n    };\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const history = useHistory();\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        if (input.password !== input.password_repeat) {\r\n            ToggleSnackbar(\"top\", \"right\", \"两次密码输入不一致\", \"warning\");\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        API.patch(\"/user/reset\", {\r\n            secret: query.get(\"sign\"),\r\n            id: query.get(\"id\"),\r\n            Password: input.password,\r\n        })\r\n            .then(() => {\r\n                setLoading(false);\r\n                history.push(\"/login\");\r\n                ToggleSnackbar(\"top\", \"right\", \"密码已重设\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <Paper className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <KeyIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    找回密码\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={submit}>\r\n                    <FormControl margin=\"normal\" required fullWidth>\r\n                        <InputLabel htmlFor=\"email\">新密码</InputLabel>\r\n                        <Input\r\n                            id=\"pwd\"\r\n                            type=\"password\"\r\n                            name=\"pwd\"\r\n                            onChange={handleInputChange(\"password\")}\r\n                            autoComplete\r\n                            value={input.password}\r\n                            autoFocus\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl margin=\"normal\" required fullWidth>\r\n                        <InputLabel htmlFor=\"email\">重复新密码</InputLabel>\r\n                        <Input\r\n                            id=\"pwdRepeat\"\r\n                            type=\"password\"\r\n                            name=\"pwdRepeat\"\r\n                            onChange={handleInputChange(\"password_repeat\")}\r\n                            autoComplete\r\n                            value={input.password_repeat}\r\n                            autoFocus\r\n                        />\r\n                    </FormControl>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={loading}\r\n                        className={classes.submit}\r\n                    >\r\n                        重设密码\r\n                    </Button>{\" \"}\r\n                </form>{\" \"}\r\n                <Divider />\r\n                <div className={classes.link}>\r\n                    <div>\r\n                        <Link href={\"/#/login\"}>返回登录</Link>\r\n                    </div>\r\n                    <div>\r\n                        <Link href={\"/#/signup\"}>注册账号</Link>\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetForm;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Divider,\r\n    FormControl,\r\n    Input,\r\n    InputLabel,\r\n    Link,\r\n    makeStyles,\r\n    Paper,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { toggleSnackbar } from \"../../actions/index\";\r\nimport API from \"../../middleware/Api\";\r\nimport KeyIcon from \"@material-ui/icons/VpnKeyOutlined\";\r\nimport { useCaptcha } from \"../../hooks/useCaptcha\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    layout: {\r\n        width: \"auto\",\r\n        marginTop: \"110px\",\r\n        marginLeft: theme.spacing(3),\r\n        marginRight: theme.spacing(3),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: 400,\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n        },\r\n        marginBottom: 110,\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\r\n            3\r\n        )}px`,\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    captchaContainer: {\r\n        display: \"flex\",\r\n        marginTop: \"10px\",\r\n    },\r\n    captchaPlaceholder: {\r\n        width: 200,\r\n    },\r\n    link: {\r\n        marginTop: \"20px\",\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n}));\r\n\r\nfunction Reset() {\r\n    const [input, setInput] = useState({\r\n        email: \"\",\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    const forgetCaptcha = useSelector(\r\n        (state) => state.siteConfig.forgetCaptcha\r\n    );\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const handleInputChange = (name) => (e) => {\r\n        setInput({\r\n            ...input,\r\n            [name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const {\r\n        captchaLoading,\r\n        isValidate,\r\n        validate,\r\n        CaptchaRender,\r\n        captchaRefreshRef,\r\n        captchaParamsRef,\r\n    } = useCaptcha();\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        if (!isValidate.current.isValidate && forgetCaptcha) {\r\n            validate(() => submit(e), setLoading);\r\n            return;\r\n        }\r\n        API.post(\"/user/reset\", {\r\n            userName: input.email,\r\n            ...captchaParamsRef.current,\r\n        })\r\n            .then(() => {\r\n                setLoading(false);\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"密码重置邮件已发送，请注意查收\",\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\r\n                captchaRefreshRef.current();\r\n            });\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.layout}>\r\n            <Paper className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <KeyIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    找回密码\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={submit}>\r\n                    <FormControl margin=\"normal\" required fullWidth>\r\n                        <InputLabel htmlFor=\"email\">注册邮箱</InputLabel>\r\n                        <Input\r\n                            id=\"email\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            onChange={handleInputChange(\"email\")}\r\n                            autoComplete\r\n                            value={input.email}\r\n                            autoFocus\r\n                        />\r\n                    </FormControl>\r\n                    {forgetCaptcha && <CaptchaRender />}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={\r\n                            loading || (forgetCaptcha ? captchaLoading : false)\r\n                        }\r\n                        className={classes.submit}\r\n                    >\r\n                        发送密码重置邮件\r\n                    </Button>{\" \"}\r\n                </form>{\" \"}\r\n                <Divider />\r\n                <div className={classes.link}>\r\n                    <div>\r\n                        <Link href={\"/login\"}>返回登录</Link>\r\n                    </div>\r\n                    <div>\r\n                        <Link href={\"/signup\"}>注册账号</Link>\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Reset;\r\n","import {\r\n    Button, Dialog,\r\n    DialogActions,\r\n    DialogContent, DialogTitle, withStyles\r\n} from \"@material-ui/core\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {Slider,List,Grid} from '@material-ui/core';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MusicNote from '@material-ui/icons/MusicNote';\r\nimport PlayArrow from '@material-ui/icons/PlayArrow';\r\nimport PlayNext from '@material-ui/icons/SkipNext';\r\nimport PlayPrev from '@material-ui/icons/SkipPrevious';\r\nimport Pause from '@material-ui/icons/Pause';\r\nimport {Repeat, RepeatOne, Shuffle} from '@material-ui/icons';\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { showAudioPreview ,audioPreviewSetIsOpen, audioPreviewSetPlaying} from \"../../actions/index\";\r\nimport { audioPreviewSuffix } from \"../../config\";\r\nimport { baseURL } from \"../../middleware/Api\";\r\nimport * as explorer from \"../../redux/explorer/reducer\";\r\nimport pathHelper from \"../../utils/page\";\r\n\r\n\r\n\r\nconst styles = (theme) => ({  \r\n    list: {\r\n        //maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n        position: 'relative',\r\n        overflow: 'auto',\r\n        maxHeight: 300,\r\n    },\r\n    slider_root:{\r\n        \"vertical-align\": \"middle\",\r\n    },\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        first: state.explorer.audioPreview.first,\r\n        other: state.explorer.audioPreview.other,\r\n        isOpen:state.explorer.audioPreview.isOpen,\r\n        playingName:state.explorer.audioPreview.playingName,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        showAudioPreview: (first) => {\r\n            dispatch(showAudioPreview(first));\r\n        },\r\n        audioPreviewSetIsOpen: (first) => {\r\n            dispatch(audioPreviewSetIsOpen(first));\r\n        },\r\n        audioPreviewSetPlaying: (playingName,paused) => {\r\n            dispatch(audioPreviewSetPlaying(playingName,paused));\r\n        },\r\n    };\r\n};\r\n\r\nclass MusicPlayerComponent extends Component {\r\n    state = {\r\n        items: [],\r\n        currentIndex: 0,\r\n        //isOpen: false,\r\n        //isPlay:false,\r\n        currentTime:0,\r\n        duration:0,\r\n        progressText:'00:00/00:00',\r\n        looptype:0,\r\n    };\r\n    myAudioRef = React.createRef();  \r\n\r\n    UNSAFE_componentWillReceiveProps = (nextProps) => {\r\n        const items = [];\r\n        let firstOne = 0;\r\n        if (nextProps.first.id !== \"\") {\r\n            if (\r\n                pathHelper.isSharePage(this.props.location.pathname) &&\r\n                !nextProps.first.path\r\n            ) {\r\n                const newItem = {\r\n                    intro: nextProps.first.name,\r\n                    src: baseURL + \"/share/preview/\" + nextProps.first.key,\r\n                };\r\n                firstOne = 0;\r\n                items.push(newItem);\r\n                this.setState({\r\n                    currentIndex: firstOne,\r\n                    items: items,\r\n                    //isOpen: true,\r\n                });\r\n                this.props.audioPreviewSetIsOpen(true);\r\n                return;\r\n            }\r\n            // eslint-disable-next-line\r\n            nextProps.other.map((value) => {\r\n                const fileType = value.name.split(\".\").pop().toLowerCase();\r\n                if (audioPreviewSuffix.indexOf(fileType) !== -1) {\r\n                    let src = \"\";\r\n                    if (pathHelper.isSharePage(this.props.location.pathname)) {\r\n                        src = baseURL + \"/share/preview/\" + value.key;\r\n                        src =\r\n                            src +\r\n                            \"?path=\" +\r\n                            encodeURIComponent(\r\n                                value.path === \"/\"\r\n                                    ? value.path + value.name\r\n                                    : value.path + \"/\" + value.name\r\n                            );\r\n                    } else {\r\n                        src = baseURL + \"/file/preview/\" + value.id;\r\n                    }\r\n                    const newItem = {\r\n                        intro: value.name,\r\n                        src: src,\r\n                    };\r\n                    if (\r\n                        value.path === nextProps.first.path &&\r\n                        value.name === nextProps.first.name\r\n                    ) {\r\n                        firstOne = items.length;\r\n                    }\r\n                    items.push(newItem);\r\n                }\r\n            });\r\n            this.setState({\r\n                currentIndex: firstOne,\r\n                items: items,\r\n                //isOpen: true,\r\n            });\r\n            this.props.audioPreviewSetIsOpen(true);\r\n            this.props.showAudioPreview(explorer.initState.audioPreview.first);\r\n        }        \r\n    };\r\n\r\n    handleItemClick = (currentIndex) => () => {\r\n        this.setState({\r\n            currentIndex: currentIndex,\r\n        });\r\n    };\r\n    \r\n\r\n    handleClose = () => {\r\n        /*this.setState({\r\n            isOpen: false,\r\n        });*/\r\n        this.setState({\r\n            currentIndex: -1,\r\n        });\r\n        this.pause();\r\n        this.props.audioPreviewSetPlaying(null,false);\r\n        this.props.audioPreviewSetIsOpen(false);\r\n    };\r\n    backgroundPlay = () => {        \r\n        this.props.audioPreviewSetIsOpen(false);\r\n    };\r\n\r\n    componentDidMount() {\r\n        if(this.myAudioRef.current){\r\n            this.bindEvents(this.myAudioRef.current);\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        if(this.myAudioRef.current){\r\n            this.bindEvents(this.myAudioRef.current);\r\n        }\r\n    }    \r\n    componentWillUnmount() {\r\n        this.unbindEvents(this.myAudioRef.current)\r\n    }\r\n\r\n    bindEvents=(ele)=>{\r\n        if(ele){\r\n            ele.addEventListener('canplay', this.readyPlay)\r\n            ele.addEventListener('ended', this.loopnext)\r\n            ele.addEventListener('timeupdate', this.timeUpdate)\r\n        }\r\n    };\r\n\r\n    unbindEvents=(ele)=> {\r\n        if(ele){\r\n            ele.removeEventListener('canplay', this.readyPlay)\r\n            ele.removeEventListener('ended', this.loopnext)\r\n            ele.removeEventListener('timeupdate', this.timeUpdate)\r\n        }\r\n    };\r\n\r\n    readyPlay = () => {\r\n        this.play();\r\n    };\r\n\r\n    formatTime = s => {\r\n        if(isNaN(s))return \"00:00\";\r\n        const minute = Math.floor(s / 60);\r\n        const second = Math.floor(s % 60);\r\n        return `${minute}`.padStart(2,'0')+':'+`${second}`.padStart(2,'0');\r\n    }\r\n\r\n    timeUpdate = () => {\r\n        const currentTime=Math.floor(this.myAudioRef.current.currentTime);//this.myAudioRef.current.currentTime;//\r\n        this.setState({\r\n            currentTime: currentTime,\r\n            duration: this.myAudioRef.current.duration,\r\n            progressText: this.formatTime(currentTime)+'/'+this.formatTime(this.myAudioRef.current.duration)\r\n        });\r\n    }\r\n\r\n    play = () => {\r\n       this.myAudioRef.current.play();\r\n       /*this.setState({\r\n            isPlay: true\r\n        });*/\r\n        this.props.audioPreviewSetPlaying(this.state.items[this.state.currentIndex].intro,false);\r\n    };\r\n\r\n    pause = () => {\r\n        if(this.myAudioRef.current){\r\n            this.myAudioRef.current.pause();\r\n        }\r\n        /*this.setState({\r\n            isPlay: false\r\n        })*/\r\n        this.props.audioPreviewSetPlaying(this.state.items[this.state.currentIndex]?.intro,true);\r\n    };\r\n\r\n    playOrPaues = () => {\r\n        if (this.state.isPlay) {\r\n            this.pause()\r\n        } else {\r\n            this.play()\r\n        }\r\n    };\r\n    changeLoopType=()=>{\r\n        let lt=this.state.looptype+1;\r\n        if(lt>=3){\r\n            lt=0;\r\n        }\r\n        this.setState({\r\n            looptype: lt,\r\n        });\r\n    };\r\n    loopnext=()=>{\r\n        let index = this.state.currentIndex;\r\n        if(this.state.looptype==0){//all\r\n            index=index+1;\r\n            if (index >= this.state.items.length) {\r\n                index =  0;\r\n            }\r\n        }else if(this.state.looptype==1){//single\r\n            //index=index;\r\n        }else if(this.state.looptype==2){//random\r\n            if(this.state.items.length<=2){\r\n                index=index+1;\r\n                if (index >= this.state.items.length) {\r\n                    index =  0;\r\n                }\r\n            }else{\r\n                while(index==this.state.currentIndex){\r\n                    index=Math.floor(Math.random()*this.state.items.length);\r\n                }\r\n            }\r\n        }\r\n        if(this.state.currentIndex==index){\r\n            this.myAudioRef.current.currentTime=0;\r\n            this.play();\r\n        }\r\n        this.setState({\r\n            currentIndex: index,\r\n        });\r\n    }\r\n\r\n    prev = () => {\r\n        let index = this.state.currentIndex - 1\r\n        if (index < 0) {\r\n            index = this.state.items.length - 1\r\n        }\r\n        this.setState({\r\n            currentIndex: index,\r\n        });\r\n    };\r\n    \r\n    next = () => {\r\n        let index = this.state.currentIndex + 1\r\n        if (index >= this.state.items.length) {\r\n            index =  0;\r\n        }\r\n        this.setState({\r\n            currentIndex: index,\r\n        });\r\n    };\r\n\r\n    handleProgress = (e, newValue) => {\r\n        this.myAudioRef.current.currentTime=newValue;\r\n    }\r\n      \r\n\r\n    render() {\r\n        const { currentIndex, items } = this.state;\r\n        const { isOpen,classes } = this.props;\r\n        return (            \r\n            <Dialog\r\n                open={isOpen}\r\n                onClose={this.backgroundPlay}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                maxWidth=\"xs\"\r\n                fullWidth\r\n                keepMounted\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">音频播放</DialogTitle>\r\n                <DialogContent>\r\n                    <List className={classes.list} dense>\r\n                        {items.map((value,idx) => {\r\n                            const labelId = `label-${value.intro}`;\r\n                            return (\r\n                                <ListItem key={value.src} dense button onClick={this.handleItemClick(idx)}\r\n                                    selected={idx==currentIndex}>\r\n                                    <ListItemIcon>\r\n                                        {\r\n                                            idx==currentIndex?(<PlayArrow/>):(<MusicNote/>)\r\n                                        }\r\n                                    </ListItemIcon>\r\n                                    <ListItemText id={labelId} primary={`${value.intro}`} />\r\n                                </ListItem>\r\n                            );\r\n                        })}\r\n                    </List>\r\n                    <audio ref={this.myAudioRef}                                 \r\n                        src={items[currentIndex]?.src}\r\n                        />\r\n                    <div style={{\"padding-top\":8}}></div>\r\n                    <Grid container spacing={2} alignItems=\"center\">\r\n                        <Grid item xs>\r\n                        <Slider classes={{\"root\":classes.slider_root}}\r\n                            value={this.state.currentTime}\r\n                            onChange={this.handleProgress}\r\n                            step={1}\r\n                            min={0}\r\n                            max={this.state.duration}\r\n                            aria-labelledby=\"continuous-slider\" />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {this.state.progressText}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={2} justifyContent=\"center\" justify=\"center\">\r\n                        <Grid item>\r\n                            <IconButton edge=\"end\" aria-label=\"\" onClick={this.changeLoopType}>\r\n                                {\r\n                                    this.state.looptype==0?(<Repeat/>):(this.state.looptype==1?(<RepeatOne/>):(<Shuffle />))\r\n                                }\r\n                            </IconButton>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <IconButton edge=\"end\" aria-label=\"\" onClick={this.prev}>\r\n                                <PlayPrev />\r\n                            </IconButton>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <IconButton edge=\"end\" aria-label=\"\" onClick={this.pause}>\r\n                                <Pause />\r\n                            </IconButton>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <IconButton edge=\"end\" aria-label=\"\" onClick={this.play}>\r\n                                <PlayArrow />\r\n                            </IconButton>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <IconButton edge=\"end\" aria-label=\"\" onClick={this.next}>\r\n                                <PlayNext />\r\n                            </IconButton>\r\n                        </Grid>                                \r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleClose}>退出播放</Button>\r\n                    <Button onClick={this.backgroundPlay}>后台播放</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nMusicPlayerComponent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst MusicPlayer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(withRouter(MusicPlayerComponent)));\r\n\r\nexport default MusicPlayer;\r\n","import React, { Suspense } from \"react\";\r\nimport AuthRoute from \"./middleware/AuthRoute\";\r\nimport Navbar from \"./component/Navbar/Navbar.js\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport AlertBar from \"./component/Common/Snackbar\";\r\nimport { createMuiTheme, lighten } from \"@material-ui/core/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect, Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport Auth from \"./middleware/Auth\";\r\nimport { CssBaseline, makeStyles, ThemeProvider } from \"@material-ui/core\";\r\nimport { changeThemeColor } from \"./utils\";\r\nimport NotFound from \"./component/Share/NotFound\";\r\n// Lazy loads\r\nimport LoginForm from \"./component/Login/LoginForm\";\r\nimport FileManager from \"./component/FileManager/FileManager.js\";\r\nimport VideoPreview from \"./component/Viewer/Video.js\";\r\nimport SearchResult from \"./component/Share/SearchResult\";\r\nimport MyShare from \"./component/Share/MyShare\";\r\nimport Download from \"./component/Download/Download\";\r\nimport SharePreload from \"./component/Share/SharePreload\";\r\nimport DocViewer from \"./component/Viewer/Doc\";\r\nimport TextViewer from \"./component/Viewer/Text\";\r\nimport WebDAV from \"./component/Setting/WebDAV\";\r\nimport Tasks from \"./component/Setting/Tasks\";\r\nimport Profile from \"./component/Setting/Profile\";\r\nimport UserSetting from \"./component/Setting/UserSetting\";\r\nimport Register from \"./component/Login/Register\";\r\nimport Activation from \"./component/Login/Activication\";\r\nimport ResetForm from \"./component/Login/ResetForm\";\r\nimport Reset from \"./component/Login/Reset\";\r\nimport PageLoading from \"./component/Placeholder/PageLoading\";\r\nimport CodeViewer from \"./component/Viewer/Code\";\r\nimport MusicPlayer from \"./component/FileManager/MusicPlayer\";\r\n\r\nconst PDFViewer = React.lazy(() =>\r\n    import(/* webpackChunkName: \"pdf\" */ \"./component/Viewer/PDF\")\r\n);\r\n\r\nexport default function App() {\r\n    const themeConfig = useSelector((state) => state.siteConfig.theme);\r\n    const isLogin = useSelector((state) => state.viewUpdate.isLogin);\r\n    const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\r\n\r\n    const theme = React.useMemo(() => {\r\n        themeConfig.palette.type = prefersDarkMode ? \"dark\" : \"light\";\r\n        const prefer = Auth.GetPreference(\"theme_mode\");\r\n        if (prefer) {\r\n            themeConfig.palette.type = prefer;\r\n        }\r\n        const theme = createMuiTheme({\r\n            ...themeConfig,\r\n            palette: {\r\n                ...themeConfig.palette,\r\n                primary: {\r\n                    ...themeConfig.palette.primary,\r\n                    main:\r\n                        themeConfig.palette.type === \"dark\"\r\n                            ? lighten(themeConfig.palette.primary.main, 0.3)\r\n                            : themeConfig.palette.primary.main,\r\n                },\r\n            },\r\n        });\r\n        changeThemeColor(\r\n            themeConfig.palette.type === \"dark\"\r\n                ? theme.palette.background.default\r\n                : theme.palette.primary.main\r\n        );\r\n        return theme;\r\n    }, [prefersDarkMode, themeConfig]);\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            display: \"flex\",\r\n        },\r\n        content: {\r\n            flexGrow: 1,\r\n            padding: theme.spacing(0),\r\n            minWidth: 0,\r\n        },\r\n        toolbar: theme.mixins.toolbar,\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    const { path } = useRouteMatch();\r\n    return (\r\n        <React.Fragment>\r\n            <ThemeProvider theme={theme}>\r\n                <div className={classes.root} id=\"container\">\r\n                    <CssBaseline />\r\n                    <AlertBar />\r\n                    <Navbar />\r\n                    <main className={classes.content}>\r\n                        <div className={classes.toolbar} />\r\n                        <Switch>\r\n                            <AuthRoute exact path={path} isLogin={isLogin}>\r\n                                <Redirect\r\n                                    to={{\r\n                                        pathname: \"/home\",\r\n                                    }}\r\n                                />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}home`} isLogin={isLogin}>\r\n                                <FileManager />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}video`} isLogin={isLogin}>\r\n                                <VideoPreview />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}text`} isLogin={isLogin}>\r\n                                <TextViewer />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}doc`} isLogin={isLogin}>\r\n                                <DocViewer />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}pdf`} isLogin={isLogin}>\r\n                                <Suspense fallback={<PageLoading />}>\r\n                                    <PDFViewer />\r\n                                </Suspense>\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}code`} isLogin={isLogin}>\r\n                                <CodeViewer />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}aria2`} isLogin={isLogin}>\r\n                                <Download />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}shares`} isLogin={isLogin}>\r\n                                <MyShare />\r\n                            </AuthRoute>\r\n\r\n                            <Route path={`${path}search`} isLogin={isLogin}>\r\n                                <SearchResult />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}setting`} isLogin={isLogin}>\r\n                                <UserSetting />\r\n                            </Route>\r\n\r\n                            <AuthRoute\r\n                                path={`${path}profile/:id`}\r\n                                isLogin={isLogin}\r\n                            >\r\n                                <Profile />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}webdav`} isLogin={isLogin}>\r\n                                <WebDAV />\r\n                            </AuthRoute>\r\n\r\n                            <AuthRoute path={`${path}tasks`} isLogin={isLogin}>\r\n                                <Tasks />\r\n                            </AuthRoute>\r\n\r\n                            <Route path={`${path}login`} exact>\r\n                                <LoginForm />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}signup`} exact>\r\n                                <Register />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}activate`} exact>\r\n                                <Activation />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}reset`} exact>\r\n                                <ResetForm />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}forget`} exact>\r\n                                <Reset />\r\n                            </Route>\r\n\r\n                            <Route exact path={`${path}s/:id`}>\r\n                                <SharePreload />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}s/:id/video(/)*`}>\r\n                                <VideoPreview />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}s/:id/doc(/)*`}>\r\n                                <DocViewer />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}s/:id/text(/)*`}>\r\n                                <TextViewer />\r\n                            </Route>\r\n\r\n                            <Route path={`${path}s/:id/pdf(/)*`}>\r\n                                <Suspense fallback={<PageLoading />}>\r\n                                    <PDFViewer />\r\n                                </Suspense>\r\n                            </Route>\r\n\r\n                            <Route path={`${path}s/:id/code(/)*`}>\r\n                                <CodeViewer />\r\n                            </Route>\r\n\r\n                            <Route path=\"*\">\r\n                                <NotFound msg={\"页面不存在\"} />\r\n                            </Route>\r\n                        </Switch>\r\n                    </main>\r\n                    <MusicPlayer/>\r\n                </div>\r\n            </ThemeProvider>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import {\r\n    setSiteConfig,\r\n    toggleSnackbar,\r\n    enableLoadUploader,\r\n    changeViewMethod,\r\n} from \"../actions/index\";\r\nimport API from \"./Api\";\r\nimport Auth from \"./Auth\";\r\nimport pathHelper from \"../utils/page\";\r\n\r\nconst initUserConfig = (siteConfig) => {\r\n    if (siteConfig.user !== undefined && !siteConfig.user.anonymous) {\r\n        const themes = JSON.parse(siteConfig.themes);\r\n        const user = siteConfig.user;\r\n        delete siteConfig.user;\r\n\r\n        //更换用户自定配色\r\n        if (\r\n            user[\"preferred_theme\"] !== \"\" &&\r\n            themes[user[\"preferred_theme\"]] !== undefined\r\n        ) {\r\n            siteConfig.theme = themes[user[\"preferred_theme\"]];\r\n        }\r\n\r\n        // 更新登录态\r\n        Auth.authenticate(user);\r\n    }\r\n    if (siteConfig.user !== undefined && siteConfig.user.anonymous) {\r\n        Auth.SetUser(siteConfig.user);\r\n    }\r\n    return siteConfig;\r\n};\r\n\r\nexport const InitSiteConfig = (rawStore) => {\r\n    // 从缓存获取默认配置\r\n    const configCache = JSON.parse(localStorage.getItem(\"siteConfigCache\"));\r\n    if (configCache != null) {\r\n        rawStore.siteConfig = configCache;\r\n    }\r\n    // 检查是否有path参数\r\n    const url = new URL(window.location.href);\r\n    const c = url.searchParams.get(\"path\");\r\n    rawStore.navigator.path = c === null ? \"/\" : c;\r\n    // 初始化用户个性配置\r\n    rawStore.siteConfig = initUserConfig(rawStore.siteConfig);\r\n\r\n    // 更改站点标题\r\n    document.title = rawStore.siteConfig.title;\r\n    return rawStore;\r\n};\r\n\r\nexport async function UpdateSiteConfig(store) {\r\n    API.get(\"/site/config\")\r\n        .then(function (response) {\r\n            const themes = JSON.parse(response.data.themes);\r\n            response.data.theme = themes[response.data.defaultTheme];\r\n            response.data = initUserConfig(response.data);\r\n            store.dispatch(setSiteConfig(response.data));\r\n            localStorage.setItem(\r\n                \"siteConfigCache\",\r\n                JSON.stringify(response.data)\r\n            );\r\n\r\n            // 偏爱的列表样式\r\n            const preferListMethod = Auth.GetPreference(\"view_method\");\r\n            if (preferListMethod) {\r\n                store.dispatch(changeViewMethod(preferListMethod));\r\n            } else {\r\n                if (pathHelper.isSharePage(window.location.pathname)) {\r\n                    store.dispatch(\r\n                        changeViewMethod(response.data.share_view_method)\r\n                    );\r\n                } else {\r\n                    store.dispatch(\r\n                        changeViewMethod(response.data.home_view_method)\r\n                    );\r\n                }\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            store.dispatch(\r\n                toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"无法加载站点配置：\" + error.message,\r\n                    \"error\"\r\n                )\r\n            );\r\n        });\r\n}\r\n","import { AnyAction } from \"redux\";\r\nimport Auth from \"../../middleware/Auth\";\r\n\r\nexport interface ViewUpdateState {\r\n    isLogin: boolean;\r\n    open: boolean;\r\n    explorerViewMethod: string;\r\n    sortMethod:\r\n        | \"sizePos\"\r\n        | \"sizeRes\"\r\n        | \"namePos\"\r\n        | \"nameRev\"\r\n        | \"timePos\"\r\n        | \"timeRev\";\r\n    subTitle: string | null;\r\n    contextType: string;\r\n    contextOpen: boolean;\r\n    menuOpen: boolean;\r\n    navigatorLoading: boolean;\r\n    navigatorError: boolean;\r\n    navigatorErrorMsg: string | null;\r\n    modalsLoading: boolean;\r\n    storageRefresh: boolean;\r\n    userPopoverAnchorEl: any;\r\n    shareUserPopoverAnchorEl: any;\r\n    modals: {\r\n        createNewFolder: boolean;\r\n        createNewFile: boolean;\r\n        rename: boolean;\r\n        move: boolean;\r\n        remove: boolean;\r\n        share: boolean;\r\n        music: boolean;\r\n        remoteDownload: boolean;\r\n        torrentDownload: boolean;\r\n        getSource: boolean;\r\n        copy: boolean;\r\n        resave: boolean;\r\n        compress: boolean;\r\n        decompress: boolean;\r\n        loading: boolean;\r\n        loadingText: string;\r\n    };\r\n    snackbar: {\r\n        toggle: boolean;\r\n        vertical: string;\r\n        horizontal: string;\r\n        msg: string;\r\n        color: string;\r\n    };\r\n}\r\nexport const initState: ViewUpdateState = {\r\n    // 是否登录\r\n    isLogin: Auth.Check(),\r\n    open: false,\r\n    explorerViewMethod: \"icon\",\r\n    sortMethod: \"timePos\",\r\n    subTitle: null,\r\n    contextType: \"none\",\r\n    contextOpen: false,\r\n    menuOpen: false,\r\n    navigatorLoading: true,\r\n    navigatorError: false,\r\n    navigatorErrorMsg: null,\r\n    modalsLoading: false,\r\n    storageRefresh: false,\r\n    userPopoverAnchorEl: null,\r\n    shareUserPopoverAnchorEl: null,\r\n    modals: {\r\n        createNewFolder: false,\r\n        createNewFile: false,\r\n        rename: false,\r\n        move: false,\r\n        remove: false,\r\n        share: false,\r\n        music: false,\r\n        remoteDownload: false,\r\n        torrentDownload: false,\r\n        getSource: false,\r\n        copy: false,\r\n        resave: false,\r\n        compress: false,\r\n        decompress: false,\r\n        loading: false,\r\n        loadingText: \"\",\r\n    },\r\n    snackbar: {\r\n        toggle: false,\r\n        vertical: \"top\",\r\n        horizontal: \"center\",\r\n        msg: \"\",\r\n        color: \"\",\r\n    },\r\n};\r\nconst viewUpdate = (state: ViewUpdateState = initState, action: AnyAction) => {\r\n    switch (action.type) {\r\n        case \"DRAWER_TOGGLE\":\r\n            return Object.assign({}, state, {\r\n                open: action.open,\r\n            });\r\n        case \"CHANGE_VIEW_METHOD\":\r\n            return Object.assign({}, state, {\r\n                explorerViewMethod: action.method,\r\n            });\r\n        case \"SET_NAVIGATOR_LOADING_STATUE\":\r\n            return Object.assign({}, state, {\r\n                navigatorLoading: action.status,\r\n            });\r\n        case \"SET_NAVIGATOR_ERROR\":\r\n            return Object.assign({}, state, {\r\n                navigatorError: action.status,\r\n                navigatorErrorMsg: action.msg,\r\n            });\r\n        case \"OPEN_CREATE_FOLDER_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    createNewFolder: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_CREATE_FILE_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    createNewFile: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_RENAME_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    rename: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_REMOVE_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    remove: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_MOVE_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    move: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_RESAVE_DIALOG\":\r\n            // window.shareKey = action.key;\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    resave: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"SET_USER_POPOVER\":\r\n            return Object.assign({}, state, {\r\n                userPopoverAnchorEl: action.anchor,\r\n            });\r\n        case \"SET_SHARE_USER_POPOVER\":\r\n            return Object.assign({}, state, {\r\n                shareUserPopoverAnchorEl: action.anchor,\r\n            });\r\n        case \"OPEN_SHARE_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    share: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_MUSIC_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    music: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_REMOTE_DOWNLOAD_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    remoteDownload: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_TORRENT_DOWNLOAD_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    torrentDownload: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_DECOMPRESS_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    decompress: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_COMPRESS_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    compress: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_GET_SOURCE_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    getSource: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_COPY_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    copy: true,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"OPEN_LOADING_DIALOG\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    loading: true,\r\n                    loadingText: action.text,\r\n                }),\r\n                contextOpen: false,\r\n            });\r\n        case \"CLOSE_CONTEXT_MENU\":\r\n            return Object.assign({}, state, {\r\n                contextOpen: false,\r\n            });\r\n        case \"CLOSE_ALL_MODALS\":\r\n            return Object.assign({}, state, {\r\n                modals: Object.assign({}, state.modals, {\r\n                    createNewFolder: false,\r\n                    createNewFile: false,\r\n                    rename: false,\r\n                    move: false,\r\n                    remove: false,\r\n                    share: false,\r\n                    music: false,\r\n                    remoteDownload: false,\r\n                    torrentDownload: false,\r\n                    getSource: false,\r\n                    resave: false,\r\n                    copy: false,\r\n                    loading: false,\r\n                    compress: false,\r\n                    decompress: false,\r\n                }),\r\n            });\r\n        case \"TOGGLE_SNACKBAR\":\r\n            return Object.assign({}, state, {\r\n                snackbar: {\r\n                    toggle: !state.snackbar.toggle,\r\n                    vertical: action.vertical,\r\n                    horizontal: action.horizontal,\r\n                    msg: action.msg,\r\n                    color: action.color,\r\n                },\r\n            });\r\n        case \"SET_MODALS_LOADING\":\r\n            return Object.assign({}, state, {\r\n                modalsLoading: action.status,\r\n            });\r\n        case \"SET_SESSION_STATUS\":\r\n            return {\r\n                ...state,\r\n                isLogin: action.status,\r\n            };\r\n        case \"REFRESH_STORAGE\":\r\n            return Object.assign({}, state, {\r\n                storageRefresh: !state.storageRefresh,\r\n            });\r\n        case \"SEARCH_MY_FILE\":\r\n            return Object.assign({}, state, {\r\n                contextOpen: false,\r\n                navigatorError: false,\r\n                navigatorLoading: true,\r\n            });\r\n        case \"CHANGE_CONTEXT_MENU\":\r\n            if (state.contextOpen && action.open) {\r\n                return Object.assign({}, state);\r\n            }\r\n            return Object.assign({}, state, {\r\n                contextOpen: action.open,\r\n                contextType: action.menuType,\r\n            });\r\n        case \"SET_SUBTITLE\":\r\n            return Object.assign({}, state, {\r\n                subTitle: action.title,\r\n            });\r\n        case \"SET_SORT_METHOD\":\r\n            return {\r\n                ...state,\r\n                sortMethod: action.method,\r\n            };\r\n        case \"SET_NAVIGATOR\":\r\n            return {\r\n                ...state,\r\n                contextOpen: false,\r\n                navigatorError: false,\r\n                navigatorLoading: action.navigatorLoading,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default viewUpdate;\r\n","/* eslint-disable no-case-declarations */\r\nimport { InitSiteConfig } from \"../middleware/Init\";\r\nimport { combineReducers } from \"../redux/combineReducers\";\r\nimport viewUpdate from \"../redux/viewUpdate/reducer\";\r\nimport explorer from \"../redux/explorer/reducer\";\r\nimport { connectRouter } from \"connected-react-router\";\r\n\r\nconst doNavigate = (path, state) => {\r\n    window.currntPath = path;\r\n    return Object.assign({}, state, {\r\n        navigator: Object.assign({}, state.navigator, {\r\n            path: path,\r\n        }),\r\n    });\r\n};\r\n\r\nexport const initState = {\r\n    siteConfig: {\r\n        title: window.subTitle,\r\n        siteICPId: \"\",\r\n        loginCaptcha: false,\r\n        regCaptcha: false,\r\n        forgetCaptcha: false,\r\n        emailActive: false,\r\n        QQLogin: false,\r\n        themes: null,\r\n        authn: false,\r\n        theme: {\r\n            palette: {\r\n                common: { black: \"#000\", white: \"#fff\" },\r\n                background: { paper: \"#fff\", default: \"#fafafa\" },\r\n                primary: {\r\n                    light: \"#7986cb\",\r\n                    main: \"#3f51b5\",\r\n                    dark: \"#303f9f\",\r\n                    contrastText: \"#fff\",\r\n                },\r\n                secondary: {\r\n                    light: \"#ff4081\",\r\n                    main: \"#f50057\",\r\n                    dark: \"#c51162\",\r\n                    contrastText: \"#fff\",\r\n                },\r\n                error: {\r\n                    light: \"#e57373\",\r\n                    main: \"#f44336\",\r\n                    dark: \"#d32f2f\",\r\n                    contrastText: \"#fff\",\r\n                },\r\n                text: {\r\n                    primary: \"rgba(0, 0, 0, 0.87)\",\r\n                    secondary: \"rgba(0, 0, 0, 0.54)\",\r\n                    disabled: \"rgba(0, 0, 0, 0.38)\",\r\n                    hint: \"rgba(0, 0, 0, 0.38)\",\r\n                },\r\n                explorer: {\r\n                    filename: \"#474849\",\r\n                    icon: \"#8f8f8f\",\r\n                    bgSelected: \"#D5DAF0\",\r\n                    emptyIcon: \"#e8e8e8\",\r\n                },\r\n            },\r\n        },\r\n        captcha_ReCaptchaKey: \"defaultKey\",\r\n        captcha_type: \"normal\",\r\n        tcaptcha_captcha_app_id: \"\",\r\n    },\r\n    navigator: {\r\n        path: \"/\",\r\n        refresh: true,\r\n    },\r\n};\r\n\r\nconst defaultStatus = InitSiteConfig(initState);\r\n\r\n// TODO: 将cloureveApp切分成小的reducer\r\nconst cloudreveApp = (state = defaultStatus, action) => {\r\n    switch (action.type) {\r\n        case \"SET_NAVIGATOR\":\r\n            return doNavigate(action.path, state);\r\n        case \"TOGGLE_DAYLIGHT_MODE\": {\r\n            const copy = Object.assign({}, state);\r\n            if (\r\n                copy.siteConfig.theme.palette.type === undefined ||\r\n                copy.siteConfig.theme.palette.type === \"light\"\r\n            ) {\r\n                return {\r\n                    ...state,\r\n                    siteConfig: {\r\n                        ...state.siteConfig,\r\n                        theme: {\r\n                            ...state.siteConfig.theme,\r\n                            palette: {\r\n                                ...state.siteConfig.theme.palette,\r\n                                type: \"dark\",\r\n                            },\r\n                        },\r\n                    },\r\n                };\r\n            }\r\n            return {\r\n                ...state,\r\n                siteConfig: {\r\n                    ...state.siteConfig,\r\n                    theme: {\r\n                        ...state.siteConfig.theme,\r\n                        palette: {\r\n                            ...state.siteConfig.theme.palette,\r\n                            type: \"light\",\r\n                        },\r\n                    },\r\n                },\r\n            };\r\n        }\r\n        case \"APPLY_THEME\":\r\n            if (state.siteConfig.themes !== null) {\r\n                const themes = JSON.parse(state.siteConfig.themes);\r\n                if (themes[action.theme] === undefined) {\r\n                    return state;\r\n                }\r\n                return Object.assign({}, state, {\r\n                    siteConfig: Object.assign({}, state.siteConfig, {\r\n                        theme: themes[action.theme],\r\n                    }),\r\n                });\r\n            }\r\n            break;\r\n        case \"NAVIGATOR_UP\":\r\n            return doNavigate(action.path, state);\r\n        case \"SET_SITE_CONFIG\":\r\n            return Object.assign({}, state, {\r\n                siteConfig: action.config,\r\n            });\r\n        case \"REFRESH_FILE_LIST\":\r\n            return Object.assign({}, state, {\r\n                navigator: Object.assign({}, state.navigator, {\r\n                    refresh: !state.navigator.refresh,\r\n                }),\r\n            });\r\n        case \"SEARCH_MY_FILE\":\r\n            return Object.assign({}, state, {\r\n                navigator: Object.assign({}, state.navigator, {\r\n                    path: \"/搜索结果\",\r\n                    refresh:\r\n                        state.explorer.keywords === \"\"\r\n                            ? state.navigator.refresh\r\n                            : !state.navigator.refresh,\r\n                }),\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default (history) => (state, action) => {\r\n    const { viewUpdate: viewUpdateState, explorer: explorerState } =\r\n        state || {};\r\n    const appState = cloudreveApp(state, action);\r\n    const combinedState = combineReducers({\r\n        viewUpdate,\r\n        explorer,\r\n        router: connectRouter(history),\r\n    })({ viewUpdate: viewUpdateState, explorer: explorerState }, action);\r\n    return {\r\n        ...appState,\r\n        ...combinedState,\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n    h1: {\r\n        color: \"#a4a4a4\",\r\n        margin: \"5px 0px\",\r\n    },\r\n    h2: {\r\n        margin: \"15px 0px\",\r\n    },\r\n};\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { hasError: false, error: null, errorInfo: null };\r\n    }\r\n\r\n    static getDerivedStateFromError() {\r\n        // 更新 state 使下一次渲染能够显示降级后的 UI\r\n        return { hasError: true };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({\r\n            error: error,\r\n            errorInfo: errorInfo,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        if (this.state.hasError) {\r\n            // 你可以自定义降级后的 UI 并渲染\r\n            return (\r\n                <>\r\n                    <h1 className={classes.h1}>:(</h1>\r\n                    <h2 className={classes.h2}>\r\n                        页面渲染出现错误，请尝试刷新此页面。\r\n                    </h2>\r\n                    {this.state.error &&\r\n                        this.state.errorInfo &&\r\n                        this.state.errorInfo.componentStack && (\r\n                            <details>\r\n                                <summary>错误详情</summary>\r\n                                <pre>\r\n                                    <code>{this.state.error.toString()}</code>\r\n                                </pre>\r\n                                <pre>\r\n                                    <code>\r\n                                        {this.state.errorInfo.componentStack}\r\n                                    </code>\r\n                                </pre>\r\n                            </details>\r\n                        )}\r\n                </>\r\n            );\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ErrorBoundary);\r\n","import React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport App from \"./App\";\r\nimport cloureveApp from \"./reducers\";\r\nimport { UpdateSiteConfig } from \"./middleware/Init\";\r\nimport ErrorBoundary from \"./component/Placeholder/ErrorBoundary\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { routerMiddleware } from \"connected-react-router\";\r\nimport { ConnectedRouter } from \"connected-react-router\";\r\nconst Admin = React.lazy(() => import(\"./Admin\"));\r\n\r\nif (window.location.hash !== \"\") {\r\n    window.location.href = window.location.hash.split(\"#\")[1];\r\n}\r\n\r\nserviceWorker.register();\r\nexport const history = createBrowserHistory();\r\nlet reduxEnhance = applyMiddleware(routerMiddleware(history), thunk);\r\nif (\r\n    process.env.NODE_ENV === \"development\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION__\r\n) {\r\n    reduxEnhance = compose(reduxEnhance, window.__REDUX_DEVTOOLS_EXTENSION__());\r\n}\r\n\r\nconst store = createStore(cloureveApp(history), reduxEnhance);\r\nUpdateSiteConfig(store);\r\n\r\nReactDOM.render(\r\n    <ErrorBoundary>\r\n        <Provider store={store}>\r\n            <ConnectedRouter history={history}>\r\n                <Switch>\r\n                    <Route path=\"/admin\">\r\n                        <Suspense fallback={\"Loading...\"}>\r\n                            <Admin />\r\n                        </Suspense>\r\n                    </Route>\r\n                    <Route exact path=\"\">\r\n                        <App />\r\n                    </Route>\r\n                </Switch>\r\n            </ConnectedRouter>\r\n        </Provider>\r\n    </ErrorBoundary>,\r\n    document.getElementById(\"root\")\r\n);\r\n","import {\r\n    combineReducers as combine,\r\n    ReducersMapObject,\r\n    AnyAction,\r\n} from \"redux\";\r\nimport invariant from \"invariant\";\r\n\r\nexport const combineReducers = (reducers: ReducersMapObject) => {\r\n    const combinedReducer = combine(reducers);\r\n    // TODO: define state type\r\n    return (state: any, action: AnyAction) => {\r\n        if (\r\n            action.type &&\r\n            !action.type.startsWith(\"@@\") &&\r\n            action.type.split(\"/\").length > 1\r\n        ) {\r\n            const namespace = action.type.split(\"/\")[0];\r\n            const reducer = reducers[namespace];\r\n            invariant(!!reducer, `reducer ${namespace} doesn't exist`);\r\n            return reducer && reducer(state, action);\r\n        }\r\n        return combinedReducer(state, action);\r\n    };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport UpIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport { toggleSnackbar } from \"../../actions/index\";\r\n\r\nimport {\r\n    MenuList,\r\n    MenuItem,\r\n    IconButton,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    withStyles,\r\n    ListItemSecondaryAction,\r\n} from \"@material-ui/core\";\r\nimport API from \"../../middleware/Api\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        keywords: state.explorer.keywords,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\r\n        },\r\n    };\r\n};\r\n\r\nconst styles = (theme) => ({\r\n    iconWhite: {\r\n        color: theme.palette.common.white,\r\n    },\r\n    selected: {\r\n        backgroundColor: theme.palette.primary.main + \"!important\",\r\n        \"& $primary, & $icon\": {\r\n            color: theme.palette.common.white,\r\n        },\r\n    },\r\n    primary: {},\r\n    icon: {},\r\n    buttonIcon: {},\r\n    selector: {\r\n        minWidth: \"300px\",\r\n    },\r\n    container: {\r\n        maxHeight: \"330px\",\r\n        overflowY: \" auto\",\r\n    },\r\n});\r\n\r\nclass PathSelectorCompoment extends Component {\r\n    state = {\r\n        presentPath: \"/\",\r\n        dirList: [],\r\n        selectedTarget: null,\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        const toBeLoad = this.props.presentPath;\r\n        this.enterFolder(this.props.keywords === \"\" ? toBeLoad : \"/\");\r\n    };\r\n\r\n    back = () => {\r\n        const paths = this.state.presentPath.split(\"/\");\r\n        paths.pop();\r\n        const toBeLoad = paths.join(\"/\");\r\n        this.enterFolder(toBeLoad === \"\" ? \"/\" : toBeLoad);\r\n    };\r\n\r\n    enterFolder = (toBeLoad) => {\r\n        API.get(\r\n            (this.props.api ? this.props.api : \"/directory\") +\r\n                encodeURIComponent(toBeLoad)\r\n        )\r\n            .then((response) => {\r\n                const dirList = response.data.objects.filter((x) => {\r\n                    return (\r\n                        x.type === \"dir\" &&\r\n                        this.props.selected.findIndex((value) => {\r\n                            return (\r\n                                value.name === x.name && value.path === x.path\r\n                            );\r\n                        }) === -1\r\n                    );\r\n                });\r\n                if (toBeLoad === \"/\") {\r\n                    dirList.unshift({ name: \"/\", path: \"\" });\r\n                }\r\n                this.setState({\r\n                    presentPath: toBeLoad,\r\n                    dirList: dirList,\r\n                    selectedTarget: null,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                this.props.toggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    error.message,\r\n                    \"warning\"\r\n                );\r\n            });\r\n    };\r\n\r\n    handleSelect = (index) => {\r\n        this.setState({ selectedTarget: index });\r\n        this.props.onSelect(this.state.dirList[index]);\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <div className={classes.container}>\r\n                <MenuList className={classes.selector}>\r\n                    {this.state.presentPath !== \"/\" && (\r\n                        <MenuItem onClick={this.back}>\r\n                            <ListItemIcon>\r\n                                <UpIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"返回上一层\" />\r\n                        </MenuItem>\r\n                    )}\r\n                    {this.state.dirList.map((value, index) => (\r\n                        <MenuItem\r\n                            classes={{\r\n                                selected: classes.selected,\r\n                            }}\r\n                            key={index}\r\n                            selected={this.state.selectedTarget === index}\r\n                            onClick={() => this.handleSelect(index)}\r\n                        >\r\n                            <ListItemIcon className={classes.icon}>\r\n                                <FolderIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                classes={{ primary: classes.primary }}\r\n                                primary={value.name}\r\n                                primaryTypographyProps={{\r\n                                    style: { whiteSpace: \"normal\" },\r\n                                }}\r\n                            />\r\n                            {value.name !== \"/\" && (\r\n                                <ListItemSecondaryAction\r\n                                    className={classes.buttonIcon}\r\n                                >\r\n                                    <IconButton\r\n                                        className={classNames({\r\n                                            [classes.iconWhite]:\r\n                                                this.state.selectedTarget ===\r\n                                                index,\r\n                                        })}\r\n                                        onClick={() =>\r\n                                            this.enterFolder(\r\n                                                value.path === \"/\"\r\n                                                    ? value.path + value.name\r\n                                                    : value.path +\r\n                                                          \"/\" +\r\n                                                          value.name\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <RightIcon />\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            )}\r\n                        </MenuItem>\r\n                    ))}\r\n                </MenuList>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPathSelectorCompoment.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    presentPath: PropTypes.string.isRequired,\r\n    selected: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withStyles(styles)(PathSelectorCompoment));\r\n","import { AnyAction } from \"redux\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { CloudreveFile, SortMethod } from \"./../../types/index\";\r\nimport { closeContextMenu } from \"../viewUpdate/action\";\r\nimport { Policy } from \"../../component/Uploader/core/types\";\r\n\r\nexport interface ActionSetFileList extends AnyAction {\r\n    type: \"SET_FILE_LIST\";\r\n    list: CloudreveFile[];\r\n}\r\nexport const setFileList = (list: CloudreveFile[]): ActionSetFileList => {\r\n    return {\r\n        type: \"SET_FILE_LIST\",\r\n        list,\r\n    };\r\n};\r\n\r\nexport interface ActionSetDirList extends AnyAction {\r\n    type: \"SET_DIR_LIST\";\r\n    list: CloudreveFile[];\r\n}\r\nexport const setDirList = (list: CloudreveFile[]): ActionSetDirList => {\r\n    return {\r\n        type: \"SET_DIR_LIST\",\r\n        list,\r\n    };\r\n};\r\n\r\nexport interface ActionSetSortMethod extends AnyAction {\r\n    type: \"SET_SORT_METHOD\";\r\n    method: SortMethod;\r\n}\r\nexport const setSortMethod = (method: SortMethod): ActionSetSortMethod => {\r\n    return {\r\n        type: \"SET_SORT_METHOD\",\r\n        method,\r\n    };\r\n};\r\n\r\nexport const setSideBar = (open: boolean) => {\r\n    return {\r\n        type: \"SET_SIDE_BAR\",\r\n        open,\r\n    };\r\n};\r\n\r\nexport const setCurrentPolicy = (policy: Policy) => {\r\n    return {\r\n        type: \"SET_CURRENT_POLICY\",\r\n        policy,\r\n    };\r\n};\r\n\r\ntype SortFunc = (a: CloudreveFile, b: CloudreveFile) => number;\r\nconst sortMethodFuncs: Record<SortMethod, SortFunc> = {\r\n    sizePos: (a: CloudreveFile, b: CloudreveFile) => {\r\n        return a.size - b.size;\r\n    },\r\n    sizeRes: (a: CloudreveFile, b: CloudreveFile) => {\r\n        return b.size - a.size;\r\n    },\r\n    namePos: (a: CloudreveFile, b: CloudreveFile) => {\r\n        return a.name.localeCompare(\r\n            b.name,\r\n            navigator.languages[0] || navigator.language,\r\n            { numeric: true, ignorePunctuation: true }\r\n        );\r\n    },\r\n    nameRev: (a: CloudreveFile, b: CloudreveFile) => {\r\n        return b.name.localeCompare(\r\n            a.name,\r\n            navigator.languages[0] || navigator.language,\r\n            { numeric: true, ignorePunctuation: true }\r\n        );\r\n    },\r\n    timePos: (a: CloudreveFile, b: CloudreveFile) => {\r\n        return Date.parse(a.date) - Date.parse(b.date);\r\n    },\r\n    timeRev: (a: CloudreveFile, b: CloudreveFile) => {\r\n        return Date.parse(b.date) - Date.parse(a.date);\r\n    },\r\n};\r\n\r\nexport const updateFileList = (\r\n    list: CloudreveFile[]\r\n): ThunkAction<any, any, any, any> => {\r\n    return (dispatch, getState): void => {\r\n        const state = getState();\r\n        // TODO: define state type\r\n        const { sortMethod } = state.viewUpdate;\r\n        const dirList = list.filter((x) => {\r\n            return x.type === \"dir\";\r\n        });\r\n        const fileList = list.filter((x) => {\r\n            return x.type === \"file\";\r\n        });\r\n        const sortFunc = sortMethodFuncs[sortMethod as SortMethod];\r\n        dispatch(setDirList(dirList.sort(sortFunc)));\r\n        dispatch(setFileList(fileList.sort(sortFunc)));\r\n    };\r\n};\r\n\r\nexport const changeSortMethod = (\r\n    method: SortMethod\r\n): ThunkAction<any, any, any, any> => {\r\n    return (dispatch, getState): void => {\r\n        const state = getState();\r\n        const { fileList, dirList } = state.explorer;\r\n        const sortFunc = sortMethodFuncs[method];\r\n        dispatch(setSortMethod(method));\r\n        dispatch(setDirList(dirList.sort(sortFunc)));\r\n        dispatch(setFileList(fileList.sort(sortFunc)));\r\n    };\r\n};\r\n\r\nexport const toggleObjectInfoSidebar = (\r\n    open: boolean\r\n): ThunkAction<any, any, any, any> => {\r\n    return (dispatch, getState): void => {\r\n        const state = getState();\r\n        if (open) {\r\n            dispatch(closeContextMenu());\r\n        }\r\n        dispatch(setSideBar(true));\r\n    };\r\n};\r\n"],"sourceRoot":""}