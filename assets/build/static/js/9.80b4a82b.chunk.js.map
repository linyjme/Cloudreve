{"version":3,"sources":["component/Admin/Dashboard.js","component/Admin/Index.js","component/Admin/Setting/SiteInformation.js","component/Admin/Dialogs/Alert.js","component/Admin/Setting/Access.js","component/Admin/Setting/Mail.js","component/Admin/Common/SizeInput.js","component/Admin/Setting/UploadDownload.js","component/Admin/Dialogs/CreateTheme.js","component/Admin/Setting/Theme.js","component/Admin/Setting/Image.js","component/Admin/Dialogs/AddPolicy.js","component/Admin/Policy/Policy.js","component/Admin/Common/DomainInput.js","component/Admin/Dialogs/MagicVar.js","component/Admin/Policy/Guid/COSGuide.js","component/Admin/Policy/Guid/LocalGuide.js","component/Admin/Policy/Guid/OneDriveGuide.js","component/Admin/Policy/Guid/OSSGuide.js","component/Admin/Policy/Guid/QiniuGuide.js","component/Admin/Policy/Guid/RemoteGuide.js","component/Admin/Policy/Guid/UpyunGuide.js","component/Admin/Policy/Guid/S3Guide.js","component/Admin/Policy/AddPolicy.js","component/Admin/Policy/Guid/EditPro.js","component/Admin/Policy/EditPolicy.js","component/Admin/Group/Group.js","component/Admin/Group/GroupForm.js","component/Admin/Group/EditGroup.js","component/Admin/Dialogs/UserFilter.js","component/Admin/User/User.js","component/Admin/User/UserForm.js","component/Admin/User/EditUser.js","component/Admin/Dialogs/FileFilter.js","component/Admin/File/File.js","component/Admin/Dialogs/ShareFilter.js","component/Admin/Share/Share.js","component/Admin/Task/Aria2Helper.js","component/Admin/Task/Download.js","component/Admin/Task/Task.js","component/Admin/File/Import.js","component/Admin/Setting/Captcha.js","component/Admin/Node/Node.js","component/Admin/Node/Guide/Communication.js","component/Admin/Node/Guide/Aria2RPC.js","component/Admin/Node/Guide/Metainfo.js","component/Admin/Node/Guide/Completed.js","component/Admin/Node/Guide/NodeGuide.js","component/Admin/Node/AddNode.js","component/Admin/Node/EditNode.js","Admin.js"],"names":["ExpansionPanel","withStyles","root","maxWidth","boxShadow","borderBottom","display","margin","expanded","MuiExpansionPanel","ExpansionPanelSummary","minHeight","padding","content","MuiExpansionPanelSummary","ExpansionPanelDetails","theme","spacing","MuiExpansionPanelDetails","useStyles","makeStyles","width","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","title","flexGrow","toolbar","alignItems","justifyContent","mixins","sub","paddingLeft","color","palette","text","secondary","subMenu","backgroundColor","background","default","paddingTop","paddingBottom","active","lighten","primary","main","activeText","fontWeight","activeIcon","items","icon","Home","path","Settings","Language","Contacts","Mail","SettingsEthernet","Palette","Image","Category","Storage","Contactless","Group","Person","InsertDriveFile","Share","Assignment","CloudDownload","ListAlt","Dashboard","classes","useTheme","useState","pathHelper","isMobile","open","setOpen","menuOpen","setMenuOpen","history","useHistory","location","useLocation","dispatch","useDispatch","SetSubTitle","useCallback","changeSubTitle","useEffect","useRouteMatch","className","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","UserAvatar","Drawer","paper","direction","Divider","List","noPadding","map","item","undefined","ListItem","push","button","pathname","startsWith","key","ListItemIcon","ListItemText","square","onChange","event","isExpanded","aria-controls","id","height","logo","logoContainer","cloudreve","fontSize","version","hint","links","iconRight","minWidth","userIcon","blue","fileIcon","yellow","publicIcon","green","secretIcon","red","Index","lineData","setLineData","news","setNews","newsUsers","setNewsUsers","React","siteURL","setSiteURL","fileTotal","userTotal","publicShareTotal","secretShareTotal","statistics","setStatistics","backend","setVersion","ToggleSnackbar","vertical","horizontal","msg","toggleSnackbar","API","get","then","response","data","date","forEach","v","k","name","file","files","user","users","share","shares","window","origin","catch","error","message","axios","res","included","type","attributes","Grid","container","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","patch","options","value","alignContent","xs","md","lg","Paper","gutterBottom","ResponsiveContainer","aspect","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","stroke","ListItemAvatar","Avatar","People","FileCopy","Public","Lock","alt","src","is_pro","Chip","size","label","component","Launch","GitHub","Description","Forum","Telegram","style","Favorite","relationships","startUser","avatarUrl","Fragment","inline","username","datetime","startTime","locale","form","marginTop","marginBottom","formContainer","SiteInformation","loading","setLoading","siteName","siteTitle","siteDes","siteICPId","siteScript","pwa_small_icon","pwa_medium_icon","pwa_large_icon","pwa_display","pwa_theme_color","pwa_background_color","setOptions","handleChange","target","post","keys","Object","onSubmit","e","preventDefault","option","FormControl","fullWidth","InputLabel","htmlFor","Input","required","FormHelperText","multiline","Select","MenuItem","disabled","AlertDialog","Access","register_enabled","default_group","email_active","login_captcha","reg_captcha","forget_captcha","authn_enabled","groups","setGroups","httpAlert","setHttpAlert","checked","FormControlLabel","control","Switch","ID","toString","Name","buttonMargin","test","setTest","tesInput","setTestInput","fromName","fromAdress","smtpHost","smtpPort","replyTo","smtpUser","smtpPass","smtpEncryption","mail_keepalive","mail_activation_template","mail_reset_pwd_template","TextField","autoFocus","to","inputProps","min","step","rowsMax","SizeInput","max","suffix","unit","setUnit","first","transform","Math","round","endAdornment","InputAdornment","labelId","UploadDownload","max_worker_num","max_parallel_transfer","temp_path","maxEditSize","onedrive_chunk_retries","archive_timeout","download_timeout","preview_timeout","doc_preview_timeout","upload_credential_timeout","upload_session_timeout","slave_api_timeout","onedrive_monitor_timeout","share_download_session_timeout","onedrive_callback_check","reset_after_upload_failed","onedrive_source_timeout","slave_node_retry","slave_ping_interval","slave_recover_interval","slave_transfer_timeout","field","des","input","picker","statusBar","fab","textAlign","CreateTheme","contrastText","setTheme","subTheme","createMuiTheme","colors","onChangeComplete","c","hex","ThemeProvider","dark","Fab","Add","colorContainer","colorDot","borderRadius","Theme","themes","defaultTheme","home_view_method","share_view_method","themeConfig","setThemeConfig","themeConfigError","setThemeConfigError","setCreate","JSON","parse","themeString","stringify","Table","TableHead","TableRow","TableCell","TableBody","scope","helperText","onBlur","length","themeCopy","resStr","deleteTheme","Delete","Alert","severity","Link","href","newTheme","ImageSetting","gravatar_server","avatar_path","avatar_size","avatar_size_l","avatar_size_m","avatar_size_s","thumb_width","thumb_height","office_preview_service","cardContainer","cover","card","flex","bg","dialogFooter","policies","img","AddPolicy","dividers","sm","Card","CardActionArea","CardMedia","image","CardContent","tableContainer","header","headerRight","columns","align","Policy","setPolicies","statics","setStatics","page","setPage","pageSize","setPageSize","total","setTotal","addDialog","setAddDialog","filter","setFilter","anchorEl","setAnchorEl","editID","setEditID","query","URLSearchParams","search","handleClose","loadList","page_size","order_by","conditions","Boolean","TableContainer","column","row","hover","policyTypeMap","Type","toLocaleString","sizeToString","delete","currentTarget","Edit","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","p","onChangeRowsPerPage","keepMounted","DomainInput","domain","setDomain","protocol","setProtocol","setError","replace","startAdornment","MagicVar","isFile","isSlave","stepContent","subStepContainer","stepNumber","light","stepNumberContainer","stepFooter","viewButtonLabel","textTransform","code","fontFamily","steps","optional","COSGuide","props","activeStep","setActiveStep","Set","skipped","setSkipped","magicVar","setMagicVar","useCDN","setUseCDN","policy","SecretKey","AccessKey","BaseURL","Server","IsPrivate","DirNameRule","AutoRename","FileNameRule","IsOriginLinkEnable","MaxSize","OptionsSerialized","file_type","setPolicy","policyID","setPolicyID","region","setRegion","Stepper","index","stepProps","labelProps","has","completed","Step","StepLabel","subStepContent","pattern","BucketName","RadioGroup","Radio","Collapse","in","getNumber","stepContental","policyCopy","parseInt","split","prevActiveStep","prevSkipped","newSkipped","values","add","LocalGuide","OneDriveGuide","od_proxy","od_driver","useSharePoint","setUseSharePoint","od_redirect","httpsAlert","setHttpsAlert","handleOptionChange","URL","placeholder","OSSGuide","server_side_endpoint","useLanEndpoint","setUseLanEndpoint","submitPolicy","RemoteGuide","mimetype","pre","overflow","randomStr","minlength","server","secret","UpyunGuide","token","regions","S3Guide","alertOpen","setAlertOpen","Autocomplete","freeSolo","onInputChange","_","renderOption","renderInput","params","AddPolicyParent","useParams","EditPro","EditPolicyPreload","setType","mode","join","PolicyList","pid","MaxStorage","GroupForm","group","ShareEnabled","WebDAVEnabled","SpeedLimit","share_download","aria2_options","compress_size","decompress_size","setGroup","handleCheckChange","handleOptionCheckChange","groupCopy","one_time_download","aria2","archive_download","archive_task","EditGroupPreload","UserFilter","setSearch","group_id","status","setInput","keywords","setKeywords","nick","email","highlight","visuallyHidden","border","clip","top","setUsers","orderBy","setOrderBy","filterDialog","setFilterDialog","selected","setSelected","searches","isSelected","indexOf","alignSelf","Badge","invisible","FilterList","Checkbox","indeterminate","newSelecteds","n","TableSortLabel","role","selectedIndex","newSelected","concat","slice","handleClick","Nick","Email","Status","success","Block","UserForm","Password","GroupID","setUser","userCopy","password","EditUserPreload","FileFilter","policy_id","user_id","File","setFiles","deleteBatch","force","DeleteForever","Size","UserID","formatLocalTime","CreatedAt","ShareFilter","is_dir","source_name","setShares","ids","setIds","wordBreak","SourceName","Views","Downloads","RemainDownloads","Aria2Helper","RouterLink","Download","downloads","setDownloads","helperOpen","setHelperOpen","Source","NodeID","TotalSize","Task","tasks","setTasks","getTaskType","getTaskStatus","getTaskProgress","Progress","getError","Error","userSelect","Import","userInput","dst","recursive","selectRemote","setSelectRemote","selectLocal","setSelectLocal","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","setMoveTarget","setter","folder","openPathSelector","isSrcSelect","PathSelector","presentPath","api","onSelect","uid","onDelete","Popper","placement","TransitionProps","Fade","timeout","u","selectUser","Captcha","captcha_type","captcha_height","captcha_width","captcha_mode","captcha_CaptchaLen","captcha_ReCaptchaKey","captcha_ReCaptchaSecret","captcha_TCaptcha_CaptchaAppId","captcha_TCaptcha_AppSecretKey","captcha_TCaptcha_SecretId","captcha_TCaptcha_SecretKey","disabledBadge","disabledCell","verticalAlign","features","Node","nodes","setNodes","isActive","setIsActive","minWidthclassNames","classNames","getStatusBadge","Box","CheckCircle","Cancel","node","feature","desired","PlayArrow","Pause","Communication","SlaveKey","handleTextChange","Aria2RPC","Aria2Enabled","Aria2OptionsSerialized","interval","rpc","onBack","Metainfo","Rank","Completed","slaveOnly","NodeGuide","MasterKey","setNode","usedSteps","useMemo","nodeCopy","nextStep","AddNode","EditNode","createTheme","zhCN","Admin","show","setShow","Auth","GetUser","CssBaseline","exact"],"mappings":"unBA+CMA,GAAiBC,YAAW,CAC9BC,KAAM,CACFC,SAAU,OACVC,UAAW,OACX,qBAAsB,CAClBC,aAAc,GAElB,WAAY,CACRC,QAAS,QAEb,aAAc,CAAEC,OAAQ,IAE5BC,SAAU,IAZSP,CAapBQ,KAEGC,GAAwBT,YAAW,CACrCC,KAAM,CACFS,UAAW,EACXC,QAAS,EAET,aAAc,CACVD,UAAW,IAGnBE,QAAS,CACLV,SAAU,OACVI,OAAQ,EACRD,QAAS,QACT,aAAc,CACVC,OAAQ,MAGhBC,SAAU,IAjBgBP,CAkB3Ba,KAEGC,GAAwBd,aAAW,SAACe,GAAD,MAAY,CACjDd,KAAM,CACFI,QAAS,QACTM,QAASI,EAAMC,QAAQ,OAHDhB,CAK1BiB,KAIEC,GAAYC,aAAW,SAACJ,GAAD,MAAY,CACrCd,KAAM,CACFI,QAAS,OACTe,MAAO,QAEXC,OAAQ,CACJC,OAAQP,EAAMO,OAAOC,OAAS,EAC9BC,WAAYT,EAAMU,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,iBAG7CC,YAAa,CACTC,WAfY,IAgBZZ,MAAM,eAAD,OAhBO,IAgBP,OACLI,WAAYT,EAAMU,YAAYC,OAAO,CAAC,QAAS,UAAW,CACtDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASI,kBAG7CC,WAAY,CACRC,YAAa,IAEjBC,KAAM,CACF/B,QAAS,QAEbkB,OAAQ,CACJH,MA7BY,IA8BZiB,WAAY,EACZC,WAAY,UAEhBC,WAAY,CACRnB,MAlCY,IAmCZI,WAAYT,EAAMU,YAAYC,OAAO,QAAS,CAC1CC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASI,kBAG7CO,YAAY,aACRhB,WAAYT,EAAMU,YAAYC,OAAO,QAAS,CAC1CC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,gBAEzCW,UAAW,SACXrB,MAAOL,EAAMC,QAAQ,GAAK,GACzBD,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BvB,MAAOL,EAAMC,QAAQ,GAAK,IAGlC4B,MAAO,CACHC,SAAU,GAEdC,QAAQ,aACJzC,QAAS,OACT0C,WAAY,SACZC,eAAgB,WAChBrC,QAASI,EAAMC,QAAQ,EAAG,IACvBD,EAAMkC,OAAOH,SAEpBlC,QAAS,CACLiC,SAAU,EACVlC,QAASI,EAAMC,QAAQ,IAE3BkC,IAAK,CACDC,YAAa,GACbC,MAAOrC,EAAMsC,QAAQC,KAAKC,WAE9BC,QAAS,CACLC,gBAAiB1C,EAAMsC,QAAQK,WAAWC,QAC1CC,WAAY,EACZC,cAAe,GAEnBC,OAAQ,CACJL,gBAAiBM,YAAQhD,EAAMsC,QAAQW,QAAQC,KAAM,IACrDb,MAAOrC,EAAMsC,QAAQW,QAAQC,KAC7B,UAAW,CACPR,gBAAiBM,YAAQhD,EAAMsC,QAAQW,QAAQC,KAAM,MAG7DC,WAAY,CACRC,WAAY,KAEhBC,WAAY,CACRhB,MAAOrC,EAAMsC,QAAQW,QAAQC,UAI/BI,GAAQ,CACV,CACIzB,MAAO,2BACP0B,KAAM,kBAACC,EAAA,EAAD,MACNC,KAAM,QAEV,CACI5B,MAAO,2BACP0B,KAAM,kBAACG,EAAA,EAAD,MACNvB,IAAK,CACD,CACIN,MAAO,2BACP4B,KAAM,QACNF,KAAM,kBAACI,EAAA,EAAD,OAEV,CACI9B,MAAO,iCACP4B,KAAM,SACNF,KAAM,kBAACK,EAAA,EAAD,OAEV,CACI/B,MAAO,eACP4B,KAAM,OACNF,KAAM,kBAACM,EAAA,EAAD,OAEV,CACIhC,MAAO,iCACP4B,KAAM,SACNF,KAAM,kBAACO,EAAA,EAAD,OAEV,CACIjC,MAAO,eACP4B,KAAM,QACNF,KAAM,kBAACQ,EAAA,EAAD,OAEV,CACIlC,MAAO,iCACP4B,KAAM,QACNF,KAAM,kBAACS,EAAA,EAAD,OAEV,CACInC,MAAO,qBACP4B,KAAM,UACNF,KAAM,kBAACU,EAAA,EAAD,SAIlB,CACIpC,MAAO,2BACP0B,KAAM,kBAACW,EAAA,EAAD,MACNT,KAAM,UAEV,CACI5B,MAAO,uCACP0B,KAAM,kBAACY,EAAA,EAAD,MACNV,KAAM,QAEV,CACI5B,MAAO,qBACP0B,KAAM,kBAACa,EAAA,EAAD,MACNX,KAAM,SAEV,CACI5B,MAAO,eACP0B,KAAM,kBAACc,EAAA,EAAD,MACNZ,KAAM,QAEV,CACI5B,MAAO,eACP0B,KAAM,kBAACe,EAAA,EAAD,MACNb,KAAM,QAEV,CACI5B,MAAO,eACP0B,KAAM,kBAACgB,EAAA,EAAD,MACNd,KAAM,SAEV,CACI5B,MAAO,2BACP0B,KAAM,kBAACiB,EAAA,EAAD,MACNrC,IAAK,CACD,CACIN,MAAO,2BACP4B,KAAM,WACNF,KAAM,kBAACkB,EAAA,EAAD,OAEV,CACI5C,MAAO,2BACP4B,KAAM,OACNF,KAAM,kBAACmB,EAAA,EAAD,UAMP,SAASC,GAAT,GAAiC,IAAD,IAAX9E,EAAW,EAAXA,QAC1B+E,EAAUzE,KACVH,EAAQ6E,cACd,EAAwBC,oBAAUC,KAAWC,YAA7C,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCJ,mBAAS,MAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACMC,EAAUC,cACVC,EAAWC,cAUXC,EAAWC,cACXC,EAAcC,uBAChB,SAAC/D,GAAD,OAAW4D,EAASI,aAAehE,MACnC,CAAC4D,IAGLK,qBAAU,WACNH,EAAY,wBACb,IAEHG,qBAAU,WACN,OAAO,WACHH,OAEL,IAEH,IAAQlC,EAASsC,cAATtC,KAER,OACI,yBAAKuC,UAAWpB,EAAQ1F,MACpB,kBAAC+G,EAAA,EAAD,CACIC,SAAS,QACTF,UAAWG,YAAKvB,EAAQtE,OAAT,eACVsE,EAAQ5D,YAAciE,KAG3B,kBAACmB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIhE,MAAM,UACNiE,aAAW,cACXC,QAtCK,WACrBrB,GAAQ,IAsCQsB,KAAK,QACLR,UAAWG,YAAKvB,EAAQzD,WAAT,eACVyD,EAAQvD,KAAO4D,KAGpB,kBAAC,IAAD,OAEJ,kBAACwB,EAAA,EAAD,CAAYC,QAAQ,KAAKV,UAAWpB,EAAQ/C,MAAO8E,QAAM,GAAzD,gCAGA,kBAACC,GAAA,EAAD,QAGR,kBAACC,EAAA,EAAD,CACIH,QAAQ,YACRV,UAAWG,YAAKvB,EAAQpE,QAAT,mBACVoE,EAAQpD,WAAayD,GADX,cAEVL,EAAQnD,aAAewD,GAFb,IAIfL,QAAS,CACLkC,MAAOX,aAAI,mBACNvB,EAAQpD,WAAayD,GADf,cAENL,EAAQnD,aAAewD,GAFjB,MAMf,yBAAKe,UAAWpB,EAAQ7C,SACpB,kBAACsE,EAAA,EAAD,CAAYE,QA9DF,WACtBrB,GAAQ,KA8D6B,QAApBlF,EAAM+G,UACH,kBAAC,IAAD,MAEA,kBAAC,IAAD,QAIZ,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAMjB,UAAWpB,EAAQsC,WACpB5D,GAAM6D,KAAI,SAACC,GACR,YAAkBC,IAAdD,EAAK3D,KAED,kBAAC6D,EAAA,EAAD,CACIf,QAAS,kBACLlB,EAAQkC,KAAK,UAAYH,EAAK3D,OAElC+D,QAAM,EACNxB,UAAWG,YAAK,eACXvB,EAAQ7B,OAASwC,EAASkC,SAASC,WAChC,UAAYN,EAAK3D,QAGzBkE,IAAKP,EAAKvF,OAEV,kBAAC+F,EAAA,EAAD,CACI5B,UAAWG,YAAK,eACXvB,EAAQvB,WAAakC,EAASkC,SAASC,WACpC,UAAYN,EAAK3D,SAIxB2D,EAAK7D,MAEV,kBAACsE,EAAA,EAAD,CACI7B,UAAWG,YAAK,eACXvB,EAAQzB,WAAaoC,EAASkC,SAASC,WACpC,UAAYN,EAAK3D,QAGzBR,QAASmE,EAAKvF,SAM1B,kBAAC,GAAD,CACI8F,IAAKP,EAAKvF,MACViG,QAAM,EACNtI,SAAU2F,IAAaiC,EAAKvF,MAC5BkG,SAAU,SAACC,EAAOC,GACd7C,EAAY6C,EAAab,EAAKvF,MAAQ,QAG1C,kBAAC,GAAD,CACIqG,gBAAc,kBACdC,GAAG,kBAEH,kBAACb,EAAA,EAAD,CAAUE,QAAM,EAACG,IAAKP,EAAKvF,OACvB,kBAAC+F,EAAA,EAAD,KAAeR,EAAK7D,MACpB,kBAACsE,EAAA,EAAD,CAAc5E,QAASmE,EAAKvF,UAGpC,kBAAC,GAAD,KACI,kBAACoF,EAAA,EAAD,CAAMjB,UAAWpB,EAAQnC,SACpB2E,EAAKjF,IAAIgF,KAAI,SAAChF,GAAD,aACV,kBAACmF,EAAA,EAAD,CACIf,QAAS,kBACLlB,EAAQkC,KACJ,UAAYpF,EAAIsB,OAGxBuC,UAAWG,aAAI,mBACVvB,EAAQzC,IAAM8C,GADJ,cAEVL,EAAQ7B,OAASwC,EAASkC,SAASC,WAChC,UAAYvF,EAAIsB,OAHT,IAMf+D,QAAM,EACNG,IAAKxF,EAAIN,OAET,kBAAC+F,EAAA,EAAD,CACI5B,UAAWG,YAAK,eACXvB,EAAQvB,WAAakC,EAASkC,SAASC,WACpC,UAAYvF,EAAIsB,SAIvBtB,EAAIoB,MAET,kBAACsE,EAAA,EAAD,CACI5E,QAASd,EAAIN,oBAWrD,0BAAMmE,UAAWpB,EAAQ/E,SACrB,yBAAKmG,UAAWpB,EAAQ7C,UACvBlC,EAAQ4D,K,4cCjZnBtD,GAAYC,aAAW,SAACJ,GAAD,MAAY,CACrC8G,MAAO,CACHlH,QAASI,EAAMC,QAAQ,GACvBmI,OAAQ,QAEZC,KAAM,CACFhI,MAAO,IAEXiI,cAAe,CACX1I,QAASI,EAAMC,QAAQ,GACvBX,QAAS,QAEbuC,MAAO,CACHZ,WAAY,IAEhBsH,UAAW,CACPC,SAAU,GACVnG,MAAOrC,EAAMsC,QAAQC,KAAKC,WAE9BiG,QAAS,CACLpG,MAAOrC,EAAMsC,QAAQC,KAAKmG,MAE9BC,MAAO,CACH/I,QAASI,EAAMC,QAAQ,IAE3B2I,UAAW,CACPC,SAAU,GAEdC,SAAU,CACNpG,gBAAiBqG,KAAK,KACtB1G,MAAO0G,KAAK,MAEhBC,SAAU,CACNtG,gBAAiBuG,KAAO,KACxB5G,MAAO4G,KAAO,MAElBC,WAAY,CACRxG,gBAAiByG,KAAM,KACvB9G,MAAO8G,KAAM,MAEjBC,WAAY,CACR1G,gBAAiB2G,KAAI,KACrBhH,MAAOgH,KAAI,UAIJ,SAASC,KACpB,IAAM1E,EAAUzE,KAChB,EAAgC2E,mBAAS,IAAzC,mBAAOyE,EAAP,KAAiBC,EAAjB,KACA,EAAwB1E,mBAAS,IAAjC,mBAAO2E,EAAP,KAAaC,EAAb,KACA,EAAkC5E,mBAAS,IAA3C,mBAAO6E,EAAP,KAAkBC,EAAlB,KACA,EAAwBC,IAAM/E,UAAS,GAAvC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA8B2E,IAAM/E,SAAS,IAA7C,mBAAOgF,EAAP,KAAgBC,EAAhB,KACA,EAAoCjF,mBAAS,CACzCkF,UAAW,EACXC,UAAW,EACXC,iBAAkB,EAClBC,iBAAkB,IAJtB,mBAAOC,EAAP,KAAmBC,EAAnB,KAMA,EAA8BvF,mBAAS,CACnCwF,QAAS,MADb,mBAAO7B,EAAP,KAAgB8B,EAAhB,KAIM9E,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAuEL,OAjDAK,qBAAU,WACN+E,KAAIC,IAAI,kBACHC,MAAK,SAACC,GACH,IAAMC,EAAO,GACbD,EAASC,KAAKC,KAAKC,SAAQ,SAACC,EAAGC,GAC3BJ,EAAK1D,KAAK,CACN+D,KAAMF,EACNG,KAAMP,EAASC,KAAKO,MAAMH,GAC1BI,KAAMT,EAASC,KAAKS,MAAML,GAC1BM,MAAOX,EAASC,KAAKW,OAAOP,QAGpC7B,EAAYyB,GACZZ,EAAc,CACVL,UAAWgB,EAASC,KAAKjB,UACzBC,UAAWe,EAASC,KAAKhB,UACzBC,iBAAkBc,EAASC,KAAKf,iBAChCC,iBAAkBa,EAASC,KAAKd,mBAEpCI,EAAWS,EAASC,KAAKxC,SACzBsB,EAAWiB,EAASC,KAAKnB,SAEK,KAA1BkB,EAASC,KAAKnB,SACdkB,EAASC,KAAKnB,UAAY+B,OAAOtG,SAASuG,QAE1C5G,GAAQ,MAGf6G,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAGtDC,KACKpB,IAAI,sBACJC,MAAK,SAACC,GACHtB,EAAQsB,EAASC,KAAKA,MACtB,IAAMkB,EAAM,GACZnB,EAASC,KAAKmB,SAASjB,SAAQ,SAACC,GACb,UAAXA,EAAEiB,OACFF,EAAIf,EAAEjD,IAAMiD,EAAEkB,eAGtB1C,EAAauC,MAEhBJ,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAEvD,IAGC,kBAACM,GAAA,EAAD,CAAMC,WAAS,EAACvM,QAAS,GACrB,kBAACwM,GAAA,EAAD,CACIxH,KAAMA,EACNyH,QAAS,kBAAMxH,GAAQ,IACvByH,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAa1E,GAAG,sBACX,2CAEL,kBAAC2E,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAmB5E,GAAG,4BAClB,kBAAC1B,EAAA,EAAD,KACiB,KAAZqD,GACG,yHACI+B,OAAOtG,SAASuG,OAChB,KACK,KAAZhC,GACG,mKACI+B,OAAOtG,SAASuG,OAChB,MAEZ,kBAACrF,EAAA,EAAD,kRAMR,kBAACuG,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ1G,QAAS,kBAAMrB,GAAQ,IAAQ7C,MAAM,WAA7C,gBAGA,kBAAC4K,GAAA,EAAD,CAAQ1G,QAAS,kBApG7BrB,GAAQ,QACR2F,KAAIqC,MAAM,iBAAkB,CACxBC,QAAS,CACL,CACIxF,IAAK,UACLyF,MAAOvB,OAAOtG,SAASuG,WAI9Bf,MAAK,WACFhB,EAAW8B,OAAOtG,SAASuG,QAC3BtB,EAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,aAsFH5J,MAAM,WAA7C,kBAKR,kBAACkK,GAAA,EAAD,CAAMc,aAAc,UAAWjG,MAAI,EAACkG,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACnD,kBAACC,GAAA,EAAD,CAAOzH,UAAWpB,EAAQkC,OACtB,kBAACL,EAAA,EAAD,CAAYC,QAAQ,SAASpH,QAAQ,QAAQoO,cAAY,GAAzD,gBAGA,kBAACC,GAAA,oBAAD,CACItN,MAAM,OACNuN,OAAQ7I,KAAWC,WAAa,EAAM,EAAM,GAE5C,kBAAC6I,GAAA,EAAD,CAAWxN,MAAO,KAAM+H,OAAQ,IAAK6C,KAAM1B,GACvC,kBAACuE,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,kBAACC,GAAA,EAAD,CAAOC,QAAQ,SACf,kBAACC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CACI/C,KAAM,eACNe,KAAK,WACL4B,QAAQ,OACRK,OAAO,YAEX,kBAACD,GAAA,EAAD,CACI/C,KAAM,eACNe,KAAK,WACL4B,QAAQ,OACRK,OAAO,YAEX,kBAACD,GAAA,EAAD,CACI/C,KAAM,eACNe,KAAK,WACL4B,QAAQ,QACRK,OAAO,gBAM3B,kBAAC/B,GAAA,EAAD,CAAMnF,MAAI,EAACkG,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC1B,kBAACC,GAAA,EAAD,CAAOzH,UAAWpB,EAAQkC,OACtB,kBAACL,EAAA,EAAD,CAAYC,QAAQ,SAASpH,QAAQ,QAAQoO,cAAY,GAAzD,gBAGA,kBAAC1G,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAMjB,UAAWpB,EAAQ1F,MACrB,kBAACoI,EAAA,EAAD,KACI,kBAACiH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQxI,UAAWpB,EAAQkE,UACvB,kBAAC2F,GAAA,EAAD,QAGR,kBAAC5G,EAAA,EAAD,CACI5E,QAASmH,EAAWH,UACpBzH,UAAU,8BAGlB,kBAAC8E,EAAA,EAAD,KACI,kBAACiH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQxI,UAAWpB,EAAQoE,UACvB,kBAAC0F,GAAA,EAAD,QAGR,kBAAC7G,EAAA,EAAD,CACI5E,QAASmH,EAAWJ,UACpBxH,UAAU,8BAGlB,kBAAC8E,EAAA,EAAD,KACI,kBAACiH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQxI,UAAWpB,EAAQsE,YACvB,kBAACyF,GAAA,EAAD,QAGR,kBAAC9G,EAAA,EAAD,CACI5E,QAASmH,EAAWF,iBACpB1H,UAAU,0CAGlB,kBAAC8E,EAAA,EAAD,KACI,kBAACiH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQxI,UAAWpB,EAAQwE,YACvB,kBAACwF,GAAA,EAAD,QAGR,kBAAC/G,EAAA,EAAD,CACI5E,QAASmH,EAAWD,iBACpB3H,UAAU,6CAM9B,kBAAC+J,GAAA,EAAD,CAAMnF,MAAI,EAACkG,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC1B,kBAACC,GAAA,EAAD,KACI,yBAAKzH,UAAWpB,EAAQ0D,eACpB,yBACIuG,IAAI,YACJ7I,UAAWpB,EAAQyD,KACnByG,IAAK,8BAET,yBAAK9I,UAAWpB,EAAQ/C,OACpB,kBAAC4E,EAAA,EAAD,CAAYT,UAAWpB,EAAQ2D,WAA/B,aAGA,kBAAC9B,EAAA,EAAD,CAAYT,UAAWpB,EAAQ6D,SAC1BA,EAAQ6B,QAAS,IACE,SAAnB7B,EAAQsG,QACL,kBAACC,GAAA,EAAD,CAAMC,KAAK,QAAQC,MAAM,WAKzC,kBAAClI,EAAA,EAAD,MACA,6BACI,kBAACC,EAAA,EAAD,CAAMkI,UAAU,MAAM7I,aAAW,wBAC7B,kBAACgB,EAAA,EAAD,CACIE,QAAM,EACNjB,QAAS,kBACLsF,OAAO5G,KAAK,2BAGhB,kBAAC2C,EAAA,EAAD,KACI,kBAACpE,EAAA,EAAD,OAEJ,kBAACqE,EAAA,EAAD,CAAc5E,QAAQ,iBACtB,kBAAC2E,EAAA,EAAD,CAAc5B,UAAWpB,EAAQgE,WAC7B,kBAACwG,GAAA,EAAD,QAGR,kBAAC9H,EAAA,EAAD,CACIE,QAAM,EACNjB,QAAS,kBACLsF,OAAO5G,KACH,4CAIR,kBAAC2C,EAAA,EAAD,KACI,kBAACyH,GAAA,EAAD,OAEJ,kBAACxH,EAAA,EAAD,CAAc5E,QAAQ,WACtB,kBAAC2E,EAAA,EAAD,CAAc5B,UAAWpB,EAAQgE,WAC7B,kBAACwG,GAAA,EAAD,QAGR,kBAAC9H,EAAA,EAAD,CACIE,QAAM,EACNjB,QAAS,kBACLsF,OAAO5G,KAAK,iCAGhB,kBAAC2C,EAAA,EAAD,KACI,kBAAC0H,GAAA,EAAD,OAEJ,kBAACzH,EAAA,EAAD,CAAc5E,QAAQ,iBACtB,kBAAC2E,EAAA,EAAD,CAAc5B,UAAWpB,EAAQgE,WAC7B,kBAACwG,GAAA,EAAD,QAGR,kBAAC9H,EAAA,EAAD,CACIE,QAAM,EACNjB,QAAS,kBACLsF,OAAO5G,KAAK,iCAGhB,kBAAC2C,EAAA,EAAD,KACI,kBAAC2H,GAAA,EAAD,OAEJ,kBAAC1H,EAAA,EAAD,CAAc5E,QAAQ,6BACtB,kBAAC2E,EAAA,EAAD,CAAc5B,UAAWpB,EAAQgE,WAC7B,kBAACwG,GAAA,EAAD,QAGR,kBAAC9H,EAAA,EAAD,CACIE,QAAM,EACNjB,QAAS,kBACLsF,OAAO5G,KACH,qCAIR,kBAAC2C,EAAA,EAAD,KACI,kBAAC4H,GAAA,EAAD,OAEJ,kBAAC3H,EAAA,EAAD,CAAc5E,QAAQ,0BACtB,kBAAC2E,EAAA,EAAD,CAAc5B,UAAWpB,EAAQgE,WAC7B,kBAACwG,GAAA,EAAD,QAGR,kBAAC9H,EAAA,EAAD,CACIE,QAAM,EACNjB,QAAS,kBACLsF,OAAO5G,KACH,iDAIR,kBAAC2C,EAAA,EAAD,CAAc6H,MAAO,CAAEpN,MAAO,YAC1B,kBAACqN,GAAA,EAAD,OAEJ,kBAAC7H,EAAA,EAAD,CAAc5E,QAAQ,yCACtB,kBAAC2E,EAAA,EAAD,CAAc5B,UAAWpB,EAAQgE,WAC7B,kBAACwG,GAAA,EAAD,YAOxB,kBAAC7C,GAAA,EAAD,CAAMnF,MAAI,EAACkG,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC1B,kBAACC,GAAA,EAAD,CAAOzH,UAAWpB,EAAQkC,OACtB,kBAACG,EAAA,EAAD,KACKwC,GACGA,EAAKtC,KAAI,SAACiE,GAAD,OACL,oCACI,kBAAC9D,EAAA,EAAD,CACIE,QAAM,EACNxF,WAAW,aACXuE,QAAS,kBACLsF,OAAO5G,KACH,iCACImG,EAAEjD,MAId,kBAACoG,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACIK,IAAI,gBACJC,IACInF,EACIyB,EAAEuE,cACGC,UAAU3E,KAAK9C,KAExBwB,EACIyB,EAAEuE,cACGC,UAAU3E,KAAK9C,IACtB0H,aAId,kBAAChI,EAAA,EAAD,CACI5E,QAASmI,EAAEkB,WAAWzK,MACtBW,UACI,kBAAC,IAAMsN,SAAP,KACI,kBAACrJ,EAAA,EAAD,CACI0I,UAAU,OACVzI,QAAQ,QACRV,UACIpB,EAAQmL,OAEZ1N,MAAM,eAELsH,EACGyB,EAAEuE,cACGC,UAAU3E,KACV9C,KAELwB,EACIyB,EAAEuE,cACGC,UACA3E,KAAK9C,IACZ6H,SAAU,KAlBxB,qBAoBQ,IACJ,kBAAC,KAAD,CACIC,SACI7E,EAAEkB,WACG4D,UAETC,OAAO,cAM3B,kBAACnJ,EAAA,EAAD,c,mECte9B7G,GAAYC,aAAW,SAACJ,GAAD,YAAY,CACrCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJmP,KAAM,CACFjR,SAAU,IACVkR,UAAW,GACXC,aAAc,IAElBC,cAAc,eACTvQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,wBAKN,SAAS4Q,KACpB,IAAM5L,EAAUzE,KAChB,EAA8B2E,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KACA,EAA8B5L,mBAAS,CACnCgF,QAAS,GACT6G,SAAU,GACVC,UAAW,GACXC,QAAS,GACTC,UAAW,GACXC,WAAY,GACZC,eAAgB,GAChBC,gBAAiB,GACjBC,eAAgB,GAChBC,YAAa,GACbC,gBAAiB,GACjBC,qBAAsB,KAZ1B,mBAAOlE,EAAP,KAAgBmE,EAAhB,KAeMC,EAAe,SAACjG,GAAD,OAAU,SAACtD,GAC5BsJ,EAAW,2BACJnE,GADG,kBAEL7B,EAAOtD,EAAMwJ,OAAOpE,WAIvB3H,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAGLK,qBAAU,WACN+E,KAAI4G,KAAK,iBAAkB,CACvBC,KAAMC,OAAOD,KAAKvE,KAEjBpC,MAAK,SAACC,GACHsG,EAAWtG,EAASC,SAEvBc,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAGvD,IA0BH,OACI,6BACI,0BAAM2F,SA1BC,SAACC,GACZA,EAAEC,iBACFpB,GAAW,GACX,IAAMqB,EAAS,GACfJ,OAAOD,KAAKvE,GAAShC,SAAQ,SAACE,GAC1B0G,EAAOxK,KAAK,CACRI,IAAK0D,EACL+B,MAAOD,EAAQ9B,QAGvBR,KAAIqC,MAAM,iBAAkB,CACxBC,QAAS4E,IAERhH,MAAK,WACFP,EAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,QAOX,yBAAK1K,UAAWpB,EAAQ1F,MACpB,kBAACuH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,4BAGA,yBAAK1H,UAAWpB,EAAQ2L,eACpB,yBAAKvK,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,sBAGA,kBAACC,GAAA,EAAD,CACIhF,MAAOD,EAAQwD,SACf5I,SAAUwJ,EAAa,YACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,0CAKR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,sBAGA,kBAACC,GAAA,EAAD,CACIhF,MAAOD,EAAQyD,UACf7I,SAAUwJ,EAAa,eAE3B,kBAACe,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,0CAKR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIhF,MAAOD,EAAQ0D,QACf9I,SAAUwJ,EAAa,aAE3B,kBAACe,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,8HAKR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,mBAGA,kBAACC,GAAA,EAAD,CACI/F,KAAM,MACNe,MAAOD,EAAQrD,QACf/B,SAAUwJ,EAAa,WACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,8QAKR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIhF,MAAOD,EAAQ2D,UACf/I,SAAUwJ,EAAa,eAE3B,kBAACe,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,yDAKR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIG,WAAS,EACTnF,MAAOD,EAAQ4D,WACfhJ,SAAUwJ,EAAa,gBAE3B,kBAACe,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,0FAOhB,yBAAKnC,UAAWpB,EAAQ1F,MACpB,kBAACuH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,wCAGA,yBAAK1H,UAAWpB,EAAQ2L,eACpB,yBAAKvK,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,sBAGA,kBAACC,GAAA,EAAD,CACIhF,MAAOD,EAAQ6D,eACfjJ,SAAUwJ,EAAa,oBAE3B,kBAACe,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,uEAKR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,sBAGA,kBAACC,GAAA,EAAD,CACIhF,MAAOD,EAAQ8D,gBACflJ,SAAUwJ,EAAa,qBAE3B,kBAACe,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,8EAKR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,sBAGA,kBAACC,GAAA,EAAD,CACIhF,MAAOD,EAAQ+D,eACfnJ,SAAUwJ,EAAa,oBAE3B,kBAACe,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,wEAKR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACK,GAAA,EAAD,CACIpF,MAAOD,EAAQgE,YACfpJ,SAAUwJ,EAAa,gBAEvB,kBAACkB,GAAA,EAAD,CAAUrF,MAAO,cAAjB,cAGA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,cAAjB,cAGA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,cAAjB,cAGA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,WAAjB,YAIJ,kBAACkF,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,sEAKR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,sBAGA,kBAACC,GAAA,EAAD,CACIhF,MAAOD,EAAQiE,gBACfrJ,SAAUwJ,EAAa,qBAE3B,kBAACe,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,wLAOZ,yBAAKnC,UAAWpB,EAAQ2L,eACpB,yBAAKvK,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,sBAGA,kBAACC,GAAA,EAAD,CACIhF,MAAOD,EAAQkE,qBACftJ,SAAUwJ,EACN,0BAGR,kBAACe,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,wBAOhB,yBAAKnC,UAAWpB,EAAQ1F,MACpB,kBAAC+N,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,mB,mCC7SL,SAASsQ,GAAT,GAAqD,IAA9B9Q,EAA6B,EAA7BA,MAAO8I,EAAsB,EAAtBA,IAAK1F,EAAiB,EAAjBA,KAAMyH,EAAW,EAAXA,QACpD,OACI,kBAACD,GAAA,EAAD,CACIxH,KAAMA,EACNyH,QAASA,EACTC,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAa1E,GAAG,sBAAsBtG,GACtC,kBAACiL,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAmB5E,GAAG,4BAClB,kBAAC1B,EAAA,EAAD,KAAakE,KAGrB,kBAACqC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ1G,QAASmG,EAASrK,MAAM,WAAhC,wBCRhB,IAAMlC,GAAYC,aAAW,SAACJ,GAAD,YAAY,CACrCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJmP,KAAM,CACFjR,SAAU,IACVkR,UAAW,GACXC,aAAc,IAElBC,cAAc,eACTvQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,wBAKN,SAASgT,KACpB,IAAMhO,EAAUzE,KAChB,EAA8B2E,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KACA,EAA8B5L,mBAAS,CACnC+N,iBAAkB,IAClBC,cAAe,IACfC,aAAc,IACdC,cAAe,IACfC,YAAa,IACbC,eAAgB,IAChBC,cAAe,MAPnB,mBAAOhG,EAAP,KAAgBmE,EAAhB,KASA,EAA8BxM,mBAAS,IAAvC,mBAAOgF,EAAP,KAAgBC,EAAhB,KACA,EAA4BjF,mBAAS,IAArC,mBAAOsO,EAAP,KAAeC,EAAf,KACA,EAAkCvO,oBAAS,GAA3C,mBAAOwO,EAAP,KAAkBC,EAAlB,KAEMhC,EAAe,SAACjG,GAAD,OAAU,SAACtD,GAC5B,IAAIoF,EAAQpF,EAAMwJ,OAAOpE,WACI/F,IAAzBW,EAAMwJ,OAAOgC,UACbpG,EAAQpF,EAAMwJ,OAAOgC,QAAU,IAAM,KAEzClC,EAAW,2BACJnE,GADG,kBAEL7B,EAAO8B,OAYV3H,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAGLK,qBAAU,WACN+E,KAAI4G,KAAK,iBAAkB,CACvBC,KAAK,GAAD,oBAAMC,OAAOD,KAAKvE,IAAlB,CAA4B,cAE/BpC,MAAK,SAACC,GACHjB,EAAWiB,EAASC,KAAKnB,gBAClBkB,EAASC,KAAKnB,QACrBwH,EAAWtG,EAASC,SAEvBc,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAGtDpB,KAAIC,IAAI,iBACHC,MAAK,SAACC,GACHqI,EAAUrI,EAASC,SAEtBc,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAGvD,IAEH,IAtC2BX,EA8D3B,OACI,6BACI,kBAACqH,GAAD,CACI9Q,MAAO,eACP8I,IACI,qOAEJ+B,QAAS,kBAAM6G,GAAa,IAC5BtO,KAAMqO,IAEV,0BAAM1B,SAlCC,SAACC,GACZA,EAAEC,iBACFpB,GAAW,GACX,IAAMqB,EAAS,GACfJ,OAAOD,KAAKvE,GAAShC,SAAQ,SAACE,GAC1B0G,EAAOxK,KAAK,CACRI,IAAK0D,EACL+B,MAAOD,EAAQ9B,QAGvBR,KAAIqC,MAAM,iBAAkB,CACxBC,QAAS4E,IAERhH,MAAK,WACFP,EAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,QAeX,yBAAK1K,UAAWpB,EAAQ1F,MACpB,kBAACuH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,kCAGA,yBAAK1H,UAAWpB,EAAQ2L,eACpB,yBAAKvK,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACwB,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIH,QACiC,MAA7BrG,EAAQ0F,iBAEZ9K,SAAUwJ,EACN,sBAIZrC,MAAM,+CAEV,kBAACoD,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,4GAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACwB,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIH,QAC6B,MAAzBrG,EAAQ4F,aAEZhL,SAAUwJ,EACN,kBAIZrC,MAAM,6BAEV,kBAACoD,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,kTAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACwB,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIH,QAC4B,MAAxBrG,EAAQ8F,YAEZlL,SAAUwJ,EACN,iBAIZrC,MAAM,mCAEV,kBAACoD,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,wEAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACwB,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIH,QAC8B,MAA1BrG,EAAQ6F,cAEZjL,SAAUwJ,EACN,mBAIZrC,MAAM,mCAEV,kBAACoD,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,wEAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACwB,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIH,QAC+B,MAA3BrG,EAAQ+F,eAEZnL,SAAUwJ,EACN,oBAIZrC,MAAM,+CAEV,kBAACoD,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,oFAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACwB,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIH,QAC8B,MAA1BrG,EAAQgG,cAEZpL,SAAU,SAAC8J,GAEF/H,EAAQpC,WACL,YAMR6J,EAAa,gBAAbA,CACIM,GAJA0B,GAAa,MAS7BrE,MAAM,cAEV,kBAACoD,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,iMAOR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACK,GAAA,EAAD,CACIpF,MAAOD,EAAQ2F,cACf/K,UA9NLuD,EA+NS,gBA/NA,SAACtD,GACjC,IAAMoF,EAAQpF,EAAMwJ,OAAOpE,MAC3BkE,EAAW,2BACJnE,GADG,kBAEL7B,EAAO8B,OA6NgBiF,UAAQ,GAEPe,EAAOjM,KAAI,SAACiE,GACT,OAAa,IAATA,EAAEwI,GACK,KAGP,kBAACnB,GAAA,EAAD,CACI9K,IAAKyD,EAAEwI,GACPxG,MAAOhC,EAAEwI,GAAGC,YAEXzI,EAAE0I,UAKnB,kBAACxB,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,0EAQhB,yBAAKnC,UAAWpB,EAAQ1F,MACpB,kBAAC+N,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,mB,eCpSdlC,GAAYC,aAAW,SAACJ,GAAD,YAAY,CACrCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJmP,KAAM,CACFjR,SAAU,IACVkR,UAAW,GACXC,aAAc,IAElBC,cAAc,eACTvQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjBmU,aAAc,CACV9S,WAAY,OAIL,SAAS4C,KACpB,IAAMe,EAAUzE,KAChB,EAA8B2E,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KACA,EAAwB5L,oBAAS,GAAjC,mBAAOkP,EAAP,KAAaC,EAAb,KACA,EAAiCnP,mBAAS,IAA1C,mBAAOoP,EAAP,KAAiBC,EAAjB,KACA,EAA8BrP,mBAAS,CACnCsP,SAAU,GACVC,WAAY,GACZC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,eAAgB,GAChBC,eAAgB,KAChBC,yBAA0B,GAC1BC,wBAAyB,KAX7B,mBAAO3H,EAAP,KAAgBmE,EAAhB,KAcMC,EAAe,SAACjG,GAAD,OAAU,SAACtD,GAC5BsJ,EAAW,2BACJnE,GADG,kBAEL7B,EAAOtD,EAAMwJ,OAAOpE,WAevB3H,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAGLK,qBAAU,WACN+E,KAAI4G,KAAK,iBAAkB,CACvBC,KAAMC,OAAOD,KAAKvE,KAEjBpC,MAAK,SAACC,GACHsG,EAAWtG,EAASC,SAEvBc,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAGvD,IAEH,IA/B2BX,EAmF3B,OACI,6BACI,kBAACmB,GAAA,EAAD,CACIxH,KAAM+O,EACNtH,QAAS,kBAAMuH,GAAQ,IACvBtH,kBAAgB,qBAEhB,kBAACE,GAAA,EAAD,CAAa1E,GAAG,qBAAhB,4BACA,kBAAC2E,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACtG,EAAA,EAAD,uIAGA,kBAACA,EAAA,EAAD,2QAKJ,kBAACsO,GAAA,EAAD,CACIC,WAAS,EACTzV,OAAO,QACP4I,GAAG,OACH+G,MAAM,iCACN9B,MAAO8G,EACPnM,SAAU,SAAC8J,GAAD,OAAOsC,EAAatC,EAAEL,OAAOpE,QACvCf,KAAK,QACL4F,WAAS,KAGjB,kBAACjF,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ1G,QAAS,kBAAM0N,GAAQ,IAAQ5R,MAAM,WAA7C,gBAGA,kBAAC4K,GAAA,EAAD,CACI1G,QAAS,kBArFzBmK,GAAW,QACX7F,KAAI4G,KAAK,kBAAmB,CACxBwD,GAAIf,IAEHnJ,MAAK,WACFP,EAAe,MAAO,QAAS,6CAAW,cAE7CuB,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,OA2EHgC,SAAUjC,EACVpO,MAAM,WAHV,kBAUR,0BAAMuP,SApEC,SAACC,GACZA,EAAEC,iBACFpB,GAAW,GACX,IAAMqB,EAAS,GACfJ,OAAOD,KAAKvE,GAAShC,SAAQ,SAACE,GAC1B0G,EAAOxK,KAAK,CACRI,IAAK0D,EACL+B,MAAOD,EAAQ9B,QAGvBR,KAAIqC,MAAM,iBAAkB,CACxBC,QAAS4E,IAERhH,MAAK,WACFP,EAAe,MAAO,QAAS,iCAAS,WAxBhDK,KAAIC,IAAI,uBAEHC,MAAK,eACLgB,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAGjDlB,MAAK,kBAoBLgB,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,QAgDX,yBAAK1K,UAAWpB,EAAQ1F,MACpB,kBAACuH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,gBAIA,yBAAK1H,UAAWpB,EAAQ2L,eACpB,yBAAKvK,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIhF,MAAOD,EAAQiH,SACfrM,SAAUwJ,EAAa,YACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,wEAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACI/F,KAAM,QACNgG,UAAQ,EACRjF,MAAOD,EAAQkH,WACftM,SAAUwJ,EAAa,gBAE3B,kBAACe,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,gDAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,2BAGA,kBAACC,GAAA,EAAD,CACIhF,MAAOD,EAAQmH,SACfvM,SAAUwJ,EAAa,YACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,oFAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,qBAGA,kBAACC,GAAA,EAAD,CACI8C,WAAY,CAAEC,IAAK,EAAGC,KAAM,GAC5B/I,KAAM,SACNe,MAAOD,EAAQoH,SACfxM,SAAUwJ,EAAa,YACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,kEAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,2BAGA,kBAACC,GAAA,EAAD,CACIhF,MAAOD,EAAQsH,SACf1M,SAAUwJ,EAAa,YACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,4GAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,qBAGA,kBAACC,GAAA,EAAD,CACI/F,KAAM,WACNe,MAAOD,EAAQuH,SACf3M,SAAUwJ,EAAa,YACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,0CAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIhF,MAAOD,EAAQqH,QACfzM,SAAUwJ,EAAa,WACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,0IAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACwB,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIH,QAC+B,MAA3BrG,EAAQwH,eAEZ5M,UAjQbuD,EAkQiB,iBAlQR,SAACtD,GACjC,IAAIoF,EAAQpF,EAAMwJ,OAAOpE,WACI/F,IAAzBW,EAAMwJ,OAAOgC,UACbpG,EAAQpF,EAAMwJ,OAAOgC,QAAU,IAAM,KAEzClC,EAAW,2BACJnE,GADG,kBAEL7B,EAAO8B,SA+PgB8B,MAAM,8CAEV,kBAACoD,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,4RASR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gDAGA,kBAACC,GAAA,EAAD,CACI8C,WAAY,CAAEC,IAAK,EAAGC,KAAM,GAC5B/I,KAAM,SACNe,MAAOD,EAAQyH,eACf7M,SAAUwJ,EAAa,kBACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,sIAShB,yBAAKnC,UAAWpB,EAAQ1F,MACpB,kBAACuH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,4BAIA,yBAAK1H,UAAWpB,EAAQ2L,eACpB,yBAAKvK,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIhF,MAAOD,EAAQ0H,yBACf9M,SAAUwJ,EACN,4BAEJgB,WAAS,EACT8C,QAAQ,KACRhD,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,oFAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIhF,MAAOD,EAAQ2H,wBACf/M,SAAUwJ,EACN,2BAEJgB,WAAS,EACT8C,QAAQ,KACRhD,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,wDAQhB,yBAAKnC,UAAWpB,EAAQ1F,MACpB,kBAAC+N,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,gBAQC,MACD,kBAAC4K,GAAA,EAAD,CACIjH,UAAWpB,EAAQmP,aACnBrN,QAAS,WACTrE,MAAO,UACPkE,QAAS,kBAAM0N,GAAQ,KAJ3B,2C,eCvYL,SAASqB,GAAT,GAQX,IAPAvN,EAOD,EAPCA,SACAoN,EAMD,EANCA,IACA/H,EAKD,EALCA,MACAiF,EAID,EAJCA,SACAnD,EAGD,EAHCA,MACAqG,EAED,EAFCA,IACAC,EACD,EADCA,OAEM/P,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAGL,EAAwBX,mBAAS,GAAjC,mBAAO2Q,EAAP,KAAaC,EAAb,KACIC,GAAQ,EAENC,EAAYhQ,uBAAY,WAC1B,IAvCewF,EAuCTe,GAvCSf,EAuCWgC,GAtCtB,KACG,CAACyI,KAAKC,MAAM1K,GAAI,GAEvBA,EAAI,QACG,CAACyK,KAAKC,MAAM1K,EAAI,MAAO,MAE9BA,EAAI,WACG,CAACyK,KAAKC,MAAM1K,EAAC,SAAmB,SAEvCA,EAAI,cACG,CAACyK,KAAKC,MAAM1K,EAAC,YAA0B,YAE3C,CACHyK,KAAKC,MAAM1K,EAAC,eACZ,eA6BA,OAJIuK,GAAmB,IAAVvI,IACTsI,EAAQvJ,EAAI,IACZwJ,GAAQ,GAELxJ,IACR,CAACiB,IAEJ,OACI,kBAAC4E,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAAoBjD,GACxC,kBAACkD,GAAA,EAAD,CACI3C,MAAO,CAAEpP,MAAO,KAChB+M,MAAOwI,IAAY,GACnBvJ,KAAM,SACN6I,WAAY,CAAEC,IAAKA,EAAKC,KAAM,GAC9BrN,SAAU,SAAC8J,GACHA,EAAEL,OAAOpE,MAAQqI,EAAOF,EACxBxN,EAAS,CACLyJ,OAAQ,CACJpE,OAAQyE,EAAEL,OAAOpE,MAAQqI,GAAM5B,cAIvCrJ,EACI,MACA,QACA,mDACA,YAIZ6H,SAAUA,EACV0D,aACI,kBAACC,GAAA,EAAD,CAAgB9P,SAAS,OACrB,kBAACsM,GAAA,EAAD,CACIyD,QAAQ,2BACR9N,GAAG,qBACHiF,MAAOqI,EACP1N,SAAU,SAAC8J,GACH+D,IAAY,GAAK/D,EAAEL,OAAOpE,MAAQmI,GAClCxN,EAAS,CACLyJ,OAAQ,CACJpE,OACIwI,IAAY,GAAK/D,EAAEL,OAAOpE,OAC5ByG,cAGV6B,EAAQ7D,EAAEL,OAAOpE,QAEjB5C,EACI,MACA,QACA,mDACA,aAKZ,kBAACiI,GAAA,EAAD,CAAUrF,MAAO,GAAjB,IAAsBoI,GAAUA,GAChC,kBAAC/C,GAAA,EAAD,CAAUrF,MAAO,MAAjB,KACOoI,GAAUA,GAEjB,kBAAC/C,GAAA,EAAD,CAAUrF,MAAO,SAAjB,KACOoI,GAAUA,GAEjB,kBAAC/C,GAAA,EAAD,CAAUrF,MAAO,YAAjB,KACOoI,GAAUA,GAEjB,kBAAC/C,GAAA,EAAD,CAAUrF,MAAO,eAAjB,KACOoI,GAAUA,QCxG7C,IAAMrV,GAAYC,aAAW,SAACJ,GAAD,YAAY,CACrCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJmP,KAAM,CACFjR,SAAU,IACVkR,UAAW,GACXC,aAAc,IAElBC,cAAc,eACTvQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,wBAKN,SAASsW,KACpB,IAAMtR,EAAUzE,KAChB,EAA8B2E,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KACA,EAA8B5L,mBAAS,CACnCqR,eAAgB,IAChBC,sBAAuB,IACvBC,UAAW,GACXC,YAAa,IACbC,uBAAwB,IACxBC,gBAAiB,IACjBC,iBAAkB,IAClBC,gBAAiB,IACjBC,oBAAqB,IACrBC,0BAA2B,IAC3BC,uBAAwB,IACxBC,kBAAmB,IACnBC,yBAA0B,IAC1BC,+BAAgC,IAChCC,wBAAyB,IACzBC,0BAA2B,IAC3BC,wBAAyB,IACzBC,iBAAkB,IAClBC,oBAAqB,IACrBC,uBAAwB,IACxBC,uBAAwB,MArB5B,mBAAOpK,EAAP,KAAgBmE,EAAhB,KAgCMC,EAAe,SAACjG,GAAD,OAAU,SAACtD,GAC5BsJ,EAAW,2BACJnE,GADG,kBAEL7B,EAAOtD,EAAMwJ,OAAOpE,WAIvB3H,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAGLK,qBAAU,WACN+E,KAAI4G,KAAK,iBAAkB,CACvBC,KAAMC,OAAOD,KAAKvE,KAEjBpC,MAAK,SAACC,GACHsG,EAAWtG,EAASC,SAEvBc,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAGvD,IAEH,IAnC2BX,EA2D3B,OACI,6BACI,0BAAMsG,SA1BC,SAACC,GACZA,EAAEC,iBACFpB,GAAW,GACX,IAAMqB,EAAS,GACfJ,OAAOD,KAAKvE,GAAShC,SAAQ,SAACE,GAC1B0G,EAAOxK,KAAK,CACRI,IAAK0D,EACL+B,MAAOD,EAAQ9B,QAGvBR,KAAIqC,MAAM,iBAAkB,CACxBC,QAAS4E,IAERhH,MAAK,WACFP,EAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,QAOX,yBAAK1K,UAAWpB,EAAQ1F,MACpB,kBAACuH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,kCAGA,yBAAK1H,UAAWpB,EAAQ2L,eACpB,yBAAKvK,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,uBAGA,kBAACC,GAAA,EAAD,CACI/F,KAAM,SACN6I,WAAY,CACRC,IAAK,EACLC,KAAM,GAEVhI,MAAOD,EAAQgJ,eACfpO,SAAUwJ,EAAa,kBACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,iKAOR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,wCAGA,kBAACC,GAAA,EAAD,CACI/F,KAAM,SACN6I,WAAY,CACRC,IAAK,EACLC,KAAM,GAEVhI,MAAOD,EAAQiJ,sBACfrO,SAAUwJ,EACN,yBAEJc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,wHAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIhF,MAAOD,EAAQkJ,UACftO,SAAUwJ,EAAa,aACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,0LAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACsD,GAAD,CACIlI,MAAOD,EAAQmJ,YACfvO,SAAUwJ,EAAa,eACvBc,UAAQ,EACR8C,IAAK,EACLI,IAAK,WACLrG,MAAO,iEAEX,kBAACoD,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,oLAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,iDAGA,kBAACC,GAAA,EAAD,CACI/F,KAAM,SACN6I,WAAY,CACRC,IAAK,EACLC,KAAM,GAEVhI,MAAOD,EAAQoJ,uBACfxO,SAAUwJ,EACN,0BAEJc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,yMAOR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACwB,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIH,QAEI,MADArG,EAAQ+J,0BAGZnP,UAjLbuD,EAkLiB,4BAlLR,SAACtD,GACjC,IAAMoF,EAAQpF,EAAMwJ,OAAOgC,QAAU,IAAM,IAC3ClC,EAAW,2BACJnE,GADG,kBAEL7B,EAAO8B,SAkLgB8B,MAAM,mFAEV,kBAACoD,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,8MAQhB,yBAAKnC,UAAWpB,EAAQ1F,MACpB,kBAACuH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,+BAGA,yBAAK1H,UAAWpB,EAAQ2L,eACnB,CACG,CACIjF,KAAM,2BACNkM,MAAO,mBAEX,CACIlM,KAAM,2BACNkM,MAAO,oBAEX,CACIlM,KAAM,2BACNkM,MAAO,mBAEX,CACIlM,KAAM,8CACNkM,MAAO,uBAEX,CACIlM,KAAM,2BACNkM,MAAO,6BAEX,CACIlM,KAAM,2BACNkM,MAAO,yBACPC,IAAK,8FAET,CACInM,KAAM,uCACNkM,MAAO,iCACPC,IACI,oJAER,CACInM,KAAM,kEACNkM,MAAO,2BACPC,IACI,wNAER,CACInM,KAAM,oCACNkM,MAAO,0BACPC,IACI,uMAER,CACInM,KAAM,gDACNkM,MAAO,0BACPC,IACI,kLAEVtQ,KAAI,SAACuQ,GAAD,OACF,yBAAK/P,IAAK+P,EAAMpM,KAAMtF,UAAWpB,EAAQwL,MACrC,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBACfuF,EAAMpM,MAEX,kBAAC8G,GAAA,EAAD,CACI/F,KAAM,SACN6I,WAAY,CACRC,IAAK,EACLC,KAAM,GAEVhI,MAAOD,EAAQuK,EAAMF,OACrBzP,SAAUwJ,EAAamG,EAAMF,OAC7BnF,UAAQ,IAEXqF,EAAMD,KACH,kBAACnF,GAAA,EAAD,CAAgBnK,GAAG,yBACduP,EAAMD,YASnC,yBAAKzR,UAAWpB,EAAQ1F,MACpB,kBAACuH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,4BAGA,yBAAK1H,UAAWpB,EAAQ2L,eACnB,CACG,CACIjF,KAAM,4DACNkM,MAAO,oBACPC,IAAK,iGAET,CACInM,KAAM,yDACNkM,MAAO,sBACPC,IAAK,oGAET,CACInM,KAAM,mDACNkM,MAAO,mBACPC,IACI,8OAER,CACInM,KAAM,qEACNkM,MAAO,yBACPC,IACI,wLAER,CACInM,KAAM,yDACNkM,MAAO,yBACPC,IAAK,iHAEXtQ,KAAI,SAACuQ,GAAD,OACF,yBAAK/P,IAAK+P,EAAMpM,KAAMtF,UAAWpB,EAAQwL,MACrC,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBACfuF,EAAMpM,MAEX,kBAAC8G,GAAA,EAAD,CACI/F,KAAM,SACN6I,WAAY,CACRC,IAAK,EACLC,KAAM,GAEVhI,MAAOD,EAAQuK,EAAMF,OACrBzP,SAAUwJ,EAAamG,EAAMF,OAC7BnF,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgBnK,GAAG,yBACduP,EAAMD,YAQ/B,yBAAKzR,UAAWpB,EAAQ1F,MACpB,kBAAC+N,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,mB,iJCzXdlC,GAAYC,aAAW,SAACJ,GAAD,MAAY,CACrC2X,OAAQ,CACJ,QAAS,CACLvY,UAAW,mBAEfiR,UAAWrQ,EAAMC,QAAQ,IAE7B,UAAW,CACP,0BAA2B,CACvBb,UAAW,oBAGnBwY,UAAW,CACPxP,OAAQ,GACR/H,MAAO,QAEXwX,IAAK,CACDC,UAAW,aAIJ,SAASC,GAAT,GAAmD,IAA5B9S,EAA2B,EAA3BA,KAAMyH,EAAqB,EAArBA,QAASkF,EAAY,EAAZA,SAC3ChN,EAAUzE,KAChB,EAA0B2E,mBAAS,CAC/BxC,QAAS,CACLW,QAAS,CACLC,KAAM,UACN8U,aAAc,QAElBxV,UAAW,CACPU,KAAM,UACN8U,aAAc,WAR1B,mBAAOhY,EAAP,KAAciY,EAAd,KAaMC,EAAWtS,uBAAY,WACzB,OAAOuS,aAAenY,KACvB,CAACA,IAEJ,OACI,kBAACyM,GAAA,EAAD,CAAQxH,KAAMA,EAAMyH,QAASA,EAASuF,WAAS,EAAC9S,SAAU,MACtD,kBAAC2N,GAAA,EAAD,KACI,kBAACP,GAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,GAAA,EAAD,CAAMtM,QAAS,EAAGsN,GAAI,EAAGD,GAAI,GAAId,WAAS,GACtC,kBAACD,GAAA,EAAD,CAAMgB,GAAI,EAAGD,GAAI,GAAIlG,MAAI,GACrB,kBAACX,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,sBAGA,kBAACqH,GAAA,EAAD,CACI3H,MAAOpN,EAAMsC,QAAQW,QAAQC,KAC7B6E,SAAU,SAAC8J,GACPoG,EAAS,2BACFjY,GADC,IAEJsC,QAAQ,2BACDtC,EAAMsC,SADN,IAEHW,QAAQ,2BACDjD,EAAMsC,QAAQW,SADd,IAEHC,KAAM2O,EAAEL,OAAOpE,cAK/B6E,WAAS,IAEb,yBAAKjM,UAAWpB,EAAQ+S,QACpB,kBAAC,KAAD,CACIS,OAAQ,CACJ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEJ/V,MAAOrC,EAAMsC,QAAQW,QAAQC,KAC7BmV,iBAAkB,SAACC,GACfL,EAAS,2BACFjY,GADC,IAEJsC,QAAQ,2BACDtC,EAAMsC,SADN,IAEHW,QAAQ,2BACDjD,EAAMsC,QAAQW,SADd,IAEHC,KAAMoV,EAAEC,gBAQpC,kBAAChM,GAAA,EAAD,CAAMgB,GAAI,EAAGD,GAAI,GAAIlG,MAAI,GACrB,kBAACX,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,sBAGA,kBAACqH,GAAA,EAAD,CACI3H,MAAOpN,EAAMsC,QAAQE,UAAUU,KAC/B6E,SAAU,SAAC8J,GACPoG,EAAS,2BACFjY,GADC,IAEJsC,QAAQ,2BACDtC,EAAMsC,SADN,IAEHE,UAAU,2BACHxC,EAAMsC,QAAQE,WADZ,IAELU,KAAM2O,EAAEL,OAAOpE,cAK/B6E,WAAS,IAEb,yBAAKjM,UAAWpB,EAAQ+S,QACpB,kBAAC,KAAD,CACIS,OAAQ,CACJ,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEJ/V,MAAOrC,EAAMsC,QAAQE,UAAUU,KAC/BmV,iBAAkB,SAACC,GACfL,EAAS,2BACFjY,GADC,IAEJsC,QAAQ,2BACDtC,EAAMsC,SADN,IAEHE,UAAU,2BACHxC,EAAMsC,QAAQE,WADZ,IAELU,KAAMoV,EAAEC,gBAQpC,kBAAChM,GAAA,EAAD,CAAMgB,GAAI,EAAGD,GAAI,GAAIlG,MAAI,GACrB,kBAACX,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,kCAGA,kBAACqH,GAAA,EAAD,CACI3H,MAAOpN,EAAMsC,QAAQW,QAAQ+U,aAC7BjQ,SAAU,SAAC8J,GACPoG,EAAS,2BACFjY,GADC,IAEJsC,QAAQ,2BACDtC,EAAMsC,SADN,IAEHW,QAAQ,2BACDjD,EAAMsC,QAAQW,SADd,IAEH+U,aAAcnG,EAAEL,OAAOpE,cAKvC6E,WAAS,IAEb,yBAAKjM,UAAWpB,EAAQ+S,QACpB,kBAAC,KAAD,CACItV,MAAOrC,EAAMsC,QAAQW,QAAQ+U,aAC7BK,iBAAkB,SAACC,GACfL,EAAS,2BACFjY,GADC,IAEJsC,QAAQ,2BACDtC,EAAMsC,SADN,IAEHW,QAAQ,2BACDjD,EAAMsC,QAAQW,SADd,IAEH+U,aAAcM,EAAEC,gBAQ5C,kBAAChM,GAAA,EAAD,CAAMgB,GAAI,EAAGD,GAAI,GAAIlG,MAAI,GACrB,kBAACX,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,kCAGA,kBAACqH,GAAA,EAAD,CACI3H,MAAOpN,EAAMsC,QAAQE,UAAUwV,aAC/BjQ,SAAU,SAAC8J,GACPoG,EAAS,2BACFjY,GADC,IAEJsC,QAAQ,2BACDtC,EAAMsC,SADN,IAEHE,UAAU,2BACHxC,EAAMsC,QAAQE,WADZ,IAELwV,aAAcnG,EAAEL,OAAOpE,cAKvC6E,WAAS,IAEb,yBAAKjM,UAAWpB,EAAQ+S,QACpB,kBAAC,KAAD,CACItV,MAAOrC,EAAMsC,QAAQE,UAAUwV,aAC/BK,iBAAkB,SAACC,GACfL,EAAS,2BACFjY,GADC,IAEJsC,QAAQ,2BACDtC,EAAMsC,SADN,IAEHE,UAAU,2BACHxC,EAAMsC,QAAQE,WADZ,IAELwV,aAAcM,EAAEC,iBAShD,kBAAChM,GAAA,EAAD,CAAMtM,QAAS,EAAGsN,GAAI,EAAGD,GAAI,IACzB,kBAACkL,GAAA,EAAD,CAAexY,MAAOkY,KAClB,yBACIlS,UAAWpB,EAAQgT,UACnBnI,MAAO,CACH/M,gBAAiBwV,IAAW5V,QAAQW,QAC/BwV,QAGb,kBAACxS,EAAA,EAAD,CAAQC,SAAS,UACb,kBAACE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIG,KAAK,QACLR,UAAWpB,EAAQzD,WACnBkB,MAAM,UACNiE,aAAW,QAEX,kBAAC,KAAD,OAEJ,kBAACG,EAAA,EAAD,CACIC,QAAQ,KACRV,UAAWpB,EAAQ/C,OAFvB,WAQR,yBAAK4N,MAAO,CAAE7P,QAAS,KACnB,kBAACmV,GAAA,EAAD,CACI9C,WAAS,EACT5P,MAAO,YACP6M,MAAO,6BAEX,yBACIlJ,UAAWpB,EAAQiT,IACnBpI,MAAO,CAAE5M,WAAY,KAErB,kBAAC6V,GAAA,EAAD,CAAKrW,MAAM,YAAYiE,aAAW,OAC9B,kBAACqS,GAAA,EAAD,aAQ5B,kBAAC3L,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ1G,QAASmG,EAASrK,MAAM,WAAhC,gBAGA,kBAAC4K,GAAA,EAAD,CAAQ1G,QAAS,kBAAMqL,EAAS5R,IAAQqC,MAAM,WAA9C,kBC7ThB,IAAMlC,GAAYC,aAAW,SAACJ,GAAD,YAAY,CACrCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJmP,KAAM,CACFjR,SAAU,IACVkR,UAAW,GACXC,aAAc,IAElBC,cAAc,eACTvQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjBgZ,eAAgB,CACZtZ,QAAS,QAEbuZ,SAAU,CACNxY,MAAO,GACP+H,OAAQ,GACR0Q,aAAc,MACd7X,WAAY,OAIL,SAAS8X,KACpB,IAAMnU,EAAUzE,KAChB,EAA8B2E,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KACA,EAA0B5L,mBAAS,IAAnC,mBAAO9E,EAAP,KAAciY,EAAd,KACA,EAA8BnT,mBAAS,CACnCkU,OAAQ,KACRC,aAAc,GACdC,iBAAkB,OAClBC,kBAAmB,SAJvB,mBAAOhM,EAAP,KAAgBmE,EAAhB,KAMA,EAAsCxM,mBAAS,IAA/C,mBAAOsU,EAAP,KAAoBC,EAApB,KACA,EAAgDvU,mBAAS,IAAzD,mBAAOwU,EAAP,KAAyBC,EAAzB,KACA,EAA4BzU,oBAAS,GAArC,mBAAOnE,EAAP,KAAe6Y,EAAf,KAEM/T,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IA2CLK,qBAAU,WACN,IAAMqG,EAAMsN,KAAKC,MAAMvM,EAAQ6L,QACzBW,EAAc,GAEpBhI,OAAOD,KAAKvF,GAAKhB,SAAQ,SAACE,GACtBsO,EAAYtO,GAAKoO,KAAKG,UAAUzN,EAAId,OAGxC4M,EAAS9L,GACTkN,EAAeM,KAChB,CAACxM,EAAQ6L,SAEZ,IAAMzH,EAAe,SAACjG,GAAD,OAAU,SAACtD,GAC5BsJ,EAAW,2BACJnE,GADG,kBAEL7B,EAAOtD,EAAMwJ,OAAOpE,WAI7BtH,qBAAU,WACN+E,KAAI4G,KAAK,iBAAkB,CACvBC,KAAMC,OAAOD,KAAKvE,KAEjBpC,MAAK,SAACC,GACHsG,EAAWtG,EAASC,SAEvBc,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAGvD,IA0BH,OACI,6BACI,0BAAM2F,SA1BC,SAACC,GACZA,EAAEC,iBACFpB,GAAW,GACX,IAAMqB,EAAS,GACfJ,OAAOD,KAAKvE,GAAShC,SAAQ,SAACE,GAC1B0G,EAAOxK,KAAK,CACRI,IAAK0D,EACL+B,MAAOD,EAAQ9B,QAGvBR,KAAIqC,MAAM,iBAAkB,CACxBC,QAAS4E,IAERhH,MAAK,WACFP,EAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,QAOX,yBAAK1K,UAAWpB,EAAQ1F,MACpB,kBAACuH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,4BAGA,yBAAK1H,UAAWpB,EAAQ2L,eACpB,yBAAKvK,UAAWpB,EAAQwL,MACpB,kBAACyJ,GAAA,EAAD,CAAOvT,aAAW,gBACd,kBAACwT,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,2BACA,kBAACA,GAAA,EAAD,iCACA,kBAACA,GAAA,EAAD,uBAGR,kBAACC,GAAA,EAAD,KACKtI,OAAOD,KAAK1R,GAAOmH,KAAI,SAACkE,GAAD,OACpB,kBAAC0O,GAAA,EAAD,CAAUpS,IAAK0D,GACX,kBAAC2O,GAAA,EAAD,CACI7K,UAAU,KACV+K,MAAM,OAEN,yBACIlU,UACIpB,EAAQgU,gBAGZ,yBACInJ,MAAO,CACH/M,gBACI1C,EAAMqL,GAAG/I,QACJW,QACAC,MAEb8C,UACIpB,EAAQiU,WAGhB,yBACIpJ,MAAO,CACH/M,gBACI1C,EAAMqL,GAAG/I,QACJE,UACAU,MAEb8C,UACIpB,EAAQiU,aAKxB,kBAACmB,GAAA,EAAD,KACI,kBAACjF,GAAA,EAAD,CACI/I,MAAOsN,EAAiBjO,GACxB8O,WACIb,EAAiBjO,IACjB,iCAEJ4G,WAAS,EACTM,WAAS,EACTxK,SAAU,SAAC8J,GACPwH,EAAe,2BACRD,GADO,kBAET/N,EAAIwG,EAAEL,OAAOpE,UAGtBgN,OAAQ,SAACvI,GACL,IACI,IAAM1F,EAAMsN,KAAKC,MACb7H,EAAEL,OAAOpE,OAEb,KAEQ,YACAjB,MAGA,YACAA,EAAI7J,YAGJ,SACA6J,EAAI7J,QACCW,YAGL,cACAkJ,EAAI7J,YAGJ,SACA6J,EAAI7J,QACCE,WAGT,MAAMqP,EAEVoG,EAAS,2BACFjY,GADC,kBAEHqL,EAAIc,KAEX,MAAO0F,GAOL,YANA0H,EAAoB,2BAETD,GAFQ,kBAGVjO,GAAI,KAKjBkO,EAAoB,2BACbD,GADY,kBAEdjO,GAAI,MAGb+B,MAAOgM,EAAY/N,MAG3B,kBAAC2O,GAAA,EAAD,KACI,kBAAC3T,EAAA,EAAD,CACIE,QAAS,kBA1NrC,SAAClE,GACjB,GAAIA,IAAU8K,EAAQ8L,aAItB,GAAItH,OAAOD,KAAK1R,GAAOqa,QAAU,EAC7B7P,EAAe,MAAO,QAAS,qEAAe,eADlD,CAIA,IAAM8P,EAAS,eAAQta,UAChBsa,EAAUjY,GACjB,IAAMkY,EAASd,KAAKG,UAAUU,GAC9BhJ,EAAW,2BACJnE,GADG,IAEN6L,OAAQuB,UAZR/P,EAAe,MAAO,QAAS,mDAAY,WAyNCgQ,CAAYnP,KAGhB,kBAACoP,GAAA,EAAD,cAOxB,6BACI,kBAACxN,GAAA,EAAD,CACIvG,QAAQ,WACRrE,MAAM,UACNoN,MAAO,CAAEY,UAAW,GACpB9J,QAAS,kBAAMiT,GAAU,KAJ7B,yCASJ,kBAACkB,GAAA,EAAD,CAAOC,SAAS,OAAOlL,MAAO,CAAEY,UAAW,IACvC,kBAAC5J,EAAA,EAAD,CAAYC,QAAQ,SAApB,mDACa,IACT,kBAACkU,GAAA,EAAD,CACIC,KACI,0DAEJrJ,OAAQ,UAJZ,0CAOQ,IATZ,wBAeR,yBAAKxL,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACK,GAAA,EAAD,CACIpF,MAAOD,EAAQ8L,aACflR,SAAUwJ,EAAa,iBAEtBI,OAAOD,KAAK1R,GAAOmH,KAAI,SAACkE,GAAD,OACpB,kBAACoH,GAAA,EAAD,CAAU9K,IAAK0D,EAAG+B,MAAO/B,GACrB,yBACIrF,UACIpB,EAAQgU,gBAGZ,yBACInJ,MAAO,CACH/M,gBACI1C,EAAMqL,GAAG/I,QACJW,QAAQC,MAErB8C,UAAWpB,EAAQiU,WAEvB,yBACIpJ,MAAO,CACH/M,gBACI1C,EAAMqL,GAAG/I,QACJE,UAAUU,MAEvB8C,UAAWpB,EAAQiU,iBAMvC,kBAACvG,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,4IAQhB,yBAAKnC,UAAWpB,EAAQ1F,MACpB,kBAACuH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,gBAIA,yBAAK1H,UAAWpB,EAAQ2L,eACpB,yBAAKvK,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gEAGA,kBAACK,GAAA,EAAD,CACIpF,MAAOD,EAAQ+L,iBACfnR,SAAUwJ,EAAa,oBACvBc,UAAQ,GAER,kBAACI,GAAA,EAAD,CAAUrF,MAAO,QAAjB,sBACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,aAAjB,sBAGA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,QAAjB,iBAEJ,kBAACkF,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,iJAOZ,yBAAKnC,UAAWpB,EAAQ2L,eACpB,yBAAKvK,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,sEAGA,kBAACK,GAAA,EAAD,CACIpF,MAAOD,EAAQgM,kBACfpR,SAAUwJ,EAAa,qBACvBc,UAAQ,GAER,kBAACI,GAAA,EAAD,CAAUrF,MAAO,QAAjB,sBACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,aAAjB,sBAGA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,QAAjB,iBAEJ,kBAACkF,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,4IAQhB,yBAAKnC,UAAWpB,EAAQ1F,MACpB,kBAAC+N,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,kBAWR,kBAAC0V,GAAD,CACInG,SA5VK,SAACkJ,GAEd,GADAtB,GAAU,QACmCnS,IAAzCrH,EAAM8a,EAASxY,QAAQW,QAAQC,MAAnC,CASA,IAAMiJ,EAAG,2BACFnM,GADE,kBAEJ8a,EAASxY,QAAQW,QAAQC,KAAO4X,IAE/BP,EAASd,KAAKG,UAAUzN,GAC9BmF,EAAW,2BACJnE,GADG,IAEN6L,OAAQuB,UAfR/P,EACI,MACA,QACA,2EACA,YAsVAvF,KAAMtE,EACN+L,QAAS,kBAAM8M,GAAU,OC5azC,IAAMrZ,GAAYC,aAAW,SAACJ,GAAD,YAAY,CACrCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJmP,KAAM,CACFjR,SAAU,IACVkR,UAAW,GACXC,aAAc,IAElBC,cAAc,eACTvQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,wBAKN,SAASmb,KACpB,IAAMnW,EAAUzE,KAChB,EAA8B2E,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KACA,EAA8B5L,mBAAS,CACnCkW,gBAAiB,GACjBC,YAAa,GACbC,YAAa,GACbC,cAAe,GACfC,cAAe,GACfC,cAAe,GACfC,YAAa,GACbC,aAAc,GACdC,uBAAwB,KAT5B,mBAAOrO,EAAP,KAAgBmE,EAAhB,KAYMC,EAAe,SAACjG,GAAD,OAAU,SAACtD,GAC5BsJ,EAAW,2BACJnE,GADG,kBAEL7B,EAAOtD,EAAMwJ,OAAOpE,WAIvB3H,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAGLK,qBAAU,WACN+E,KAAI4G,KAAK,iBAAkB,CACvBC,KAAMC,OAAOD,KAAKvE,KAEjBpC,MAAK,SAACC,GACHsG,EAAWtG,EAASC,SAEvBc,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAGvD,IA0BH,OACI,6BACI,0BAAM2F,SA1BC,SAACC,GACZA,EAAEC,iBACFpB,GAAW,GACX,IAAMqB,EAAS,GACfJ,OAAOD,KAAKvE,GAAShC,SAAQ,SAACE,GAC1B0G,EAAOxK,KAAK,CACRI,IAAK0D,EACL+B,MAAOD,EAAQ9B,QAGvBR,KAAIqC,MAAM,iBAAkB,CACxBC,QAAS4E,IAERhH,MAAK,WACFP,EAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,QAOX,yBAAK1K,UAAWpB,EAAQ1F,MACpB,kBAACuH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,gBAGA,yBAAK1H,UAAWpB,EAAQ2L,eACpB,yBAAKvK,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,+BAGA,kBAACC,GAAA,EAAD,CACI/F,KAAM,MACNe,MAAOD,EAAQ6N,gBACfjT,SAAUwJ,EAAa,mBACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,yGAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,wCAGA,kBAACC,GAAA,EAAD,CACIhF,MAAOD,EAAQ8N,YACflT,SAAUwJ,EAAa,eACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,0FAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACqD,GAAD,CACIlI,MAAOD,EAAQ+N,YACfnT,SAAUwJ,EAAa,eACvBc,UAAQ,EACR8C,IAAK,EACLI,IAAK,WACLrG,MAAO,qDAEX,kBAACoD,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,0FAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACI/F,KAAM,SACN6I,WAAY,CACRC,IAAK,EACLC,KAAM,GAEVhI,MAAOD,EAAQkO,cACftT,SAAUwJ,EAAa,iBACvBc,UAAQ,MAKpB,yBAAKrM,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACI/F,KAAM,SACN6I,WAAY,CACRC,IAAK,EACLC,KAAM,GAEVhI,MAAOD,EAAQiO,cACfrT,SAAUwJ,EAAa,iBACvBc,UAAQ,MAKpB,yBAAKrM,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACI/F,KAAM,SACN6I,WAAY,CACRC,IAAK,EACLC,KAAM,GAEVhI,MAAOD,EAAQgO,cACfpT,SAAUwJ,EAAa,iBACvBc,UAAQ,QAO5B,yBAAKrM,UAAWpB,EAAQ1F,MACpB,kBAACuH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,4BAIA,yBAAK1H,UAAWpB,EAAQ2L,eACpB,yBAAKvK,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACI/F,KAAM,SACN6I,WAAY,CACRC,IAAK,EACLC,KAAM,GAEVhI,MAAOD,EAAQmO,YACfvT,SAAUwJ,EAAa,eACvBc,UAAQ,OAMxB,yBAAKrM,UAAWpB,EAAQ2L,eACpB,yBAAKvK,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACI/F,KAAM,SACN6I,WAAY,CACRC,IAAK,EACLC,KAAM,GAEVhI,MAAOD,EAAQoO,aACfxT,SAAUwJ,EAAa,gBACvBc,UAAQ,MAIpB,yBAAKrM,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,+CAGA,kBAACC,GAAA,EAAD,CACIhF,MAAOD,EAAQqO,uBACfzT,SAAUwJ,EACN,0BAEJc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,+DAEI,6BACA,8BAAO,UAHX,sBAII,6BACA,8BAAO,aALX,0DAahB,yBAAKnC,UAAWpB,EAAQ1F,MACpB,kBAAC+N,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,mB,sHCzQdlC,GAAYC,aAAW,SAACJ,GAAD,MAAY,CACrCyb,cAAe,CACXnc,QAAS,QAEboc,MAAO,CACHrb,MAAO,IACP+H,OAAQ,IAEZuT,KAAM,GACN9b,QAAS,CACL+b,KAAM,YAEVC,GAAI,CACAnZ,gBAAiB1C,EAAMsC,QAAQK,WAAWC,QAC1ChD,QAAS,aAEbkc,aAAc,CACV7Z,eAAgB,qBAIlB8Z,GAAW,CACb,CACIzQ,KAAM,2BACN0Q,IAAK,YACLvY,KAAM,2BAEV,CACI6H,KAAM,2BACN0Q,IAAK,aACLvY,KAAM,4BAEV,CACI6H,KAAM,eACN0Q,IAAK,YACLvY,KAAM,2BAEV,CACI6H,KAAM,yBACN0Q,IAAK,UACLvY,KAAM,yBAEV,CACI6H,KAAM,qBACN0Q,IAAK,YACLvY,KAAM,2BAEV,CACI6H,KAAM,yBACN0Q,IAAK,UACLvY,KAAM,yBAEV,CACI6H,KAAM,WACN0Q,IAAK,eACLvY,KAAM,8BAEV,CACI6H,KAAM,YACN0Q,IAAK,SACLvY,KAAM,yBAIC,SAASwY,GAAT,GAAuC,IAAlBhX,EAAiB,EAAjBA,KAAMyH,EAAW,EAAXA,QAChC9H,EAAUzE,KAEVoF,EAAWD,cAEjB,OACI,kBAACmH,GAAA,EAAD,CACIxH,KAAMA,EACNyH,QAASA,EACTC,kBAAgB,qBAChBC,mBAAiB,2BACjBzN,SAAU,KACV8S,WAAS,GAET,kBAACpF,GAAA,EAAD,CAAa1E,GAAG,sBAAhB,wCACA,kBAAC2E,GAAA,EAAD,CAAeoP,UAAQ,EAAClW,UAAWpB,EAAQiX,IACvC,kBAACtP,GAAA,EAAD,CAAMC,WAAS,EAACvM,QAAS,GACpB8b,GAAS5U,KAAI,SAACiE,GAAD,OACV,kBAACmB,GAAA,EAAD,CAAMnF,MAAI,EAAC+U,GAAI,GAAI5O,GAAI,EAAG5F,IAAKyD,EAAE3H,MAC7B,kBAAC2Y,GAAA,EAAD,CAAMpW,UAAWpB,EAAQ+W,MACrB,kBAACU,GAAA,EAAD,CACI9V,QAAS,WACLhB,EAASgC,KAAK6D,EAAE3H,MAChBiJ,KAEJ1G,UAAWpB,EAAQ6W,eAEnB,kBAACa,GAAA,EAAD,CACItW,UAAWpB,EAAQ8W,MACnBa,MAAO,eAAiBnR,EAAE4Q,MAE9B,kBAACQ,GAAA,EAAD,CAAaxW,UAAWpB,EAAQ/E,SAC5B,kBAAC4G,EAAA,EAAD,CACIC,QAAQ,YACRrE,MAAM,iBAEL+I,EAAEE,eASnC,kBAAC0B,GAAA,EAAD,CAAehH,UAAWpB,EAAQkX,cAC9B,kBAAC7O,GAAA,EAAD,CACI1G,QAAS,kBACLsF,OAAO5G,KACH,kDAGR5C,MAAM,WANV,wCAUA,kBAAC4K,GAAA,EAAD,CAAQ1G,QAASmG,EAASrK,MAAM,WAAhC,kBC9GhB,IAAMlC,GAAYC,aAAW,SAACJ,GAAD,YAAY,CACrCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJpB,QAAS,CACLD,QAASI,EAAMC,QAAQ,IAE3BuM,UAAW,CACP9K,UAAW,QAEf+a,eAAgB,CACZpM,UAAW,IAEfqM,OAAQ,CACJpd,QAAS,OACT2C,eAAgB,iBAEpB0a,YAAa,OAGXC,GAAU,CACZ,CAAEzU,GAAI,IAAK+G,MAAO,IAAKrG,SAAU,IACjC,CAAEV,GAAI,OAAQ+G,MAAO,eAAMrG,SAAU,KACrC,CAAEV,GAAI,OAAQ+G,MAAO,eAAMrG,SAAU,KACrC,CACIV,GAAI,QACJ+G,MAAO,iCACPrG,SAAU,GACVgU,MAAO,SAEX,CACI1U,GAAI,OACJ+G,MAAO,qBACPrG,SAAU,IACVgU,MAAO,SAEX,CACI1U,GAAI,SACJ+G,MAAO,eACPrG,SAAU,IACVgU,MAAO,UAQA,SAASC,KACpB,IAAMlY,EAAUzE,KAGhB,EAAgC2E,mBAAS,IAAzC,mBAAOiX,EAAP,KAAiBgB,EAAjB,KACA,EAA8BjY,mBAAS,IAAvC,mBAAOkY,EAAP,KAAgBC,EAAhB,KACA,EAAwBnY,mBAAS,GAAjC,mBAAOoY,EAAP,KAAaC,EAAb,KACA,EAAgCrY,mBAAS,IAAzC,mBAAOsY,EAAP,KAAiBC,EAAjB,KACA,EAA0BvY,mBAAS,GAAnC,mBAAOwY,EAAP,KAAcC,EAAd,KACA,EAAkCzY,oBAAS,GAA3C,mBAAO0Y,EAAP,KAAkBC,EAAlB,KACA,EAA4B3Y,mBAAS,OAArC,mBAAO4Y,EAAP,KAAeC,EAAf,KACA,EAAgC9T,IAAM/E,SAAS,MAA/C,mBAAO8Y,EAAP,KAAiBC,EAAjB,KACA,EAA4BhU,IAAM/E,SAAS,GAA3C,mBAAOgZ,EAAP,KAAeC,EAAf,KAEMxY,EAAWC,cACXH,EAAUC,cACV0Y,EAnBC,IAAIC,gBAAgBzY,cAAc0Y,QAyBnCC,EAAc,WAChBN,EAAY,OAGVpY,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAGLK,qBAAU,WACoB,MAAtBkY,EAAMlT,IAAI,QACVN,EAAe,MAAO,QAAS,2BAAQ,WAChCwT,EAAMlT,IAAI,QAA+B,KAArBkT,EAAMlT,IAAI,QACrCN,EACI,MACA,QACAwT,EAAMlT,IAAI,OAAS,KAAOkT,EAAMlT,IAAI,OACpC,aAGT,CAACvF,IAEJ,IAAM6Y,EAAW,WACbvT,KAAI4G,KAAK,qBAAsB,CAC3ByL,KAAMA,EACNmB,UAAWjB,EACXkB,SAAU,UACVC,WAAuB,QAAXb,EAAmB,GAAK,CAAErR,KAAMqR,KAE3C3S,MAAK,SAACC,GACH+R,EAAY/R,EAASC,KAAK3H,OAC1B2Z,EAAWjS,EAASC,KAAK+R,SACzBO,EAASvS,EAASC,KAAKqS,UAE1BvR,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,aAI1DnG,qBAAU,WACNsY,MACD,CAAClB,EAAME,EAAUM,IAEpB,IAWMzY,EAAOuZ,QAAQZ,GAErB,OACI,6BACI,kBAAC3B,GAAD,CAAWhX,KAAMuY,EAAW9Q,QAAS,kBAAM+Q,GAAa,MACxD,yBAAKzX,UAAWpB,EAAQ8X,QACpB,kBAACzP,GAAA,EAAD,CACI5K,MAAO,UACPkE,QAAS,kBAAMkX,GAAa,IAC5B/W,QAAS,aAHb,wCAOA,yBAAKV,UAAWpB,EAAQ+X,aACpB,kBAACnK,GAAA,EAAD,CACI/C,MAAO,CACHrO,YAAa,GAEjBgM,MAAOsQ,EACP3V,SAAU,SAAC8J,GAAD,OAAO8L,EAAU9L,EAAEL,OAAOpE,SAEpC,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,OAAjB,gBACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,SAAjB,gBACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,UAAjB,gBACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,SAAjB,gBACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,SAAjB,sBACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,OAAjB,0BACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,OAAjB,0BACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,YAAjB,YACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,MAAjB,cAEJ,kBAACH,GAAA,EAAD,CACI5K,MAAO,UACPkE,QAAS,kBAAM6X,KACf1X,QAAS,YAHb,kBAUR,kBAAC+G,GAAA,EAAD,CAAO3F,QAAM,EAAC9B,UAAWpB,EAAQ6X,gBAC7B,kBAACgC,GAAA,EAAD,CAAgBzY,UAAWpB,EAAQ4H,WAC/B,kBAACqN,GAAA,EAAD,CAAOvT,aAAW,eAAe2I,KAAM,SACnC,kBAAC6K,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAUtK,MAAO,CAAErH,OAAQ,KACtBwU,GAAQzV,KAAI,SAACuX,GAAD,OACT,kBAAC1E,GAAA,EAAD,CACIrS,IAAK+W,EAAOvW,GACZ0U,MAAO6B,EAAO7B,MACdpN,MAAO,CAAE5G,SAAU6V,EAAO7V,WAEzB6V,EAAOxP,YAKxB,kBAAC+K,GAAA,EAAD,KACK8B,EAAS5U,KAAI,SAACwX,GAAD,OACV,kBAAC5E,GAAA,EAAD,CAAU6E,OAAK,EAACjX,IAAKgX,EAAI/K,IACrB,kBAACoG,GAAA,EAAD,KAAY2E,EAAI/K,IAChB,kBAACoG,GAAA,EAAD,KAAY2E,EAAI7K,MAChB,kBAACkG,GAAA,EAAD,UAEQ3S,IADHwX,KAAcF,EAAIG,OAEfD,KAAcF,EAAIG,OAE1B,kBAAC9E,GAAA,EAAD,CAAW6C,MAAO,cACOxV,IAApB2V,EAAQ2B,EAAI/K,KACToJ,EAAQ2B,EAAI/K,IAAI,GAAGmL,kBAE3B,kBAAC/E,GAAA,EAAD,CAAW6C,MAAO,cACOxV,IAApB2V,EAAQ2B,EAAI/K,KACToL,aAAahC,EAAQ2B,EAAI/K,IAAI,KAErC,kBAACoG,GAAA,EAAD,CAAW6C,MAAO,SACd,kBAAC,KAAD,CAAShb,MAAO,gBACZ,kBAACwE,EAAA,EAAD,CACIE,QAAS,kBAzF/B4B,EA0FuCwW,EAAI/K,QAzF7D/I,KAAIoU,OAAO,iBAAmB9W,GACzB4C,MAAK,WACFqT,IACA5T,EAAe,MAAO,QAAS,6CAAW,cAE7CuB,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAPrC,IAAC9D,GA4FsB8G,KAAM,SAEN,kBAACwL,GAAA,EAAD,QAGR,kBAAC,KAAD,CAAS5Y,MAAO,gBACZ,kBAACwE,EAAA,EAAD,CACIE,QAAS,SAACsL,GACNkM,EAAUY,EAAI/K,IApJ1DiK,EAqJwDhM,EArJtCqN,gBAuJsBjQ,KAAM,SAEN,kBAACkQ,GAAA,EAAD,gBAShC,kBAACC,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,KAC7BlQ,UAAU,MACVmQ,MAAOhC,EACPiC,YAAanC,EACbF,KAAMA,EAAO,EACbsC,aAAc,SAAC3N,EAAG4N,GAAJ,OAAUtC,EAAQsC,EAAI,IACpCC,oBAAqB,SAAC7N,GAClBwL,EAAYxL,EAAEL,OAAOpE,OACrB+P,EAAQ,OAIpB,kBAAC,KAAD,CACIlY,KAAMA,EACN2Y,SAAUA,EACVlR,QAASyR,EACTwB,aAAW,GAEX,kBAAClN,GAAA,EAAD,CACIlM,QAAS,SAACsL,GACNsM,IACA9Y,EAAQkC,KAAK,0BAA4BuW,KAHjD,wCAQA,kBAACrL,GAAA,EAAD,CACIlM,QAAS,SAACsL,GACNsM,IACA9Y,EAAQkC,KAAK,4BAA8BuW,KAHnD,0C,sECnRD,SAAS8B,GAAT,GAA4D,IAArC7X,EAAoC,EAApCA,SAAUqF,EAA0B,EAA1BA,MAAOiF,EAAmB,EAAnBA,SAAUnD,EAAS,EAATA,MAC7D,EAA4BpK,mBAAS,IAArC,mBAAO+a,EAAP,KAAeC,EAAf,KACA,EAAgChb,mBAAS,YAAzC,mBAAOib,EAAP,KAAiBC,EAAjB,KACA,EAA0Blb,qBAA1B,mBAAOkH,EAAP,KAAciU,EAAd,KAyBA,OAvBAnb,oBAAS,YACLsI,EAAQA,GAAgB,IACd1F,WAAW,aACjBoY,EAAU1S,EAAM8S,QAAQ,WAAY,KACpCF,EAAY,aAEE,KAAV5S,IACA0S,EAAU1S,EAAM8S,QAAQ,UAAW,KACnCF,EAAY,cAGrB,CAAC5S,IAEJtH,qBAAU,WACW,YAAbia,GAAuD,WAA7BlU,OAAOtG,SAASwa,SAC1CE,EACI,2JAGJA,EAAS,MAEd,CAACF,IAGA,kBAAC/N,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAAoBjD,GACxC,kBAACkD,GAAA,EAAD,CACIpG,MAAiB,KAAVA,EACPoB,MAAOyS,EACP9X,SAAU,SAAC8J,GACPiO,EAAUjO,EAAEL,OAAOpE,OACnBrF,EAAS,CACLyJ,OAAQ,CACJpE,MAAO2S,EAAWlO,EAAEL,OAAOpE,UAIvCiF,SAAUA,EACV8N,eACI,kBAACnK,GAAA,EAAD,CAAgB9P,SAAS,SACrB,kBAACsM,GAAA,EAAD,CACIpF,MAAO2S,EACPhY,SAAU,SAAC8J,GACPmO,EAAYnO,EAAEL,OAAOpE,OACrBrF,EAAS,CACLyJ,OAAQ,CACJpE,MAAOyE,EAAEL,OAAOpE,MAAQyS,OAKpC,kBAACpN,GAAA,EAAD,CAAUrF,MAAO,WAAjB,WACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,YAAjB,gBAKL,KAAVpB,GACG,kBAACsG,GAAA,EAAD,CAAgBtG,MAAiB,KAAVA,GAAeA,IC3DvC,SAASoU,GAAT,GAAuD,IAAnCC,EAAkC,EAAlCA,OAAQpb,EAA0B,EAA1BA,KAAMyH,EAAoB,EAApBA,QAAS4T,EAAW,EAAXA,QACtD,OACI,kBAAC7T,GAAA,EAAD,CACIxH,KAAMA,EACNyH,QAASA,EACTC,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAa1E,GAAG,sBACXkY,EAAS,6CAAY,wCAE1B,kBAACvT,GAAA,EAAD,KACI,kBAAC2R,GAAA,EAAD,KACI,kBAAC5E,GAAA,EAAD,CAAO5K,KAAK,QAAQ3I,aAAW,iBAC3B,kBAACwT,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,iCACA,kBAACA,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,uBAGR,kBAACC,GAAA,EAAD,KACI,kBAACF,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAC3B,iBAEL,kBAACF,GAAA,EAAD,yCACA,kBAACA,GAAA,EAAD,0BAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAC3B,gBAEL,kBAACF,GAAA,EAAD,wCACA,kBAACA,GAAA,EAAD,kBAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAC3B,eAEL,kBAACF,GAAA,EAAD,uCACA,kBAACA,GAAA,EAAD,oBAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAC3B,oBAEL,kBAACF,GAAA,EAAD,6CACA,kBAACA,GAAA,EAAD,8BAEFsG,GACE,kBAACvG,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAC3B,SAEL,kBAACF,GAAA,EAAD,uBACA,kBAACA,GAAA,EAAD,WAGPqG,GACG,kBAACtG,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAC3B,gBAEL,kBAACF,GAAA,EAAD,uCACA,kBAACA,GAAA,EAAD,qBAGNqG,IAAWC,GACT,kBAACvG,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAC3B,UAEL,kBAACF,GAAA,EAAD,6CACA,kBAACA,GAAA,EAAD,6DAGR,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAC3B,UAEL,kBAACF,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,kBAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAC3B,cAEL,kBAACF,GAAA,EAAD,iCACA,kBAACA,GAAA,EAAD,wBAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAC3B,UAEL,kBAACF,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,cAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAC3B,WAEL,kBAACF,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,YAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAC3B,SAEL,kBAACF,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,YAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAC3B,UAEL,kBAACF,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,YAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAC3B,YAEL,kBAACF,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,YAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAC3B,YAEL,kBAACF,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,gBAMpB,kBAAChN,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ1G,QAASmG,EAASrK,MAAM,WAAhC,kBC7HhB,IAAMlC,GAAYC,aAAW,SAACJ,GAAD,MAAY,CACrCugB,YAAa,CACT3gB,QAAS,uBAEbwQ,KAAM,CACFjR,SAAU,IACVkR,UAAW,IAEfE,cAAc,eACTvQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjB4gB,iBAAkB,CACdlhB,QAAS,OACTgR,aAAc,GACd1Q,QAAS,GACTa,WAAYT,EAAMU,YAAYC,OAAO,mBAAoB,CACrDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,gBAEzC,iBAAkB,CACd2B,gBAAiB1C,EAAMsC,QAAQK,WAAWC,UAGlD6d,WAAY,CACRpgB,MAAO,GACP+H,OAAQ,GACR1F,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAUke,MAAO,IACxDre,MAAOrC,EAAMsC,QAAQE,UAAUwV,aAC/BF,UAAW,SACXgB,aAAc,QAElB6H,oBAAqB,CACjBvf,YAAa,IAEjBwf,WAAY,CACRvQ,UAAW,IAEf7I,OAAQ,CACJpG,YAAapB,EAAMC,QAAQ,IAE/B4gB,gBAAiB,CAAEC,cAAe,QAClC,UAAW,CACPC,KAAM,CACF1e,MAAO,sBACP/C,QAAS,eACTM,QAAS,UACTohB,WACI,0DACJlI,aAAc,MACdpW,gBAAiB,8BAKvBue,GAAQ,CACV,CACIpf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,iCACPqf,UAAU,GAEd,CACIrf,MAAO,eACPqf,UAAU,IAIH,SAASC,GAASC,GAC7B,IAyC4B9V,EAzCtB1G,EAAUzE,KACVkF,EAAUC,cAEhB,EAAoCR,mBAAS,GAA7C,mBAAOuc,EAAP,KAAmBC,EAAnB,KACA,EAA8Bxc,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KACA,EAA8B7G,IAAM/E,SAAS,IAAIyc,KAAjD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgC3c,mBAAS,IAAzC,mBAAO4c,EAAP,KAAiBC,EAAjB,KACA,EAA4B7c,mBAAS,SAArC,mBAAO8c,EAAP,KAAeC,EAAf,KACA,EAA4B/c,mBACxBsc,EAAMU,OACAV,EAAMU,OACN,CACIhD,KAAM,MACNhL,KAAM,GACNiO,UAAW,GACXC,UAAW,GACXC,QAAS,GACTC,OAAQ,GACRC,UAAW,OACXC,YAAa,+BACbC,WAAY,OACZC,aAAc,4BACdC,mBAAoB,QACpBC,QAAS,IACTC,kBAAmB,CACfC,UAAW,MAjB7B,mBAAOZ,EAAP,KAAea,EAAf,KAqBA,EAAgC7d,mBAC5Bsc,EAAMU,OAASV,EAAMU,OAAOlO,GAAK,GADrC,mBAAOgP,EAAP,KAAiBC,EAAjB,KAGA,EAA4B/d,mBAAS,cAArC,mBAAOge,EAAP,KAAeC,EAAf,KAEMxR,EAAe,SAACjG,GAAD,OAAU,SAACtD,GAC5B2a,EAAU,2BACHb,GADE,kBAEJxW,EAAOtD,EAAMwJ,OAAOpE,WAkBvB3H,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAwFL,OACI,6BACI,kBAACgB,EAAA,EAAD,CAAYC,QAAS,MAChB0a,EAAMU,OAAS,eAAO,eAD3B,oDAGA,kBAACkB,GAAA,EAAD,CAAS3B,WAAYA,GAChBJ,GAAM9Z,KAAI,SAAC+H,EAAO+T,GACf,IAvGO7N,EAuGD8N,EAAY,GACZC,EAAa,GASnB,OARIjU,EAAMgS,WACNiC,EAAWjC,SACP,kBAACza,EAAA,EAAD,CAAYC,QAAQ,WAApB,iBA3GD0O,EA8GW6N,EA7GvBzB,EAAQ4B,IAAIhO,KA8GH8N,EAAUG,WAAY,GAGtB,kBAACC,GAAA,EAAD,eAAM3b,IAAKuH,EAAMrN,OAAWqhB,GACxB,kBAACK,GAAA,EAAcJ,EAAajU,EAAMrN,YAMlC,IAAfwf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,qQAII,0FAJJ,YASR,yBAAKV,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,eAEI,kBAACkU,GAAA,EAAD,CACIC,KACI,yCAEJrJ,OAAQ,UAJZ,sCAFJ,0CAeR,yBAAKxL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,yGAEI,0DAFJ,wCAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACI8C,WAAY,CACRuO,QAAS,oBACT5hB,MACI,sFAERwQ,UAAQ,EACRjF,MAAO0U,EAAO4B,WACd3b,SAAUwJ,EAAa,oBAO3C,yBAAKvL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,6IAEI,0DAFJ,sKAKA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAO0U,EAAOK,UACdpa,SAAUwJ,EAAa,aACvBoN,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,6BAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,8CAQ9B,yBAAKlJ,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,yFAEI,0DAFJ,wCAE6B,IACzB,2DAEJ,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAACwP,GAAD,CACIxS,MAAO0U,EAAOI,OACdna,SAAUwJ,EAAa,UACvBc,UAAQ,EACRnD,MAAO,gCAMvB,yBAAKlJ,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,8GAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAOwU,EACP7Z,SAAU,SAAC8J,GACPgQ,EAAUhQ,EAAEL,OAAOpE,QAEvBuR,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,4BAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAAe,SAAXlC,GACV,yBAAK5b,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,eAEI,kBAACkU,GAAA,EAAD,CACIC,KACI,oDAEJrJ,OAAQ,UAJZ,yDAFJ,mQAcA,yBAAKxL,UAAWpB,EAAQwL,MACpB,kBAACwP,GAAD,CACIxS,MAAO0U,EAAOG,QACdla,SAAUwJ,EAAa,WACvBc,SAAqB,SAAXuP,EACV1S,MAAO,qCAO3B,yBAAKlJ,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACnBsD,aAAU,EAAG,CAAY,SAAXnC,MAGvB,yBAAK5b,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,2BAEI,kBAACkU,GAAA,EAAD,CACIC,KACI,6CAEJrJ,OAAQ,UAJZ,4BAFJ,uOAcA,yBAAKxL,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,YAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACR6C,WAAY,CACRuO,QAAS,OACT5hB,MAAO,wCAEXuL,MAAO0U,EAAOE,UACdja,SAAUwJ,EAAa,iBAInC,yBAAKvL,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,aAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACR6C,WAAY,CACRuO,QAAS,OACT5hB,MAAO,wCAEXuL,MAAO0U,EAAOC,UACdha,SAAUwJ,EAAa,mBAO3C,yBAAKvL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACnBsD,aAAU,EAAG,CAAY,SAAXnC,MAGvB,yBAAK5b,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,0DAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAOhO,KACd/L,SAAUwJ,EAAa,cAO3C,yBAAKvL,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BACIrb,UAAWpB,EAAQof,cACnBpS,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,meAIc,IACV,kBAACkU,GAAA,EAAD,CACIvY,MAAO,YACPkE,QAAS,SAACsL,GACNA,EAAEC,iBACF6P,EAAY,UAJpB,oDAQQ,IAbZ,UAgBA,yBAAK3b,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAOM,YACdra,SAAUwJ,EAAa,qBAO3C,yBAAKvL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,mXAGc,IACV,kBAACkU,GAAA,EAAD,CACIvY,MAAO,YACPkE,QAAS,SAACsL,GACNA,EAAEC,iBACF6P,EAAY,UAJpB,0DAQQ,IAZZ,UAeA,yBAAK3b,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACIrd,aAAW,SACXgF,KAAK,UACL8B,MAAO0U,EAAOO,WACdta,SAAUwJ,EAAa,cACvBoN,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,mCAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,0BAMtB,kBAAC2U,GAAA,EAAD,CAAUC,GAA0B,SAAtBhC,EAAOO,YACjB,yBAAKrc,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,SAC0B,SAAtByP,EAAOO,WAEXjV,MAAO0U,EAAOQ,aACdva,SAAUwJ,EACN,uBAS5B,yBAAKvL,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAOA,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,iFAEI,6BAFJ,kOAMA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAO0U,EAAOS,mBACdxa,SAAU,SAAC8J,GAEkB,SAArBiQ,EAAOK,WACY,SAAnBtQ,EAAEL,OAAOpE,MAUbmE,EAAa,qBAAbA,CACIM,GATArH,EACI,MACA,QACA,qEACA,YAQZmU,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,sBAQ9B,yBAAKlJ,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAMU,IACV,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BAAMrb,UAAWpB,EAAQ2b,YAAa3O,SA5mB7B,SAACC,GAClBA,EAAEC,iBACFpB,GAAW,GAEX,IAAMuT,EAAU,eAAQnC,GACxBmC,EAAWxB,kBAAX,eAAoCwB,EAAWxB,mBAEhC,UAAXb,IACAqC,EAAWhC,QAAUH,EAAOI,QAIhC+B,EAAW5B,WAAuC,SAA1B4B,EAAW5B,WACnC4B,EAAW1B,mBAC2B,SAAlC0B,EAAW1B,mBACf0B,EAAW9B,UAAqC,SAAzB8B,EAAW9B,UAClC8B,EAAWzB,QAAU0B,SAASD,EAAWzB,SACzCyB,EAAWxB,kBAAkBC,UAAYuB,EAAWxB,kBAAkBC,UAAUyB,MAC5E,KAGkD,IAAlDF,EAAWxB,kBAAkBC,UAAUrI,QACO,KAA9C4J,EAAWxB,kBAAkBC,UAAU,KAEvCuB,EAAWxB,kBAAkBC,UAAY,IAG7C7X,KAAI4G,KAAK,gBAAiB,CACtBqQ,OAAQmC,IAEPlZ,MAAK,SAACC,GACHR,EACI,MACA,QACA,kCAAW4W,EAAMU,OAAS,eAAO,gBACjC,WAEJR,EAAc,GACduB,EAAY7X,EAASC,SAExBc,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,MAGnBA,GAAW,KA8jBC,yBAAK1K,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,kFAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MACuB,MAAnB0U,EAAOU,QACD,QACA,OAEVza,SAAU,SAAC8J,GACgB,SAAnBA,EAAEL,OAAOpE,MACTuV,EAAU,2BACHb,GADE,IAELU,QAAS,cAGbG,EAAU,2BACHb,GADE,IAELU,QAAS,QAIrB7D,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,4BAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAAuB,MAAnBhC,EAAOU,SACjB,yBAAKxc,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,kCAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAACkF,GAAD,CACIlI,MAAO0U,EAAOU,QACdza,SAAUwJ,EAAa,WACvB4D,IAAK,EACLI,IAAK,mBACLrG,MAAO,mDAO3B,yBAAKlJ,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACA,MAAnBqB,EAAOU,QAAkB,IAAM,MAGxC,yBAAKxc,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,4EAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAEuB,KADnB0U,EAAOW,kBACFC,UACC,QACA,OAEV3a,SAAU,SAAC8J,GACgB,SAAnBA,EAAEL,OAAOpE,MACTuV,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,IAEbC,UACI,2BAIZC,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,IAEbC,UAAW,SAK3B/D,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,4BAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAA2C,KAAvChC,EAAOW,kBAAkBC,WACnC,yBAAK1c,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACA,MAAnBqB,EAAOU,QAAkB,IAAM,MAGxC,yBAAKxc,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,iJAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIhF,MACI0U,EAAOW,kBACFC,UAET3a,UAlyBZuD,EAmyBgB,YAnyBP,SAACtD,GAClC2a,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,kBAEZnX,EAAOtD,EAAMwJ,OAAOpE,oBAuyBjB,yBAAKpH,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAMU,IACV,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BAAMrb,UAAWpB,EAAQ2b,aACrB,yBAAKva,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,sBACxB,yBAAK3a,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,ocAMA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAACnD,GAAA,EAAD,CACIyF,SAAUjC,EACVpO,MAAO,YACPqE,QAAS,YACTV,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAzwBrCmK,GAAW,QACX7F,KAAI4G,KAAK,qBAAsB,CAC3BtJ,GAAIya,IAEH7X,MAAK,WACFP,EAAe,MAAO,QAAS,6CAAW,WAC1C8W,EAAc,MAEjBvV,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,OA8vBS9L,QAAS,CAAEsK,MAAOtK,EAAQic,kBAN9B,gDAaZ,yBAAK7a,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,WACL+a,GACI,SAAC8C,GAAD,OAAoBA,EAAiB,KAEzC3C,GAAW,SAAC4C,GACR,IAAMC,EAAa,IAAI/C,IACnB8C,EAAYE,UAGhB,OADAD,EAAWE,IAAInD,GACRiD,OAZnB,gBAiBU,MAKN,IAAfjD,GACG,0BAAMrb,UAAWpB,EAAQ2b,aACrB,yBAAKva,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,sBACxB,yBAAK3a,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,wGAEI,kBAACkU,GAAA,EAAD,CACIC,KACI,qDAEJrJ,OAAQ,UAJZ,sBAFJ,sZAYI,6BACA,8BAEJ,kBAAC/K,EAAA,EAAD,CAAYC,QAAS,SAArB,mbAMA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,8CAGA,kBAACK,GAAA,EAAD,CACIpF,MAAO0V,EACP/a,SAAU,SAAC8J,GAAD,OACNkR,EAAUlR,EAAEL,OAAOpE,QAEvBiF,UAAQ,GAER,kBAACI,GAAA,EAAD,CAAUrF,MAAO,cAAjB,0CAGA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,cAAjB,0CAGA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,gBAAjB,0CAGA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,qBAAjB,8CAGA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,eAAjB,4DAGA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,aAAjB,0CAGA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,eAAjB,0CAGA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,gBAAjB,gDAGA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,oBAAjB,0CAGA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,cAAjB,mDAOZ,yBAAKpH,UAAWpB,EAAQwL,MACpB,kBAACnD,GAAA,EAAD,CACIyF,SAAUjC,EACVpO,MAAO,YACPqE,QAAS,YACTV,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAr2BrCmK,GAAW,QACX7F,KAAI4G,KAAK,oBAAqB,CAC1BtJ,GAAIya,EACJE,OAAQA,IAEP/X,MAAK,WACFP,EAAe,MAAO,QAAS,mDAAY,WAC3C8W,EAAc,MAEjBvV,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,OAy1BS9L,QAAS,CAAEsK,MAAOtK,EAAQic,kBAN9B,gDAaZ,yBAAK7a,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,WACL+a,GACI,SAAC8C,GAAD,OAAoBA,EAAiB,KAEzC3C,GAAW,SAAC4C,GACR,IAAMC,EAAa,IAAI/C,IACnB8C,EAAYE,UAGhB,OADAD,EAAWE,IAAInD,GACRiD,OAZnB,gBAiBU,MAKN,IAAfjD,GACG,oCACI,0BAAMrb,UAAWpB,EAAQ2b,aACrB,kBAAC9Z,EAAA,EAAD,sCACU2a,EAAMU,OAAS,eAAO,eADhC,UAGA,kBAACrb,EAAA,EAAD,CAAYC,QAAS,QAASrE,MAAO,iBAArC,2MAIJ,yBAAK2D,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMlB,EAAQkC,KAAK,mBAHhC,sDAWZ,kBAAC6Y,GAAD,CACInb,KAAmB,SAAbyc,EACNrB,QAAM,EACN3T,QAAS,kBAAMiV,EAAY,OAE/B,kBAACvB,GAAD,CACInb,KAAmB,SAAbyc,EACNhV,QAAS,kBAAMiV,EAAY,QC9nC3C,IAAMxhB,GAAYC,aAAW,SAACJ,GAAD,MAAY,CACrCugB,YAAa,CACT3gB,QAAS,uBAEbwQ,KAAM,CACFjR,SAAU,IACVkR,UAAW,IAEfE,cAAc,eACTvQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjB4gB,iBAAkB,CACdlhB,QAAS,OACTgR,aAAc,GACd1Q,QAAS,GACTa,WAAYT,EAAMU,YAAYC,OAAO,mBAAoB,CACrDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,gBAEzC,iBAAkB,CACd2B,gBAAiB1C,EAAMsC,QAAQK,WAAWC,UAGlD6d,WAAY,CACRpgB,MAAO,GACP+H,OAAQ,GACR1F,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAUke,MAAO,IACxDre,MAAOrC,EAAMsC,QAAQE,UAAUwV,aAC/BF,UAAW,SACXgB,aAAc,QAElB6H,oBAAqB,CACjBvf,YAAa,IAEjBwf,WAAY,CACRvQ,UAAW,IAEf7I,OAAQ,CACJpG,YAAapB,EAAMC,QAAQ,QAI7BghB,GAAQ,CACV,CACIpf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,eACPqf,UAAU,IAIH,SAASuD,GAAWrD,GAC/B,IAkC4B9V,EAlCtB1G,EAAUzE,KACVkF,EAAUC,cAEhB,EAAoCR,mBAAS,GAA7C,mBAAOuc,EAAP,KAAmBC,EAAnB,KACA,EAA8Bxc,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KACA,EAAkB7G,IAAM/E,SAAS,IAAIyc,KAA9BC,EAAP,oBACA,EAAgC1c,mBAAS,IAAzC,mBAAO4c,EAAP,KAAiBC,EAAjB,KACA,EAA4B7c,mBAAS,SAArC,mBAAO8c,EAAP,KAAeC,EAAf,KACA,EAA4B/c,mBACxBsc,EAAMU,OACAV,EAAMU,OACN,CACIhD,KAAM,QACNhL,KAAM,GACNsO,YAAa,uBACbC,WAAY,OACZC,aAAc,4BACdC,mBAAoB,QACpBN,QAAS,GACTE,UAAW,OACXK,QAAS,IACTC,kBAAmB,CACfC,UAAW,MAd7B,mBAAOZ,EAAP,KAAea,EAAf,KAmBMpR,EAAe,SAACjG,GAAD,OAAU,SAACtD,GAC5B2a,EAAU,2BACHb,GADE,kBAEJxW,EAAOtD,EAAMwJ,OAAOpE,WAkBvB3H,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAwEL,OACI,6BACI,kBAACgB,EAAA,EAAD,CAAYC,QAAS,MAChB0a,EAAMU,OAAS,eAAO,eAD3B,wCAGA,kBAACkB,GAAA,EAAD,CAAS3B,WAAYA,GAChBJ,GAAM9Z,KAAI,SAAC+H,EAAO+T,GACf,IAvFO7N,EAuFD8N,EAAY,GACZC,EAAa,GASnB,OARIjU,EAAMgS,WACNiC,EAAWjC,SACP,kBAACza,EAAA,EAAD,CAAYC,QAAQ,WAApB,iBA3FD0O,EA8FW6N,EA7FvBzB,EAAQ4B,IAAIhO,KA8FH8N,EAAUG,WAAY,GAGtB,kBAACC,GAAA,EAAD,eAAM3b,IAAKuH,EAAMrN,OAAWqhB,GACxB,kBAACK,GAAA,EAAcJ,EAAajU,EAAMrN,YAKlC,IAAfwf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAhGS,SAACC,GACtBA,EAAEC,iBACFpB,GAAW,GAGX7F,KAAI4G,KAAK,0BAA2B,CAChChO,KAAMqe,EAAOM,cAEZrX,MAAK,WACFuW,EAAc,MAEjBvV,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,QAmFP,yBAAK1K,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,gdAGc,IACV,kBAACkU,GAAA,EAAD,CACIvY,MAAO,YACPkE,QAAS,SAACsL,GACNA,EAAEC,iBACF6P,EAAY,UAJpB,oDAQQ,IAZZ,UAeA,yBAAK3b,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAOM,YACdra,SAAUwJ,EAAa,qBAO3C,yBAAKvL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,mXAGc,IACV,kBAACkU,GAAA,EAAD,CACIvY,MAAO,YACPkE,QAAS,SAACsL,GACNA,EAAEC,iBACF6P,EAAY,UAJpB,0DAQQ,IAZZ,UAeA,yBAAK3b,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACIrd,aAAW,SACXgF,KAAK,UACL8B,MAAO0U,EAAOO,WACdta,SAAUwJ,EAAa,cACvBoN,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,mCAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,0BAMtB,kBAAC2U,GAAA,EAAD,CAAUC,GAA0B,SAAtBhC,EAAOO,YACjB,yBAAKrc,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,SAC0B,SAAtByP,EAAOO,WAEXjV,MAAO0U,EAAOQ,aACdva,SAAUwJ,EACN,uBAS5B,yBAAKvL,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,iFAEI,6BAFJ,kOAMA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAO0U,EAAOS,mBACdxa,SAAUwJ,EACN,sBAEJoN,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,sBAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAAkC,SAA9BhC,EAAOS,oBACjB,yBAAKvc,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,0EAEI,6BAFJ,0KAOA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAOwU,EACP7Z,SAAU,SAAC8J,GAEgB,UAAnBA,EAAEL,OAAOpE,OAETuV,EAAU,2BACHb,GADE,IAELG,QAAS,MAGjBJ,EAAUhQ,EAAEL,OAAOpE,QAEvBuR,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,4BAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAAe,SAAXlC,GACV,yBAAK5b,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,+DAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAACwP,GAAD,CACIxS,MAAO0U,EAAOG,QACdla,SAAUwJ,EAAa,WACvBc,SAEQ,SADJyP,EAAOS,oBACkB,SAAXX,EAElB1S,MAAO,0BAQ/B,yBAAKlJ,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAMU,IACV,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,kFAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MACuB,MAAnB0U,EAAOU,QACD,QACA,OAEVza,SAAU,SAAC8J,GACgB,SAAnBA,EAAEL,OAAOpE,MACTuV,EAAU,2BACHb,GADE,IAELU,QAAS,cAGbG,EAAU,2BACHb,GADE,IAELU,QAAS,QAIrB7D,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,4BAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAAuB,MAAnBhC,EAAOU,SACjB,yBAAKxc,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,kCAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAACkF,GAAD,CACIlI,MAAO0U,EAAOU,QACdza,SAAUwJ,EAAa,WACvB4D,IAAK,EACLI,IAAK,mBACLrG,MAAO,mDAO3B,yBAAKlJ,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACA,MAAnBqB,EAAOU,QAAkB,IAAM,MAGxC,yBAAKxc,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,4EAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAEuB,KADnB0U,EAAOW,kBACFC,UACC,QACA,OAEV3a,SAAU,SAAC8J,GACgB,SAAnBA,EAAEL,OAAOpE,MACTuV,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,IAEbC,UACI,2BAIZC,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,IAEbC,UAAW,SAK3B/D,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,4BAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAA2C,KAAvChC,EAAOW,kBAAkBC,WACnC,yBAAK1c,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACA,MAAnBqB,EAAOU,QAAkB,IAAM,MAGxC,yBAAKxc,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,iJAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIhF,MACI0U,EAAOW,kBACFC,UAET3a,UAriBZuD,EAsiBgB,YAtiBP,SAACtD,GAClC2a,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,kBAEZnX,EAAOtD,EAAMwJ,OAAOpE,oBA0iBjB,yBAAKpH,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAMU,IACV,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BAAMrb,UAAWpB,EAAQ2b,YAAa3O,SA5hB7B,SAACC,GAClBA,EAAEC,iBACFpB,GAAW,GAEX,IAAMuT,EAAU,eAAQnC,GACxBmC,EAAWxB,kBAAX,eAAoCwB,EAAWxB,mBAGhC,UAAXb,GAAoD,UAA9BE,EAAOS,qBAC7B0B,EAAWhC,QAAU,IAIzBgC,EAAW5B,WAAuC,SAA1B4B,EAAW5B,WACnC4B,EAAW1B,mBAC2B,SAAlC0B,EAAW1B,mBACf0B,EAAWzB,QAAU0B,SAASD,EAAWzB,SACzCyB,EAAW9B,UAAqC,SAAzB8B,EAAW9B,UAClC8B,EAAWxB,kBAAkBC,UAAYuB,EAAWxB,kBAAkBC,UAAUyB,MAC5E,KAGkD,IAAlDF,EAAWxB,kBAAkBC,UAAUrI,QACO,KAA9C4J,EAAWxB,kBAAkBC,UAAU,KAEvCuB,EAAWxB,kBAAkBC,UAAY,IAG7C7X,KAAI4G,KAAK,gBAAiB,CACtBqQ,OAAQmC,IAEPlZ,MAAK,WACFP,EACI,MACA,QACA,kCAAW4W,EAAMU,OAAS,eAAO,gBACjC,WAEJR,EAAc,MAEjBvV,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,MAGnBA,GAAW,KA8eC,yBAAK1K,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,sBACxB,yBAAK3a,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,wFAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAOhO,KACd/L,SAAUwJ,EAAa,cAM3C,yBAAKvL,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAMU,IACV,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,kBAYI,IAAfgf,GACG,oCACI,0BAAMrb,UAAWpB,EAAQ2b,aACrB,kBAAC9Z,EAAA,EAAD,sCACU2a,EAAMU,OAAS,eAAO,eADhC,UAGA,kBAACrb,EAAA,EAAD,CAAYC,QAAS,QAASrE,MAAO,iBAArC,2MAIJ,yBAAK2D,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMlB,EAAQkC,KAAK,mBAHhC,sDAWZ,kBAAC6Y,GAAD,CACInb,KAAmB,SAAbyc,EACNrB,QAAM,EACN3T,QAAS,kBAAMiV,EAAY,OAE/B,kBAACvB,GAAD,CACInb,KAAmB,SAAbyc,EACNhV,QAAS,kBAAMiV,EAAY,QC3uB3C,IAAMxhB,GAAYC,aAAW,SAACJ,GAAD,MAAY,CACrCugB,YAAa,CACT3gB,QAAS,uBAEbwQ,KAAM,CACFjR,SAAU,IACVkR,UAAW,IAEfE,cAAc,eACTvQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjB4gB,iBAAkB,CACdlhB,QAAS,OACTgR,aAAc,GACd1Q,QAAS,GACTa,WAAYT,EAAMU,YAAYC,OAAO,mBAAoB,CACrDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,gBAEzC,iBAAkB,CACd2B,gBAAiB1C,EAAMsC,QAAQK,WAAWC,UAGlD6d,WAAY,CACRpgB,MAAO,GACP+H,OAAQ,GACR1F,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAUke,MAAO,IACxDre,MAAOrC,EAAMsC,QAAQE,UAAUwV,aAC/BF,UAAW,SACXgB,aAAc,QAElB6H,oBAAqB,CACjBvf,YAAa,IAEjBwf,WAAY,CACRvQ,UAAW,IAEf7I,OAAQ,CACJpG,YAAapB,EAAMC,QAAQ,IAE/B4gB,gBAAiB,CAAEC,cAAe,QAClC,UAAW,CACPC,KAAM,CACF1e,MAAO,sBACP/C,QAAS,eACTM,QAAS,UACTohB,WACI,0DACJlI,aAAc,MACdpW,gBAAiB,8BAKvBue,GAAQ,CACV,CACIpf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,eACPqf,UAAU,IAIH,SAASwD,GAActD,GAClC,IAAMxc,EAAUzE,KACVkF,EAAUC,cAEhB,EAAoCR,mBAAS,GAA7C,mBAAOuc,EAAP,KAAmBC,EAAnB,KACA,EAA8Bxc,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KACA,EAAkB7G,IAAM/E,SAAS,IAAIyc,KAA9BC,EAAP,oBACA,EAAgC1c,mBAAS,IAAzC,mBAAO4c,EAAP,KAAiBC,EAAjB,KACA,EAA4B7c,sBACxBsc,EAAMU,SAAUV,EAAMU,OAAOW,kBAAkBkC,WACG,KAA5CvD,EAAMU,OAAOW,kBAAkBkC,UAFzC,mBAAO/C,EAAP,KAAeC,EAAf,KAKA,EAA0C/c,sBACtCsc,EAAMU,SAAUV,EAAMU,OAAOW,kBAAkBmC,YACI,KAA7CxD,EAAMU,OAAOW,kBAAkBmC,WAFzC,mBAAOC,EAAP,KAAsBC,EAAtB,KAKA,EAA4BhgB,mBACxBsc,EAAMU,OACAV,EAAMU,OACN,CACIhD,KAAM,WACNhL,KAAM,GACN4P,WAAY,GACZ3B,UAAW,GACXC,UAAW,GACXC,QAAS,GACTC,OAAQ,mCACRC,UAAW,OACXC,YAAa,+BACbC,WAAY,OACZC,aAAc,4BACdC,mBAAoB,QACpBC,QAAS,IACTC,kBAAmB,CACfC,UAAW,GACXqC,YAAa,GACbJ,SAAU,GACVC,UAAW,MArB7B,mBAAO9C,EAAP,KAAea,EAAf,KAyBA,EAAgC7d,mBAC5Bsc,EAAMU,OAASV,EAAMU,OAAOlO,GAAK,GADrC,mBAAOgP,EAAP,KAAiBC,EAAjB,KAGA,EAAoC/d,oBAAS,GAA7C,mBAAOkgB,EAAP,KAAmBC,EAAnB,KAEM1T,EAAe,SAACjG,GAAD,OAAU,SAACtD,GAC5B2a,EAAU,2BACHb,GADE,kBAEJxW,EAAOtD,EAAMwJ,OAAOpE,WAIvB8X,EAAqB,SAAC5Z,GAAD,OAAU,SAACtD,GAClC2a,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,kBAEZnX,EAAOtD,EAAMwJ,OAAOpE,aAS3B3H,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAGLK,qBAAU,WACN+E,KAAI4G,KAAK,iBAAkB,CACvBC,KAAM,CAAC,aAEN3G,MAAK,SAACC,GACEA,EAASC,KAAKnB,QAAQpC,WAAW,aAClCud,GAAc,GAE2B,KAAzCnD,EAAOW,kBAAkBsC,aACzBpC,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,IAEbsC,YAAa,IAAII,IACb,iCACAna,EAASC,KAAKnB,SAChB+J,mBAKjB9H,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAEvD,IA4EH,OACI,6BACI,kBAAC0G,GAAD,CACI1N,KAAM+f,EACNtY,QAAS,kBAAMuY,GAAc,IAC7BpjB,MAAO,eACP8I,IACI,2OAGR,kBAAClE,EAAA,EAAD,CAAYC,QAAS,MAChB0a,EAAMU,OAAS,eAAO,eAD3B,iDAGA,kBAACkB,GAAA,EAAD,CAAS3B,WAAYA,GAChBJ,GAAM9Z,KAAI,SAAC+H,EAAO+T,GACf,IA9HO7N,EA8HD8N,EAAY,GACZC,EAAa,GASnB,OARIjU,EAAMgS,WACNiC,EAAWjC,SACP,kBAACza,EAAA,EAAD,CAAYC,QAAQ,WAApB,iBAlID0O,EAqIW6N,EApIvBzB,EAAQ4B,IAAIhO,KAqIH8N,EAAUG,WAAY,GAGtB,kBAACC,GAAA,EAAD,eAAM3b,IAAKuH,EAAMrN,OAAWqhB,GACxB,kBAACK,GAAA,EAAcJ,EAAajU,EAAMrN,YAMlC,IAAfwf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,eAEI,kBAACkU,GAAA,EAAD,CACIC,KACI,sFAEJrJ,OAAQ,UAJZ,8EAOQ,IATZ,eAUO,IACH,kBAACoJ,GAAA,EAAD,CACIC,KACI,qFAEJrJ,OAAQ,UAJZ,oFAXJ,yDAoBI,wDApBJ,oCAyBR,yBAAKxL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,4BACS,0DADT,wCACkC,IAC9B,oDAFJ,yBAOR,yBAAKV,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,+GAEI,kFAFJ,sBAGI,uJAHJ,SAOK,uEAPL,qBAQO,qCARP,2BASI,8BACKob,EAAOW,kBAAkBsC,aAVlC,6DAiBR,yBAAK/e,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,2EACgB,8CADhB,iCAES,iFAFT,8CAKA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,mDAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAO4B,WACd3b,SAAUwJ,EAAa,oBAO3C,yBAAKvL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,qEACe,gEADf,iCAGI,4EAHJ,qBAIO,0DAJP,qBAKI,8CALJ,4HAQA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAOC,UACdha,SAAUwJ,EAAa,mBAO3C,yBAAKvL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,yEAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAO0U,EAAOI,OACdna,SAAUwJ,EAAa,UACvBoN,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MACI,mCAEJsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,uBAEV,kBAACuE,GAAA,EAAD,CACIrG,MACI,+CAEJsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,wCAQ9B,yBAAKlJ,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,4EAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAOyX,EAAchR,WACrB9L,SAAU,SAAC8J,GACPiT,EACuB,SAAnBjT,EAAEL,OAAOpE,QAGjBuR,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,+CAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,8EAKtB,kBAAC2U,GAAA,EAAD,CAAUC,GAAIe,GACV,yBAAK7e,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,uCAGA,kBAACC,GAAA,EAAD,CACIgT,YACI,4CAEJhY,MACI0U,EAAOW,kBACFmC,UAET7c,SAAUmd,EACN,aAEJ7S,SAAUwS,EACV3V,MAAO,6CAQ/B,yBAAKlJ,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,8IAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAOwU,EAAO/N,WACd9L,SAAU,SAAC8J,GACPgQ,EACuB,SAAnBhQ,EAAEL,OAAOpE,QAGjBuR,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,0BAKtB,kBAAC2U,GAAA,EAAD,CAAUC,GAAIlC,GACV,yBAAK5b,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAAC2N,GAAD,CACIxS,MACI0U,EAAOW,kBACFkC,SAET5c,SAAUmd,EACN,YAEJ7S,SAAUuP,EACV1S,MAAO,oDAQ/B,yBAAKlJ,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,0DAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAOhO,KACd/L,SAAUwJ,EAAa,cAO3C,yBAAKvL,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,meAIc,IACV,kBAACkU,GAAA,EAAD,CACIvY,MAAO,YACPkE,QAAS,SAACsL,GACNA,EAAEC,iBACF6P,EAAY,UAJpB,oDAQQ,IAbZ,UAgBA,yBAAK3b,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAOM,YACdra,SAAUwJ,EAAa,qBAO3C,yBAAKvL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,mXAGc,IACV,kBAACkU,GAAA,EAAD,CACIvY,MAAO,YACPkE,QAAS,SAACsL,GACNA,EAAEC,iBACF6P,EAAY,UAJpB,0DAQQ,IAZZ,UAeA,yBAAK3b,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACIrd,aAAW,SACXgF,KAAK,UACL8B,MAAO0U,EAAOO,WACdta,SAAUwJ,EAAa,cACvBoN,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,mCAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,0BAMtB,kBAAC2U,GAAA,EAAD,CAAUC,GAA0B,SAAtBhC,EAAOO,YACjB,yBAAKrc,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,SAC0B,SAAtByP,EAAOO,WAEXjV,MAAO0U,EAAOQ,aACdva,SAAUwJ,EACN,uBAS5B,yBAAKvL,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAOA,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,iFAEI,6BAFJ,kOAMA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAO0U,EAAOS,mBACdxa,SAAU,SAAC8J,GACPN,EAAa,qBAAbA,CACIM,IAGR8M,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,sBAQ9B,yBAAKlJ,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAMU,IACV,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BAAMrb,UAAWpB,EAAQ2b,YAAa3O,SA5mB7B,SAACC,GAClBA,EAAEC,iBACFpB,GAAW,GAEX,IAAMuT,EAAU,eAAQnC,GACxBmC,EAAWxB,kBAAX,eAAoCwB,EAAWxB,mBAGrB,qCAAtBwB,EAAW/B,OACX+B,EAAWhC,QACP,uDAEJgC,EAAWhC,QAAU,+CAGpBL,IACDqC,EAAWxB,kBAAkBkC,SAAW,IAGvCE,IACDZ,EAAWxB,kBAAkBmC,UAAY,IAI7CX,EAAW5B,WAAuC,SAA1B4B,EAAW5B,WACnC4B,EAAW1B,mBAC2B,SAAlC0B,EAAW1B,mBACf0B,EAAW9B,UAAqC,SAAzB8B,EAAW9B,UAClC8B,EAAWzB,QAAU0B,SAASD,EAAWzB,SACzCyB,EAAWxB,kBAAkBC,UAAYuB,EAAWxB,kBAAkBC,UAAUyB,MAC5E,KAGkD,IAAlDF,EAAWxB,kBAAkBC,UAAUrI,QACO,KAA9C4J,EAAWxB,kBAAkBC,UAAU,KAEvCuB,EAAWxB,kBAAkBC,UAAY,IAG7C7X,KAAI4G,KAAK,gBAAiB,CACtBqQ,OAAQmC,IAEPlZ,MAAK,SAACC,GACHR,EACI,MACA,QACA,kCAAW4W,EAAMU,OAAS,eAAO,gBACjC,WAEJR,EAAc,GACduB,EAAY7X,EAASC,SAExBc,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,MAGnBA,GAAW,KAkjBC,yBAAK1K,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,kFAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MACuB,MAAnB0U,EAAOU,QACD,QACA,OAEVza,SAAU,SAAC8J,GACgB,SAAnBA,EAAEL,OAAOpE,MACTuV,EAAU,2BACHb,GADE,IAELU,QAAS,cAGbG,EAAU,2BACHb,GADE,IAELU,QAAS,QAIrB7D,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,4BAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAAuB,MAAnBhC,EAAOU,SACjB,yBAAKxc,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,kCAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAACkF,GAAD,CACIlI,MAAO0U,EAAOU,QACdza,SAAUwJ,EAAa,WACvB4D,IAAK,EACLI,IAAK,mBACLrG,MAAO,mDAO3B,yBAAKlJ,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACA,MAAnBqB,EAAOU,QAAkB,IAAM,MAGxC,yBAAKxc,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,4EAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAEuB,KADnB0U,EAAOW,kBACFC,UACC,QACA,OAEV3a,SAAU,SAAC8J,GACgB,SAAnBA,EAAEL,OAAOpE,MACTuV,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,IAEbC,UACI,2BAIZC,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,IAEbC,UAAW,SAK3B/D,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,4BAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAA2C,KAAvChC,EAAOW,kBAAkBC,WACnC,yBAAK1c,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACA,MAAnBqB,EAAOU,QAAkB,IAAM,MAGxC,yBAAKxc,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,iJAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIhF,MACI0U,EAAOW,kBACFC,UAET3a,SAAUmd,EACN,oBAS5B,yBAAKlf,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAMU,IACV,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BAAMrb,UAAWpB,EAAQ2b,aACrB,yBAAKva,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,sBACxB,yBAAK3a,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,iCACU0a,EAAMU,OAAS,eAAO,eADhC,6UAMA,yBAAK9b,UAAWpB,EAAQwL,MACpB,kBAACnD,GAAA,EAAD,CACIyF,SAAUjC,EACVpO,MAAO,YACPqE,QAAS,YACTV,UAAWpB,EAAQ4C,OACnBjB,QAx0Bd,WACdmK,GAAW,GACX7F,KAAIC,IAAI,iBAAmB8X,EAAW,UACjC7X,MAAK,SAACC,GACHa,OAAOtG,SAASsV,KAAO7P,EAASC,QAEnCc,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,SAC9CyE,GAAW,OAi0BS9L,QAAS,CAAEsK,MAAOtK,EAAQic,kBAN9B,2CAaZ,yBAAK7a,UAAWpB,EAAQgc,cAIhB,IAAfS,GACG,oCACI,0BAAMrb,UAAWpB,EAAQ2b,aACrB,kBAAC9Z,EAAA,EAAD,yDACA,kBAACA,EAAA,EAAD,CAAYC,QAAS,QAASrE,MAAO,iBAArC,2MAIJ,yBAAK2D,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMlB,EAAQkC,KAAK,mBAHhC,sDAWZ,kBAAC6Y,GAAD,CACInb,KAAmB,SAAbyc,EACNrB,QAAM,EACN3T,QAAS,kBAAMiV,EAAY,OAE/B,kBAACvB,GAAD,CACInb,KAAmB,SAAbyc,EACNhV,QAAS,kBAAMiV,EAAY,QCxiC3C,IAAMxhB,GAAYC,aAAW,SAACJ,GAAD,MAAY,CACrCugB,YAAa,CACT3gB,QAAS,uBAEbwQ,KAAM,CACFjR,SAAU,IACVkR,UAAW,IAEfE,cAAc,eACTvQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjB4gB,iBAAkB,CACdlhB,QAAS,OACTgR,aAAc,GACd1Q,QAAS,GACTa,WAAYT,EAAMU,YAAYC,OAAO,mBAAoB,CACrDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,gBAEzC,iBAAkB,CACd2B,gBAAiB1C,EAAMsC,QAAQK,WAAWC,UAGlD6d,WAAY,CACRpgB,MAAO,GACP+H,OAAQ,GACR1F,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAUke,MAAO,IACxDre,MAAOrC,EAAMsC,QAAQE,UAAUwV,aAC/BF,UAAW,SACXgB,aAAc,QAElB6H,oBAAqB,CACjBvf,YAAa,IAEjBwf,WAAY,CACRvQ,UAAW,IAEf7I,OAAQ,CACJpG,YAAapB,EAAMC,QAAQ,IAE/B4gB,gBAAiB,CAAEC,cAAe,QAClC,UAAW,CACPC,KAAM,CACF1e,MAAO,sBACP/C,QAAS,eACTM,QAAS,UACTohB,WACI,0DACJlI,aAAc,MACdpW,gBAAiB,8BAKvBue,GAAQ,CACV,CACIpf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,eACPqf,UAAU,IAIH,SAASmE,GAASjE,GAC7B,IAAMxc,EAAUzE,KACVkF,EAAUC,cAEhB,EAAoCR,mBAAS,GAA7C,mBAAOuc,EAAP,KAAmBC,EAAnB,KACA,EAA8Bxc,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KACA,EAA8B7G,IAAM/E,SAAS,IAAIyc,KAAjD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgC3c,mBAAS,IAAzC,mBAAO4c,EAAP,KAAiBC,EAAjB,KACA,EAA4B7c,mBAAS,SAArC,mBAAO8c,EAAP,KAAeC,EAAf,KACA,EAA4C/c,sBACxCsc,EAAMU,SAAUV,EAAMU,OAAOW,kBAAkB6C,uBACe,KAAxDlE,EAAMU,OAAOW,kBAAkB6C,sBAFzC,mBAAOC,EAAP,KAAuBC,EAAvB,KAKA,EAA4B1gB,mBACxBsc,EAAMU,OACAV,EAAMU,OACN,CACIhD,KAAM,MACNhL,KAAM,GACNiO,UAAW,GACXC,UAAW,GACXC,QAAS,GACTC,OAAQ,GACRC,UAAW,OACXC,YAAa,+BACbC,WAAY,OACZC,aAAc,4BACdC,mBAAoB,QACpBC,QAAS,IACTC,kBAAmB,CACfC,UAAW,GACX4C,qBAAsB,MAlBxC,mBAAOxD,EAAP,KAAea,EAAf,KAsBA,EAAgC7d,mBAC5Bsc,EAAMU,OAASV,EAAMU,OAAOlO,GAAK,GADrC,mBAAOgP,EAAP,KAAiBC,EAAjB,KAIMtR,EAAe,SAACjG,GAAD,OAAU,SAACtD,GAC5B2a,EAAU,2BACHb,GADE,kBAEJxW,EAAOtD,EAAMwJ,OAAOpE,WAIvB8X,EAAqB,SAAC5Z,GAAD,OAAU,SAACtD,GAClC2a,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,kBAEZnX,EAAOtD,EAAMwJ,OAAOpE,aAS3B3H,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAGCggB,EAAe,SAAC5T,GAClBA,EAAEC,iBACFpB,GAAW,GAEX,IAAMuT,EAAU,eAAQnC,GACxBmC,EAAWxB,kBAAX,eAAoCwB,EAAWxB,mBAEhC,UAAXb,IACAqC,EAAWhC,QAAU,IAGpBsD,IACDtB,EAAWxB,kBAAkB6C,qBAAuB,IAIxDrB,EAAW5B,WAAuC,SAA1B4B,EAAW5B,WACnC4B,EAAW1B,mBAC2B,SAAlC0B,EAAW1B,mBACf0B,EAAW9B,UAAqC,SAAzB8B,EAAW9B,UAClC8B,EAAWzB,QAAU0B,SAASD,EAAWzB,SACzCyB,EAAWxB,kBAAkBC,UAAYuB,EAAWxB,kBAAkBC,UAAUyB,MAC5E,KAGkD,IAAlDF,EAAWxB,kBAAkBC,UAAUrI,QACO,KAA9C4J,EAAWxB,kBAAkBC,UAAU,KAEvCuB,EAAWxB,kBAAkBC,UAAY,IAG7C7X,KAAI4G,KAAK,gBAAiB,CACtBqQ,OAAQmC,IAEPlZ,MAAK,SAACC,GACHR,EACI,MACA,QACA,kCAAW4W,EAAMU,OAAS,eAAO,gBACjC,WAEJR,EAAc,GACduB,EAAY7X,EAASC,SAExBc,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,MAGnBA,GAAW,IAoBf,OACI,6BACI,kBAACjK,EAAA,EAAD,CAAYC,QAAS,MAChB0a,EAAMU,OAAS,eAAO,eAD3B,oDAGA,kBAACkB,GAAA,EAAD,CAAS3B,WAAYA,GAChBJ,GAAM9Z,KAAI,SAAC+H,EAAO+T,GACf,IAzFO7N,EAyFD8N,EAAY,GACZC,EAAa,GASnB,OARIjU,EAAMgS,WACNiC,EAAWjC,SACP,kBAACza,EAAA,EAAD,CAAYC,QAAQ,WAApB,iBA7FD0O,EAgGW6N,EA/FvBzB,EAAQ4B,IAAIhO,KAgGH8N,EAAUG,WAAY,GAGtB,kBAACC,GAAA,EAAD,eAAM3b,IAAKuH,EAAMrN,OAAWqhB,GACxB,kBAACK,GAAA,EAAcJ,EAAajU,EAAMrN,YAMlC,IAAfwf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,qQAII,0FAJJ,YASR,yBAAKV,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,eAEI,kBAACkU,GAAA,EAAD,CACIC,KACI,0CAEJrJ,OAAQ,UAJZ,sCAFJ,0GAWI,0DAXJ,SAWsB,0DAXtB,iCAYS,6DAKjB,yBAAKxL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,mFAEI,qDAFJ,UAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,uBAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAO4B,WACd3b,SAAUwJ,EAAa,oBAO3C,yBAAKvL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,wUAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAO0U,EAAOK,UACdpa,SAAUwJ,EAAa,aACvBoN,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,4BAQ9B,yBAAKlJ,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,yFAEI,0DAFJ,qBAGI,0DAHJ,kCAG4B,IACxB,+EAEJ,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,YAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAOI,OACdna,SAAUwJ,EAAa,UACvB2D,WAAY,CACRuO,QACI,0EACJ5hB,MACI,0GAQ5B,yBAAKmE,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,4aAQA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAOmY,EAAe1R,WACtB9L,SAAU,SAAC8J,GACP2T,EACuB,SAAnB3T,EAAEL,OAAOpE,QAGjBuR,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,0BAKtB,kBAAC2U,GAAA,EAAD,CAAUC,GAAIyB,GACV,yBAAKvf,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,yBAGA,kBAACC,GAAA,EAAD,CACIC,SAAUkT,EACVnY,MACI0U,EAAOW,kBACF6C,qBAETvd,SAAUmd,EACN,wBAEJhQ,WAAY,CACRuO,QACI,0EACJ5hB,MACI,2GAShC,yBAAKmE,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,8GAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAOwU,EACP7Z,SAAU,SAAC8J,GACPgQ,EAAUhQ,EAAEL,OAAOpE,QAEvBuR,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,4BAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAAe,SAAXlC,GACV,yBAAK5b,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,eAEI,kBAACkU,GAAA,EAAD,CACIC,KACI,6CAEJrJ,OAAQ,UAJZ,yDAFJ,uPAcA,yBAAKxL,UAAWpB,EAAQwL,MACpB,kBAACwP,GAAD,CACIxS,MAAO0U,EAAOG,QACdla,SAAUwJ,EAAa,WACvBc,SAAqB,SAAXuP,EACV1S,MAAO,qCAO3B,yBAAKlJ,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACnBsD,aAAU,EAAG,CAAY,SAAXnC,MAGvB,yBAAK5b,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,2BAEI,kBAACkU,GAAA,EAAD,CACIC,KACI,oDAEJrJ,OAAQ,UAJZ,wCAFJ,mGAYA,yBAAKxL,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gBAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACR6C,WAAY,CACRuO,QAAS,OACT5hB,MAAO,wCAEXuL,MAAO0U,EAAOE,UACdja,SAAUwJ,EAAa,iBAInC,yBAAKvL,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,qBAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACR6C,WAAY,CACRuO,QAAS,OACT5hB,MAAO,wCAEXuL,MAAO0U,EAAOC,UACdha,SAAUwJ,EAAa,mBAO3C,yBAAKvL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACnBsD,aAAU,EAAG,CAAY,SAAXnC,MAGvB,yBAAK5b,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,0DAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAOhO,KACd/L,SAAUwJ,EAAa,cAO3C,yBAAKvL,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,meAIc,IACV,kBAACkU,GAAA,EAAD,CACIvY,MAAO,YACPkE,QAAS,SAACsL,GACNA,EAAEC,iBACF6P,EAAY,UAJpB,oDAQQ,IAbZ,UAgBA,yBAAK3b,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAOM,YACdra,SAAUwJ,EAAa,qBAO3C,yBAAKvL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,mXAGc,IACV,kBAACkU,GAAA,EAAD,CACIvY,MAAO,YACPkE,QAAS,SAACsL,GACNA,EAAEC,iBACF6P,EAAY,UAJpB,0DAQQ,IAZZ,UAeA,yBAAK3b,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACIrd,aAAW,SACXgF,KAAK,UACL8B,MAAO0U,EAAOO,WACdta,SAAUwJ,EAAa,cACvBoN,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,mCAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,0BAMtB,kBAAC2U,GAAA,EAAD,CAAUC,GAA0B,SAAtBhC,EAAOO,YACjB,yBAAKrc,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,SAC0B,SAAtByP,EAAOO,WAEXjV,MAAO0U,EAAOQ,aACdva,SAAUwJ,EACN,uBAS5B,yBAAKvL,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAOA,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,iFAEI,6BAFJ,kOAMA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAO0U,EAAOS,mBACdxa,SAAU,SAAC8J,GAEkB,SAArBiQ,EAAOK,WACY,SAAnBtQ,EAAEL,OAAOpE,MAUbmE,EAAa,qBAAbA,CACIM,GATArH,EACI,MACA,QACA,qEACA,YAQZmU,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,sBAQ9B,yBAAKlJ,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAMU,IACV,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BAAMrb,UAAWpB,EAAQ2b,YAAa3O,SAAU6T,GAC5C,yBAAKzf,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,kFAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MACuB,MAAnB0U,EAAOU,QACD,QACA,OAEVza,SAAU,SAAC8J,GACgB,SAAnBA,EAAEL,OAAOpE,MACTuV,EAAU,2BACHb,GADE,IAELU,QAAS,cAGbG,EAAU,2BACHb,GADE,IAELU,QAAS,QAIrB7D,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,4BAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAAuB,MAAnBhC,EAAOU,SACjB,yBAAKxc,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,kCAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAACkF,GAAD,CACIlI,MAAO0U,EAAOU,QACdza,SAAUwJ,EAAa,WACvB4D,IAAK,EACLI,IAAK,mBACLrG,MAAO,mDAO3B,yBAAKlJ,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACA,MAAnBqB,EAAOU,QAAkB,IAAM,MAGxC,yBAAKxc,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,4EAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAEuB,KADnB0U,EAAOW,kBACFC,UACC,QACA,OAEV3a,SAAU,SAAC8J,GACgB,SAAnBA,EAAEL,OAAOpE,MACTuV,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,IAEbC,UACI,2BAIZC,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,IAEbC,UAAW,SAK3B/D,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,4BAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAA2C,KAAvChC,EAAOW,kBAAkBC,WACnC,yBAAK1c,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACA,MAAnBqB,EAAOU,QAAkB,IAAM,MAGxC,yBAAKxc,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,iJAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIhF,MACI0U,EAAOW,kBACFC,UAET3a,SAAUmd,EACN,oBAS5B,yBAAKlf,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAMU,IACV,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BAAMrb,UAAWpB,EAAQ2b,YAAa3O,SAAU6T,GAC5C,yBAAKzf,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,sBACxB,yBAAK3a,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,wbAMA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAACnD,GAAA,EAAD,CACIyF,SAAUjC,EACVpO,MAAO,YACPqE,QAAS,YACTV,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAj0BrCmK,GAAW,QACX7F,KAAI4G,KAAK,qBAAsB,CAC3BtJ,GAAIya,IAEH7X,MAAK,WACFP,EAAe,MAAO,QAAS,6CAAW,WAC1C8W,EAAc,MAEjBvV,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,OAszBS9L,QAAS,CAAEsK,MAAOtK,EAAQic,kBAN9B,gDAaZ,yBAAK7a,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,WACL+a,GACI,SAAC8C,GAAD,OAAoBA,EAAiB,KAEzC3C,GAAW,SAAC4C,GACR,IAAMC,EAAa,IAAI/C,IACnB8C,EAAYE,UAGhB,OADAD,EAAWE,IAAInD,GACRiD,OAZnB,gBAiBU,MAKN,IAAfjD,GACG,oCACI,0BAAMrb,UAAWpB,EAAQ2b,aACrB,kBAAC9Z,EAAA,EAAD,sCACU2a,EAAMU,OAAS,eAAO,eADhC,UAGA,kBAACrb,EAAA,EAAD,CAAYC,QAAS,QAASrE,MAAO,iBAArC,2MAIJ,yBAAK2D,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMlB,EAAQkC,KAAK,mBAHhC,sDAWZ,kBAAC6Y,GAAD,CACInb,KAAmB,SAAbyc,EACNrB,QAAM,EACN3T,QAAS,kBAAMiV,EAAY,OAE/B,kBAACvB,GAAD,CACInb,KAAmB,SAAbyc,EACNhV,QAAS,kBAAMiV,EAAY,QC3kC3C,IAAMxhB,GAAYC,aAAW,SAACJ,GAAD,MAAY,CACrCugB,YAAa,CACT3gB,QAAS,uBAEbwQ,KAAM,CACFjR,SAAU,IACVkR,UAAW,IAEfE,cAAc,eACTvQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjB4gB,iBAAkB,CACdlhB,QAAS,OACTgR,aAAc,GACd1Q,QAAS,GACTa,WAAYT,EAAMU,YAAYC,OAAO,mBAAoB,CACrDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,gBAEzC,iBAAkB,CACd2B,gBAAiB1C,EAAMsC,QAAQK,WAAWC,UAGlD6d,WAAY,CACRpgB,MAAO,GACP+H,OAAQ,GACR1F,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAUke,MAAO,IACxDre,MAAOrC,EAAMsC,QAAQE,UAAUwV,aAC/BF,UAAW,SACXgB,aAAc,QAElB6H,oBAAqB,CACjBvf,YAAa,IAEjBwf,WAAY,CACRvQ,UAAW,IAEf7I,OAAQ,CACJpG,YAAapB,EAAMC,QAAQ,QAI7BghB,GAAQ,CACV,CACIpf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,eACPqf,UAAU,IAIH,SAASwE,GAAYtE,GAChC,IAAMxc,EAAUzE,KACVkF,EAAUC,cAEhB,EAAoCR,mBAAS,GAA7C,mBAAOuc,EAAP,KAAmBC,EAAnB,KACA,EAA8Bxc,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KACA,EAAkB7G,IAAM/E,SAAS,IAAIyc,KAA9BC,EAAP,oBACA,EAAgC1c,mBAAS,IAAzC,mBAAO4c,EAAP,KAAiBC,EAAjB,KAEA,EAA4B7c,mBACxBsc,EAAMU,OACAV,EAAMU,OACN,CACIhD,KAAM,QACNhL,KAAM,GACNiO,UAAW,GACXC,UAAW,GACXC,QAAS,GACTE,UAAW,OACXC,YAAa,+BACbC,WAAY,OACZC,aAAc,4BACdC,mBAAoB,QACpBC,QAAS,IACTC,kBAAmB,CACfC,UAAW,GACXiD,SAAU,MAjB5B,mBAAO7D,EAAP,KAAea,EAAf,KAsBMpR,EAAe,SAACjG,GAAD,OAAU,SAACtD,GAC5B2a,EAAU,2BACHb,GADE,kBAEJxW,EAAOtD,EAAMwJ,OAAOpE,WAIvB8X,EAAqB,SAAC5Z,GAAD,OAAU,SAACtD,GAClC2a,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,kBAEZnX,EAAOtD,EAAMwJ,OAAOpE,aAS3B3H,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAgDL,OACI,6BACI,kBAACgB,EAAA,EAAD,CAAYC,QAAS,MAChB0a,EAAMU,OAAS,eAAO,eAD3B,0CAGA,kBAACkB,GAAA,EAAD,CAAS3B,WAAYA,GAChBJ,GAAM9Z,KAAI,SAAC+H,EAAO+T,GACf,IA/DO7N,EA+DD8N,EAAY,GACZC,EAAa,GASnB,OARIjU,EAAMgS,WACNiC,EAAWjC,SACP,kBAACza,EAAA,EAAD,CAAYC,QAAQ,WAApB,iBAnED0O,EAsEW6N,EArEvBzB,EAAQ4B,IAAIhO,KAsEH8N,EAAUG,WAAY,GAGtB,kBAACC,GAAA,EAAD,eAAM3b,IAAKuH,EAAMrN,OAAWqhB,GACxB,kBAACK,GAAA,EAAcJ,EAAajU,EAAMrN,YAMlC,IAAfwf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,+PAGI,0FAHJ,YAQR,yBAAKV,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,eAEI,kBAACkU,GAAA,EAAD,CACIC,KAAM,kCACNrJ,OAAQ,UAFZ,wCAFJ,4DAaR,yBAAKxL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,4KAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,wCAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAO4B,WACd3b,SAAUwJ,EAAa,oBAO3C,yBAAKvL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,sTAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAO0U,EAAOK,UACdpa,SAAUwJ,EAAa,aACvBoN,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,sBAQ9B,yBAAKlJ,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,yGAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAACwP,GAAD,CACIxS,MAAO0U,EAAOG,QACdla,SAAUwJ,EAAa,WACvBc,UAAQ,EACRnD,MAAO,oCAMvB,yBAAKlJ,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,2LAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,MAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAOE,UACdja,SAAUwJ,EAAa,iBAInC,yBAAKvL,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,MAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAOC,UACdha,SAAUwJ,EAAa,mBAO3C,yBAAKvL,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,meAIc,IACV,kBAACkU,GAAA,EAAD,CACIvY,MAAO,YACPkE,QAAS,SAACsL,GACNA,EAAEC,iBACF6P,EAAY,UAJpB,oDAQQ,IAbZ,UAgBA,yBAAK3b,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAOM,YACdra,SAAUwJ,EAAa,qBAO3C,yBAAKvL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,mXAGc,IACV,kBAACkU,GAAA,EAAD,CACIvY,MAAO,YACPkE,QAAS,SAACsL,GACNA,EAAEC,iBACF6P,EAAY,UAJpB,0DAQQ,IAZZ,UAeA,yBAAK3b,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACIrd,aAAW,SACXgF,KAAK,UACL8B,MAAO0U,EAAOO,WACdta,SAAUwJ,EAAa,cACvBoN,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,mCAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,0BAMtB,kBAAC2U,GAAA,EAAD,CAAUC,GAA0B,SAAtBhC,EAAOO,YACjB,yBAAKrc,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,SAC0B,SAAtByP,EAAOO,WAEXjV,MAAO0U,EAAOQ,aACdva,SAAUwJ,EACN,uBAS5B,yBAAKvL,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAOA,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,iFAEI,6BAFJ,kOAMA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAO0U,EAAOS,mBACdxa,SAAU,SAAC8J,GAEkB,SAArBiQ,EAAOK,WACY,SAAnBtQ,EAAEL,OAAOpE,MAUbmE,EAAa,qBAAbA,CACIM,GATArH,EACI,MACA,QACA,qEACA,YAQZmU,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,sBAQ9B,yBAAKlJ,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAMU,IACV,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,kFAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MACuB,MAAnB0U,EAAOU,QACD,QACA,OAEVza,SAAU,SAAC8J,GACgB,SAAnBA,EAAEL,OAAOpE,MACTuV,EAAU,2BACHb,GADE,IAELU,QAAS,cAGbG,EAAU,2BACHb,GADE,IAELU,QAAS,QAIrB7D,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,4BAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAAuB,MAAnBhC,EAAOU,SACjB,yBAAKxc,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,kCAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAACkF,GAAD,CACIlI,MAAO0U,EAAOU,QACdza,SAAUwJ,EAAa,WACvB4D,IAAK,EACLI,IAAK,mBACLrG,MAAO,mDAO3B,yBAAKlJ,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACA,MAAnBqB,EAAOU,QAAkB,IAAM,MAGxC,yBAAKxc,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,4EAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAEuB,KADnB0U,EAAOW,kBACFC,UACC,QACA,OAEV3a,SAAU,SAAC8J,GACgB,SAAnBA,EAAEL,OAAOpE,MACTuV,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,IAEbC,UACI,2BAIZC,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,IAEbC,UAAW,SAK3B/D,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,4BAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAA2C,KAAvChC,EAAOW,kBAAkBC,WACnC,yBAAK1c,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACA,MAAnBqB,EAAOU,QAAkB,IAAM,MAGxC,yBAAKxc,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,iJAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIhF,MACI0U,EAAOW,kBACFC,UAET3a,SAAUmd,EACN,oBAS5B,yBAAKlf,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACnBsD,aAAU,EAAG,CACS,MAAnBjC,EAAOU,QACgC,KAAvCV,EAAOW,kBAAkBC,cAIrC,yBAAK1c,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,mEAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAEsB,KADlB0U,EAAOW,kBACFkD,SACC,QACA,OAEV5d,SAAU,SAAC8J,GACgB,SAAnBA,EAAEL,OAAOpE,MACTuV,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,IAEbkD,SAAU,eAIlBhD,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,IAEbkD,SAAU,SAK1BhH,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,4BAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAA0C,KAAtChC,EAAOW,kBAAkBkD,UACnC,yBAAK3f,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACnBsD,aAAU,EAAG,CACS,MAAnBjC,EAAOU,QAEH,KADJV,EAAOW,kBAAkBC,cAKrC,yBAAK1c,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,qXAKA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,yBAGA,kBAACC,GAAA,EAAD,CACIhF,MACI0U,EAAOW,kBACFkD,SAET5d,SAAUmd,EACN,mBAS5B,yBAAKlf,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAMU,IACV,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BAAMrb,UAAWpB,EAAQ2b,YAAa3O,SAhvB7B,SAACC,GAClBA,EAAEC,iBACFpB,GAAW,GAEX,IAAMuT,EAAU,eAAQnC,GACxBmC,EAAWxB,kBAAX,eAAoCwB,EAAWxB,mBAG/CwB,EAAW5B,WAAuC,SAA1B4B,EAAW5B,WACnC4B,EAAW1B,mBAC2B,SAAlC0B,EAAW1B,mBACf0B,EAAW9B,UAAqC,SAAzB8B,EAAW9B,UAClC8B,EAAWzB,QAAU0B,SAASD,EAAWzB,SACzCyB,EAAWxB,kBAAkBC,UAAYuB,EAAWxB,kBAAkBC,UAAUyB,MAC5E,KAGkD,IAAlDF,EAAWxB,kBAAkBC,UAAUrI,QACO,KAA9C4J,EAAWxB,kBAAkBC,UAAU,KAEvCuB,EAAWxB,kBAAkBC,UAAY,IAG7C7X,KAAI4G,KAAK,gBAAiB,CACtBqQ,OAAQmC,IAEPlZ,MAAK,WACFP,EACI,MACA,QACA,kCAAW4W,EAAMU,OAAS,eAAO,gBACjC,WAEJR,EAAc,MAEjBvV,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,MAGnBA,GAAW,KAusBC,yBAAK1K,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,sBACxB,yBAAK3a,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,wFAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAOhO,KACd/L,SAAUwJ,EAAa,cAM3C,yBAAKvL,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAMU,IACV,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,kBAYI,IAAfgf,GACG,oCACI,0BAAMrb,UAAWpB,EAAQ2b,aACrB,kBAAC9Z,EAAA,EAAD,sCACU2a,EAAMU,OAAS,eAAO,eADhC,UAGA,kBAACrb,EAAA,EAAD,CAAYC,QAAS,QAASrE,MAAO,iBAArC,2MAIJ,yBAAK2D,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMlB,EAAQkC,KAAK,mBAHhC,sDAWZ,kBAAC6Y,GAAD,CACInb,KAAmB,SAAbyc,EACNrB,QAAM,EACN3T,QAAS,kBAAMiV,EAAY,OAE/B,kBAACvB,GAAD,CACInb,KAAmB,SAAbyc,EACNhV,QAAS,kBAAMiV,EAAY,QCn7B3C,IAAMxhB,GAAYC,aAAW,SAACJ,GAAD,MAAY,CACrCugB,YAAa,CACT3gB,QAAS,uBAEbwQ,KAAM,CACFjR,SAAU,IACVkR,UAAW,IAEfE,cAAc,eACTvQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjB4gB,iBAAkB,CACdlhB,QAAS,OACTgR,aAAc,GACd1Q,QAAS,GACTa,WAAYT,EAAMU,YAAYC,OAAO,mBAAoB,CACrDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,gBAEzC,iBAAkB,CACd2B,gBAAiB1C,EAAMsC,QAAQK,WAAWC,UAGlD6d,WAAY,CACRpgB,MAAO,GACP+H,OAAQ,GACR1F,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAUke,MAAO,IACxDre,MAAOrC,EAAMsC,QAAQE,UAAUwV,aAC/BF,UAAW,SACXgB,aAAc,QAElB6H,oBAAqB,CACjBvf,YAAa,IAEjBwf,WAAY,CACRvQ,UAAW,IAEf7I,OAAQ,CACJpG,YAAapB,EAAMC,QAAQ,IAE/B,UAAW,CACP8gB,KAAM,CACF1e,MAAO,sBACP/C,QAAS,eACTM,QAAS,UACT4I,SAAU,OACVwY,WACI,0DACJlI,aAAc,MACdpW,gBAAiB,yBAErBkjB,IAAK,CACDrmB,OAAQ,SACRK,QAAS,YACTimB,SAAU,OACV9e,UAAW,MACX+R,aAAc,MACdpW,gBAAiB,UACjBL,MAAO,aAKb4e,GAAQ,CACV,CACIpf,MAAO,iCACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,eACPqf,UAAU,IAIH,SAASwE,GAAYtE,GAChC,IAoC4B9V,EApCtB1G,EAAUzE,KACVkF,EAAUC,cAEhB,EAAoCR,mBAAS,GAA7C,mBAAOuc,EAAP,KAAmBC,EAAnB,KACA,EAA8Bxc,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KACA,EAAkB7G,IAAM/E,SAAS,IAAIyc,KAA9BC,EAAP,oBACA,EAAgC1c,mBAAS,IAAzC,mBAAO4c,EAAP,KAAiBC,EAAjB,KACA,EAA4B7c,mBAAS,SAArC,mBAAO8c,EAAP,KAAeC,EAAf,KACA,EAA4B/c,mBACxBsc,EAAMU,OACAV,EAAMU,OACN,CACIhD,KAAM,SACNhL,KAAM,GACNoO,OAAQ,2BACRH,UAAW+D,aAAU,IACrB1D,YAAa,+BACbC,WAAY,OACZC,aAAc,4BACdC,mBAAoB,QACpBN,QAAS,GACTE,UAAW,OACXK,QAAS,IACTC,kBAAmB,CACfC,UAAW,MAhB7B,mBAAOZ,EAAP,KAAea,EAAf,KAqBMpR,EAAe,SAACjG,GAAD,OAAU,SAACtD,GAC5B2a,EAAU,2BACHb,GADE,kBAEJxW,EAAOtD,EAAMwJ,OAAOpE,WAkBvB3H,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAwEL,OACI,6BACI,kBAACgB,EAAA,EAAD,CAAYC,QAAS,MAChB0a,EAAMU,OAAS,eAAO,eAD3B,wCAGA,kBAACkB,GAAA,EAAD,CAAS3B,WAAYA,GAChBJ,GAAM9Z,KAAI,SAAC+H,EAAO+T,GACf,IAvFO7N,EAuFD8N,EAAY,GACZC,EAAa,GASnB,OARIjU,EAAMgS,WACNiC,EAAWjC,SACP,kBAACza,EAAA,EAAD,CAAYC,QAAQ,WAApB,iBA3FD0O,EA8FW6N,EA7FvBzB,EAAQ4B,IAAIhO,KA8FH8N,EAAUG,WAAY,GAGtB,kBAACC,GAAA,EAAD,eAAM3b,IAAKuH,EAAMrN,OAAWqhB,GACxB,kBAACK,GAAA,EAAcJ,EAAajU,EAAMrN,YAMlC,IAAfwf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,kBAAC5G,GAAA,EAAD,CAAOC,SAAS,OAAOlL,MAAO,CAAEa,aAAc,KAA9C,gQAKA,yBAAKtK,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,uKAOR,yBAAKV,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,mRAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACR6C,WAAY,CACR6Q,UAAW,IAEf3Y,MAAO0U,EAAOC,UACdha,SAAUwJ,EAAa,mBAO3C,yBAAKvL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,yDAEI,6BAFJ,sFAII,0CAJJ,8UAQA,wCAEI,6BAFJ,eAII,6BAJJ,iBAMI,6BACA,6BAPJ,UASI,6BATJ,YAUcob,EAAOC,UACjB,6BACA,6BAZJ,SAcI,6BAdJ,mBAeoB,6BAfpB,kCAiBI,6BAjBJ,mBAkBoB,8BAEpB,kBAACtb,EAAA,EAAD,CAAYC,QAAS,SAArB,6IAEI,4BACI,4BACI,wCADJ,2BAGI,sCAHJ,6CAIW,wCAEX,uDACQ,uCADR,2BAEI,wCAFJ,sHAKA,2FACc,sCADd,4RAWhB,yBAAKV,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,6CAEI,6BAFJ,yLAOA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIH,WAAS,EACTI,UAAQ,EACRhG,KAAM,MACNe,MAAO0U,EAAOI,OACdna,SAAUwJ,EAAa,gBAO3C,yBAAKvL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,kLAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAACnD,GAAA,EAAD,CACIyF,SAAUjC,EACVlK,QAAS,kBAnPrCmK,GAAW,QAGX7F,KAAI4G,KAAK,2BAA4B,CACjCuU,OAAQlE,EAAOI,OACf+D,OAAQnE,EAAOC,YAEdhX,MAAK,WACFP,EAAe,MAAO,QAAS,2BAAQ,cAE1CuB,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,OAsOShK,QAAS,WACTrE,MAAO,WAJX,2CAYZ,yBAAK2D,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,meAIc,IACV,kBAACkU,GAAA,EAAD,CACIvY,MAAO,YACPkE,QAAS,SAACsL,GACNA,EAAEC,iBACF6P,EAAY,UAJpB,oDAQQ,IAbZ,UAgBA,yBAAK3b,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAOM,YACdra,SAAUwJ,EAAa,qBAO3C,yBAAKvL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,mXAGc,IACV,kBAACkU,GAAA,EAAD,CACIvY,MAAO,YACPkE,QAAS,SAACsL,GACNA,EAAEC,iBACF6P,EAAY,UAJpB,0DAQQ,IAZZ,UAeA,yBAAK3b,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACIrd,aAAW,SACXgF,KAAK,UACL8B,MAAO0U,EAAOO,WACdta,SAAUwJ,EAAa,cACvBoN,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,mCAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,0BAMtB,kBAAC2U,GAAA,EAAD,CAAUC,GAA0B,SAAtBhC,EAAOO,YACjB,yBAAKrc,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,SAC0B,SAAtByP,EAAOO,WAEXjV,MAAO0U,EAAOQ,aACdva,SAAUwJ,EACN,uBAS5B,yBAAKvL,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAOA,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,iFAEI,6BAFJ,kOAMA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAO0U,EAAOS,mBACdxa,SAAUwJ,EACN,sBAEJoN,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,sBAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAAkC,SAA9BhC,EAAOS,oBACjB,yBAAKvc,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,0EAEI,6BAFJ,0KAOA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAOwU,EACP7Z,SAAU,SAAC8J,GAEgB,UAAnBA,EAAEL,OAAOpE,OAETuV,EAAU,2BACHb,GADE,IAELG,QAAS,MAGjBJ,EAAUhQ,EAAEL,OAAOpE,QAEvBuR,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,4BAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAAe,SAAXlC,GACV,yBAAK5b,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,+DAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAACwP,GAAD,CACIxS,MAAO0U,EAAOG,QACdla,SAAUwJ,EAAa,WACvBc,SAEQ,SADJyP,EAAOS,oBACkB,SAAXX,EAElB1S,MAAO,0BAQ/B,yBAAKlJ,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAMU,IACV,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,kFAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MACuB,MAAnB0U,EAAOU,QACD,QACA,OAEVza,SAAU,SAAC8J,GACgB,SAAnBA,EAAEL,OAAOpE,MACTuV,EAAU,2BACHb,GADE,IAELU,QAAS,cAGbG,EAAU,2BACHb,GADE,IAELU,QAAS,QAIrB7D,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,4BAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAAuB,MAAnBhC,EAAOU,SACjB,yBAAKxc,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,kCAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAACkF,GAAD,CACIlI,MAAO0U,EAAOU,QACdza,SAAUwJ,EAAa,WACvB4D,IAAK,EACLI,IAAK,mBACLrG,MAAO,mDAO3B,yBAAKlJ,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACA,MAAnBqB,EAAOU,QAAkB,IAAM,MAGxC,yBAAKxc,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,4EAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAEuB,KADnB0U,EAAOW,kBACFC,UACC,QACA,OAEV3a,SAAU,SAAC8J,GACgB,SAAnBA,EAAEL,OAAOpE,MACTuV,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,IAEbC,UACI,2BAIZC,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,IAEbC,UAAW,SAK3B/D,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,4BAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAA2C,KAAvChC,EAAOW,kBAAkBC,WACnC,yBAAK1c,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACA,MAAnBqB,EAAOU,QAAkB,IAAM,MAGxC,yBAAKxc,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,iJAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIhF,MACI0U,EAAOW,kBACFC,UAET3a,UA9tBZuD,EA+tBgB,YA/tBP,SAACtD,GAClC2a,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,kBAEZnX,EAAOtD,EAAMwJ,OAAOpE,oBAmuBjB,yBAAKpH,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAMU,IACV,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BAAMrb,UAAWpB,EAAQ2b,YAAa3O,SArtB7B,SAACC,GAClBA,EAAEC,iBACFpB,GAAW,GAEX,IAAMuT,EAAU,eAAQnC,GACxBmC,EAAWxB,kBAAX,eAAoCwB,EAAWxB,mBAGhC,UAAXb,GAAoD,UAA9BE,EAAOS,qBAC7B0B,EAAWhC,QAAU,IAIzBgC,EAAW5B,WAAuC,SAA1B4B,EAAW5B,WACnC4B,EAAW1B,mBAC2B,SAAlC0B,EAAW1B,mBACf0B,EAAWzB,QAAU0B,SAASD,EAAWzB,SACzCyB,EAAW9B,UAAqC,SAAzB8B,EAAW9B,UAClC8B,EAAWxB,kBAAkBC,UAAYuB,EAAWxB,kBAAkBC,UAAUyB,MAC5E,KAGkD,IAAlDF,EAAWxB,kBAAkBC,UAAUrI,QACO,KAA9C4J,EAAWxB,kBAAkBC,UAAU,KAEvCuB,EAAWxB,kBAAkBC,UAAY,IAG7C7X,KAAI4G,KAAK,gBAAiB,CACtBqQ,OAAQmC,IAEPlZ,MAAK,WACFP,EACI,MACA,QACA,kCAAW4W,EAAMU,OAAS,eAAO,gBACjC,WAEJR,EAAc,MAEjBvV,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,MAGnBA,GAAW,KAuqBC,yBAAK1K,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,sBACxB,yBAAK3a,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,wFAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAOhO,KACd/L,SAAUwJ,EAAa,cAM3C,yBAAKvL,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAMU,IACV,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,kBAYI,IAAfgf,GACG,oCACI,0BAAMrb,UAAWpB,EAAQ2b,aACrB,kBAAC9Z,EAAA,EAAD,sCACU2a,EAAMU,OAAS,eAAO,eADhC,UAGA,kBAACrb,EAAA,EAAD,CAAYC,QAAS,QAASrE,MAAO,iBAArC,2MAIJ,yBAAK2D,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMlB,EAAQkC,KAAK,mBAHhC,sDAWZ,kBAAC6Y,GAAD,CACInb,KAAmB,SAAbyc,EACNrB,QAAM,EACNC,SAAO,EACP5T,QAAS,kBAAMiV,EAAY,OAE/B,kBAACvB,GAAD,CACInb,KAAmB,SAAbyc,EACNpB,SAAO,EACP5T,QAAS,kBAAMiV,EAAY,QCp8B3C,IAAMxhB,GAAYC,aAAW,SAACJ,GAAD,MAAY,CACrCugB,YAAa,CACT3gB,QAAS,uBAEbwQ,KAAM,CACFjR,SAAU,IACVkR,UAAW,IAEfE,cAAc,eACTvQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjB4gB,iBAAkB,CACdlhB,QAAS,OACTgR,aAAc,GACd1Q,QAAS,GACTa,WAAYT,EAAMU,YAAYC,OAAO,mBAAoB,CACrDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,gBAEzC,iBAAkB,CACd2B,gBAAiB1C,EAAMsC,QAAQK,WAAWC,UAGlD6d,WAAY,CACRpgB,MAAO,GACP+H,OAAQ,GACR1F,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAUke,MAAO,IACxDre,MAAOrC,EAAMsC,QAAQE,UAAUwV,aAC/BF,UAAW,SACXgB,aAAc,QAElB6H,oBAAqB,CACjBvf,YAAa,IAEjBwf,WAAY,CACRvQ,UAAW,IAEf7I,OAAQ,CACJpG,YAAapB,EAAMC,QAAQ,QAI7BghB,GAAQ,CACV,CACIpf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,eACPqf,UAAU,IAIH,SAASgF,GAAW9E,GAC/B,IAAMxc,EAAUzE,KACVkF,EAAUC,cAEhB,EAAoCR,mBAAS,GAA7C,mBAAOuc,EAAP,KAAmBC,EAAnB,KACA,EAA8Bxc,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KACA,EAAkB7G,IAAM/E,SAAS,IAAIyc,KAA9BC,EAAP,oBACA,EAAgC1c,mBAAS,IAAzC,mBAAO4c,EAAP,KAAiBC,EAAjB,KACA,EAA4B7c,mBACxBsc,EAAMU,OACAV,EAAMU,OACN,CACIhD,KAAM,QACNhL,KAAM,GACNiO,UAAW,GACXC,UAAW,GACXC,QAAS,GACTE,UAAW,QACXC,YAAa,+BACbC,WAAY,OACZC,aAAc,4BACdC,mBAAoB,QACpBC,QAAS,IACTC,kBAAmB,CACfC,UAAW,GACXyD,MAAO,MAjBzB,mBAAOrE,EAAP,KAAea,EAAf,KAsBMpR,EAAe,SAACjG,GAAD,OAAU,SAACtD,GAC5B2a,EAAU,2BACHb,GADE,kBAEJxW,EAAOtD,EAAMwJ,OAAOpE,WAIvB8X,EAAqB,SAAC5Z,GAAD,OAAU,SAACtD,GAClC2a,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,kBAEZnX,EAAOtD,EAAMwJ,OAAOpE,aAS3B3H,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAgDL,OACI,6BACI,kBAACgB,EAAA,EAAD,CAAYC,QAAS,MAChB0a,EAAMU,OAAS,eAAO,eAD3B,gDAGA,kBAACkB,GAAA,EAAD,CAAS3B,WAAYA,GAChBJ,GAAM9Z,KAAI,SAAC+H,EAAO+T,GACf,IA/DO7N,EA+DD8N,EAAY,GACZC,EAAa,GASnB,OARIjU,EAAMgS,WACNiC,EAAWjC,SACP,kBAACza,EAAA,EAAD,CAAYC,QAAQ,WAApB,iBAnED0O,EAsEW6N,EArEvBzB,EAAQ4B,IAAIhO,KAsEH8N,EAAUG,WAAY,GAGtB,kBAACC,GAAA,EAAD,eAAM3b,IAAKuH,EAAMrN,OAAWqhB,GACxB,kBAACK,GAAA,EAAcJ,EAAajU,EAAMrN,YAMlC,IAAfwf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,qQAGI,0FAHJ,YAQR,yBAAKV,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,eAEI,kBAACkU,GAAA,EAAD,CACIC,KACI,kDAEJrJ,OAAQ,UAJZ,kCAFJ,sDAeR,yBAAKxL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,wFAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAO4B,WACd3b,SAAUwJ,EAAa,oBAO3C,yBAAKvL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,8OAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAOE,UACdja,SAAUwJ,EAAa,iBAInC,yBAAKvL,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAOC,UACdha,SAAUwJ,EAAa,mBAO3C,yBAAKvL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,kLAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAACwP,GAAD,CACIxS,MAAO0U,EAAOG,QACdla,SAAUwJ,EAAa,WACvBc,UAAQ,EACRnD,MAAO,gCAMvB,yBAAKlJ,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,qKAEI,6BAFJ,yPAMA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAO0U,EAAOK,UACdpa,SAAUwJ,EAAa,aACvBoN,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,gDAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,qDAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAAyB,SAArBhC,EAAOK,WACjB,yBAAKnc,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,oFAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,yCAGA,kBAACC,GAAA,EAAD,CACIhF,MACI0U,EAAOW,kBAAkB0D,MAE7Bpe,SAAUmd,EACN,SAEJ7S,SACyB,SAArByP,EAAOK,iBASnC,yBAAKnc,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,meAIc,IACV,kBAACkU,GAAA,EAAD,CACIvY,MAAO,YACPkE,QAAS,SAACsL,GACNA,EAAEC,iBACF6P,EAAY,UAJpB,oDAQQ,IAbZ,UAgBA,yBAAK3b,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAOM,YACdra,SAAUwJ,EAAa,qBAO3C,yBAAKvL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,mXAGc,IACV,kBAACkU,GAAA,EAAD,CACIvY,MAAO,YACPkE,QAAS,SAACsL,GACNA,EAAEC,iBACF6P,EAAY,UAJpB,0DAQQ,IAZZ,UAeA,yBAAK3b,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACIrd,aAAW,SACXgF,KAAK,UACL8B,MAAO0U,EAAOO,WACdta,SAAUwJ,EAAa,cACvBoN,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,mCAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,0BAMtB,kBAAC2U,GAAA,EAAD,CAAUC,GAA0B,SAAtBhC,EAAOO,YACjB,yBAAKrc,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,SAC0B,SAAtByP,EAAOO,WAEXjV,MAAO0U,EAAOQ,aACdva,SAAUwJ,EACN,uBAS5B,yBAAKvL,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAOA,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,iFAEI,6BAFJ,kOAMA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAO0U,EAAOS,mBACdxa,SAAU,SAAC8J,GAEkB,SAArBiQ,EAAOK,WACY,SAAnBtQ,EAAEL,OAAOpE,MAUbmE,EAAa,qBAAbA,CACIM,GATArH,EACI,MACA,QACA,8FACA,YAQZmU,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,sBAQ9B,yBAAKlJ,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAMU,IACV,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,kFAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MACuB,MAAnB0U,EAAOU,QACD,QACA,OAEVza,SAAU,SAAC8J,GACgB,SAAnBA,EAAEL,OAAOpE,MACTuV,EAAU,2BACHb,GADE,IAELU,QAAS,cAGbG,EAAU,2BACHb,GADE,IAELU,QAAS,QAIrB7D,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,4BAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAAuB,MAAnBhC,EAAOU,SACjB,yBAAKxc,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,kCAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAACkF,GAAD,CACIlI,MAAO0U,EAAOU,QACdza,SAAUwJ,EAAa,WACvB4D,IAAK,EACLI,IAAK,mBACLrG,MAAO,mDAO3B,yBAAKlJ,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACA,MAAnBqB,EAAOU,QAAkB,IAAM,MAGxC,yBAAKxc,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,4EAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAEuB,KADnB0U,EAAOW,kBACFC,UACC,QACA,OAEV3a,SAAU,SAAC8J,GACgB,SAAnBA,EAAEL,OAAOpE,MACTuV,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,IAEbC,UACI,2BAIZC,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,IAEbC,UAAW,SAK3B/D,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,4BAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAA2C,KAAvChC,EAAOW,kBAAkBC,WACnC,yBAAK1c,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACA,MAAnBqB,EAAOU,QAAkB,IAAM,MAGxC,yBAAKxc,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,iJAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIhF,MACI0U,EAAOW,kBACFC,UAET3a,SAAUmd,EACN,oBAS5B,yBAAKlf,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAMU,IACV,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BAAMrb,UAAWpB,EAAQ2b,YAAa3O,SA9qB7B,SAACC,GAClBA,EAAEC,iBACFpB,GAAW,GAEX,IAAMuT,EAAU,eAAQnC,GACxBmC,EAAWxB,kBAAX,eAAoCwB,EAAWxB,mBAG/CwB,EAAW5B,WAAuC,SAA1B4B,EAAW5B,WACnC4B,EAAW1B,mBAC2B,SAAlC0B,EAAW1B,mBACf0B,EAAW9B,UAAqC,SAAzB8B,EAAW9B,UAClC8B,EAAWzB,QAAU0B,SAASD,EAAWzB,SACzCyB,EAAWxB,kBAAkBC,UAAYuB,EAAWxB,kBAAkBC,UAAUyB,MAC5E,KAGkD,IAAlDF,EAAWxB,kBAAkBC,UAAUrI,QACO,KAA9C4J,EAAWxB,kBAAkBC,UAAU,KAEvCuB,EAAWxB,kBAAkBC,UAAY,IAG7C7X,KAAI4G,KAAK,gBAAiB,CACtBqQ,OAAQmC,IAEPlZ,MAAK,WACFP,EACI,MACA,QACA,kCAAW4W,EAAMU,OAAS,eAAO,gBACjC,WAEJR,EAAc,MAEjBvV,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,MAGnBA,GAAW,KAqoBC,yBAAK1K,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,sBACxB,yBAAK3a,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,wFAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAOhO,KACd/L,SAAUwJ,EAAa,cAM3C,yBAAKvL,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAMU,IACV,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,kBAYI,IAAfgf,GACG,oCACI,0BAAMrb,UAAWpB,EAAQ2b,aACrB,kBAAC9Z,EAAA,EAAD,sCACU2a,EAAMU,OAAS,eAAO,eADhC,UAGA,kBAACrb,EAAA,EAAD,CAAYC,QAAS,QAASrE,MAAO,iBAArC,2MAIJ,yBAAK2D,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMlB,EAAQkC,KAAK,mBAHhC,sDAWZ,kBAAC6Y,GAAD,CACInb,KAAmB,SAAbyc,EACNrB,QAAM,EACN3T,QAAS,kBAAMiV,EAAY,OAE/B,kBAACvB,GAAD,CACInb,KAAmB,SAAbyc,EACNhV,QAAS,kBAAMiV,EAAY,Q,eC72BrCxhB,GAAYC,aAAW,SAACJ,GAAD,MAAY,CACrCugB,YAAa,CACT3gB,QAAS,uBAEbwQ,KAAM,CACFjR,SAAU,IACVkR,UAAW,IAEfE,cAAc,eACTvQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjB4gB,iBAAkB,CACdlhB,QAAS,OACTgR,aAAc,GACd1Q,QAAS,GACTa,WAAYT,EAAMU,YAAYC,OAAO,mBAAoB,CACrDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,gBAEzC,iBAAkB,CACd2B,gBAAiB1C,EAAMsC,QAAQK,WAAWC,UAGlD6d,WAAY,CACRpgB,MAAO,GACP+H,OAAQ,GACR1F,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAUke,MAAO,IACxDre,MAAOrC,EAAMsC,QAAQE,UAAUwV,aAC/BF,UAAW,SACXgB,aAAc,QAElB6H,oBAAqB,CACjBvf,YAAa,IAEjBwf,WAAY,CACRvQ,UAAW,IAEf7I,OAAQ,CACJpG,YAAapB,EAAMC,QAAQ,IAE/B4gB,gBAAiB,CAAEC,cAAe,QAClC,UAAW,CACPC,KAAM,CACF1e,MAAO,sBACP/C,QAAS,eACTM,QAAS,UACTohB,WACI,0DACJlI,aAAc,MACdpW,gBAAiB,yBAErBkjB,IAAK,CACDrmB,OAAQ,SACRK,QAAS,YACTimB,SAAU,OACV9e,UAAW,MACX+R,aAAc,MACdpW,gBAAiB,UACjBL,MAAO,aAKb4e,GAAQ,CACV,CACIpf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,2BACPqf,UAAU,GAEd,CACIrf,MAAO,eACPqf,UAAU,IAIZkF,GAAU,CACZ,YAAa,iBACb,YAAa,wBACb,YAAa,0BACb,YAAa,mBACb,aAAc,qBACd,YAAa,2BACb,aAAc,wBACd,iBAAkB,6BAClB,iBAAkB,uBAClB,iBAAkB,2BAClB,iBAAkB,wBAClB,iBAAkB,uBAClB,eAAgB,mBAChB,aAAc,kBACd,iBAAkB,kBAClB,eAAgB,qBAChB,YAAa,mBACb,YAAa,kBACb,aAAc,iBACd,YAAa,iBACb,aAAc,qBACd,aAAc,wBACd,YAAa,gCAGF,SAASC,GAAQjF,GAC5B,IAAMxc,EAAUzE,KACVkF,EAAUC,cAEhB,EAAoCR,mBAAS,GAA7C,mBAAOuc,EAAP,KAAmBC,EAAnB,KACA,EAA8Bxc,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KACA,EAAkC5L,oBAAS,GAA3C,mBAAOwhB,EAAP,KAAkBC,EAAlB,KACA,EAA8B1c,IAAM/E,SAAS,IAAIyc,KAAjD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgC3c,mBAAS,IAAzC,mBAAO4c,EAAP,KAAiBC,EAAjB,KACA,EAA4B7c,mBAAS,SAArC,mBAAO8c,EAAP,KAAeC,EAAf,KACA,EAA4B/c,mBACxBsc,EAAMU,OACAV,EAAMU,OACN,CACIhD,KAAM,KACNhL,KAAM,GACNiO,UAAW,GACXC,UAAW,GACXC,QAAS,GACTC,OAAQ,GACRC,UAAW,OACXC,YAAa,+BACbC,WAAY,OACZC,aAAc,4BACdC,mBAAoB,QACpBC,QAAS,IACTC,kBAAmB,CACfC,UAAW,GACXI,OAAQ,eAlB1B,mBAAOhB,EAAP,KAAea,EAAf,KAsBA,EAAgC7d,mBAC5Bsc,EAAMU,OAASV,EAAMU,OAAOlO,GAAK,GADrC,mBAAOgP,EAAP,KAAiBC,EAAjB,KAIMtR,EAAe,SAACjG,GAAD,OAAU,SAACtD,GAC5B2a,EAAU,2BACHb,GADE,kBAEJxW,EAAOtD,EAAMwJ,OAAOpE,WAIvB8X,EAAqB,SAAC5Z,GAAD,OAAU,SAACtD,GAClC2a,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,kBAEZnX,EAAOtD,EAAMwJ,OAAOpE,aAS3B3H,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAGCggB,EAAe,SAAC5T,GAClBA,EAAEC,iBACFpB,GAAW,GAEX,IAAMuT,EAAU,eAAQnC,GACxBmC,EAAWxB,kBAAX,eAAoCwB,EAAWxB,mBAEhC,UAAXb,IACAqC,EAAWhC,QAAU,IAIzBgC,EAAW5B,WAAuC,SAA1B4B,EAAW5B,WACnC4B,EAAW1B,mBAC2B,SAAlC0B,EAAW1B,mBACf0B,EAAW9B,UAAqC,SAAzB8B,EAAW9B,UAClC8B,EAAWzB,QAAU0B,SAASD,EAAWzB,SACzCyB,EAAWxB,kBAAkBC,UAAYuB,EAAWxB,kBAAkBC,UAAUyB,MAC5E,KAGkD,IAAlDF,EAAWxB,kBAAkBC,UAAUrI,QACO,KAA9C4J,EAAWxB,kBAAkBC,UAAU,KAEvCuB,EAAWxB,kBAAkBC,UAAY,IAG7C7X,KAAI4G,KAAK,gBAAiB,CACtBqQ,OAAQmC,IAEPlZ,MAAK,SAACC,GACHR,EACI,MACA,QACA,kCAAW4W,EAAMU,OAAS,eAAO,gBACjC,WAEJR,EAAc,GACduB,EAAY7X,EAASC,SAExBc,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,MAGnBA,GAAW,IAoBf,OACI,6BACI,kBAACiC,GAAD,CACI1N,KAAMqhB,EACN5Z,QAAS,kBAAM6Z,GAAa,IAC5B1kB,MAAO,eACP8I,IACI,kMAGR,kBAAClE,EAAA,EAAD,CAAYC,QAAS,MAChB0a,EAAMU,OAAS,eAAO,eAD3B,uCAGA,kBAACkB,GAAA,EAAD,CAAS3B,WAAYA,GAChBJ,GAAM9Z,KAAI,SAAC+H,EAAO+T,GACf,IA7FO7N,EA6FD8N,EAAY,GACZC,EAAa,GASnB,OARIjU,EAAMgS,WACNiC,EAAWjC,SACP,kBAACza,EAAA,EAAD,CAAYC,QAAQ,WAApB,iBAjGD0O,EAoGW6N,EAnGvBzB,EAAQ4B,IAAIhO,KAoGH8N,EAAUG,WAAY,GAGtB,kBAACC,GAAA,EAAD,eAAM3b,IAAKuH,EAAMrN,OAAWqhB,GACxB,kBAACK,GAAA,EAAcJ,EAAajU,EAAMrN,YAMlC,IAAfwf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,mHAEI,6BAFJ,4JAKI,sCAEI,6BAFJ,mBAGoB,6BAHpB,kCAKI,6BALJ,mBAMoB,iCAMhC,yBAAKV,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,uKAGI,gEAHJ,UAKA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAO4B,WACd3b,SAAUwJ,EAAa,oBAO3C,yBAAKvL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,oVAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAO0U,EAAOK,UACdpa,SAAUwJ,EAAa,aACvBoN,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iEAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,8CAQ9B,yBAAKlJ,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,iLAEqB,IACjB,mEAHJ,iHAMA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,YAGA,kBAACC,GAAA,EAAD,CACIhF,MAAO0U,EAAOI,OACdna,SAAUwJ,EAAa,gBAO3C,yBAAKvL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,kIAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACuU,GAAA,EAAD,CACIrZ,QAASwE,OAAOD,KAAK0U,IACrBK,UAAQ,EACRrZ,MAAO0U,EAAOW,kBAAkBK,OAChC4D,cAAe,SAACC,EAAGvZ,GAAJ,OACX8X,EAAmB,SAAnBA,CAA6B,CACzB1T,OAAQ,CAAEpE,MAAOA,MAGzBwZ,aAAc,SAAC7U,GAAD,OACV,kBAAC,IAAMjC,SAAP,KACKsW,GAAQrU,KAGjB8U,YAAa,SAACC,GAAD,OACT,kBAAC/R,GAAA,EAAD,eACItF,MAAO,CAAEpP,MAAO,SACZymB,WAShC,yBAAK9gB,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,qEAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAOwU,EACP7Z,SAAU,SAAC8J,GACPgQ,EAAUhQ,EAAEL,OAAOpE,QAEvBuR,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,4BAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAAe,SAAXlC,GACV,yBAAK5b,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,gCAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAACwP,GAAD,CACIxS,MAAO0U,EAAOG,QACdla,SAAUwJ,EAAa,WACvBc,SAAqB,SAAXuP,EACV1S,MAAO,qCAO3B,yBAAKlJ,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACnBsD,aAAU,EAAG,CAAY,SAAXnC,MAGvB,yBAAK5b,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,wFAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,aAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACR6C,WAAY,CACRuO,QAAS,OACT5hB,MAAO,wCAEXuL,MAAO0U,EAAOE,UACdja,SAAUwJ,EAAa,iBAInC,yBAAKvL,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,aAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACR6C,WAAY,CACRuO,QAAS,OACT5hB,MAAO,wCAEXuL,MAAO0U,EAAOC,UACdha,SAAUwJ,EAAa,mBAO3C,yBAAKvL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACnBsD,aAAU,EAAG,CAAY,SAAXnC,MAGvB,yBAAK5b,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,0DAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAOhO,KACd/L,SAAUwJ,EAAa,cAO3C,yBAAKvL,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,meAIc,IACV,kBAACkU,GAAA,EAAD,CACIvY,MAAO,YACPwY,KAAM,oBACNtU,QAAS,kBAAMob,EAAY,UAH/B,oDAMQ,IAXZ,UAcA,yBAAK3b,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAOM,YACdra,SAAUwJ,EAAa,qBAO3C,yBAAKvL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,mXAGc,IACV,kBAACkU,GAAA,EAAD,CACIvY,MAAO,YACPwY,KAAM,oBACNtU,QAAS,kBAAMob,EAAY,UAH/B,0DAMQ,IAVZ,UAaA,yBAAK3b,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACIrd,aAAW,SACXgF,KAAK,UACL8B,MAAO0U,EAAOO,WACdta,SAAUwJ,EAAa,cACvBoN,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,mCAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,0BAMtB,kBAAC2U,GAAA,EAAD,CAAUC,GAA0B,SAAtBhC,EAAOO,YACjB,yBAAKrc,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,SAC0B,SAAtByP,EAAOO,WAEXjV,MAAO0U,EAAOQ,aACdva,SAAUwJ,EACN,uBAS5B,yBAAKvL,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAOA,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BACIrb,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFwP,EAAc,KAGlB,yBAAKtb,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,iFAEI,6BAFJ,kOAMA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAO0U,EAAOS,mBACdxa,SAAU,SAAC8J,GAEkB,SAArBiQ,EAAOK,WACY,SAAnBtQ,EAAEL,OAAOpE,MAUbmE,EAAa,qBAAbA,CACIM,GATArH,EACI,MACA,QACA,qEACA,YAQZmU,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,sBAQ9B,yBAAKlJ,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAMU,IACV,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BAAMrb,UAAWpB,EAAQ2b,YAAa3O,SAAU6T,GAC5C,yBAAKzf,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,kFAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MACuB,MAAnB0U,EAAOU,QACD,QACA,OAEVza,SAAU,SAAC8J,GACgB,SAAnBA,EAAEL,OAAOpE,MACTuV,EAAU,2BACHb,GADE,IAELU,QAAS,cAGbG,EAAU,2BACHb,GADE,IAELU,QAAS,QAIrB7D,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,4BAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAAuB,MAAnBhC,EAAOU,SACjB,yBAAKxc,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,kCAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAACkF,GAAD,CACIlI,MAAO0U,EAAOU,QACdza,SAAUwJ,EAAa,WACvB4D,IAAK,EACLI,IAAK,mBACLrG,MAAO,mDAO3B,yBAAKlJ,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACA,MAAnBqB,EAAOU,QAAkB,IAAM,MAGxC,yBAAKxc,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,4EAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAEuB,KADnB0U,EAAOW,kBACFC,UACC,QACA,OAEV3a,SAAU,SAAC8J,GACgB,SAAnBA,EAAEL,OAAOpE,MACTuV,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,IAEbC,UACI,2BAIZC,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,IAEbC,UAAW,SAK3B/D,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,4BAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAA2C,KAAvChC,EAAOW,kBAAkBC,WACnC,yBAAK1c,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YACA,MAAnBqB,EAAOU,QAAkB,IAAM,MAGxC,yBAAKxc,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,iJAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIhF,MACI0U,EAAOW,kBACFC,UAET3a,SAAUmd,EACN,oBAS5B,yBAAKlf,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAM+a,EAAc,KAHjC,sBAMU,IACV,kBAACrU,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBAYI,IAAfgf,GACG,0BAAMrb,UAAWpB,EAAQ2b,YAAa3O,SAAU6T,GAC5C,yBAAKzf,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,sBACxB,yBAAK3a,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,ubAMA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAACnD,GAAA,EAAD,CACIyF,SAAUjC,EACVpO,MAAO,YACPqE,QAAS,YACTV,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBA3vBrCmK,GAAW,QACX7F,KAAI4G,KAAK,qBAAsB,CAC3BtJ,GAAIya,IAEH7X,MAAK,WACFP,EAAe,MAAO,QAAS,6CAAW,WAC1C8W,EAAc,MAEjBvV,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,OAgvBS9L,QAAS,CAAEsK,MAAOtK,EAAQic,kBAN9B,gDAaZ,yBAAK7a,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,WACL+a,GACI,SAAC8C,GAAD,OAAoBA,EAAiB,KAEzC3C,GAAW,SAAC4C,GACR,IAAMC,EAAa,IAAI/C,IACnB8C,EAAYE,UAGhB,OADAD,EAAWE,IAAInD,GACRiD,OAZnB,gBAiBU,MAKN,IAAfjD,GACG,oCACI,0BAAMrb,UAAWpB,EAAQ2b,aACrB,kBAAC9Z,EAAA,EAAD,sCACU2a,EAAMU,OAAS,eAAO,eADhC,UAGA,kBAACrb,EAAA,EAAD,CAAYC,QAAS,QAASrE,MAAO,iBAArC,2MAIJ,yBAAK2D,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMlB,EAAQkC,KAAK,mBAHhC,sDAWZ,kBAAC6Y,GAAD,CACInb,KAAmB,SAAbyc,EACNrB,QAAM,EACN3T,QAAS,kBAAMiV,EAAY,OAE/B,kBAACvB,GAAD,CACInb,KAAmB,SAAbyc,EACNhV,QAAS,kBAAMiV,EAAY,QC9iC3C,IAAMxhB,GAAYC,aAAW,SAACJ,GAAD,YAAY,CACrCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJpB,QAAS,CACLD,QAASI,EAAMC,QAAQ,QAIhB,SAAS8mB,KACpB,IAAMniB,EAAUzE,KAERkM,EAAS2a,cAAT3a,KAER,OACI,6BACI,kBAACoB,GAAA,EAAD,CAAO3F,QAAM,EAAC9B,UAAWpB,EAAQ/E,SACnB,UAATwM,GAAoB,kBAACoY,GAAD,MACX,WAATpY,GAAqB,kBAAC,GAAD,MACZ,UAATA,GAAoB,kBAAC,GAAD,MACX,QAATA,GAAkB,kBAACgZ,GAAD,MACT,UAAThZ,GAAoB,kBAAC6Z,GAAD,MACX,QAAT7Z,GAAkB,kBAAC8U,GAAD,MACT,aAAT9U,GAAuB,kBAACqY,GAAD,MACd,OAATrY,GAAiB,kBAACga,GAAD,QCtBnB,SAASY,GAAQ7F,GAC5B,MAAuBtc,oBAAS,GAAvB4L,EAAT,oBACA,EAA4B5L,mBAASsc,EAAMU,QAA3C,mBAAOA,EAAP,KAAea,EAAf,KAEMpR,EAAe,SAACjG,GAAD,OAAU,SAACtD,GAC5B2a,EAAU,2BACHb,GADE,kBAEJxW,EAAOtD,EAAMwJ,OAAOpE,WAIvB8X,EAAqB,SAAC5Z,GAAD,OAAU,SAACtD,GAClC2a,EAAU,2BACHb,GADE,IAELW,kBAAkB,2BACXX,EAAOW,mBADG,kBAEZnX,EAAOtD,EAAMwJ,OAAOpE,aAK3B3H,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IA+CL,OACI,6BACI,kBAACgB,EAAA,EAAD,CAAYC,QAAS,MAArB,wCACA,kBAAC+X,GAAA,EAAD,KACI,0BAAM7M,SAhDG,SAACC,GAClBA,EAAEC,iBACFpB,GAAW,GAEX,IAAMuT,EAAU,eAAQnC,GACxBmC,EAAWxB,kBAAX,eAAoCwB,EAAWxB,mBAG/CwB,EAAW5B,WAAuC,SAA1B4B,EAAW5B,WACnC4B,EAAW9B,UAAqC,SAAzB8B,EAAW9B,UAClC8B,EAAW1B,mBAC2B,SAAlC0B,EAAW1B,mBACf0B,EAAWzB,QAAU0B,SAASD,EAAWzB,SACzCyB,EAAWxB,kBAAkBC,UAAYuB,EAAWxB,kBAAkBC,UAAUyB,MAC5E,KAGkD,IAAlDF,EAAWxB,kBAAkBC,UAAUrI,QACO,KAA9C4J,EAAWxB,kBAAkBC,UAAU,KAEvCuB,EAAWxB,kBAAkBC,UAAY,IAG7C7X,KAAI4G,KAAK,gBAAiB,CACtBqQ,OAAQmC,IAEPlZ,MAAK,WACFP,EACI,MACA,QACA,kCAAW4W,EAAMU,OAAS,eAAO,gBACjC,cAGP/V,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,MAGnBA,GAAW,KAQC,kBAACmJ,GAAA,EAAD,CAAOvT,aAAW,gBACd,kBAACwT,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,2BACA,kBAACA,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,uBAGR,kBAACC,GAAA,EAAD,KACI,kBAACF,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAAhC,MAGA,kBAACF,GAAA,EAAD,KAAY8H,EAAOlO,IACnB,kBAACoG,GAAA,EAAD,8CAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAAhC,gBAGA,kBAACF,GAAA,EAAD,KAAY8H,EAAOhD,MACnB,kBAAC9E,GAAA,EAAD,8CAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAAhC,gBAGA,kBAACF,GAAA,EAAD,KACI,kBAAChI,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAO0U,EAAOhO,KACd/L,SAAUwJ,EAAa,YAInC,kBAACyI,GAAA,EAAD,wCAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAAhC,UAGA,kBAACF,GAAA,EAAD,KACI,kBAAChI,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIhF,MAAO0U,EAAOI,OACdna,SAAUwJ,EAAa,cAInC,kBAACyI,GAAA,EAAD,qCAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAAhC,cAGA,kBAACF,GAAA,EAAD,KACI,kBAAChI,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIhF,MAAO0U,EAAO4B,WACd3b,SAAUwJ,EACN,kBAKhB,kBAACyI,GAAA,EAAD,wCAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAAhC,4BAGA,kBAACF,GAAA,EAAD,KACI,kBAAChI,GAAA,EAAD,KACI,kBAAC2R,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAO0U,EAAOK,UACdpa,SAAUwJ,EAAa,aACvBoN,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,WAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,cAKtB,kBAAC8K,GAAA,EAAD,oDAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAAhC,qCAGA,kBAACF,GAAA,EAAD,KACI,kBAAChI,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIhF,MAAO0U,EAAOG,QACdla,SAAUwJ,EAAa,eAInC,kBAACyI,GAAA,EAAD,kGAIJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAAhC,aAGA,kBAACF,GAAA,EAAD,KACI,kBAAChI,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIG,WAAS,EACT8C,QAAS,GACTjI,MAAO0U,EAAOE,UACdja,SAAUwJ,EAAa,iBAInC,kBAACyI,GAAA,EAAD,uCAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAAhC,aAGA,kBAACF,GAAA,EAAD,KACI,kBAAChI,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIG,WAAS,EACT8C,QAAS,GACTjI,MAAO0U,EAAOC,UACdha,SAAUwJ,EAAa,iBAInC,kBAACyI,GAAA,EAAD,mBAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAAhC,sDAGA,kBAACF,GAAA,EAAD,KACI,kBAAChI,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACI/F,KAAM,SACN6I,WAAY,CACRC,IAAK,EACLC,KAAM,GAEVhI,MAAO0U,EAAOU,QACdza,SAAUwJ,EAAa,eAInC,kBAACyI,GAAA,EAAD,6HAIJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAAhC,kCAGA,kBAACF,GAAA,EAAD,KACI,kBAAChI,GAAA,EAAD,KACI,kBAAC2R,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAO0U,EAAOO,WACdta,SAAUwJ,EACN,cAEJoN,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,WAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,cAKtB,kBAAC8K,GAAA,EAAD,0GAIJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAAhC,4BAGA,kBAACF,GAAA,EAAD,KACI,kBAAChI,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIG,WAAS,EACTnF,MAAO0U,EAAOM,YACdra,SAAUwJ,EACN,mBAKhB,kBAACyI,GAAA,EAAD,0DAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAAhC,kCAGA,kBAACF,GAAA,EAAD,KACI,kBAAChI,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIG,WAAS,EACTnF,MAAO0U,EAAOQ,aACdva,SAAUwJ,EACN,oBAKhB,kBAACyI,GAAA,EAAD,gEAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAAhC,wCAGA,kBAACF,GAAA,EAAD,KACI,kBAAChI,GAAA,EAAD,KACI,kBAAC2R,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAO0U,EAAOS,mBACdxa,SAAUwJ,EACN,sBAEJoN,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,WAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QACI,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YAElB6M,MAAM,cAKtB,kBAAC8K,GAAA,EAAD,sQAIJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAAhC,8CAGA,kBAACF,GAAA,EAAD,KACI,kBAAChI,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIG,WAAS,EACTnF,MACI0U,EAAOW,kBAAkB0D,MAE7Bpe,SAAUmd,EACN,aAKhB,kBAAClL,GAAA,EAAD,4EAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAAhC,8CAGA,kBAACF,GAAA,EAAD,KACI,kBAAChI,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIG,WAAS,EACTnF,MACI0U,EAAOW,kBACFC,UAET3a,SAAUmd,EACN,iBAKhB,kBAAClL,GAAA,EAAD,oDAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAAhC,+BAGA,kBAACF,GAAA,EAAD,KACI,kBAAChI,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIG,WAAS,EACTnF,MACI0U,EAAOW,kBACFkD,SAET5d,SAAUmd,EACN,gBAKhB,kBAAClL,GAAA,EAAD,sEAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAAhC,2CAGA,kBAACF,GAAA,EAAD,KACI,kBAAChI,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIG,WAAS,EACTnF,MACI0U,EAAOW,kBACFsC,YAEThd,SAAUmd,EACN,mBAKhB,kBAAClL,GAAA,EAAD,gEAEJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAAhC,uDAGA,kBAACF,GAAA,EAAD,KACI,kBAAChI,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIG,WAAS,EACTnF,MACI0U,EAAOW,kBACFkC,SAET5c,SAAUmd,EACN,gBAKhB,kBAAClL,GAAA,EAAD,oEAIJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAAhC,kEAGA,kBAACF,GAAA,EAAD,KACI,kBAAChI,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIG,WAAS,EACTnF,MACI0U,EAAOW,kBACFmC,UAET7c,SAAUmd,EACN,iBAKhB,kBAAClL,GAAA,EAAD,kKAMJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAAhC,oBAGA,kBAACF,GAAA,EAAD,KACI,kBAAChI,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIG,WAAS,EACTnF,MACI0U,EAAOW,kBAAkBK,OAE7B/a,SAAUmd,EACN,cAKhB,kBAAClL,GAAA,EAAD,qEAIJ,kBAACD,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW7K,UAAU,KAAK+K,MAAM,OAAhC,yBAGA,kBAACF,GAAA,EAAD,KACI,kBAAChI,GAAA,EAAD,KACI,kBAACI,GAAA,EAAD,CACIG,WAAS,EACTnF,MACI0U,EAAOW,kBACF6C,qBAETvd,SAAUmd,EACN,4BAKhB,kBAAClL,GAAA,EAAD,iEAIZ,kBAAC/M,GAAA,EAAD,CACIZ,KAAM,SACNhK,MAAO,UACPqE,QAAS,YACT+I,MAAO,CAAElQ,OAAQ,IAJrB,+BCtgBpB,IAAMY,GAAYC,aAAW,SAACJ,GAAD,YAAY,CACrCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJpB,QAAS,CACLD,QAASI,EAAMC,QAAQ,QAIhB,SAASinB,KACpB,IAAMtiB,EAAUzE,KAChB,EAAwB2E,mBAAS,IAAjC,mBAAOuH,EAAP,KAAa8a,EAAb,KACA,EAA4BriB,mBAAS,IAArC,mBAAOgd,EAAP,KAAea,EAAf,KAEA,EAAqBqE,cAAbI,EAAR,EAAQA,KAAMjf,EAAd,EAAcA,GAER1C,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IA8BL,OA3BAK,qBAAU,WACNqhB,EAAQ,IACRtc,KAAIC,IAAI,iBAAmB3C,GACtB4C,MAAK,SAACC,GACHA,EAASC,KAAKsX,mBAAqBvX,EAASC,KACvCsX,mBACC,OACA,QACNvX,EAASC,KAAKoX,WAAarX,EAASC,KAAKoX,WACnC,OACA,QACNrX,EAASC,KAAKuX,QAAUxX,EAASC,KAAKuX,QAAQ3O,WAC9C7I,EAASC,KAAKkX,UAAYnX,EAASC,KAAKkX,UAClC,OACA,QACNnX,EAASC,KAAKwX,kBAAkBC,UAAY1X,EAASC,KAChDwX,kBAAkBC,UACjB1X,EAASC,KAAKwX,kBAAkBC,UAAU2E,KAAK,KAC/C,GACN1E,EAAU3X,EAASC,MACnBkc,EAAQnc,EAASC,KAAK6T,SAEzB/S,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAEvD,CAAC9D,IAGA,6BACI,kBAACsF,GAAA,EAAD,CAAO3F,QAAM,EAAC9B,UAAWpB,EAAQ/E,SACnB,UAATunB,GACG,oCACc,UAAT/a,GAAoB,kBAACoY,GAAD,CAAY3C,OAAQA,IAC/B,WAATzV,GAAqB,kBAAC,GAAD,CAAayV,OAAQA,IACjC,UAATzV,GAAoB,kBAAC,GAAD,CAAYyV,OAAQA,IAC/B,QAATzV,GAAkB,kBAACgZ,GAAD,CAAUvD,OAAQA,IAC3B,UAATzV,GAAoB,kBAAC6Z,GAAD,CAAYpE,OAAQA,IAC/B,QAATzV,GAAkB,kBAAC8U,GAAD,CAAUW,OAAQA,IAC3B,aAATzV,GACG,kBAACqY,GAAD,CAAe5C,OAAQA,IAEjB,OAATzV,GAAiB,kBAACga,GAAD,CAASvE,OAAQA,KAIjC,QAATsF,GAA2B,KAAT/a,GAAe,kBAAC4a,GAAD,CAASnF,OAAQA,MCpEnE,IAAM3hB,GAAYC,aAAW,SAACJ,GAAD,YAAY,CACrCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJpB,QAAS,CACLD,QAASI,EAAMC,QAAQ,IAE3BuM,UAAW,CACP9K,UAAW,QAEf+a,eAAgB,CACZpM,UAAW,IAEfqM,OAAQ,CACJpd,QAAS,OACT2C,eAAgB,iBAEpB0a,YAAa,OAGXC,GAAU,CACZ,CAAEzU,GAAI,IAAK+G,MAAO,IAAKrG,SAAU,IACjC,CAAEV,GAAI,OAAQ+G,MAAO,eAAMrG,SAAU,KACrC,CAAEV,GAAI,OAAQ+G,MAAO,2BAAQrG,SAAU,KACvC,CACIV,GAAI,QACJ+G,MAAO,iCACPrG,SAAU,GACVgU,MAAO,SAEX,CACI1U,GAAI,OACJ+G,MAAO,2BACPrG,SAAU,IACVgU,MAAO,SAEX,CACI1U,GAAI,SACJ+G,MAAO,eACPrG,SAAU,IACVgU,MAAO,UAQA,SAASzY,KACpB,IAAMQ,EAAUzE,KAChB,EAA4B2E,mBAAS,IAArC,mBAAOsO,EAAP,KAAeC,EAAf,KACA,EAA8BvO,mBAAS,IAAvC,mBAAOkY,EAAP,KAAgBC,EAAhB,KACA,EAAwBnY,mBAAS,GAAjC,mBAAOoY,EAAP,KAAaC,EAAb,KACA,EAAgCrY,mBAAS,IAAzC,mBAAOsY,EAAP,KAAiBC,EAAjB,KACA,EAA0BvY,mBAAS,GAAnC,mBAAOwY,EAAP,KAAcC,EAAd,KACA,EAAgC1T,IAAM/E,SAAS,IAA/C,mBAAOiX,EAAP,KAAiBgB,EAAjB,KAEMxX,EAAWC,cACXH,EAAUC,cACV0Y,EAdC,IAAIC,gBAAgBzY,cAAc0Y,QAgBnCzY,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAGC2Y,EAAW,WACbvT,KAAI4G,KAAK,oBAAqB,CAC1ByL,KAAMA,EACNmB,UAAWjB,EACXkB,SAAU,YAETvT,MAAK,SAACC,GACHqI,EAAUrI,EAASC,KAAK3H,OACxB2Z,EAAWjS,EAASC,KAAK+R,SACzBO,EAASvS,EAASC,KAAKqS,OACvBP,EAAY/R,EAASC,KAAK8Q,aAE7BhQ,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,aAI1DnG,qBAAU,WACoB,MAAtBkY,EAAMlT,IAAI,QACVN,EAAe,MAAO,QAAS,2BAAQ,WAChCwT,EAAMlT,IAAI,QAA+B,KAArBkT,EAAMlT,IAAI,QACrCN,EACI,MACA,QACAwT,EAAMlT,IAAI,OAAS,KAAOkT,EAAMlT,IAAI,OACpC,aAGT,CAACvF,IAEJO,qBAAU,WACNsY,MACD,CAAClB,EAAME,IAaV,OACI,6BACI,yBAAKpX,UAAWpB,EAAQ8X,QACpB,kBAACzP,GAAA,EAAD,CACI5K,MAAO,UACPkE,QAAS,kBAAMlB,EAAQkC,KAAK,qBAC5Bb,QAAS,aAHb,kCAOA,yBAAKV,UAAWpB,EAAQ+X,aACpB,kBAAC1P,GAAA,EAAD,CACI5K,MAAO,UACPkE,QAAS,kBAAM6X,KACf1X,QAAS,YAHb,kBAUR,kBAAC+G,GAAA,EAAD,CAAO3F,QAAM,EAAC9B,UAAWpB,EAAQ6X,gBAC7B,kBAACgC,GAAA,EAAD,CAAgBzY,UAAWpB,EAAQ4H,WAC/B,kBAACqN,GAAA,EAAD,CAAOvT,aAAW,eAAe2I,KAAM,SACnC,kBAAC6K,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAUtK,MAAO,CAAErH,OAAQ,KACtBwU,GAAQzV,KAAI,SAACuX,GAAD,OACT,kBAAC1E,GAAA,EAAD,CACIrS,IAAK+W,EAAOvW,GACZ0U,MAAO6B,EAAO7B,MACdpN,MAAO,CAAE5G,SAAU6V,EAAO7V,WAEzB6V,EAAOxP,YAKxB,kBAAC+K,GAAA,EAAD,KACK7G,EAAOjM,KAAI,SAACwX,GAAD,OACR,kBAAC5E,GAAA,EAAD,CAAU6E,OAAK,EAACjX,IAAKgX,EAAI/K,IACrB,kBAACoG,GAAA,EAAD,KAAY2E,EAAI/K,IAChB,kBAACoG,GAAA,EAAD,KAAY2E,EAAI7K,MAChB,kBAACkG,GAAA,EAAD,KACwB,OAAnB2E,EAAI2I,YACD3I,EAAI2I,WAAWngB,KAAI,SAACogB,EAAK5f,GACrB,IAAIwE,EAAM,GAUV,OATI4P,EAASwL,KACTpb,GAAO4P,EAASwL,GAAKzT,MAGrBnM,IACAgX,EAAI2I,WAAWjN,OAAS,IAExBlO,GAAO,OAEJA,MAGnB,kBAAC6N,GAAA,EAAD,CAAW6C,MAAO,cACOxV,IAApB2V,EAAQ2B,EAAI/K,KACToJ,EAAQ2B,EAAI/K,IAAImL,kBAExB,kBAAC/E,GAAA,EAAD,CAAW6C,MAAO,cACOxV,IAApB2V,EAAQ2B,EAAI/K,KACToL,aAAaL,EAAI6I,aAEzB,kBAACxN,GAAA,EAAD,CAAW6C,MAAO,SACd,kBAAC,KAAD,CAAShb,MAAO,gBACZ,kBAACwE,EAAA,EAAD,CACIE,QAAS,kBACLlB,EAAQkC,KACJ,qBACIoX,EAAI/K,KAGhB3E,KAAM,SAEN,kBAACkQ,GAAA,EAAD,QAGR,kBAAC,KAAD,CAAStd,MAAO,gBACZ,kBAACwE,EAAA,EAAD,CACIE,QAAS,kBA7F/B4B,EA8FuCwW,EAAI/K,QA7F7D/I,KAAIoU,OAAO,gBAAkB9W,GACxB4C,MAAK,WACFqT,IACA5T,EAAe,MAAO,QAAS,uCAAU,cAE5CuB,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAPrC,IAAC9D,GAgGsB8G,KAAM,SAEN,kBAACwL,GAAA,EAAD,gBAShC,kBAAC2E,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,KAC7BlQ,UAAU,MACVmQ,MAAOhC,EACPiC,YAAanC,EACbF,KAAMA,EAAO,EACbsC,aAAc,SAAC3N,EAAG4N,GAAJ,OAAUtC,EAAQsC,EAAI,IACpCC,oBAAqB,SAAC7N,GAClBwL,EAAYxL,EAAEL,OAAOpE,OACrB+P,EAAQ,QC9NhC,IAAMhd,GAAYC,aAAW,SAACJ,GAAD,YAAY,CACrCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJmP,KAAM,CACFjR,SAAU,IACVkR,UAAW,GACXC,aAAc,IAElBC,cAAc,eACTvQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,wBAcN,SAAS6nB,GAAUrG,GAC9B,IAAMxc,EAAUzE,KAChB,EAA8B2E,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KACA,EAA0B5L,mBACtBsc,EAAMsG,MACAtG,EAAMsG,MACN,CACI9T,GAAI,EACJE,KAAM,GACN0T,WAAY,aACZG,aAAc,OACdC,cAAe,OACfC,WAAY,IACZP,WAAY,EACZ7E,kBAAmB,CAEfqF,eAAgB,OAChBC,cAAe,KACfC,cAAe,IACfC,gBAAiB,OAhBnC,mBAAOP,EAAP,KAAcQ,EAAd,KAoBA,EAAgCpjB,mBAAS,IAAzC,mBAAOiX,EAAP,KAAiBgB,EAAjB,KAEM1X,EAAUC,cAEVG,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAGLK,qBAAU,WACN+E,KAAI4G,KAAK,qBAAsB,CAC3ByL,KAAM,EACNmB,UAAW,IACXC,SAAU,SACVC,WAAY,KAEXxT,MAAK,SAACC,GACH,IAAMmB,EAAM,GACZnB,EAASC,KAAK3H,MAAM6H,SAAQ,SAACC,GACzBe,EAAIf,EAAEwI,IAAMxI,EAAE0I,QAElBiJ,EAAY5Q,MAEfJ,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAEvD,IAEH,IAAMsF,EAAe,SAACjG,GAAD,OAAU,SAACtD,GAC5BkgB,EAAS,2BACFR,GADC,kBAEHpc,EAAOtD,EAAMwJ,OAAOpE,WAIvB+a,EAAoB,SAAC7c,GAAD,OAAU,SAACtD,GACjC,IAAMoF,EAAQpF,EAAMwJ,OAAOgC,QAAU,OAAS,QAC9C0U,EAAS,2BACFR,GADC,kBAEHpc,EAAO8B,OAIVgb,EAA0B,SAAC9c,GAAD,OAAU,SAACtD,GACvC,IAAMoF,EAAQpF,EAAMwJ,OAAOgC,QAAU,OAAS,QAC9C0U,EAAS,2BACFR,GADC,IAEJjF,kBAAkB,2BACXiF,EAAMjF,mBADI,kBAEZnX,EAAO8B,SAKd8X,EAAqB,SAAC5Z,GAAD,OAAU,SAACtD,GAClCkgB,EAAS,2BACFR,GADC,IAEJjF,kBAAkB,2BACXiF,EAAMjF,mBADI,kBAEZnX,EAAOtD,EAAMwJ,OAAOpE,aAwEjC,OACI,6BACI,0BAAMwE,SArEC,SAACC,GACZA,EAAEC,iBACF,IAAMuW,EAAS,2BACRX,GADQ,IAEXjF,kBAAkB,eAAMiF,EAAMjF,qBAIlC,CAAC,eAAgB,iBAAiBtX,SAAQ,SAACC,GACvCid,EAAUjd,GAAsB,SAAjBid,EAAUjd,MAE7B,CACI,mBACA,eACA,oBACA,iBACA,SACFD,SAAQ,SAACC,QACgC/D,IAAnCghB,EAAU5F,kBAAkBrX,KAC5Bid,EAAU5F,kBAAkBrX,GACW,SAAnCid,EAAU5F,kBAAkBrX,OAKxC,CAAC,aAAc,cAAcD,SAAQ,SAACC,GAClCid,EAAUjd,GAAK8Y,SAASmE,EAAUjd,OAEtC,CAAC,gBAAiB,mBAAmBD,SAAQ,SAACC,QACH/D,IAAnCghB,EAAU5F,kBAAkBrX,KAC5Bid,EAAU5F,kBAAkBrX,GAAK8Y,SAC7BmE,EAAU5F,kBAAkBrX,QAIxCid,EAAUf,WAAa,CAACpD,SAASmE,EAAUf,aAE3C,IACIe,EAAU5F,kBAAkBsF,cAAgBtO,KAAKC,MAC7C2O,EAAU5F,kBAAkBsF,eAElC,MAAOlW,GAEL,YADArH,EAAe,MAAO,QAAS,mDAAiB,WAIpDkG,GAAW,GACX7F,KAAI4G,KAAK,eAAgB,CACrBiW,MAAOW,IAENtd,MAAK,WACF1F,EAAQkC,KAAK,gBACbiD,EACI,MACA,QACA,4BAAU4W,EAAMsG,MAAQ,eAAO,gBAC/B,cAGP3b,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,QAOX,yBAAK1K,UAAWpB,EAAQ1F,MACpB,kBAACuH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GACnB,IAAbga,EAAM9T,IAAY,iCACL,IAAb8T,EAAM9T,IAAY,gBAAQ8T,EAAM5T,MAGrC,yBAAK9N,UAAWpB,EAAQ2L,eACN,IAAbmX,EAAM9T,IACH,oCACI,yBAAK5N,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIhF,MAAOsa,EAAM5T,KACb/L,SAAUwJ,EAAa,QACvBc,UAAQ,IAEZ,kBAACC,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,0CAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACK,GAAA,EAAD,CACIyD,QAAQ,0BACR9N,GAAG,oBACHiF,MAAOsa,EAAMJ,WACbvf,SAAUwJ,EACN,cAEJmG,MACI,kBAACtF,GAAA,EAAD,CAAOjK,GAAG,0BAGbwJ,OAAOD,KAAKqK,GAAU5U,KACnB,SAACogB,GAAD,OACI,kBAAC9U,GAAA,EAAD,CACI9K,IAAK4f,EACLna,MAAOma,GAENxL,EAASwL,QAK1B,kBAACjV,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,wEAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACqD,GAAD,CACIlI,MAAOsa,EAAMF,WACbzf,SAAUwJ,EACN,cAEJ4D,IAAK,EACLI,IAAK,mBACLrG,MAAO,2BACPmD,UAAQ,KAGhB,kBAACC,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,gGAOZ,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACqD,GAAD,CACIlI,MAAOsa,EAAMG,WACb9f,SAAUwJ,EAAa,cACvB4D,IAAK,EACLI,IAAK,mBACLrG,MAAO,2BACPsG,OAAQ,KACRnD,UAAQ,KAGhB,kBAACC,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,uUAMU,IAAbuf,EAAM9T,IACH,yBAAK5N,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACwB,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIH,QAEI,SADAkU,EAAMC,aAGV5f,SAAUogB,EACN,kBAIZjZ,MAAM,yCAEV,kBAACoD,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,0FAOZ,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACwB,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIH,QAE4B,SADxBkU,EAAMjF,kBACDqF,eAET/f,SAAUqgB,EACN,oBAIZlZ,MAAM,yCAEV,kBAACoD,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,wHAMM,IAAbuf,EAAM9T,IACH,yBAAK5N,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACwB,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIH,QAEI,SADAkU,EAAME,cAGV7f,SAAUogB,EACN,mBAIZjZ,MAAM,WAEV,kBAACoD,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,oHAQZ,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACwB,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIH,QAGI,SAFAkU,EAAMjF,kBACD6F,kBAGTvgB,SAAUqgB,EACN,uBAIZlZ,MAAM,qDAEV,kBAACoD,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,0LAMM,IAAbuf,EAAM9T,IACH,yBAAK5N,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACwB,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIH,QAEmB,SADfkU,EAAMjF,kBACD8F,MAETxgB,SAAUqgB,EACN,WAIZlZ,MAAM,6BAEV,kBAACoD,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,0FAOZ,kBAAC0b,GAAA,EAAD,CAAUC,GAAsC,SAAlC4D,EAAMjF,kBAAkB8F,OAClC,yBAAKviB,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACC,GAAA,EAAD,CACIG,WAAS,EACTnF,MACIsa,EAAMjF,kBACDsF,cAEThgB,SAAUmd,EACN,mBAGR,kBAAC5S,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,4XAUZ,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACwB,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIH,QAE8B,SAD1BkU,EAAMjF,kBACD+F,iBAETzgB,SAAUqgB,EACN,sBAIZlZ,MAAM,6BAEV,kBAACoD,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,0FAMM,IAAbuf,EAAM9T,IACH,yBAAK5N,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACwB,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIH,QAE0B,SADtBkU,EAAMjF,kBACDgG,aAET1gB,SAAUqgB,EACN,kBAIZlZ,MAAM,iDAEV,kBAACoD,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,uFAOZ,kBAAC0b,GAAA,EAAD,CACIC,GAA6C,SAAzC4D,EAAMjF,kBAAkBgG,cAE5B,yBAAKziB,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACqD,GAAD,CACIlI,MACIsa,EAAMjF,kBACDuF,cAETjgB,SAAUmd,EACN,iBAEJ/P,IAAK,EACLI,IAAK,mBACLrG,MAAO,4DAGf,kBAACoD,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,0KAMJ,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACqD,GAAD,CACIlI,MACIsa,EAAMjF,kBACDwF,gBAETlgB,SAAUmd,EACN,mBAEJ/P,IAAK,EACLI,IAAK,mBACLrG,MAAO,4DAGf,kBAACoD,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,mLAQhB,yBAAKnC,UAAWpB,EAAQ1F,MACpB,kBAAC+N,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,mBCrhBL,SAASqmB,KACpB,MAA0B5jB,mBAAS,IAAnC,mBAAO4iB,EAAP,KAAcQ,EAAd,KAEQ/f,EAAO6e,cAAP7e,GAEF1C,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAkEL,OA/DAK,qBAAU,WACNoiB,EAAS,IACTrd,KAAIC,IAAI,gBAAkB3C,GACrB4C,MAAK,SAACC,GAkCH,GAhCA,CAAC,eAAgB,iBAAiBG,SAAQ,SAACC,GACvCJ,EAASC,KAAKG,GAAKJ,EAASC,KAAKG,GAAK,OAAS,WAEnD,CACI,mBACA,eACA,oBACA,iBACA,SACFD,SAAQ,SAACC,QACoC/D,IAAvC2D,EAASC,KAAKwX,kBAAkBrX,KAChCJ,EAASC,KAAKwX,kBAAkBrX,GAAKJ,EAASC,KACzCwX,kBAAkBrX,GACjB,OACA,YAKd,CAAC,aAAc,cAAcD,SAAQ,SAACC,GAClCJ,EAASC,KAAKG,GAAKJ,EAASC,KAAKG,GAAGyI,cAExC,CAAC,gBAAiB,mBAAmB1I,SAAQ,SAACC,QACC/D,IAAvC2D,EAASC,KAAKwX,kBAAkBrX,KAChCJ,EAASC,KAAKwX,kBACVrX,GACAJ,EAASC,KAAKwX,kBAAkBrX,GAAGyI,eAG/C7I,EAASC,KAAKqc,WAAatc,EAASC,KAAKqc,WAAW,QAIEjgB,IAAlD2D,EAASC,KAAKwX,kBAAkBsF,cAEhC/c,EAASC,KAAKwX,kBAAkBsF,cAAgB,UAEhD,IACI/c,EAASC,KAAKwX,kBAAkBsF,cAAgBtO,KAAKG,UACjD5O,EAASC,KAAKwX,kBAAkBsF,eAEtC,MAAOlW,GAOL,YANArH,EACI,MACA,QACA,mDACA,WAKZ0d,EAASld,EAASC,SAErBc,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAEvD,CAAC9D,IAEG,kCAAmBd,IAAbqgB,EAAM9T,IAAoB,kBAAC6T,GAAD,CAAWC,MAAOA,K,2DCnE9C,SAASiB,GAAT,GAA8D,IAAxChL,EAAuC,EAAvCA,UAAWiL,EAA4B,EAA5BA,UAAW3jB,EAAiB,EAAjBA,KAAMyH,EAAW,EAAXA,QAC7D,EAA0B5H,mBAAS,CAC/B+jB,SAAU,MACVC,OAAQ,QAFZ,mBAAOpR,EAAP,KAAcqR,EAAd,KAIA,EAA4BjkB,mBAAS,IAArC,mBAAOsO,EAAP,KAAeC,EAAf,KACA,EAAgCvO,mBAAS,IAAzC,mBAAOkkB,EAAP,KAAiBC,EAAjB,KAEMxjB,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAGC8L,EAAe,SAACjG,GAAD,OAAU,SAACtD,GAC5B+gB,EAAS,2BAAKrR,GAAN,kBAAcpM,EAAOtD,EAAMwJ,OAAOpE,WAG9CtH,qBAAU,WACN+E,KAAIC,IAAI,iBACHC,MAAK,SAACC,GACHqI,EAAUrI,EAASC,SAEtBc,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAEvD,IAqBH,OACI,kBAACQ,GAAA,EAAD,CACIxH,KAAMA,EACNyH,QAASA,EACTC,kBAAgB,qBAChBC,mBAAiB,2BACjBqF,WAAS,EACT9S,SAAU,MAEV,kBAAC0N,GAAA,EAAD,CAAa1E,GAAG,sBAAhB,4BACA,kBAAC2E,GAAA,EAAD,KACI,kBAACkF,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAY/J,GAAG,4BAAf,sBAGA,kBAACqK,GAAA,EAAD,CACIyD,QAAQ,2BACR9N,GAAG,qBACHiF,MAAOsK,EAAMmR,SACb9gB,SAAUwJ,EAAa,aAEvB,kBAACkB,GAAA,EAAD,CAAUrF,MAAO,OAAjB,gBACCgG,EAAOjM,KAAI,SAACiE,GACT,OAAa,IAATA,EAAEwI,GACK,KAGP,kBAACnB,GAAA,EAAD,CAAU9K,IAAKyD,EAAEwI,GAAIxG,MAAOhC,EAAEwI,GAAGC,YAC5BzI,EAAE0I,WAMvB,kBAAC9B,GAAA,EAAD,CAAaC,WAAS,EAACxC,MAAO,CAAEY,UAAW,KACvC,kBAAC6B,GAAA,EAAD,CAAY/J,GAAG,4BAAf,4BAGA,kBAACqK,GAAA,EAAD,CACIyD,QAAQ,2BACR9N,GAAG,qBACHiF,MAAOsK,EAAMoR,OACb/gB,SAAUwJ,EAAa,WAEvB,kBAACkB,GAAA,EAAD,CAAUrF,MAAO,OAAjB,gBACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,KAAjB,gBACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,KAAjB,sBACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,KAAjB,sBACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,KAAjB,gDAGR,kBAAC4E,GAAA,EAAD,CAAaC,WAAS,EAACxC,MAAO,CAAEY,UAAW,KACvC,kBAAC0E,GAAA,EAAD,CACI3H,MAAO4b,EACPjhB,SAAU,SAAC8J,GAAD,OAAOoX,EAAYpX,EAAEL,OAAOpE,QACtCjF,GAAG,iBACH+G,MAAM,qDAIlB,kBAAClC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ1G,QAASmG,EAASrK,MAAM,WAAhC,gBAGA,kBAAC4K,GAAA,EAAD,CAAQ1G,QAnFL,WACX,IAAM4F,EAAM,GACZwF,OAAOD,KAAKgG,GAAOvM,SAAQ,SAACC,GACP,QAAbsM,EAAMtM,KACNe,EAAIf,GAAKsM,EAAMtM,OAGvBuS,EAAUxR,GAENyc,EADa,KAAbI,EACU,CACNE,KAAMF,EACNG,MAAOH,GAGD,IAEdtc,KAmEiCrK,MAAM,WAA/B,kBCnGhB,IAAMlC,GAAYC,aAAW,SAACJ,GAAD,YAAY,CACrCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJpB,QAAS,CACLD,QAASI,EAAMC,QAAQ,IAE3BuM,UAAW,CACP9K,UAAW,QAEf+a,eAAgB,CACZpM,UAAW,IAEfqM,OAAQ,CACJpd,QAAS,OACT2C,eAAgB,iBAEpB0a,YAAa,GACbyM,UAC2B,UAAvBppB,EAAMsC,QAAQ+J,KACR,CACIhK,MAAOrC,EAAMsC,QAAQE,UAAUU,KAC/BR,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAUke,MAAO,MAE5D,CACIre,MAAOrC,EAAMsC,QAAQC,KAAKU,QAC1BP,gBAAiB1C,EAAMsC,QAAQE,UAAUiW,MAEvD4Q,eAAgB,CACZC,OAAQ,EACRC,KAAM,gBACNnhB,OAAQ,EACR7I,QAAS,EACTsmB,SAAU,SACVjmB,QAAS,EACTsG,SAAU,WACVsjB,IAAK,GACLnpB,MAAO,OAIA,SAAS+D,KACpB,IAAMQ,EAAUzE,KAChB,EAA0B2E,mBAAS,IAAnC,mBAAO4G,EAAP,KAAc+d,EAAd,KACA,EAAwB3kB,mBAAS,GAAjC,mBAAOoY,EAAP,KAAaC,EAAb,KACA,EAAgCrY,mBAAS,IAAzC,mBAAOsY,EAAP,KAAiBC,EAAjB,KACA,EAA0BvY,mBAAS,GAAnC,mBAAOwY,EAAP,KAAcC,EAAd,KACA,EAA4BzY,mBAAS,IAArC,mBAAO4Y,EAAP,KAAeC,EAAf,KACA,EAA4B7Y,mBAAS,IAArC,mBAAOoZ,EAAP,KAAe0K,EAAf,KACA,EAA8B9jB,mBAAS,CAAC,KAAM,SAA9C,mBAAO4kB,EAAP,KAAgBC,EAAhB,KACA,EAAwC7kB,oBAAS,GAAjD,mBAAO8kB,EAAP,KAAqBC,EAArB,KACA,EAAgC/kB,mBAAS,IAAzC,mBAAOglB,EAAP,KAAiBC,EAAjB,KACA,EAA8BjlB,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KAEMrL,EAAUC,cACVtF,EAAQ6E,cAERY,EAAWC,cACX8E,GAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAGC2Y,GAAW,WACbvT,KAAI4G,KAAK,mBAAoB,CACzByL,KAAMA,EACNmB,UAAWjB,EACXkB,SAAUoL,EAAQrC,KAAK,KACvB9I,WAAYb,EACZsM,SAAU9L,IAETnT,MAAK,SAACC,GACHye,EAASze,EAASC,KAAK3H,OACvBia,EAASvS,EAASC,KAAKqS,OACvByM,EAAY,OAEfhe,OAAM,SAACC,GACJxB,GAAe,MAAO,QAASwB,EAAMC,QAAS,aAI1DnG,qBAAU,WACNsY,OACD,CAAClB,EAAME,EAAUsM,EAAShM,EAAQQ,IAErC,IAiFM+L,GAAa,SAAC9hB,GAAD,OAAkC,IAA1B2hB,EAASI,QAAQ/hB,IAE5C,OACI,6BACI,kBAACwgB,GAAD,CACIjL,OAAQA,EACRzY,KAAM2kB,EACNld,QAAS,kBAAMmd,GAAgB,IAC/BjB,UAAWA,EACXjL,UAAWA,IAEf,yBAAK3X,UAAWpB,EAAQ8X,QACpB,kBAACzP,GAAA,EAAD,CACIwC,MAAO,CAAE0a,UAAW,UACpB9nB,MAAO,UACPkE,QAAS,kBAAMlB,EAAQkC,KAAK,oBAC5Bb,QAAS,aAJb,4BAQA,yBAAKV,UAAWpB,EAAQ+X,aACpB,kBAAC,KAAD,CAAS9a,MAAM,gBACX,kBAACwE,EAAA,EAAD,CACIoJ,MAAO,CAAErO,YAAa,GACtBmF,QAAS,kBAAMsjB,GAAgB,KAE/B,kBAACO,GAAA,EAAD,CACI/nB,MAAM,YACNqE,QAAQ,MACR2jB,UACmC,IAA/B1Y,OAAOD,KAAKwM,GAAQ7D,QACW,IAA/B1I,OAAOD,KAAKgM,GAAQrD,QAGxB,kBAACiQ,GAAA,EAAD,SAIZ,kBAACrd,GAAA,EAAD,CACI5K,MAAO,UACPkE,QAAS,kBAAM6X,MACf1X,QAAS,YAHb,kBAUR,kBAAC+G,GAAA,EAAD,CAAO3F,QAAM,EAAC9B,UAAWpB,EAAQ6X,gBAC5BqN,EAASzP,OAAS,GACf,kBAACjU,EAAA,EAAD,CAASJ,UAAWpB,EAAQwkB,WACxB,kBAAC3iB,EAAA,EAAD,CACIgJ,MAAO,CAAEmM,KAAM,YACfvZ,MAAM,UACNqE,QAAQ,aAHZ,sBAKSojB,EAASzP,OALlB,uBAOA,kBAAC,KAAD,CAASxY,MAAM,gBACX,kBAACwE,EAAA,EAAD,CACIE,QA9HR,WAChBmK,GAAW,GACX7F,KAAI4G,KAAK,qBAAsB,CAAEtJ,GAAI2hB,IAChC/e,MAAK,WACFqT,KACA5T,GAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAACC,GACJxB,GAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,OAoHKgC,SAAUjC,EACVnK,aAAW,UAEX,kBAACmU,GAAA,EAAD,SAKhB,kBAACgE,GAAA,EAAD,CAAgBzY,UAAWpB,EAAQ4H,WAC/B,kBAACqN,GAAA,EAAD,CAAOvT,aAAW,eAAe2I,KAAM,SACnC,kBAAC6K,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAUtK,MAAO,CAAErH,OAAQ,KACvB,kBAAC4R,GAAA,EAAD,CAAWpa,QAAQ,YACf,kBAAC2qB,GAAA,EAAD,CACIC,cACIV,EAASzP,OAAS,GAClByP,EAASzP,OAAS3O,EAAM2O,OAE5B7G,QACI9H,EAAM2O,OAAS,GACfyP,EAASzP,SAAW3O,EAAM2O,OAE9BtS,SAhHP,SAACC,GAC1B,GAAIA,EAAMwJ,OAAOgC,QAAjB,CACI,IAAMiX,EAAe/e,EAAMvE,KAAI,SAACujB,GAAD,OAAOA,EAAE9W,MACxCmW,EAAYU,QAGhBV,EAAY,KA2GoB7U,WAAY,CACR,aAAc,0BAI1B,kBAAC8E,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,KAC1B,kBAAC8hB,GAAA,EAAD,CACI5nB,OAAuB,OAAf2mB,EAAQ,GAChB3iB,UAAW2iB,EAAQ,GACnBnjB,QAAS,kBACLojB,EAAW,CACP,KACe,QAAfD,EAAQ,GACF,OACA,UARlB,IAaoB,OAAfA,EAAQ,GACL,0BACI1jB,UACIpB,EAAQykB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAC1P,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,MAC1B,kBAAC8hB,GAAA,EAAD,CACI5nB,OAAuB,SAAf2mB,EAAQ,GAChB3iB,UAAW2iB,EAAQ,GACnBnjB,QAAS,kBACLojB,EAAW,CACP,OACe,QAAfD,EAAQ,GACF,OACA,UARlB,eAaoB,SAAfA,EAAQ,GACL,0BACI1jB,UACIpB,EAAQykB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAC1P,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,MAC1B,kBAAC8hB,GAAA,EAAD,CACI5nB,OAAuB,UAAf2mB,EAAQ,GAChB3iB,UAAW2iB,EAAQ,GACnBnjB,QAAS,kBACLojB,EAAW,CACP,QACe,QAAfD,EAAQ,GACF,OACA,UARlB,QAaoB,UAAfA,EAAQ,GACL,0BACI1jB,UACIpB,EAAQykB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAC1P,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,KAA9B,sBAGA,kBAACmR,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,KAA9B,gBAGA,kBAACmR,GAAA,EAAD,CACI6C,MAAO,QACPpN,MAAO,CAAE5G,SAAU,KAEnB,kBAAC8hB,GAAA,EAAD,CACI5nB,OAAuB,YAAf2mB,EAAQ,GAChB3iB,UAAW2iB,EAAQ,GACnBnjB,QAAS,kBACLojB,EAAW,CACP,UACe,QAAfD,EAAQ,GACF,OACA,UARlB,2BAaoB,YAAfA,EAAQ,GACL,0BACI1jB,UACIpB,EAAQykB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAC1P,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,MAA9B,kBAKR,kBAACoR,GAAA,EAAD,KACKvO,EAAMvE,KAAI,SAACwX,GAAD,OACP,kBAAC5E,GAAA,EAAD,CACI6E,OAAK,EACLjX,IAAKgX,EAAI/K,GACTgX,KAAK,WACLd,SAAUG,GAAWtL,EAAI/K,KAEzB,kBAACoG,GAAA,EAAD,CAAWpa,QAAQ,YACf,kBAAC2qB,GAAA,EAAD,CACIhkB,QAAS,SAACyB,GAAD,OAjP7B,SAACA,EAAOsD,GACxB,IAAMuf,EAAgBf,EAASI,QAAQ5e,GACnCwf,EAAc,IAEK,IAAnBD,EACAC,EAAcA,EAAYC,OAAOjB,EAAUxe,GAClB,IAAlBuf,EACPC,EAAcA,EAAYC,OAAOjB,EAASkB,MAAM,IACzCH,IAAkBf,EAASzP,OAAS,EAC3CyQ,EAAcA,EAAYC,OAAOjB,EAASkB,MAAM,GAAI,IAC7CH,EAAgB,IACvBC,EAAcA,EAAYC,OACtBjB,EAASkB,MAAM,EAAGH,GAClBf,EAASkB,MAAMH,EAAgB,KAIvCd,EAAYe,GAiO4BG,CAAYjjB,EAAO2W,EAAI/K,KAE3BJ,QAASyW,GAAWtL,EAAI/K,OAGhC,kBAACoG,GAAA,EAAD,KAAY2E,EAAI/K,IAChB,kBAACoG,GAAA,EAAD,KAAY2E,EAAIuM,MAChB,kBAAClR,GAAA,EAAD,KAAY2E,EAAIwM,OAChB,kBAACnR,GAAA,EAAD,KACI,kBAACY,GAAA,EAAD,CACIC,KACI,qBACA8D,EAAIva,MAAMwP,IAGb+K,EAAIva,MAAM0P,OAGnB,kBAACkG,GAAA,EAAD,KACoB,IAAf2E,EAAIyM,QACD,kBAAC3kB,EAAA,EAAD,CACIgJ,MAAO,CACHpN,MACIrC,EAAMsC,QAAQ+oB,QACTnoB,MAEbwD,QAAS,SANb,gBAWY,IAAfiY,EAAIyM,QACD,kBAAC3kB,EAAA,EAAD,CACIpE,MAAO,gBACPqE,QAAS,SAFb,sBAOY,IAAfiY,EAAIyM,QACD,kBAAC3kB,EAAA,EAAD,CACIpE,MAAO,QACPqE,QAAS,SAFb,sBAOY,IAAfiY,EAAIyM,QACD,kBAAC3kB,EAAA,EAAD,CACIpE,MAAO,QACPqE,QAAS,SAFb,6BAQR,kBAACsT,GAAA,EAAD,CAAW6C,MAAO,SACbmC,aAAaL,EAAIza,UAEtB,kBAAC8V,GAAA,EAAD,KACI,kBAAC,KAAD,CAASnY,MAAO,gBACZ,kBAACwE,EAAA,EAAD,CACIE,QAAS,kBACLlB,EAAQkC,KACJ,oBACIoX,EAAI/K,KAGhB3E,KAAM,SAEN,kBAACkQ,GAAA,EAAD,QAGR,kBAAC,KAAD,CAAStd,MAAO,6BACZ,kBAACwE,EAAA,EAAD,CACIqM,SAAUjC,EACVlK,QAAS,kBA7VtC4B,EA6VkDwW,EAAI/K,GA5VjElD,GAAW,QACX7F,KAAIqC,MAAM,mBAAqB/E,GAC1B4C,MAAK,SAACC,GACHye,EACI/d,EAAMvE,KAAI,SAACiE,GACP,OAAIA,EAAEwI,KAAOzL,EACI,2BAAQiD,GAAR,IAAWggB,OAAQpgB,EAASC,OAGtCG,SAIlBW,OAAM,SAACC,GACJxB,GAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,MAlBT,IAACvI,GA8V6B8G,KAAM,SAEN,kBAACqc,GAAA,EAAD,QAGR,kBAAC,KAAD,CAASzpB,MAAO,gBACZ,kBAACwE,EAAA,EAAD,CACIqM,SAAUjC,EACVlK,QAAS,kBApY/B4B,EAqYuCwW,EAAI/K,GApY7DlD,GAAW,QACX7F,KAAI4G,KAAK,qBAAsB,CAAEtJ,GAAI,CAACA,KACjC4C,MAAK,WACFqT,KACA5T,GAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAACC,GACJxB,GAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,MAXF,IAACvI,GAuYsB8G,KAAM,SAEN,kBAACwL,GAAA,EAAD,gBAShC,kBAAC2E,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,KAC7BlQ,UAAU,MACVmQ,MAAOhC,EACPiC,YAAanC,EACbF,KAAMA,EAAO,EACbsC,aAAc,SAAC3N,EAAG4N,GAAJ,OAAUtC,EAAQsC,EAAI,IACpCC,oBAAqB,SAAC7N,GAClBwL,EAAYxL,EAAEL,OAAOpE,OACrB+P,EAAQ,QCjgBhC,IAAMhd,GAAYC,aAAW,SAACJ,GAAD,YAAY,CACrCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJmP,KAAM,CACFjR,SAAU,IACVkR,UAAW,GACXC,aAAc,IAElBC,cAAc,eACTvQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,wBAIN,SAAS2rB,GAASnK,GAC7B,IAAMxc,EAAUzE,KAChB,EAA8B2E,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KACA,EAAwB5L,mBACpBsc,EAAM3V,KACA2V,EAAM3V,KACN,CACImI,GAAI,EACJuX,MAAO,GACPD,KAAM,GACNM,SAAU,GACVJ,OAAQ,IACRK,QAAS,MATvB,mBAAOhgB,EAAP,KAAaigB,EAAb,KAYA,EAA4B5mB,mBAAS,IAArC,mBAAOsO,EAAP,KAAeC,EAAf,KAEMhO,EAAUC,cAEVG,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAGLK,qBAAU,WACN+E,KAAIC,IAAI,iBACHC,MAAK,SAACC,GACHqI,EAAUrI,EAASC,SAEtBc,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAEvD,IAEH,IAAMsF,EAAe,SAACjG,GAAD,OAAU,SAACtD,GAC5B0jB,EAAQ,2BACDjgB,GADA,kBAEFH,EAAOtD,EAAMwJ,OAAOpE,WAmC7B,OACI,6BACI,0BAAMwE,SAjCC,SAACC,GACZA,EAAEC,iBACF,IAAM6Z,EAAQ,eAAQlgB,GAGtB,CAAC,SAAU,UAAW,SAASN,SAAQ,SAACC,GACpCugB,EAASvgB,GAAK8Y,SAASyH,EAASvgB,OAGpCsF,GAAW,GACX7F,KAAI4G,KAAK,cAAe,CACpBhG,KAAMkgB,EACNC,SAAUD,EAASH,WAElBzgB,MAAK,WACF1F,EAAQkC,KAAK,eACbiD,EACI,MACA,QACA,sBAAS4W,EAAM3V,KAAO,eAAO,gBAC7B,cAGPM,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,QAOX,yBAAK1K,UAAWpB,EAAQ1F,MACpB,kBAACuH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GACpB,IAAZjC,EAAKmI,IAAY,2BACL,IAAZnI,EAAKmI,IAAY,gBAAQnI,EAAKyf,MAGnC,yBAAKllB,UAAWpB,EAAQ2L,eACpB,yBAAKvK,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gBAGA,kBAACC,GAAA,EAAD,CACIhF,MAAO3B,EAAK0f,MACZ9e,KAAM,QACNtE,SAAUwJ,EAAa,SACvBc,UAAQ,MAKpB,yBAAKrM,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gBAGA,kBAACC,GAAA,EAAD,CACIhF,MAAO3B,EAAKyf,KACZnjB,SAAUwJ,EAAa,QACvBc,UAAQ,MAKpB,yBAAKrM,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gBAGA,kBAACC,GAAA,EAAD,CACI/F,KAAM,WACNe,MAAO3B,EAAK+f,SACZzjB,SAAUwJ,EAAa,YACvBc,SAAsB,IAAZ5G,EAAKmI,KAEnB,kBAACtB,GAAA,EAAD,CAAgBnK,GAAG,yBACF,IAAZsD,EAAKmI,IAAY,gDAK9B,yBAAK5N,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,sBAGA,kBAACK,GAAA,EAAD,CACIpF,MAAO3B,EAAKggB,QACZ1jB,SAAUwJ,EAAa,WACvBc,UAAQ,GAEPe,EAAOjM,KAAI,SAACiE,GACT,OAAa,IAATA,EAAEwI,GACK,KAGP,kBAACnB,GAAA,EAAD,CACI9K,IAAKyD,EAAEwI,GACPxG,MAAOhC,EAAEwI,GAAGC,YAEXzI,EAAE0I,UAKnB,kBAACxB,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,gDAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gBAGA,kBAACK,GAAA,EAAD,CACIpF,MAAO3B,EAAK2f,OACZrjB,SAAUwJ,EAAa,UACvBc,UAAQ,GAER,kBAACI,GAAA,EAAD,CAAUrF,MAAO,KAAjB,gBACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,KAAjB,sBACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,KAAjB,sBACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,KAAjB,mDAQpB,yBAAKpH,UAAWpB,EAAQ1F,MACpB,kBAAC+N,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,mBC9ML,SAASwpB,KACpB,MAAwB/mB,mBAAS,IAAjC,mBAAO2G,EAAP,KAAaigB,EAAb,KAEQvjB,EAAO6e,cAAP7e,GAEF1C,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAkBL,OAfAK,qBAAU,WACN4lB,EAAQ,IACR7gB,KAAIC,IAAI,eAAiB3C,GACpB4C,MAAK,SAACC,GAEH,CAAC,SAAU,WAAWG,SAAQ,SAACC,GAC3BJ,EAASC,KAAKG,GAAKJ,EAASC,KAAKG,GAAGyI,cAExC6X,EAAQ1gB,EAASC,SAEpBc,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAEvD,CAAC9D,IAEG,kCAAkBd,IAAZoE,EAAKmI,IAAoB,kBAAC2X,GAAD,CAAU9f,KAAMA,K,eCnB3C,SAASqgB,GAAT,GAA8D,IAAxCnO,EAAuC,EAAvCA,UAAWiL,EAA4B,EAA5BA,UAAW3jB,EAAiB,EAAjBA,KAAMyH,EAAW,EAAXA,QAC7D,EAA0B5H,mBAAS,CAC/BinB,UAAW,MACXC,QAAS,KAFb,mBAAOtU,EAAP,KAAcqR,EAAd,KAIA,EAAgCjkB,mBAAS,IAAzC,mBAAOiX,EAAP,KAAiBgB,EAAjB,KACA,EAAgCjY,mBAAS,IAAzC,mBAAOkkB,EAAP,KAAiBC,EAAjB,KAEMxjB,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAGC8L,EAAe,SAACjG,GAAD,OAAU,SAACtD,GAC5B+gB,EAAS,2BAAKrR,GAAN,kBAAcpM,EAAOtD,EAAMwJ,OAAOpE,WAG9CtH,qBAAU,WACN+E,KAAI4G,KAAK,qBAAsB,CAC3ByL,KAAM,EACNmB,UAAW,IACXC,SAAU,SACVC,WAAY,KAEXxT,MAAK,SAACC,GACH+R,EAAY/R,EAASC,KAAK3H,UAE7ByI,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAEvD,IAoBH,OACI,kBAACQ,GAAA,EAAD,CACIxH,KAAMA,EACNyH,QAASA,EACTC,kBAAgB,qBAChBC,mBAAiB,2BACjBqF,WAAS,EACT9S,SAAU,MAEV,kBAAC0N,GAAA,EAAD,CAAa1E,GAAG,sBAAhB,4BACA,kBAAC2E,GAAA,EAAD,KACI,kBAACkF,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAY/J,GAAG,4BAAf,4BAGA,kBAACqK,GAAA,EAAD,CACIyD,QAAQ,2BACR9N,GAAG,qBACHiF,MAAOsK,EAAMqU,UACbhkB,SAAUwJ,EAAa,cAEvB,kBAACkB,GAAA,EAAD,CAAUrF,MAAO,OAAjB,gBACC2O,EAAS5U,KAAI,SAACiE,GACX,OAAa,IAATA,EAAEwI,GACK,KAGP,kBAACnB,GAAA,EAAD,CAAU9K,IAAKyD,EAAEwI,GAAIxG,MAAOhC,EAAEwI,GAAGC,YAC5BzI,EAAE0I,WAMvB,kBAAC9B,GAAA,EAAD,CAAaC,WAAS,EAACxC,MAAO,CAAEY,UAAW,KACvC,kBAAC0E,GAAA,EAAD,CACI3H,MAAOsK,EAAMsU,QACbjkB,SAAUwJ,EAAa,WACvBpJ,GAAG,iBACH+G,MAAM,0BAGd,kBAAC8C,GAAA,EAAD,CAAaC,WAAS,EAACxC,MAAO,CAAEY,UAAW,KACvC,kBAAC0E,GAAA,EAAD,CACI3H,MAAO4b,EACPjhB,SAAU,SAAC8J,GAAD,OAAOoX,EAAYpX,EAAEL,OAAOpE,QACtCjF,GAAG,iBACH+G,MAAM,sCAIlB,kBAAClC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ1G,QAASmG,EAASrK,MAAM,WAAhC,gBAGA,kBAAC4K,GAAA,EAAD,CAAQ1G,QAzEL,WACX,IAAM4F,EAAM,GACZwF,OAAOD,KAAKgG,GAAOvM,SAAQ,SAACC,GACP,QAAbsM,EAAMtM,IAA6B,KAAbsM,EAAMtM,KAC5Be,EAAIf,GAAKsM,EAAMtM,OAGvBuS,EAAUxR,GAENyc,EADa,KAAbI,EACU,CACN1d,KAAM0d,GAGA,IAEdtc,KA0DiCrK,MAAM,WAA/B,kB,aC7FVlC,GAAYC,aAAW,SAACJ,GAAD,YAAY,CACrCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJpB,QAAS,CACLD,QAASI,EAAMC,QAAQ,IAE3BuM,UAAW,CACP9K,UAAW,QAEf+a,eAAgB,CACZpM,UAAW,IAEfqM,OAAQ,CACJpd,QAAS,OACT2C,eAAgB,gBAChBD,WAAY,cAEhB2a,YAAa,GACbyM,UAC2B,UAAvBppB,EAAMsC,QAAQ+J,KACR,CACIhK,MAAOrC,EAAMsC,QAAQE,UAAUU,KAC/BR,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAUke,MAAO,MAE5D,CACIre,MAAOrC,EAAMsC,QAAQC,KAAKU,QAC1BP,gBAAiB1C,EAAMsC,QAAQE,UAAUiW,MAEvD4Q,eAAgB,CACZC,OAAQ,EACRC,KAAM,gBACNnhB,OAAQ,EACR7I,QAAS,EACTsmB,SAAU,SACVjmB,QAAS,EACTsG,SAAU,WACVsjB,IAAK,GACLnpB,MAAO,OAIA,SAAS4rB,KACpB,IAAMrnB,EAAUzE,KAChB,EAA0B2E,mBAAS,IAAnC,mBAAO0G,EAAP,KAAc0gB,EAAd,KACA,EAAwBpnB,mBAAS,GAAjC,mBAAOoY,EAAP,KAAaC,EAAb,KACA,EAAgCrY,mBAAS,IAAzC,mBAAOsY,EAAP,KAAiBC,EAAjB,KACA,EAA0BvY,mBAAS,GAAnC,mBAAOwY,EAAP,KAAcC,EAAd,KACA,EAA4BzY,mBAAS,IAArC,mBAAO4Y,EAAP,KAAeC,EAAf,KACA,EAA0B7Y,mBAAS,IAAnC,mBAAO4G,EAAP,KAAc+d,EAAd,KACA,EAA4B3kB,mBAAS,IAArC,mBAAOoZ,EAAP,KAAe0K,EAAf,KACA,EAA8B9jB,mBAAS,CAAC,KAAM,SAA9C,mBAAO4kB,EAAP,KAAgBC,EAAhB,KACA,EAAwC7kB,oBAAS,GAAjD,mBAAO8kB,EAAP,KAAqBC,EAArB,KACA,EAAgC/kB,mBAAS,IAAzC,mBAAOglB,EAAP,KAAiBC,EAAjB,KACA,EAA8BjlB,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KAEMrL,EAAUC,cACVG,GAAWC,cACX8E,GAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,GAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,KAGC2Y,GAAW,WACbvT,KAAI4G,KAAK,mBAAoB,CACzByL,KAAMA,EACNmB,UAAWjB,EACXkB,SAAUoL,EAAQrC,KAAK,KACvB9I,WAAYb,EACZsM,SAAU9L,IAETnT,MAAK,SAACC,GACHkhB,EAASlhB,EAASC,KAAK3H,OACvBia,EAASvS,EAASC,KAAKqS,OACvByM,EAAY,IACZN,EAASze,EAASC,KAAKS,UAE1BK,OAAM,SAACC,GACJxB,GAAe,MAAO,QAASwB,EAAMC,QAAS,aAI1DnG,qBAAU,WACNsY,OACD,CAAClB,EAAME,EAAUsM,EAAShM,EAAQQ,IAErC,IAoBMiO,GAAc,SAACC,GAAD,OAAW,WAC3B1b,GAAW,GACX7F,KAAI4G,KAAK,qBAAsB,CAAEtJ,GAAI2hB,EAAUsC,MAAOA,IACjDrhB,MAAK,WACFqT,KACA5T,GACI,MACA,QACA,+DACA,cAGPuB,OAAM,SAACC,GACJxB,GAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,QAiCjBuZ,GAAa,SAAC9hB,GAAD,OAAkC,IAA1B2hB,EAASI,QAAQ/hB,IAE5C,OACI,6BACI,kBAAC2jB,GAAD,CACIpO,OAAQA,EACRzY,KAAM2kB,EACNld,QAAS,kBAAMmd,GAAgB,IAC/BjB,UAAWA,EACXjL,UAAWA,IAEf,yBAAK3X,UAAWpB,EAAQ8X,QACpB,kBAACzP,GAAA,EAAD,CACI5K,MAAO,UACPkE,QAAS,kBAAMlB,EAAQkC,KAAK,uBAC5Bb,QAAS,YACT+I,MAAO,CACH0a,UAAW,WALnB,kCAUA,yBAAKnkB,UAAWpB,EAAQ+X,aACpB,kBAAC,KAAD,CAAS9a,MAAM,gBACX,kBAACwE,EAAA,EAAD,CACIoJ,MAAO,CAAErO,YAAa,GACtBmF,QAAS,kBAAMsjB,GAAgB,KAE/B,kBAACO,GAAA,EAAD,CACI/nB,MAAM,YACNqE,QAAQ,MACR2jB,UACmC,IAA/B1Y,OAAOD,KAAKwM,GAAQ7D,QACW,IAA/B1I,OAAOD,KAAKgM,GAAQrD,QAGxB,kBAACiQ,GAAA,EAAD,SAIZ,kBAACrd,GAAA,EAAD,CACI5K,MAAO,UACPkE,QAAS,kBAAM6X,MACf1X,QAAS,YAHb,kBAUR,kBAAC+G,GAAA,EAAD,CAAO3F,QAAM,EAAC9B,UAAWpB,EAAQ6X,gBAC5BqN,EAASzP,OAAS,GACf,kBAACjU,EAAA,EAAD,CAASJ,UAAWpB,EAAQwkB,WACxB,kBAAC3iB,EAAA,EAAD,CACIgJ,MAAO,CAAEmM,KAAM,YACfvZ,MAAM,UACNqE,QAAQ,aAHZ,sBAKSojB,EAASzP,OALlB,uBAOA,kBAAC,KAAD,CAASxY,MAAM,gBACX,kBAACwE,EAAA,EAAD,CACIE,QAAS4lB,IAAY,GACrBzZ,SAAUjC,EACVnK,aAAW,UAEX,kBAACmU,GAAA,EAAD,QAGR,kBAAC,KAAD,CAAS5Y,MAAM,4BACX,kBAACwE,EAAA,EAAD,CACIE,QAAS4lB,IAAY,GACrBzZ,SAAUjC,EACVnK,aAAW,UAEX,kBAAC+lB,GAAA,EAAD,SAKhB,kBAAC5N,GAAA,EAAD,CAAgBzY,UAAWpB,EAAQ4H,WAC/B,kBAACqN,GAAA,EAAD,CAAOvT,aAAW,eAAe2I,KAAM,SACnC,kBAAC6K,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAUtK,MAAO,CAAErH,OAAQ,KACvB,kBAAC4R,GAAA,EAAD,CAAWpa,QAAQ,YACf,kBAAC2qB,GAAA,EAAD,CACIC,cACIV,EAASzP,OAAS,GAClByP,EAASzP,OAAS7O,EAAM6O,OAE5B7G,QACIhI,EAAM6O,OAAS,GACfyP,EAASzP,SAAW7O,EAAM6O,OAE9BtS,SA3HP,SAACC,GAC1B,GAAIA,EAAMwJ,OAAOgC,QAAjB,CACI,IAAMiX,EAAejf,EAAMrE,KAAI,SAACujB,GAAD,OAAOA,EAAE9W,MACxCmW,EAAYU,QAGhBV,EAAY,KAsHoB7U,WAAY,CACR,aAAc,0BAI1B,kBAAC8E,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,KAC1B,kBAAC8hB,GAAA,EAAD,CACI5nB,OAAuB,OAAf2mB,EAAQ,GAChB3iB,UAAW2iB,EAAQ,GACnBnjB,QAAS,kBACLojB,EAAW,CACP,KACe,QAAfD,EAAQ,GACF,OACA,UARlB,IAaoB,OAAfA,EAAQ,GACL,0BACI1jB,UACIpB,EAAQykB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAC1P,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,MAC1B,kBAAC8hB,GAAA,EAAD,CACI5nB,OAAuB,SAAf2mB,EAAQ,GAChB3iB,UAAW2iB,EAAQ,GACnBnjB,QAAS,kBACLojB,EAAW,CACP,OACe,QAAfD,EAAQ,GACF,OACA,UARlB,qBAaoB,SAAfA,EAAQ,GACL,0BACI1jB,UACIpB,EAAQykB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAC1P,GAAA,EAAD,CACI6C,MAAO,QACPpN,MAAO,CAAE5G,SAAU,KAEnB,kBAAC8hB,GAAA,EAAD,CACI5nB,OAAuB,SAAf2mB,EAAQ,GAChB3iB,UAAW2iB,EAAQ,GACnBnjB,QAAS,kBACLojB,EAAW,CACP,OACe,QAAfD,EAAQ,GACF,OACA,UARlB,eAaoB,SAAfA,EAAQ,GACL,0BACI1jB,UACIpB,EAAQykB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAC1P,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,MAA9B,sBAGA,kBAACmR,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,MAA9B,sBAGA,kBAACmR,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,MAA9B,kBAKR,kBAACoR,GAAA,EAAD,KACKzO,EAAMrE,KAAI,SAACwX,GAAD,OACP,kBAAC5E,GAAA,EAAD,CACI6E,OAAK,EACLjX,IAAKgX,EAAI/K,GACTgX,KAAK,WACLd,SAAUG,GAAWtL,EAAI/K,KAEzB,kBAACoG,GAAA,EAAD,CAAWpa,QAAQ,YACf,kBAAC2qB,GAAA,EAAD,CACIhkB,QAAS,SAACyB,GAAD,OAjO7B,SAACA,EAAOsD,GACxB,IAAMuf,EAAgBf,EAASI,QAAQ5e,GACnCwf,EAAc,IAEK,IAAnBD,EACAC,EAAcA,EAAYC,OAAOjB,EAAUxe,GAClB,IAAlBuf,EACPC,EAAcA,EAAYC,OAAOjB,EAASkB,MAAM,IACzCH,IAAkBf,EAASzP,OAAS,EAC3CyQ,EAAcA,EAAYC,OAAOjB,EAASkB,MAAM,GAAI,IAC7CH,EAAgB,IACvBC,EAAcA,EAAYC,OACtBjB,EAASkB,MAAM,EAAGH,GAClBf,EAASkB,MAAMH,EAAgB,KAIvCd,EAAYe,GAiN4BG,CAAYjjB,EAAO2W,EAAI/K,KAE3BJ,QAASyW,GAAWtL,EAAI/K,OAGhC,kBAACoG,GAAA,EAAD,KAAY2E,EAAI/K,IAChB,kBAACoG,GAAA,EAAD,KACI,kBAACY,GAAA,EAAD,CACIpJ,OAAQ,SACRnP,MAAM,UACNwY,KACI,8BACA8D,EAAI/K,IAGP+K,EAAI7K,OAGb,kBAACkG,GAAA,EAAD,CAAW6C,MAAO,SACbmC,aAAaL,EAAI2N,OAEtB,kBAACtS,GAAA,EAAD,KACI,kBAACY,GAAA,EAAD,CACIC,KACI,oBAAsB8D,EAAI4N,QAG7B7gB,EAAMiT,EAAI4N,QACL7gB,EAAMiT,EAAI4N,QAAQrB,KAClB,iBAGd,kBAAClR,GAAA,EAAD,KACKwS,aACG7N,EAAI8N,UACJ,uBAGR,kBAACzS,GAAA,EAAD,KACI,kBAAC,KAAD,CAASnY,MAAO,gBACZ,kBAACwE,EAAA,EAAD,CACIqM,SAAUjC,EACVlK,QAAS,kBA7T/B4B,EA8TuCwW,EAAI/K,GA7T7DlD,GAAW,QACX7F,KAAI4G,KAAK,qBAAsB,CAAEtJ,GAAI,CAACA,KACjC4C,MAAK,WACFqT,KACA5T,GACI,MACA,QACA,+DACA,cAGPuB,OAAM,SAACC,GACJxB,GAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,MAhBF,IAACvI,GAgUsB8G,KAAM,SAEN,kBAACwL,GAAA,EAAD,gBAShC,kBAAC2E,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,GAAI,KACjClQ,UAAU,MACVmQ,MAAOhC,EACPiC,YAAanC,EACbF,KAAMA,EAAO,EACbsC,aAAc,SAAC3N,EAAG4N,GAAJ,OAAUtC,EAAQsC,EAAI,IACpCC,oBAAqB,SAAC7N,GAClBwL,EAAYxL,EAAEL,OAAOpE,OACrB+P,EAAQ,QC/bjB,SAASuP,GAAT,GAA+D,IAAxC/O,EAAuC,EAAvCA,UAAWiL,EAA4B,EAA5BA,UAAW3jB,EAAiB,EAAjBA,KAAMyH,EAAW,EAAXA,QAC9D,EAA0B5H,mBAAS,CAC/B6nB,OAAQ,MACRX,QAAS,KAFb,mBAAOtU,EAAP,KAAcqR,EAAd,KAIA,EAAgCjkB,mBAAS,IAAzC,mBAAOkkB,EAAP,KAAiBC,EAAjB,KAEM1X,EAAe,SAACjG,GAAD,OAAU,SAACtD,GAC5B+gB,EAAS,2BAAKrR,GAAN,kBAAcpM,EAAOtD,EAAMwJ,OAAOpE,WAqB9C,OACI,kBAACX,GAAA,EAAD,CACIxH,KAAMA,EACNyH,QAASA,EACTC,kBAAgB,qBAChBC,mBAAiB,2BACjBqF,WAAS,EACT9S,SAAU,MAEV,kBAAC0N,GAAA,EAAD,CAAa1E,GAAG,sBAAhB,4BACA,kBAAC2E,GAAA,EAAD,KACI,kBAACkF,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAY/J,GAAG,4BAAf,kCAGA,kBAACqK,GAAA,EAAD,CACIyD,QAAQ,2BACR9N,GAAG,qBACHiF,MAAOsK,EAAMiV,OACb5kB,SAAUwJ,EAAa,WAEvB,kBAACkB,GAAA,EAAD,CAAUrF,MAAO,OAAjB,gBACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,KAAjB,gBACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,KAAjB,kBAGR,kBAAC4E,GAAA,EAAD,CAAaC,WAAS,EAACxC,MAAO,CAAEY,UAAW,KACvC,kBAAC0E,GAAA,EAAD,CACI3H,MAAOsK,EAAMsU,QACbjkB,SAAUwJ,EAAa,WACvBpJ,GAAG,iBACH+G,MAAM,0BAGd,kBAAC8C,GAAA,EAAD,CAAaC,WAAS,EAACxC,MAAO,CAAEY,UAAW,KACvC,kBAAC0E,GAAA,EAAD,CACI3H,MAAO4b,EACPjhB,SAAU,SAAC8J,GAAD,OAAOoX,EAAYpX,EAAEL,OAAOpE,QACtCjF,GAAG,iBACH+G,MAAM,sCAIlB,kBAAClC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ1G,QAASmG,EAASrK,MAAM,WAAhC,gBAGA,kBAAC4K,GAAA,EAAD,CAAQ1G,QAjEL,WACX,IAAM4F,EAAM,GACZwF,OAAOD,KAAKgG,GAAOvM,SAAQ,SAACC,GACP,QAAbsM,EAAMtM,IAA6B,KAAbsM,EAAMtM,KAC5Be,EAAIf,GAAKsM,EAAMtM,OAGvBuS,EAAUxR,GAENyc,EADa,KAAbI,EACU,CACN4D,YAAa5D,GAGP,IAEdtc,KAkDiCrK,MAAM,WAA/B,kBC7DhB,IAAMlC,GAAYC,aAAW,SAACJ,GAAD,YAAY,CACrCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJpB,QAAS,CACLD,QAASI,EAAMC,QAAQ,IAE3BuM,UAAW,CACP9K,UAAW,QAEf+a,eAAgB,CACZpM,UAAW,IAEfqM,OAAQ,CACJpd,QAAS,OACT2C,eAAgB,iBAEpB0a,YAAa,GACbyM,UAC2B,UAAvBppB,EAAMsC,QAAQ+J,KACR,CACIhK,MAAOrC,EAAMsC,QAAQE,UAAUU,KAC/BR,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAUke,MAAO,MAE5D,CACIre,MAAOrC,EAAMsC,QAAQC,KAAKU,QAC1BP,gBAAiB1C,EAAMsC,QAAQE,UAAUiW,MAEvD4Q,eAAgB,CACZC,OAAQ,EACRC,KAAM,gBACNnhB,OAAQ,EACR7I,QAAS,EACTsmB,SAAU,SACVjmB,QAAS,EACTsG,SAAU,WACVsjB,IAAK,GACLnpB,MAAO,OAIA,SAASkE,KACpB,IAAMK,EAAUzE,KAChB,EAA4B2E,mBAAS,IAArC,mBAAO8G,EAAP,KAAeihB,EAAf,KACA,EAAwB/nB,mBAAS,GAAjC,mBAAOoY,EAAP,KAAaC,EAAb,KACA,EAAgCrY,mBAAS,IAAzC,mBAAOsY,EAAP,KAAiBC,EAAjB,KACA,EAA0BvY,mBAAS,GAAnC,mBAAOwY,EAAP,KAAcC,EAAd,KACA,EAA4BzY,mBAAS,IAArC,mBAAO4Y,EAAP,KAAeC,EAAf,KACA,EAA0B7Y,mBAAS,IAAnC,mBAAO4G,EAAP,KAAc+d,EAAd,KACA,EAAsB3kB,mBAAS,IAA/B,mBAAOgoB,EAAP,KAAYC,EAAZ,KACA,EAA4BjoB,mBAAS,IAArC,mBAAOoZ,EAAP,KAAe0K,EAAf,KACA,EAA8B9jB,mBAAS,CAAC,KAAM,SAA9C,mBAAO4kB,EAAP,KAAgBC,EAAhB,KACA,EAAwC7kB,oBAAS,GAAjD,mBAAO8kB,EAAP,KAAqBC,EAArB,KACA,EAAgC/kB,mBAAS,IAAzC,mBAAOglB,EAAP,KAAiBC,EAAjB,KACA,EAA8BjlB,oBAAS,GAAvC,mBAAO2L,GAAP,KAAgBC,GAAhB,KAEMjL,GAAWC,cACX8E,GAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,GAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,KAEC2Y,GAAW,WACbvT,KAAI4G,KAAK,oBAAqB,CAC1ByL,KAAMA,EACNmB,UAAWjB,EACXkB,SAAUoL,EAAQrC,KAAK,KACvB9I,WAAYb,EACZsM,SAAU9L,IAETnT,MAAK,SAACC,GACHye,EAASze,EAASC,KAAKS,OACvBqhB,EAAO/hB,EAASC,KAAK6hB,KACrBD,EAAU7hB,EAASC,KAAK3H,OACxBia,EAASvS,EAASC,KAAKqS,OACvByM,EAAY,OAEfhe,OAAM,SAACC,GACJxB,GAAe,MAAO,QAASwB,EAAMC,QAAS,aAI1DnG,qBAAU,WACNsY,OACD,CAAClB,EAAME,EAAUsM,EAAShM,EAAQQ,IAErC,IA2DM+L,GAAa,SAAC9hB,GAAD,OAAkC,IAA1B2hB,EAASI,QAAQ/hB,IAE5C,OACI,6BACI,kBAACukB,GAAD,CACIhP,OAAQA,EACRzY,KAAM2kB,EACNld,QAAS,kBAAMmd,GAAgB,IAC/BjB,UAAWA,EACXjL,UAAWA,IAEf,yBAAK3X,UAAWpB,EAAQ8X,QACpB,yBAAK1W,UAAWpB,EAAQ+X,aACpB,kBAAC,KAAD,CAAS9a,MAAM,gBACX,kBAACwE,EAAA,EAAD,CACIoJ,MAAO,CAAErO,YAAa,GACtBmF,QAAS,kBAAMsjB,GAAgB,KAE/B,kBAACO,GAAA,EAAD,CACI/nB,MAAM,YACNqE,QAAQ,MACR2jB,UACmC,IAA/B1Y,OAAOD,KAAKwM,GAAQ7D,QACW,IAA/B1I,OAAOD,KAAKgM,GAAQrD,QAGxB,kBAACiQ,GAAA,EAAD,SAIZ,kBAACrd,GAAA,EAAD,CACI5K,MAAO,UACPkE,QAAS,kBAAM6X,MACf1X,QAAS,YAHb,kBAUR,kBAAC+G,GAAA,EAAD,CAAO3F,QAAM,EAAC9B,UAAWpB,EAAQ6X,gBAC5BqN,EAASzP,OAAS,GACf,kBAACjU,EAAA,EAAD,CAASJ,UAAWpB,EAAQwkB,WACxB,kBAAC3iB,EAAA,EAAD,CACIgJ,MAAO,CAAEmM,KAAM,YACfvZ,MAAM,UACNqE,QAAQ,aAHZ,sBAKSojB,EAASzP,OALlB,uBAOA,kBAAC,KAAD,CAASxY,MAAM,gBACX,kBAACwE,EAAA,EAAD,CACIE,QAhGR,WAChBmK,IAAW,GACX7F,KAAI4G,KAAK,sBAAuB,CAAEtJ,GAAI2hB,IACjC/e,MAAK,WACFqT,KACA5T,GAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAACC,GACJxB,GAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,IAAW,OAsFKgC,SAAUjC,GACVnK,aAAW,UAEX,kBAACmU,GAAA,EAAD,SAKhB,kBAACgE,GAAA,EAAD,CAAgBzY,UAAWpB,EAAQ4H,WAC/B,kBAACqN,GAAA,EAAD,CAAOvT,aAAW,eAAe2I,KAAM,SACnC,kBAAC6K,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAUtK,MAAO,CAAErH,OAAQ,KACvB,kBAAC4R,GAAA,EAAD,CAAWpa,QAAQ,YACf,kBAAC2qB,GAAA,EAAD,CACIC,cACIV,EAASzP,OAAS,GAClByP,EAASzP,OAASzO,EAAOyO,OAE7B7G,QACI5H,EAAOyO,OAAS,GAChByP,EAASzP,SAAWzO,EAAOyO,OAE/BtS,SAxGP,SAACC,GAC1B,GAAIA,EAAMwJ,OAAOgC,QAAjB,CACI,IAAMiX,EAAe7e,EAAOzE,KAAI,SAACujB,GAAD,OAAOA,EAAE9W,MACzCmW,EAAYU,QAGhBV,EAAY,KAmGoB7U,WAAY,CACR,aAAc,0BAI1B,kBAAC8E,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,KAC1B,kBAAC8hB,GAAA,EAAD,CACI5nB,OAAuB,OAAf2mB,EAAQ,GAChB3iB,UAAW2iB,EAAQ,GACnBnjB,QAAS,kBACLojB,EAAW,CACP,KACe,QAAfD,EAAQ,GACF,OACA,UARlB,IAaoB,OAAfA,EAAQ,GACL,0BACI1jB,UACIpB,EAAQykB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAC1P,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,MAC1B,kBAAC8hB,GAAA,EAAD,CACI5nB,OAAuB,gBAAf2mB,EAAQ,GAChB3iB,UAAW2iB,EAAQ,GACnBnjB,QAAS,kBACLojB,EAAW,CACP,cACe,QAAfD,EAAQ,GACF,OACA,UARlB,qBAaoB,gBAAfA,EAAQ,GACL,0BACI1jB,UACIpB,EAAQykB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAC1P,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,KAA9B,gBAGA,kBAACmR,GAAA,EAAD,CACIvK,MAAO,CAAE5G,SAAU,KACnBgU,MAAO,SAEP,kBAAC8N,GAAA,EAAD,CACI5nB,OAAuB,UAAf2mB,EAAQ,GAChB3iB,UAAW2iB,EAAQ,GACnBnjB,QAAS,kBACLojB,EAAW,CACP,QACe,QAAfD,EAAQ,GACF,OACA,UARlB,eAaoB,UAAfA,EAAQ,GACL,0BACI1jB,UACIpB,EAAQykB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAC1P,GAAA,EAAD,CACIvK,MAAO,CAAE5G,SAAU,KACnBgU,MAAO,SAEP,kBAAC8N,GAAA,EAAD,CACI5nB,OAAuB,cAAf2mB,EAAQ,GAChB3iB,UAAW2iB,EAAQ,GACnBnjB,QAAS,kBACLojB,EAAW,CACP,YACe,QAAfD,EAAQ,GACF,OACA,UARlB,eAaoB,cAAfA,EAAQ,GACL,0BACI1jB,UACIpB,EAAQykB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAC1P,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,MAA9B,4BAGA,kBAACmR,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,MAA9B,sBAGA,kBAACmR,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,MAA9B,sBAGA,kBAACmR,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,MAA9B,kBAKR,kBAACoR,GAAA,EAAD,KACKrO,EAAOzE,KAAI,SAACwX,GAAD,OACR,kBAAC5E,GAAA,EAAD,CACI6E,OAAK,EACLjX,IAAKgX,EAAI/K,GACTgX,KAAK,WACLd,SAAUG,GAAWtL,EAAI/K,KAEzB,kBAACoG,GAAA,EAAD,CAAWpa,QAAQ,YACf,kBAAC2qB,GAAA,EAAD,CACIhkB,QAAS,SAACyB,GAAD,OAlP7B,SAACA,EAAOsD,GACxB,IAAMuf,EAAgBf,EAASI,QAAQ5e,GACnCwf,EAAc,IAEK,IAAnBD,EACAC,EAAcA,EAAYC,OAAOjB,EAAUxe,GAClB,IAAlBuf,EACPC,EAAcA,EAAYC,OAAOjB,EAASkB,MAAM,IACzCH,IAAkBf,EAASzP,OAAS,EAC3CyQ,EAAcA,EAAYC,OAAOjB,EAASkB,MAAM,GAAI,IAC7CH,EAAgB,IACvBC,EAAcA,EAAYC,OACtBjB,EAASkB,MAAM,EAAGH,GAClBf,EAASkB,MAAMH,EAAgB,KAIvCd,EAAYe,GAkO4BG,CAAYjjB,EAAO2W,EAAI/K,KAE3BJ,QAASyW,GAAWtL,EAAI/K,OAGhC,kBAACoG,GAAA,EAAD,KAAY2E,EAAI/K,IAChB,kBAACoG,GAAA,EAAD,CACIvK,MAAO,CAAEud,UAAW,cAEpB,kBAACpS,GAAA,EAAD,CACIpJ,OAAQ,SACRnP,MAAM,UACNwY,KACI,MACAiS,EAAInO,EAAI/K,KACU,KAAjB+K,EAAI6M,SACC,GACA,aACA7M,EAAI6M,WAGb7M,EAAIsO,aAGb,kBAACjT,GAAA,EAAD,KACsB,KAAjB2E,EAAI6M,SAAkB,eAAO,gBAElC,kBAACxR,GAAA,EAAD,CAAW6C,MAAO,SACb8B,EAAIuO,OAET,kBAAClT,GAAA,EAAD,CAAW6C,MAAO,SACb8B,EAAIwO,WAET,kBAACnT,GAAA,EAAD,KACK2E,EAAIyO,iBAAmB,GACpBzO,EAAIyO,gBAAkB,6BACA,IAAzBzO,EAAIyO,iBAA0B,UAEnC,kBAACpT,GAAA,EAAD,KACI,kBAACY,GAAA,EAAD,CACIC,KACI,oBAAsB8D,EAAI4N,QAG7B7gB,EAAMiT,EAAI4N,QACL7gB,EAAMiT,EAAI4N,QAAQrB,KAClB,iBAGd,kBAAClR,GAAA,EAAD,KACKwS,aACG7N,EAAI8N,UACJ,uBAGR,kBAACzS,GAAA,EAAD,KACI,kBAAC,KAAD,CAASnY,MAAO,gBACZ,kBAACwE,EAAA,EAAD,CACIqM,SAAUjC,GACVlK,QAAS,kBArV/B4B,EAsVuCwW,EAAI/K,GArV7DlD,IAAW,QACX7F,KAAI4G,KAAK,sBAAuB,CAAEtJ,GAAI,CAACA,KAClC4C,MAAK,WACFqT,KACA5T,GAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAACC,GACJxB,GAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,IAAW,MAXF,IAACvI,GAwVsB8G,KAAM,SAEN,kBAACwL,GAAA,EAAD,gBAShC,kBAAC2E,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,GAAI,KACjClQ,UAAU,MACVmQ,MAAOhC,EACPiC,YAAanC,EACbF,KAAMA,EAAO,EACbsC,aAAc,SAAC3N,EAAG4N,GAAJ,OAAUtC,EAAQsC,EAAI,IACpCC,oBAAqB,SAAC7N,GAClBwL,EAAYxL,EAAEL,OAAOpE,OACrB+P,EAAQ,Q,aCnd1Bhd,GAAYC,aAAW,SAACJ,GAAD,MAAY,MAE1B,SAASqtB,GAAYjM,GAChBjhB,KAEhB,OACI,kBAACsM,GAAA,EAAD,CACIxH,KAAMmc,EAAMnc,KACZyH,QAAS0U,EAAM1U,QACfC,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,GAAA,EAAD,CAAa1E,GAAG,sBACX,0DAEL,kBAAC2E,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAmB5E,GAAG,4BAAtB,kiBAII,4BACI,iJACwB,IACpB,kBAACyS,GAAA,EAAD,CACIzL,UAAWme,KACXrY,GAAI,sBAFR,4BAKQ,IAPZ,wCAUA,yKAC4B,IACxB,kBAAC2F,GAAA,EAAD,CAAMzL,UAAWme,KAAYrY,GAAI,mBAAjC,4BAEQ,IAJZ,2DAfR,sWAwBuB,IACnB,kBAAC2F,GAAA,EAAD,CAAMzL,UAAWme,KAAYrY,GAAI,gBAAjC,sBAEQ,IA3BZ,mIA+BJ,kBAACjI,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQ1G,QAAS6a,EAAM1U,QAASrK,MAAM,UAAU2S,WAAS,GAAzD,kB,0BC/BV7U,GAAYC,aAAW,SAACJ,GAAD,YAAY,CACrCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJpB,QAAS,CACLD,QAASI,EAAMC,QAAQ,IAE3BuM,UAAW,CACP9K,UAAW,QAEf+a,eAAgB,CACZpM,UAAW,IAEfqM,OAAQ,CACJpd,QAAS,OACT2C,eAAgB,iBAEpB0a,YAAa,GACbyM,UAC2B,UAAvBppB,EAAMsC,QAAQ+J,KACR,CACIhK,MAAOrC,EAAMsC,QAAQE,UAAUU,KAC/BR,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAUke,MAAO,MAE5D,CACIre,MAAOrC,EAAMsC,QAAQC,KAAKU,QAC1BP,gBAAiB1C,EAAMsC,QAAQE,UAAUiW,MAEvD4Q,eAAgB,CACZC,OAAQ,EACRC,KAAM,gBACNnhB,OAAQ,EACR7I,QAAS,EACTsmB,SAAU,SACVjmB,QAAS,EACTsG,SAAU,WACVsjB,IAAK,GACLnpB,MAAO,OAIA,SAASktB,KACpB,IAAM3oB,EAAUzE,KAChB,EAAkC2E,mBAAS,IAA3C,mBAAO0oB,EAAP,KAAkBC,EAAlB,KACA,EAAwB3oB,mBAAS,GAAjC,mBAAOoY,EAAP,KAAaC,EAAb,KACA,EAAgCrY,mBAAS,IAAzC,mBAAOsY,EAAP,KAAiBC,EAAjB,KACA,EAA0BvY,mBAAS,GAAnC,mBAAOwY,EAAP,KAAcC,EAAd,KACA,EAA4BzY,mBAAS,IAArC,mBAAO4Y,EAAP,KAAeC,EAAf,KACA,EAA0B7Y,mBAAS,IAAnC,mBAAO4G,EAAP,KAAc+d,EAAd,KACA,EAA4B3kB,mBAAS,IAArC,mBAAOoZ,EAAP,KAAe0K,EAAf,KACA,EAA8B9jB,mBAAS,CAAC,KAAM,SAA9C,mBAAO4kB,EAAP,KAAgBC,EAAhB,KACA,EAAwC7kB,oBAAS,GAAjD,mBAAO8kB,EAAP,KAAqBC,EAArB,KACA,EAAgC/kB,mBAAS,IAAzC,mBAAOglB,EAAP,KAAiBC,EAAjB,KACA,EAA8BjlB,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KACA,EAAoC5L,oBAAS,GAA7C,mBAAO4oB,GAAP,KAAmBC,GAAnB,KAEMloB,GAAWC,cACX8E,GAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,GAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,KAGC2Y,GAAW,WACbvT,KAAI4G,KAAK,uBAAwB,CAC7ByL,KAAMA,EACNmB,UAAWjB,EACXkB,SAAUoL,EAAQrC,KAAK,KACvB9I,WAAYb,EACZsM,SAAU9L,IAETnT,MAAK,SAACC,GACHye,EAASze,EAASC,KAAKS,OACvB+hB,EAAaziB,EAASC,KAAK3H,OAC3Bia,EAASvS,EAASC,KAAKqS,OACvByM,EAAY,OAEfhe,OAAM,SAACC,GACJxB,GAAe,MAAO,QAASwB,EAAMC,QAAS,aAI1DnG,qBAAU,WACNsY,OACD,CAAClB,EAAME,EAAUsM,EAAShM,EAAQQ,IAErC,IA2DM+L,GAAa,SAAC9hB,GAAD,OAAkC,IAA1B2hB,EAASI,QAAQ/hB,IAE5C,OACI,6BACI,kBAACklB,GAAD,CACIpoB,KAAMyoB,GACNhhB,QAAS,kBAAMihB,IAAc,MAEjC,kBAACjB,GAAD,CACIhP,OAAQA,EACRzY,KAAM2kB,EACNld,QAAS,kBAAMmd,GAAgB,IAC/BjB,UAAWA,EACXjL,UAAWA,IAEf,yBAAK3X,UAAWpB,EAAQ8X,QACpB,kBAACzP,GAAA,EAAD,CACI5K,MAAO,UACPkE,QAAS,kBAAM6X,MACf1X,QAAS,YAHb,gBAOA,yBAAKV,UAAWpB,EAAQ+X,aACpB,kBAAC1P,GAAA,EAAD,CACI5K,MAAO,UACPkE,QAAS,kBAAMonB,IAAc,KAE7B,kBAAC,KAAD,MAJJ,IAIkB,KAJlB,sDASR,kBAAClgB,GAAA,EAAD,CAAO3F,QAAM,EAAC9B,UAAWpB,EAAQ6X,gBAC5BqN,EAASzP,OAAS,GACf,kBAACjU,EAAA,EAAD,CAASJ,UAAWpB,EAAQwkB,WACxB,kBAAC3iB,EAAA,EAAD,CACIgJ,MAAO,CAAEmM,KAAM,YACfvZ,MAAM,UACNqE,QAAQ,aAHZ,sBAKSojB,EAASzP,OALlB,uBAOA,kBAAC,KAAD,CAASxY,MAAM,gBACX,kBAACwE,EAAA,EAAD,CACIE,QAzFR,WAChBmK,GAAW,GACX7F,KAAI4G,KAAK,yBAA0B,CAAEtJ,GAAI2hB,IACpC/e,MAAK,WACFqT,KACA5T,GAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAACC,GACJxB,GAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,OA+EKgC,SAAUjC,EACVnK,aAAW,UAEX,kBAACmU,GAAA,EAAD,SAKhB,kBAACgE,GAAA,EAAD,CAAgBzY,UAAWpB,EAAQ4H,WAC/B,kBAACqN,GAAA,EAAD,CAAOvT,aAAW,eAAe2I,KAAM,SACnC,kBAAC6K,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAUtK,MAAO,CAAErH,OAAQ,KACvB,kBAAC4R,GAAA,EAAD,CAAWpa,QAAQ,YACf,kBAAC2qB,GAAA,EAAD,CACIC,cACIV,EAASzP,OAAS,GAClByP,EAASzP,OAASmT,EAAUnT,OAEhC7G,QACIga,EAAUnT,OAAS,GACnByP,EAASzP,SAAWmT,EAAUnT,OAElCtS,SAjGP,SAACC,GAC1B,GAAIA,EAAMwJ,OAAOgC,QAAjB,CACI,IAAMiX,EAAe+C,EAAUrmB,KAAI,SAACujB,GAAD,OAAOA,EAAE9W,MAC5CmW,EAAYU,QAGhBV,EAAY,KA4FoB7U,WAAY,CACR,aAAc,0BAI1B,kBAAC8E,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,KAC1B,kBAAC8hB,GAAA,EAAD,CACI5nB,OAAuB,OAAf2mB,EAAQ,GAChB3iB,UAAW2iB,EAAQ,GACnBnjB,QAAS,kBACLojB,EAAW,CACP,KACe,QAAfD,EAAQ,GACF,OACA,UARlB,IAaoB,OAAfA,EAAQ,GACL,0BACI1jB,UACIpB,EAAQykB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAC1P,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,MAA9B,sBAGA,kBAACmR,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,KAA9B,gBAGA,kBAACmR,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,KAA9B,4BAGA,kBAACmR,GAAA,EAAD,CACIvK,MAAO,CAAE5G,SAAU,KACnBgU,MAAO,SAEP,kBAAC8N,GAAA,EAAD,CACI5nB,OAAuB,eAAf2mB,EAAQ,GAChB3iB,UAAW2iB,EAAQ,GACnBnjB,QAAS,kBACLojB,EAAW,CACP,aACe,QAAfD,EAAQ,GACF,OACA,UARlB,eAaoB,eAAfA,EAAQ,GACL,0BACI1jB,UACIpB,EAAQykB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAC1P,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,MAA9B,sBAGA,kBAACmR,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,MAA9B,sBAGA,kBAACmR,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,KAA9B,kBAKR,kBAACoR,GAAA,EAAD,KACKuT,EAAUrmB,KAAI,SAACwX,GAAD,OACX,kBAAC5E,GAAA,EAAD,CACI6E,OAAK,EACLjX,IAAKgX,EAAI/K,GACTgX,KAAK,WACLd,SAAUG,GAAWtL,EAAI/K,KAEzB,kBAACoG,GAAA,EAAD,CAAWpa,QAAQ,YACf,kBAAC2qB,GAAA,EAAD,CACIhkB,QAAS,SAACyB,GAAD,OArL7B,SAACA,EAAOsD,GACxB,IAAMuf,EAAgBf,EAASI,QAAQ5e,GACnCwf,EAAc,IAEK,IAAnBD,EACAC,EAAcA,EAAYC,OAAOjB,EAAUxe,GAClB,IAAlBuf,EACPC,EAAcA,EAAYC,OAAOjB,EAASkB,MAAM,IACzCH,IAAkBf,EAASzP,OAAS,EAC3CyQ,EAAcA,EAAYC,OAAOjB,EAASkB,MAAM,GAAI,IAC7CH,EAAgB,IACvBC,EAAcA,EAAYC,OACtBjB,EAASkB,MAAM,EAAGH,GAClBf,EAASkB,MAAMH,EAAgB,KAIvCd,EAAYe,GAqK4BG,CAAYjjB,EAAO2W,EAAI/K,KAE3BJ,QAASyW,GAAWtL,EAAI/K,OAGhC,kBAACoG,GAAA,EAAD,KAAY2E,EAAI/K,IAChB,kBAACoG,GAAA,EAAD,CACIvK,MAAO,CAAEud,UAAW,cAEnBrO,EAAIiP,QAET,kBAAC5T,GAAA,EAAD,KACoB,IAAf2E,EAAIyM,QAAgB,eACL,IAAfzM,EAAIyM,QAAgB,qBACL,IAAfzM,EAAIyM,QAAgB,qBACL,IAAfzM,EAAIyM,QAAgB,eACL,IAAfzM,EAAIyM,QAAgB,eACL,IAAfzM,EAAIyM,QAAgB,4BACL,IAAfzM,EAAIyM,QAAgB,gBAEzB,kBAACpR,GAAA,EAAD,KACK2E,EAAIkP,QAAU,GACX,kBAACjT,GAAA,EAAD,CACIzL,UAAWme,KACXrY,GAAI,sBAFR,gBAOH0J,EAAIkP,OAAS,GACV,kBAACjT,GAAA,EAAD,CACIzL,UAAWme,KACXrY,GACI,oBACA0J,EAAIkP,QAJZ,gBAOQlP,EAAIkP,SAIpB,kBAAC7T,GAAA,EAAD,CAAW6C,MAAO,SACbmC,aAAaL,EAAImP,YAEtB,kBAAC9T,GAAA,EAAD,KACI,kBAACY,GAAA,EAAD,CACIC,KACI,oBAAsB8D,EAAI4N,QAG7B7gB,EAAMiT,EAAI4N,QACL7gB,EAAMiT,EAAI4N,QAAQrB,KAClB,iBAGd,kBAAClR,GAAA,EAAD,KACKwS,aACG7N,EAAI8N,UACJ,uBAGR,kBAACzS,GAAA,EAAD,KACI,kBAAC,KAAD,CAASnY,MAAO,gBACZ,kBAACwE,EAAA,EAAD,CACIqM,SAAUjC,EACVlK,QAAS,kBA9R/B4B,EA+RuCwW,EAAI/K,GA9R7DlD,GAAW,QACX7F,KAAI4G,KAAK,yBAA0B,CAAEtJ,GAAI,CAACA,KACrC4C,MAAK,WACFqT,KACA5T,GAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAACC,GACJxB,GAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,MAXF,IAACvI,GAiSsB8G,KAAM,SAEN,kBAACwL,GAAA,EAAD,gBAShC,kBAAC2E,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,GAAI,KACjClQ,UAAU,MACVmQ,MAAOhC,EACPiC,YAAanC,EACbF,KAAMA,EAAO,EACbsC,aAAc,SAAC3N,EAAG4N,GAAJ,OAAUtC,EAAQsC,EAAI,IACpCC,oBAAqB,SAAC7N,GAClBwL,EAAYxL,EAAEL,OAAOpE,OACrB+P,EAAQ,QCjZhC,IAAMhd,GAAYC,aAAW,SAACJ,GAAD,YAAY,CACrCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJpB,QAAS,CACLD,QAASI,EAAMC,QAAQ,IAE3BuM,UAAW,CACP9K,UAAW,QAEf+a,eAAgB,CACZpM,UAAW,IAEfqM,OAAQ,CACJpd,QAAS,OACT2C,eAAgB,iBAEpB0a,YAAa,GACbyM,UAC2B,UAAvBppB,EAAMsC,QAAQ+J,KACR,CACIhK,MAAOrC,EAAMsC,QAAQE,UAAUU,KAC/BR,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAUke,MAAO,MAE5D,CACIre,MAAOrC,EAAMsC,QAAQC,KAAKU,QAC1BP,gBAAiB1C,EAAMsC,QAAQE,UAAUiW,MAEvD4Q,eAAgB,CACZC,OAAQ,EACRC,KAAM,gBACNnhB,OAAQ,EACR7I,QAAS,EACTsmB,SAAU,SACVjmB,QAAS,EACTsG,SAAU,WACVsjB,IAAK,GACLnpB,MAAO,OAIA,SAAS0tB,KACpB,IAAMnpB,EAAUzE,KAChB,EAA0B2E,mBAAS,IAAnC,mBAAOkpB,EAAP,KAAcC,EAAd,KACA,EAAwBnpB,mBAAS,GAAjC,mBAAOoY,EAAP,KAAaC,EAAb,KACA,EAAgCrY,mBAAS,IAAzC,mBAAOsY,EAAP,KAAiBC,EAAjB,KACA,EAA0BvY,mBAAS,GAAnC,mBAAOwY,EAAP,KAAcC,EAAd,KACA,EAA4BzY,mBAAS,IAArC,mBAAO4Y,EAAP,KAAeC,EAAf,KACA,EAA0B7Y,mBAAS,IAAnC,mBAAO4G,EAAP,KAAc+d,EAAd,KACA,EAA4B3kB,mBAAS,IAArC,mBAAOoZ,EAAP,KAAe0K,EAAf,KACA,EAA8B9jB,mBAAS,CAAC,KAAM,SAA9C,mBAAO4kB,EAAP,KAAgBC,EAAhB,KACA,EAAwC7kB,oBAAS,GAAjD,mBAAO8kB,EAAP,KAAqBC,EAArB,KACA,EAAgC/kB,mBAAS,IAAzC,mBAAOglB,EAAP,KAAiBC,EAAjB,KACA,EAA8BjlB,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KAEMjL,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAGC2Y,GAAW,WACbvT,KAAI4G,KAAK,mBAAoB,CACzByL,KAAMA,EACNmB,UAAWjB,EACXkB,SAAUoL,EAAQrC,KAAK,KACvB9I,WAAYb,EACZsM,SAAU9L,IAETnT,MAAK,SAACC,GACHye,EAASze,EAASC,KAAKS,OACvBuiB,EAASjjB,EAASC,KAAK3H,OACvBia,EAASvS,EAASC,KAAKqS,OACvByM,EAAY,OAEfhe,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,aAI1DnG,qBAAU,WACNsY,OACD,CAAClB,EAAME,EAAUsM,EAAShM,EAAQQ,IAErC,IAuEM+L,GAAa,SAAC9hB,GAAD,OAAkC,IAA1B2hB,EAASI,QAAQ/hB,IAE5C,OACI,6BACI,kBAACukB,GAAD,CACIhP,OAAQA,EACRzY,KAAM2kB,EACNld,QAAS,kBAAMmd,GAAgB,IAC/BjB,UAAWA,EACXjL,UAAWA,IAEf,yBAAK3X,UAAWpB,EAAQ8X,QACpB,yBAAK1W,UAAWpB,EAAQ+X,aACpB,kBAAC1P,GAAA,EAAD,CACI5K,MAAO,UACPkE,QAAS,kBAAM6X,MACf1X,QAAS,YAHb,kBAUR,kBAAC+G,GAAA,EAAD,CAAO3F,QAAM,EAAC9B,UAAWpB,EAAQ6X,gBAC5BqN,EAASzP,OAAS,GACf,kBAACjU,EAAA,EAAD,CAASJ,UAAWpB,EAAQwkB,WACxB,kBAAC3iB,EAAA,EAAD,CACIgJ,MAAO,CAAEmM,KAAM,YACfvZ,MAAM,UACNqE,QAAQ,aAHZ,sBAKSojB,EAASzP,OALlB,uBAOA,kBAAC,KAAD,CAASxY,MAAM,gBACX,kBAACwE,EAAA,EAAD,CACIE,QA3FR,WAChBmK,GAAW,GACX7F,KAAI4G,KAAK,qBAAsB,CAAEtJ,GAAI2hB,IAChC/e,MAAK,WACFqT,KACA5T,EAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,OAiFKgC,SAAUjC,EACVnK,aAAW,UAEX,kBAACmU,GAAA,EAAD,SAKhB,kBAACgE,GAAA,EAAD,CAAgBzY,UAAWpB,EAAQ4H,WAC/B,kBAACqN,GAAA,EAAD,CAAOvT,aAAW,eAAe2I,KAAM,SACnC,kBAAC6K,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAUtK,MAAO,CAAErH,OAAQ,KACvB,kBAAC4R,GAAA,EAAD,CAAWpa,QAAQ,YACf,kBAAC2qB,GAAA,EAAD,CACIC,cACIV,EAASzP,OAAS,GAClByP,EAASzP,OAAS2T,EAAM3T,OAE5B7G,QACIwa,EAAM3T,OAAS,GACfyP,EAASzP,SAAW2T,EAAM3T,OAE9BtS,SAnGP,SAACC,GAC1B,GAAIA,EAAMwJ,OAAOgC,QAAjB,CACI,IAAMiX,EAAeuD,EAAM7mB,KAAI,SAACujB,GAAD,OAAOA,EAAE9W,MACxCmW,EAAYU,QAGhBV,EAAY,KA8FoB7U,WAAY,CACR,aAAc,0BAI1B,kBAAC8E,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,KAC1B,kBAAC8hB,GAAA,EAAD,CACI5nB,OAAuB,OAAf2mB,EAAQ,GAChB3iB,UAAW2iB,EAAQ,GACnBnjB,QAAS,kBACLojB,EAAW,CACP,KACe,QAAfD,EAAQ,GACF,OACA,UARlB,IAaoB,OAAfA,EAAQ,GACL,0BACI1jB,UACIpB,EAAQykB,gBAGI,SAAfK,EAAQ,GACH,oBACA,oBAEV,OAGZ,kBAAC1P,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,MAA9B,gBAGA,kBAACmR,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,KAA9B,gBAGA,kBAACmR,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,KAA9B,4BAGA,kBAACmR,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,MAA9B,4BAGA,kBAACmR,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,MAA9B,sBAGA,kBAACmR,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,MAA9B,sBAGA,kBAACmR,GAAA,EAAD,CAAWvK,MAAO,CAAE5G,SAAU,KAA9B,kBAKR,kBAACoR,GAAA,EAAD,KACK+T,EAAM7mB,KAAI,SAACwX,GAAD,OACP,kBAAC5E,GAAA,EAAD,CACI6E,OAAK,EACLjX,IAAKgX,EAAI/K,GACTgX,KAAK,WACLd,SAAUG,GAAWtL,EAAI/K,KAEzB,kBAACoG,GAAA,EAAD,CAAWpa,QAAQ,YACf,kBAAC2qB,GAAA,EAAD,CACIhkB,QAAS,SAACyB,GAAD,OA5J7B,SAACA,EAAOsD,GACxB,IAAMuf,EAAgBf,EAASI,QAAQ5e,GACnCwf,EAAc,IAEK,IAAnBD,EACAC,EAAcA,EAAYC,OAAOjB,EAAUxe,GAClB,IAAlBuf,EACPC,EAAcA,EAAYC,OAAOjB,EAASkB,MAAM,IACzCH,IAAkBf,EAASzP,OAAS,EAC3CyQ,EAAcA,EAAYC,OAAOjB,EAASkB,MAAM,GAAI,IAC7CH,EAAgB,IACvBC,EAAcA,EAAYC,OACtBjB,EAASkB,MAAM,EAAGH,GAClBf,EAASkB,MAAMH,EAAgB,KAIvCd,EAAYe,GA4I4BG,CAAYjjB,EAAO2W,EAAI/K,KAE3BJ,QAASyW,GAAWtL,EAAI/K,OAGhC,kBAACoG,GAAA,EAAD,KAAY2E,EAAI/K,IAChB,kBAACoG,GAAA,EAAD,CACIvK,MAAO,CAAEud,UAAW,cAEnBkB,aAAYvP,EAAIG,OAErB,kBAAC9E,GAAA,EAAD,KACKmU,aAAcxP,EAAIyM,SAEvB,kBAACpR,GAAA,EAAD,KACKoU,aACGzP,EAAIG,KACJH,EAAI0P,WAGZ,kBAACrU,GAAA,EAAD,CAAWhU,UAAWpB,EAAQ+B,QA7J7C,SAACqF,GACd,GAAc,KAAVA,EACA,MAAO,IAEX,IAEI,OADYyN,KAAKC,MAAM1N,GACZrB,IACb,MAAOkH,GACL,MAAO,gBAsJsByc,CAAS3P,EAAI4P,QAElB,kBAACvU,GAAA,EAAD,KACI,kBAACY,GAAA,EAAD,CACIC,KACI,oBAAsB8D,EAAI4N,QAG7B7gB,EAAMiT,EAAI4N,QACL7gB,EAAMiT,EAAI4N,QAAQrB,KAClB,iBAGd,kBAAClR,GAAA,EAAD,KACKwS,aACG7N,EAAI8N,UACJ,uBAGR,kBAACzS,GAAA,EAAD,KACI,kBAAC,KAAD,CAASnY,MAAO,gBACZ,kBAACwE,EAAA,EAAD,CACIqM,SAAUjC,EACVlK,QAAS,kBAhP/B4B,EAiPuCwW,EAAI/K,GAhP7DlD,GAAW,QACX7F,KAAI4G,KAAK,qBAAsB,CAAEtJ,GAAI,CAACA,KACjC4C,MAAK,WACFqT,KACA5T,EAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,MAXF,IAACvI,GAmPsB8G,KAAM,SAEN,kBAACwL,GAAA,EAAD,gBAShC,kBAAC2E,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,GAAI,KACjClQ,UAAU,MACVmQ,MAAOhC,EACPiC,YAAanC,EACbF,KAAMA,EAAO,EACbsC,aAAc,SAAC3N,EAAG4N,GAAJ,OAAUtC,EAAQsC,EAAI,IACpCC,oBAAqB,SAAC7N,GAClBwL,EAAYxL,EAAEL,OAAOpE,OACrB+P,EAAQ,Q,iCC/V1Bhd,GAAYC,aAAW,SAACJ,GAAD,YAAY,CACrCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJmP,KAAM,CACFjR,SAAU,IACVkR,UAAW,GACXC,aAAc,IAElBC,cAAc,eACTvQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjB4uB,WAAY,CACRnuB,MAAO,IACPyY,aAAc,OAmBP,SAAS2V,KACpB,IAAM7pB,EAAUzE,KAChB,EAA8B2E,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KACA,EAA8B5L,mBAAS,CACnCgd,OAAQ,EACR4M,UAAW,GACX5f,IAAK,GACL6f,IAAK,GACLC,WAAW,IALf,mBAAOzhB,EAAP,KAAgBmE,EAAhB,KAOA,EAAgCxM,mBAAS,MAAzC,mBAAO8Y,EAAP,KAAiBC,EAAjB,KACA,EAAgC/Y,mBAAS,IAAzC,mBAAOiX,EAAP,KAAiBgB,EAAjB,KACA,EAA0BjY,mBAAS,IAAnC,mBAAO4G,EAAP,KAAc+d,EAAd,KACA,EAAwB3kB,mBAAS,MAAjC,mBAAO2G,EAAP,KAAaigB,EAAb,KACA,EAAwC5mB,oBAAS,GAAjD,mBAAO+pB,EAAP,KAAqBC,EAArB,KACA,EAAsChqB,oBAAS,GAA/C,mBAAOiqB,EAAP,KAAoBC,EAApB,KAEMzd,EAAe,SAACjG,GAAD,OAAU,SAACtD,GAC5BsJ,EAAW,2BACJnE,GADG,kBAEL7B,EAAOtD,EAAMwJ,OAAOpE,WAWvB/H,EAAUC,cACVG,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAiCCwpB,EApFV,SAAqB7hB,EAAO8hB,GACxB,MAA4CpqB,mBAASsI,GAArD,mBAAO+hB,EAAP,KAAuBC,EAAvB,KAWA,OATAtpB,qBAAU,WACN,IAAMupB,EAAUC,YAAW,WACvBF,EAAkBhiB,KACnB8hB,GACH,OAAO,WACHK,aAAaF,MAElB,CAACjiB,IAEG+hB,EAwEqBK,CAAYriB,EAAQuhB,UAAW,KAE3D5oB,qBAAU,WACsB,KAAxBmpB,GACApkB,KAAI4G,KAAK,mBAAoB,CACzByL,KAAM,EACNmB,UAAW,IACXC,SAAU,SACV0L,SAAU,CACNd,KAAM+F,EACN9F,MAAO8F,KAGVlkB,MAAK,SAACC,GACHye,EAASze,EAASC,KAAK3H,UAE1ByI,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAG3D,CAACgjB,IAEJnpB,qBAAU,WACN+E,KAAI4G,KAAK,qBAAsB,CAC3ByL,KAAM,EACNmB,UAAW,IACXC,SAAU,SACVC,WAAY,KAEXxT,MAAK,SAACC,GACH,IAAMmB,EAAM,GACZnB,EAASC,KAAK3H,MAAM6H,SAAQ,SAACC,GACzBe,EAAIf,EAAEwI,IAAMxI,KAEhB2R,EAAY5Q,MAEfJ,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAGvD,IAEH,IAvF2BX,EA+FrBmkB,EAAgB,SAACC,GAAD,OAAY,SAACC,GAC/B,IAAMlsB,EACc,MAAhBksB,EAAOlsB,KACDksB,EAAOlsB,KAAOksB,EAAOrkB,KACrBqkB,EAAOlsB,KAAO,IAAMksB,EAAOrkB,KACrCokB,EAAgB,OAATjsB,EAAgB,IAAMA,KAG3BmsB,EAAmB,SAACC,GACtB,GAAIA,EAAa,CACb,IACK9T,EAAS5O,EAAQ2U,SACgB,UAAlC/F,EAAS5O,EAAQ2U,QAAQhD,MACS,WAAlC/C,EAAS5O,EAAQ2U,QAAQhD,KAQzB,YANAtU,EACI,MACA,QACA,mGACA,WAIRskB,GAAgB,OACb,CACH,GAAa,OAATrjB,EAEA,YADAjB,EAAe,MAAO,QAAS,mDAAY,WAG/CwkB,GAAe,KAIvB,OACI,6BACI,kBAACviB,GAAA,EAAD,CACIxH,KAAM4pB,EACNniB,QAAS,kBAAMoiB,GAAgB,IAC/BniB,kBAAgB,qBAEhB,kBAACE,GAAA,EAAD,CAAa1E,GAAG,qBAAhB,4BACA,kBAAC2nB,GAAA,EAAD,CACIC,YAAY,IACZC,IAAK,8BAAgC7iB,EAAQ2U,OAC7CgI,SAAU,GACVmG,SAAUR,GAAc,SAAChQ,GAAD,OACpBnO,EAAW,2BACJnE,GADG,IAEN2B,IAAK2Q,UAKjB,kBAACzS,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACI1G,QAAS,kBAAMuoB,GAAgB,IAC/BzsB,MAAM,WAFV,kBAQR,kBAACoK,GAAA,EAAD,CACIxH,KAAM8pB,EACNriB,QAAS,kBAAMsiB,GAAe,IAC9BriB,kBAAgB,qBAEhB,kBAACE,GAAA,EAAD,CAAa1E,GAAG,qBAAhB,4BACA,kBAAC2nB,GAAA,EAAD,CACIC,YAAY,IACZC,IACI,6BACU,OAATvkB,EAAgB,EAAIA,EAAKmI,IAE9BkW,SAAU,GACVmG,SAAUR,GAAc,SAAChQ,GAAD,OACpBnO,EAAW,2BACJnE,GADG,IAENwhB,IAAKlP,UAKjB,kBAACzS,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACI1G,QAAS,kBAAMyoB,GAAe,IAC9B3sB,MAAM,WAFV,kBAQR,0BAAMuP,SA5KC,SAACC,GACZA,EAAEC,iBACW,OAATrG,GAIJiF,GAAW,GACX7F,KAAI4G,KAAK,qBAAsB,CAC3Bye,IAAKzkB,EAAKmI,GACVmY,UAAW7H,SAAS/W,EAAQ2U,QAC5BhT,IAAK3B,EAAQ2B,IACb6f,IAAKxhB,EAAQwhB,IACbC,UAAWzhB,EAAQyhB,YAElB7jB,MAAK,WACF2F,GAAW,GACXrL,EAAQkC,KAAK,eACbiD,EACI,MACA,QACA,yJACA,cAGPuB,OAAM,SAACC,GACJ0E,GAAW,GACXlG,EAAe,MAAO,QAASwB,EAAMC,QAAS,aAvBlDzB,EAAe,MAAO,QAAS,mDAAY,aA0KvC,yBAAKxE,UAAWpB,EAAQ1F,MACpB,kBAACuH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,wCAGA,yBAAK1H,UAAWpB,EAAQ2L,eACpB,yBAAKvK,UAAWpB,EAAQwL,MACpB,kBAACsK,GAAA,EAAD,CAAOC,SAAS,QAAhB,kaAMJ,yBAAK3U,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACK,GAAA,EAAD,CACIyD,QAAQ,0BACR9N,GAAG,oBACHiF,MAAOD,EAAQ2U,OACf/Z,SAAUwJ,EAAa,UACvBmG,MAAO,kBAACtF,GAAA,EAAD,CAAOjK,GAAG,0BAEhBwJ,OAAOD,KAAKqK,GAAU5U,KAAI,SAACogB,GAAD,OACvB,kBAAC9U,GAAA,EAAD,CAAU9K,IAAK4f,EAAKna,MAAOma,GACtBxL,EAASwL,GAAKzT,UAI3B,kBAACxB,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,kHAKR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIhF,MAAOD,EAAQuhB,UACf3mB,SAAU,SAAC8J,GACPN,EAAa,YAAbA,CAA0BM,GAC1BgM,EAAYhM,EAAEqN,gBAElBiB,eACa,OAAT1U,GACI,kBAACuK,GAAA,EAAD,CAAgB9P,SAAS,SACrB,kBAAC8I,GAAA,EAAD,CACIC,KAAK,QACLkhB,SAAU,WACNzE,EAAQ,OAEZxc,MAAOzD,EAAKyf,QAK5BxY,SAAmB,OAATjH,IAEd,kBAAC2kB,GAAA,EAAD,CACInrB,KAC0B,KAAtBkI,EAAQuhB,WACRhjB,EAAM2O,OAAS,EAEnBuD,SAAUA,EACVyS,UAAW,SACX5vB,YAAU,IAET,gBAAG6vB,EAAH,EAAGA,gBAAH,OACG,kBAACC,GAAA,EAAD,iBACQD,EADR,CAEIE,QAAS,MAET,kBAAC/iB,GAAA,EAAD,CACIzH,UAAWpB,EAAQ4pB,YAElB9iB,EAAMvE,KAAI,SAACspB,GAAD,OACP,kBAAChe,GAAA,EAAD,CACI9K,IAAK8oB,EAAEtF,MACP5kB,QAAS,kBAtL1C,SAACkqB,GAChBnf,EAAW,2BACJnE,GADG,IAENuhB,UAAW,MAEfhD,EAAQ+E,GAkL4CC,CAAWD,KAGdA,EAAEvF,KAAM,IACR,IAAMuF,EAAEtF,MAAQ,aAOzC,kBAAC7Y,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,sMAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,wCAIA,kBAACC,GAAA,EAAD,CACIhF,MAAOD,EAAQ2B,IACf/G,SAAU,SAAC8J,GACPN,EAAa,MAAbA,CAAoBM,GACpBgM,EAAYhM,EAAEqN,gBAElB7M,UAAQ,EACR0D,aACI,kBAAC9I,GAAA,EAAD,CACI1G,QAAS,kBACLqpB,GAAiB,KAFzB,kBAUR,kBAACtd,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,oFAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,wCAIA,kBAACC,GAAA,EAAD,CACIhF,MAAOD,EAAQwhB,IACf5mB,SAAU,SAAC8J,GACPN,EAAa,MAAbA,CAAoBM,GACpBgM,EAAYhM,EAAEqN,gBAElB7M,UAAQ,EACR0D,aACI,kBAAC9I,GAAA,EAAD,CACI1G,QAAS,kBACLqpB,GAAiB,KAFzB,kBAUR,kBAACtd,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,4GAMR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACwB,GAAA,EAAD,CACIC,QACI,kBAACC,GAAA,EAAD,CACIH,QAASrG,EAAQyhB,UACjB7mB,UAjWbuD,EAkWiB,YAlWR,SAACtD,GACjCsJ,EAAW,2BACJnE,GADG,kBAEL7B,EAAOtD,EAAMwJ,OAAOgC,eAmWGtE,MAAM,+CAEV,kBAACoD,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,wGAQhB,yBAAKnC,UAAWpB,EAAQ1F,MACpB,kBAAC+N,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,2CC3bpB,IAAMlC,GAAYC,aAAW,SAACJ,GAAD,YAAY,CACrCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJmP,KAAM,CACFjR,SAAU,IACVkR,UAAW,GACXC,aAAc,IAElBC,cAAc,eACTvQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,wBAKN,SAAS+wB,KACpB,IAAM/rB,EAAUzE,KAChB,EAA8B2E,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KACA,EAA8B5L,mBAAS,CACnC8rB,aAAc,SACdC,eAAgB,IAChBC,cAAe,IACfC,aAAc,IACdC,mBAAoB,GACpBC,qBAAsB,GACtBC,wBAAyB,GACzBC,8BAA+B,GAC/BC,8BAA+B,GAC/BC,0BAA2B,GAC3BC,2BAA4B,KAXhC,mBAAOnkB,EAAP,KAAgBmE,EAAhB,KAcMC,EAAe,SAACjG,GAAD,OAAU,SAACtD,GAC5BsJ,EAAW,2BACJnE,GADG,kBAEL7B,EAAOtD,EAAMwJ,OAAOpE,WAIvB3H,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAGLK,qBAAU,WACN+E,KAAI4G,KAAK,iBAAkB,CACvBC,KAAMC,OAAOD,KAAKvE,KAEjBpC,MAAK,SAACC,GACHsG,EAAWtG,EAASC,SAEvBc,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAGvD,IA0BH,OACI,6BACI,0BAAM2F,SA1BC,SAACC,GACZA,EAAEC,iBACFpB,GAAW,GACX,IAAMqB,EAAS,GACfJ,OAAOD,KAAKvE,GAAShC,SAAQ,SAACE,GAC1B0G,EAAOxK,KAAK,CACRI,IAAK0D,EACL+B,MAAOD,EAAQ9B,QAGvBR,KAAIqC,MAAM,iBAAkB,CACxBC,QAAS4E,IAERhH,MAAK,WACFP,EAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,QAOX,yBAAK1K,UAAWpB,EAAQ1F,MACpB,kBAACuH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,sBAGA,yBAAK1H,UAAWpB,EAAQ2L,eACpB,yBAAKvK,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kCAGA,kBAACK,GAAA,EAAD,CACIpF,MAAOD,EAAQyjB,aACf7oB,SAAUwJ,EAAa,gBACvBc,UAAQ,GAER,kBAACI,GAAA,EAAD,CAAUrF,MAAO,UAAjB,gBACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,aAAjB,gBAGA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,YAAjB,yCAIJ,kBAACkF,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,sCAQU,WAAzBgF,EAAQyjB,cACL,yBAAK5qB,UAAWpB,EAAQ1F,MACpB,kBAACuH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,kCAGA,yBAAK1H,UAAWpB,EAAQ2L,eACpB,yBAAKvK,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gBAGA,kBAACC,GAAA,EAAD,CACI/F,KAAM,SACN6I,WAAY,CACRC,IAAK,EACLC,KAAM,GAEVhI,MAAOD,EAAQ2jB,cACf/oB,SAAUwJ,EAAa,iBACvBc,UAAQ,MAKpB,yBAAKrM,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gBAGA,kBAACC,GAAA,EAAD,CACI/F,KAAM,SACN6I,WAAY,CACRC,IAAK,EACLC,KAAM,GAEVhI,MAAOD,EAAQ0jB,eACf9oB,SAAUwJ,EACN,kBAEJc,UAAQ,MAKpB,yBAAKrM,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,KACI,kBAACE,GAAA,EAAD,CAAYC,QAAQ,oBAApB,gBAGA,kBAACK,GAAA,EAAD,CACIpF,MAAOD,EAAQ4jB,aACfhpB,SAAUwJ,EAAa,gBACvBc,UAAQ,GAER,kBAACI,GAAA,EAAD,CAAUrF,MAAO,KAAjB,gBACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,KAAjB,gBACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,KAAjB,gBACA,kBAACqF,GAAA,EAAD,CAAUrF,MAAO,KAAjB,8BAIJ,kBAACkF,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,4CASM,cAAzBgF,EAAQyjB,cACL,yBAAK5qB,UAAWpB,EAAQ1F,MACpB,kBAACuH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,gBAGA,yBAAK1H,UAAWpB,EAAQ2L,eACpB,yBAAKvK,UAAWpB,EAAQwL,MACpB,yBAAKpK,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,YAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAOD,EAAQ8jB,qBACflpB,SAAUwJ,EACN,0BAGR,kBAACe,GAAA,EAAD,CAAgBnK,GAAG,yBACf,kBAACyS,GAAA,EAAD,CACIC,KACI,gDAEJrJ,OAAQ,UAJZ,wCAOQ,IARZ,6DAcR,yBAAKxL,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,UAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MACID,EAAQ+jB,wBAEZnpB,SAAUwJ,EACN,6BAGR,kBAACe,GAAA,EAAD,CAAgBnK,GAAG,yBACf,kBAACyS,GAAA,EAAD,CACIC,KACI,gDAEJrJ,OAAQ,UAJZ,wCAOQ,IARZ,oDAkBE,aAAzBrE,EAAQyjB,cACL,yBAAK5qB,UAAWpB,EAAQ1F,MACpB,kBAACuH,EAAA,EAAD,CAAYC,QAAQ,KAAKgH,cAAY,GAArC,wCAGA,yBAAK1H,UAAWpB,EAAQ2L,eACpB,yBAAKvK,UAAWpB,EAAQwL,MACpB,yBAAKpK,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,YAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MACID,EAAQkkB,0BAEZtpB,SAAUwJ,EACN,+BAGR,kBAACe,GAAA,EAAD,CAAgBnK,GAAG,yBACf,kBAACyS,GAAA,EAAD,CACIC,KACI,yCAEJrJ,OAAQ,UAJZ,wCAOQ,IARZ,6CAcR,yBAAKxL,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,aAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MACID,EAAQmkB,2BAEZvpB,SAAUwJ,EACN,gCAGR,kBAACe,GAAA,EAAD,CAAgBnK,GAAG,yBACf,kBAACyS,GAAA,EAAD,CACIC,KACI,yCAEJrJ,OAAQ,UAJZ,wCAOQ,IARZ,8CAcR,yBAAKxL,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,SAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MACID,EAAQgkB,8BAEZppB,SAAUwJ,EACN,mCAGR,kBAACe,GAAA,EAAD,CAAgBnK,GAAG,yBACf,kBAACyS,GAAA,EAAD,CACIC,KACI,sDAEJrJ,OAAQ,UAJZ,wCAOQ,IARZ,0CAcR,yBAAKxL,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,kBAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRjF,MACID,EAAQikB,8BAEZrpB,SAAUwJ,EACN,mCAGR,kBAACe,GAAA,EAAD,CAAgBnK,GAAG,yBACf,kBAACyS,GAAA,EAAD,CACIC,KACI,sDAEJrJ,OAAQ,UAJZ,wCAOQ,IARZ,sDAkBxB,yBAAKxL,UAAWpB,EAAQ1F,MACpB,kBAAC+N,GAAA,EAAD,CACIyF,SAAUjC,EACVpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,mB,+EC9WdlC,GAAYC,aAAW,SAACJ,GAAD,YAAY,CACrCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJpB,QAAS,CACLD,QAASI,EAAMC,QAAQ,IAE3BuM,UAAW,CACP9K,UAAW,QAEf+a,eAAgB,CACZpM,UAAW,IAEfqM,OAAQ,CACJpd,QAAS,OACT2C,eAAgB,iBAEpBsvB,cAAe,CACXtwB,WAAYjB,EAAMC,QAAQ,GAC1BmI,OAAQ,IAEZopB,aAAc,CACVnvB,MAAOrC,EAAMsC,QAAQC,KAAKmQ,UAE9B+e,cAAe,CACXA,cAAe,SACfnyB,QAAS,oBAIXsd,GAAU,CACZ,CAAEzU,GAAI,IAAK+G,MAAO,IAAKrG,SAAU,IACjC,CAAEV,GAAI,OAAQ+G,MAAO,eAAMrG,SAAU,KACrC,CACIV,GAAI,SACJ+G,MAAO,2BACPrG,SAAU,IAEd,CACIV,GAAI,WACJ+G,MAAO,iCACPrG,SAAU,KAEd,CACIV,GAAI,SACJ+G,MAAO,eACPrG,SAAU,MAIZ6oB,GAAW,CACb,CACIla,MAAO,eACPlM,KAAM,6BAIC,SAASqmB,KACpB,IAAM/sB,EAAUzE,KAChB,EAA0B2E,mBAAS,IAAnC,mBAAO8sB,EAAP,KAAcC,EAAd,KACA,EAAgC/sB,mBAAS,IAAzC,mBAAOgtB,EAAP,KAAiBC,EAAjB,KACA,EAA8BjtB,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KACA,EAAwB5L,mBAAS,GAAjC,mBAAOoY,EAAP,KAAaC,EAAb,KACA,EAAgCrY,mBAAS,IAAzC,mBAAOsY,EAAP,KAAiBC,EAAjB,KACA,EAA0BvY,mBAAS,GAAnC,mBAAOwY,EAAP,KAAcC,EAAd,KAEMlY,EAAUC,cAEVG,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAGC2Y,EAAW,WACbvT,KAAI4G,KAAK,mBAAoB,CACzByL,KAAMA,EACNmB,UAAWjB,EACXkB,SAAU,YAETvT,MAAK,SAACC,GACH6mB,EAAS7mB,EAASC,KAAK3H,OACvBia,EAASvS,EAASC,KAAKqS,OACvByU,EAAY/mB,EAASC,KAAKlI,WAE7BgJ,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,aAuC1DnG,qBAAU,WACNsY,MACD,CAAClB,EAAME,IA4CV,OACI,6BACI,yBAAKpX,UAAWpB,EAAQ8X,QACpB,kBAACzP,GAAA,EAAD,CACI5K,MAAO,UACPkE,QAAS,kBAAMlB,EAAQkC,KAAK,oBAC5Bb,QAAS,aAHb,kCAOA,yBAAKV,UAAWpB,EAAQ+X,aACpB,kBAAC1P,GAAA,EAAD,CACI5K,MAAO,UACPkE,QAAS,kBAAM6X,KACf1X,QAAS,YAHb,kBAUR,kBAAC+G,GAAA,EAAD,CAAO3F,QAAM,EAAC9B,UAAWpB,EAAQ6X,gBAC7B,kBAACgC,GAAA,EAAD,CAAgBzY,UAAWpB,EAAQ4H,WAC/B,kBAACqN,GAAA,EAAD,CAAOvT,aAAW,eAAe2I,KAAM,SACnC,kBAAC6K,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAUtK,MAAO,CAAErH,OAAQ,KACtBwU,GAAQzV,KAAI,SAACuX,GAAD,OACT,kBAAC1E,GAAA,EAAD,CACIrS,IAAK+W,EAAOvW,GACZ0U,MAAO6B,EAAO7B,MACdpN,MAAO,CACH5G,SAAU6V,EAAOsT,qBAGpBtT,EAAOxP,YAKxB,kBAAC+K,GAAA,EAAD,KACK2X,EAAMzqB,KAAI,SAACwX,GAAD,OACP,kBAAC5E,GAAA,EAAD,CAAU6E,OAAK,EAACjX,IAAKgX,EAAI/K,IACrB,kBAACoG,GAAA,EAAD,KAAY2E,EAAI/K,IAChB,kBAACoG,GAAA,EAAD,CACIhU,UAAWisB,KAAW,eACjBrtB,EAAQ4sB,aACU,IAAf7S,EAAIyM,UAGXzM,EAAI7K,KA3FlB,SAACgV,GACpB,GAAe,IAAXA,EACA,OACI,kBAAC9Z,GAAA,EAAD,CACIhJ,UAAWpB,EAAQ2sB,cACnBtiB,KAAK,QACLC,MAAM,uBAsFegjB,CAAevT,EAAIyM,SAExB,kBAACpR,GAAA,EAAD,KACwB8X,EAASnT,EAAI/K,IAnE7D,kBAACue,GAAA,EAAD,CAAK9vB,MAAM,eAAemG,SAAS,SAC/B,kBAAC4pB,GAAA,EAAD,CACIpsB,UAAWpB,EAAQ6sB,cACnBjpB,SAAS,UACV,IACH,0BAAMxC,UAAWpB,EAAQ6sB,eAAzB,iBAGJ,kBAACU,GAAA,EAAD,CAAK9vB,MAAM,aAAamG,SAAS,SAC7B,kBAAC6pB,GAAA,EAAD,CAAQrsB,UAAWpB,EAAQ6sB,cAAejpB,SAAS,UAAW,IAC9D,0BAAMxC,UAAWpB,EAAQ6sB,eAAzB,kBA2DoB,kBAACzX,GAAA,EAAD,MArFPsY,EAsF4B3T,EArFjD+S,GAASvqB,KAAI,SAACorB,GACV,GAAID,EAAKC,EAAQ/a,OACb,OACI,kBAACxI,GAAA,EAAD,CACIhJ,UAAWpB,EAAQ2sB,cACnBtiB,KAAK,QACL5M,MAAM,UACN6M,MAAOqjB,EAAQjnB,YAiFH,kBAAC0O,GAAA,EAAD,CAAW6C,MAAO,SACd,kBAAC,KAAD,CACIhb,MACmB,IAAf8c,EAAIyM,OACE,2BACA,wCAGV,kBAAC/kB,EAAA,EAAD,CACIqM,SAAUjC,EACVlK,QAAS,kBAtJjC4B,EAwJgCwW,EAAI/K,GAxJhC4e,EAyJ4B,EAAI7T,EAAIyM,OAxJxD1a,GAAW,QACX7F,KAAIqC,MAAM,sBAAwB/E,EAAK,IAAMqqB,GACxCznB,MAAK,SAACC,GACHoT,IACA5T,EACI,MACA,QACA,sBAAqB,IAAZgoB,EAAgB,2BAAS,gBAClC,cAGPzmB,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,MAhBJ,IAACvI,EAAIqqB,GA4JoBvjB,KAAM,SAEU,IAAf0P,EAAIyM,QACD,kBAACqH,GAAA,EAAD,MAEY,IAAf9T,EAAIyM,QAAgB,kBAACsH,GAAA,EAAD,QAG7B,kBAAC,KAAD,CAAS7wB,MAAO,gBACZ,kBAACwE,EAAA,EAAD,CACIqM,SAAUjC,EACVlK,QAAS,kBACLlB,EAAQkC,KACJ,oBACIoX,EAAI/K,KAGhB3E,KAAM,SAEN,kBAACkQ,GAAA,EAAD,QAGR,kBAAC,KAAD,CAAStd,MAAO,gBACZ,kBAACwE,EAAA,EAAD,CACIE,QAAS,kBAhKjC4B,EAiKuCwW,EAAI/K,GAhK3DlD,GAAW,QACX7F,KAAIoU,OAAO,eAAiB9W,GACvB4C,MAAK,WACFqT,IACA5T,EAAe,MAAO,QAAS,iCAAS,cAE3CuB,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,MAXJ,IAACvI,GAmKwBuK,SAAUjC,EACVxB,KAAM,SAEN,kBAACwL,GAAA,EAAD,UAvIpB,IAAC6X,QAgJb,kBAAClT,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAI,GAAI,KAC7BlQ,UAAU,MACVmQ,MAAOhC,EACPiC,YAAanC,EACbF,KAAMA,EAAO,EACbsC,aAAc,SAAC3N,EAAG4N,GAAJ,OAAUtC,EAAQsC,EAAI,IACpCC,oBAAqB,SAAC7N,GAClBwL,EAAYxL,EAAEL,OAAOpE,OACrB+P,EAAQ,QC1ThC,IAAMhd,GAAYC,aAAW,SAACJ,GAAD,MAAY,CACrCugB,YAAa,CACT3gB,QAAS,uBAEbwQ,KAAM,CACFjR,SAAU,IACVkR,UAAW,IAEfE,cAAc,eACTvQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjB4gB,iBAAkB,CACdlhB,QAAS,OACTgR,aAAc,GACd1Q,QAAS,GACTa,WAAYT,EAAMU,YAAYC,OAAO,mBAAoB,CACrDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,gBAEzC,iBAAkB,CACd2B,gBAAiB1C,EAAMsC,QAAQK,WAAWC,UAGlD6d,WAAY,CACRpgB,MAAO,GACP+H,OAAQ,GACR1F,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAUke,MAAO,IACxDre,MAAOrC,EAAMsC,QAAQE,UAAUwV,aAC/BF,UAAW,SACXgB,aAAc,QAElB6H,oBAAqB,CACjBvf,YAAa,IAEjBwf,WAAY,CACRvQ,UAAW,IAEf7I,OAAQ,CACJpG,YAAapB,EAAMC,QAAQ,IAE/B4gB,gBAAiB,CAAEC,cAAe,QAClC,UAAW,CACPC,KAAM,CACF1e,MAAO,sBACP/C,QAAS,eACTM,QAAS,UACTohB,WACI,0DACJlI,aAAc,MACdpW,gBAAiB,yBAErBkjB,IAAK,CACDrmB,OAAQ,SACRK,QAAS,YACTimB,SAAU,OACV9e,UAAW,MACX+R,aAAc,MACdpW,gBAAiB,UACjBL,MAAO,OACP2e,WACI,gEAKD,SAAS2R,GAAcvR,GAClC,IAAMxc,EAAUzE,KACVsF,EAAWC,cACjB,EAA8BZ,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KACMlG,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAsBL,OACI,0BACIO,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFsP,EAAMxP,SAASC,KAGnB,kBAAC6I,GAAA,EAAD,CAAOC,SAAS,OAAOlL,MAAO,CAAEa,aAAc,KAA9C,+bAII,kBAAC6hB,GAAA,EAAD,CAAK/uB,WAAW,kBAAhB,maAJJ,0JAWA,yBAAK4C,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,uKAOR,yBAAKV,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,mRAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACR6C,WAAY,CACR6Q,UAAW,IAEf3Y,MAAOgU,EAAMkR,KAAKM,SAClB7qB,SAAUqZ,EAAMyR,iBAAiB,kBAOrD,yBAAK7sB,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,yDAEI,6BAFJ,sFAII,0CAJJ,8UAQA,wCAEI,6BAFJ,eAII,6BAJJ,iBAMI,6BACA,6BAPJ,UASI,6BATJ,YAUc0a,EAAMkR,KAAKM,SACrB,8BAEJ,kBAACnsB,EAAA,EAAD,CAAYC,QAAS,SAArB,6IAEI,4BACI,4BACI,wCADJ,2BAGI,sCAHJ,6CAIW,wCAEX,uDACQ,uCADR,2BAEI,wCAFJ,uHATR,wRAqBR,yBAAKV,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,6CAEI,6BAFJ,yLAMA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,4BAGA,kBAACC,GAAA,EAAD,CACIH,WAAS,EACTI,UAAQ,EACRhG,KAAM,MACNe,MAAOgU,EAAMkR,KAAKpQ,OAClBna,SAAUqZ,EAAMyR,iBAAiB,gBAOrD,yBAAK7sB,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,kLAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAACnD,GAAA,EAAD,CACIyF,SAAUjC,EACV/J,QAAS,WACTH,QAAS,kBAnK7BmK,GAAW,QAGX7F,KAAI4G,KAAK,2BAA4B,CACjCuU,OAAQ5E,EAAMkR,KAAKpQ,OACnB+D,OAAQ7E,EAAMkR,KAAKM,WAElB7nB,MAAK,WACFP,EAAe,MAAO,QAAS,2BAAQ,cAE1CuB,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,OAsJCrO,MAAO,WAJX,2CAYZ,yBAAK2D,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACIyF,SAAUjC,GAAW2Q,EAAM3Q,QAC3BpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBCrPhB,IAAMlC,GAAYC,aAAW,SAACJ,GAAD,MAAY,CACrCugB,YAAa,CACT3gB,QAAS,uBAEbwQ,KAAM,CACFjR,SAAU,IACVkR,UAAW,IAEfE,cAAc,eACTvQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjB4gB,iBAAkB,CACdlhB,QAAS,OACTgR,aAAc,GACd1Q,QAAS,GACTa,WAAYT,EAAMU,YAAYC,OAAO,mBAAoB,CACrDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,gBAEzC,iBAAkB,CACd2B,gBAAiB1C,EAAMsC,QAAQK,WAAWC,UAGlD6d,WAAY,CACRpgB,MAAO,GACP+H,OAAQ,GACR1F,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAUke,MAAO,IACxDre,MAAOrC,EAAMsC,QAAQE,UAAUwV,aAC/BF,UAAW,SACXgB,aAAc,QAElB6H,oBAAqB,CACjBvf,YAAa,IAEjBwf,WAAY,CACRvQ,UAAW,IAEf7I,OAAQ,CACJpG,YAAapB,EAAMC,QAAQ,IAE/B4gB,gBAAiB,CAAEC,cAAe,QAClC,UAAW,CACPC,KAAM,CACF1e,MAAO,sBACP/C,QAAS,eACTM,QAAS,UACTohB,WACI,0DACJlI,aAAc,MACdpW,gBAAiB,yBAErBkjB,IAAK,CACDrmB,OAAQ,SACRK,QAAS,YACTimB,SAAU,OACV9e,UAAW,MACX+R,aAAc,MACdpW,gBAAiB,UACjBL,MAAO,OACP2e,WACI,gEAKD,SAAS8R,GAAS1R,GAC7B,IAAMxc,EAAUzE,KACVsF,EAAWC,cACjB,EAA8BZ,oBAAS,GAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KACMlG,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IA4BC2hB,EAA2B,IAApBhG,EAAMkR,KAAKxT,KAAa,eAAO,eAE5C,OACI,0BACI9Y,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFsP,EAAMxP,SAASC,KAGnB,kBAAC6I,GAAA,EAAD,CAAOC,SAAS,OAAOlL,MAAO,CAAEa,aAAc,KAC1C,kBAAC7J,EAAA,EAAD,CAAYC,QAAQ,SAApB,6DACuB,IACnB,kBAACkU,GAAA,EAAD,CAAMC,KAAM,2BAA4BrJ,OAAQ,UAAhD,SAEQ,IAJZ,+SAQI,kBAAC2gB,GAAA,EAAD,CAAKhjB,UAAU,OAAO/L,WAAW,kBAAjC,2BACcgkB,EADd,uFAEO,IAVX,iFAWkB,IACd,kBAACxM,GAAA,EAAD,CACIC,KAAM,uCACNrJ,OAAQ,UAFZ,4BAKQ,IAjBZ,uBAsBJ,yBAAKxL,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SACI,IAApB0a,EAAMkR,KAAKxT,KACN,mGACA,6FACN,6BACqB,IAApBsC,EAAMkR,KAAKxT,KACN,yJACA,oJAGV,yBAAK9Y,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaK,UAAQ,EAAClD,UAAU,YAC5B,kBAACwU,GAAA,EAAD,CACItR,UAAQ,EACRjF,MAAOgU,EAAMkR,KAAKS,aAClBhrB,SAAUqZ,EAAMyR,iBACZ,gBAEJlU,KAAG,GAEH,kBAAClL,GAAA,EAAD,CACIrG,MAAO,OACPsG,QAAS,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YACvB6M,MAAM,iBAEV,kBAACuE,GAAA,EAAD,CACIrG,MAAO,QACPsG,QAAS,kBAACkQ,GAAA,EAAD,CAAOvhB,MAAO,YACvB6M,MAAM,sBAQ9B,kBAAC2U,GAAA,EAAD,CAAUC,GAAgC,SAA5B1C,EAAMkR,KAAKS,cACrB,yBAAK/sB,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SACI,IAApB0a,EAAMkR,KAAKxT,KACN,6EACA,gBAHV,8YASA,+DAEI,6BAFJ,kBAII,6BAJJ,iCAMI,6BANJ,uBAQI,6BARJ,qEAUI,6BAVJ,cAYKsC,EAAMkR,KAAKU,uBAAuB7M,MACnC,8BAEJ,kBAACzL,GAAA,EAAD,CAAOC,SAAS,OAAOlL,MAAO,CAAEa,aAAc,KAC1C,kBAAC7J,EAAA,EAAD,CAAYC,QAAQ,SAApB,gfAUZ,yBAAKV,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,iCACU0gB,EADV,oHAGI,wDAHJ,kCAII,sCAJJ,mDAKI,iDALJ,kCAOA,yBAAKphB,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,sCAGA,kBAACC,GAAA,EAAD,CACIC,UAAQ,EACRhG,KAAM,MACNe,MACIgU,EAAMkR,KAAKU,uBAAuBhN,OAEtCje,SAAUqZ,EAAM8D,mBACZ,YAGR,kBAAC5S,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,sMAUhB,yBAAKnC,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,gFAEI,4CAFJ,4EAIA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAACgC,GAAA,EAAD,CACIhF,MAAOgU,EAAMkR,KAAKU,uBAAuB7M,MACzCpe,SAAUqZ,EAAM8D,mBAAmB,cAMnD,yBAAKlf,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,uHAEI,4DAFJ,mJAKA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAACgC,GAAA,EAAD,CACIhF,MACIgU,EAAMkR,KAAKU,uBAAuB3c,UAEtCtO,SAAUqZ,EAAM8D,mBAAmB,kBAMnD,yBAAKlf,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,iHAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,iDAGA,kBAACC,GAAA,EAAD,CACI/F,KAAM,SACN6I,WAAY,CACRE,KAAM,EACND,IAAK,GAET9C,UAAQ,EACRjF,MACIgU,EAAMkR,KAAKU,uBACNC,SAETlrB,SAAUqZ,EAAM8D,mBACZ,cAGR,kBAAC5S,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,qGAKR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,yCAGA,kBAACC,GAAA,EAAD,CACI/F,KAAM,SACN6I,WAAY,CACRE,KAAM,EACND,IAAK,GAET9C,UAAQ,EACRjF,MACIgU,EAAMkR,KAAKU,uBACNxC,QAETzoB,SAAUqZ,EAAM8D,mBACZ,aAGR,kBAAC5S,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,6EAKR,yBAAKnC,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,wCAGA,kBAACC,GAAA,EAAD,CACIG,WAAS,EACTF,UAAQ,EACRjF,MACIgU,EAAMkR,KAAKU,uBACN7lB,QAETpF,SAAUqZ,EAAM8D,mBACZ,aAGR,kBAAC5S,GAAA,EAAD,CAAgBnK,GAAG,yBAAnB,qWAUhB,yBAAKnC,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,uIAEK0gB,EAFL,oEAIyB,IAApBhG,EAAMkR,KAAKxT,MACR,oMAER,yBAAK9Y,UAAWpB,EAAQwL,MACpB,kBAACnD,GAAA,EAAD,CACIyF,SAAUjC,EACV/J,QAAS,WACTH,QAAS,kBA3TjCmK,GAAW,QACX7F,KAAI4G,KAAK,yBAA0B,CAC/BpF,KAAM+U,EAAMkR,KAAKxT,KACjBkH,OAAQ5E,EAAMkR,KAAKpQ,OACnB+D,OAAQ7E,EAAMkR,KAAKM,SACnBM,IAAK9R,EAAMkR,KAAKU,uBAAuBhN,OACvCG,MAAO/E,EAAMkR,KAAKU,uBAAuB7M,QAExCpb,MAAK,SAACC,GACHR,EACI,MACA,QACA,+DAAoBQ,EAASC,KAC7B,cAGPc,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,OAwSKrO,MAAO,WAJX,uCAahB,yBAAK2D,UAAWpB,EAAQgc,YACE,IAArBQ,EAAMC,YACH,kBAACpU,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS6a,EAAM+R,QAHnB,sBAQJ,kBAAClmB,GAAA,EAAD,CACIyF,SAAUjC,GAAW2Q,EAAM3Q,QAC3BpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,UACPkE,QAAS6a,EAAMxP,UALnB,wBCnahB,IAAMzR,GAAYC,aAAW,SAACJ,GAAD,MAAY,CACrCugB,YAAa,CACT3gB,QAAS,uBAEbwQ,KAAM,CACFjR,SAAU,IACVkR,UAAW,IAEfE,cAAc,eACTvQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjB4gB,iBAAkB,CACdlhB,QAAS,OACTgR,aAAc,GACd1Q,QAAS,GACTa,WAAYT,EAAMU,YAAYC,OAAO,mBAAoB,CACrDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,gBAEzC,iBAAkB,CACd2B,gBAAiB1C,EAAMsC,QAAQK,WAAWC,UAGlD6d,WAAY,CACRpgB,MAAO,GACP+H,OAAQ,GACR1F,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAUke,MAAO,IACxDre,MAAOrC,EAAMsC,QAAQE,UAAUwV,aAC/BF,UAAW,SACXgB,aAAc,QAElB6H,oBAAqB,CACjBvf,YAAa,IAEjBwf,WAAY,CACRvQ,UAAW,IAEf7I,OAAQ,CACJpG,YAAapB,EAAMC,QAAQ,IAE/B4gB,gBAAiB,CAAEC,cAAe,QAClC,UAAW,CACPC,KAAM,CACF1e,MAAO,sBACP/C,QAAS,eACTM,QAAS,UACTohB,WACI,0DACJlI,aAAc,MACdpW,gBAAiB,yBAErBkjB,IAAK,CACDrmB,OAAQ,SACRK,QAAS,YACTimB,SAAU,OACV9e,UAAW,MACX+R,aAAc,MACdpW,gBAAiB,UACjBL,MAAO,OACP2e,WACI,gEAKD,SAASoS,GAAShS,GAC7B,IAAMxc,EAAUzE,KACVsF,EAAWC,cACjB,EAA8BZ,oBAAS,GAAvC,mBAAO2L,EAAP,UACuB7K,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAGL,OACI,0BACIO,UAAWpB,EAAQ2b,YACnB3O,SAAU,SAACC,GACPA,EAAEC,iBACFsP,EAAMxP,SAASC,KAGnB,yBAAK7L,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,8CACA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACG,GAAA,EAAD,CACIC,UAAQ,EACRjF,MAAOgU,EAAMkR,KAAKxe,KAClB/L,SAAUqZ,EAAMyR,iBAAiB,cAOrD,yBAAK7sB,UAAWpB,EAAQ4b,kBACpB,yBAAKxa,UAAWpB,EAAQ+b,qBACpB,yBAAK3a,UAAWpB,EAAQ6b,YAAxB,MAEJ,yBAAKza,UAAWpB,EAAQ4e,gBACpB,kBAAC/c,EAAA,EAAD,CAAYC,QAAS,SAArB,8OAGA,yBAAKV,UAAWpB,EAAQwL,MACpB,kBAAC4B,GAAA,EAAD,CAAaC,WAAS,GAClB,kBAACC,GAAA,EAAD,CAAYC,QAAQ,oBAApB,wCAGA,kBAACC,GAAA,EAAD,CACI/F,KAAM,SACNgG,UAAQ,EACR6C,WAAY,CACRE,KAAM,EACND,IAAK,GAET/H,MAAOgU,EAAMkR,KAAKe,KAClBtrB,SAAUqZ,EAAMyR,iBAAiB,cAOrD,yBAAK7sB,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACIyF,SAAUjC,GAAW2Q,EAAM3Q,QAC3BpE,KAAM,SACN3F,QAAS,YACTrE,MAAO,WAJX,wBCnIhB,IAAMlC,GAAYC,aAAW,SAACJ,GAAD,MAAY,CACrCugB,YAAa,CACT3gB,QAAS,uBAEbwQ,KAAM,CACFjR,SAAU,IACVkR,UAAW,IAEfE,cAAc,eACTvQ,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BhC,QAAS,oBAGjB4gB,iBAAkB,CACdlhB,QAAS,OACTgR,aAAc,GACd1Q,QAAS,GACTa,WAAYT,EAAMU,YAAYC,OAAO,mBAAoB,CACrDC,OAAQZ,EAAMU,YAAYE,OAAOC,MACjCC,SAAUd,EAAMU,YAAYI,SAASC,gBAEzC,iBAAkB,CACd2B,gBAAiB1C,EAAMsC,QAAQK,WAAWC,UAGlD6d,WAAY,CACRpgB,MAAO,GACP+H,OAAQ,GACR1F,gBAAiBM,YAAQhD,EAAMsC,QAAQE,UAAUke,MAAO,IACxDre,MAAOrC,EAAMsC,QAAQE,UAAUwV,aAC/BF,UAAW,SACXgB,aAAc,QAElB6H,oBAAqB,CACjBvf,YAAa,IAEjBwf,WAAY,CACRvQ,UAAW,IAEf7I,OAAQ,CACJpG,YAAapB,EAAMC,QAAQ,IAE/B4gB,gBAAiB,CAAEC,cAAe,QAClC,UAAW,CACPC,KAAM,CACF1e,MAAO,sBACP/C,QAAS,eACTM,QAAS,UACTohB,WACI,0DACJlI,aAAc,MACdpW,gBAAiB,yBAErBkjB,IAAK,CACDrmB,OAAQ,SACRK,QAAS,YACTimB,SAAU,OACV9e,UAAW,MACX+R,aAAc,MACdpW,gBAAiB,UACjBL,MAAO,OACP2e,WACI,gEAKD,SAASsS,GAAUlS,GAC9B,IAAMxc,EAAUzE,KACVkF,EAAUC,cAEhB,OACI,0BAAMU,UAAWpB,EAAQ2b,aACrB,kBAAC9Z,EAAA,EAAD,6CACA,kBAACA,EAAA,EAAD,CAAYC,QAAS,QAASrE,MAAO,iBAArC,8LAIA,yBAAK2D,UAAWpB,EAAQgc,YACpB,kBAAC3T,GAAA,EAAD,CACI5K,MAAO,UACP2D,UAAWpB,EAAQ4C,OACnBjB,QAAS,kBAAMlB,EAAQkC,KAAK,iBAHhC,0CC/EhB,IAAM0Z,GAAQ,CACV,CACIsS,WAAW,EACX1xB,MAAO,2BACPqf,UAAU,EACV/R,UAAW,SAAcsQ,GACrB,OAAO,kBAACkT,GAAkBlT,KAGlC,CACI8T,WAAW,EACX1xB,MAAO,2BACPqf,UAAU,EACV/R,UAAW,SAAcsQ,GACrB,OAAO,kBAACqT,GAAarT,KAG7B,CACI8T,WAAW,EACX1xB,MAAO,2BACPqf,UAAU,EACV/R,UAAW,SAAcsQ,GACrB,OAAO,kBAAC2T,GAAa3T,KAG7B,CACI8T,WAAW,EACX1xB,MAAO,eACPqf,UAAU,EACV/R,UAAW,SAAcsQ,GACrB,OAAO,kBAAC6T,GAAc7T,MAKnB,SAAS+T,GAAUpS,GAC9B,MAAoCtc,mBAAS,GAA7C,mBAAOuc,EAAP,KAAmBC,EAAnB,KACA,EAA8BzX,IAAM/E,SAAS,IAAIyc,KAAjD,mBAAOC,EAAP,KACA,GADA,KAC8B1c,oBAAS,IAAvC,mBAAO2L,EAAP,KAAgBC,EAAhB,KACA,EAAwB5L,mBACpBsc,EAAMkR,KACAlR,EAAMkR,KACN,CACIlH,OAAQ,EACRtM,KAAM,EACNiU,aAAc,QACd7Q,OAAQ,2BACR0Q,SAAU9M,aAAU,IACpB2N,UAAW3N,aAAU,IACrBuN,KAAM,IACNL,uBAAwB,CACpB7M,MAAOL,aAAU,IACjB3Y,QAAS,KACT8lB,SAAU,KACVzC,QAAS,QAf3B,mBAAO8B,EAAP,KAAaoB,EAAb,KAoBMC,EAAYC,mBAAQ,WACtB,OAAO3S,GAAMvD,QAAO,SAACtI,GAAD,QAAYA,EAAKme,WAA2B,IAAdjB,EAAKxT,WACxD,CAACwT,EAAKxT,OAuBHrZ,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IA2CL,OACI,6BACI,kBAACgB,EAAA,EAAD,CAAYC,QAAS,MAChB0a,EAAMkR,KAAO,eAAO,eADzB,iBAGA,kBAACtP,GAAA,EAAD,CAAS3B,WAAYA,GAChBsS,EAAUxsB,KAAI,SAAC+H,EAAO+T,GACnB,IA3EO7N,EA2ED8N,EAAY,GACZC,EAAa,GASnB,GARIjU,EAAMgS,WACNiC,EAAWjC,SACP,kBAACza,EAAA,EAAD,CAAYC,QAAQ,WAApB,iBA/ED0O,EAkFW6N,EAjFvBzB,EAAQ4B,IAAIhO,KAkFH8N,EAAUG,WAAY,IAEpBnU,EAAMqkB,WAA2B,IAAdjB,EAAKxT,KAC1B,OACI,kBAACwE,GAAA,EAAD,eAAM3b,IAAKuH,EAAMrN,OAAWqhB,GACxB,kBAACK,GAAA,EAAcJ,EACVjU,EAAMrN,YAQ9B8xB,EAAUtS,GAAYlS,UAAU,CAC7ByC,SAAU,SAACC,GAAD,OAtEL,WACb,GAAIuP,EAAMkR,MAAQjR,EAAa,IAAMJ,GAAM5G,OAAS,EAAG,CACnD3J,GAAW,GAEX,IAAMmjB,EAAQ,eAAQvB,GACtBuB,EAASb,uBAAT,eACOV,EAAKU,wBAEZa,EAASR,KAAOnP,SAAS2P,EAASR,MAClCQ,EAASb,uBAAuBC,SAAW/O,SACvC2P,EAASb,uBAAuBC,UAEpCY,EAASb,uBAAuBxC,QAAUtM,SACtC2P,EAASb,uBAAuBxC,SAEpCqD,EAASd,aAAyC,SAA1Bc,EAASd,aACjCloB,KAAI4G,KAAK,cAAe,CACpB6gB,KAAMuB,IAEL9oB,MAAK,WACFP,EACI,MACA,QACA,sBAAS4W,EAAMkR,KAAO,eAAO,gBAC7B,WAEJhR,EAAcD,EAAa,GAC3B3Q,GAAW,MAEd3E,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,YAEjDlB,MAAK,WACF2F,GAAW,WAGnB4Q,EAAcD,EAAa,GAkCNyS,IACjBxB,KAAMA,EACN7hB,QAASA,EACT0iB,OAAQ,SAACthB,GAAD,OAAOyP,EAAcD,EAAa,IAC1CwR,iBAlGa,SAACvnB,GAAD,OAAU,SAACtD,GAChC0rB,EAAQ,2BACDpB,GADA,kBAEFhnB,EAAOtD,EAAMwJ,OAAOpE,WAgGjBiU,WAAYA,EACZ6D,mBA7Fe,SAAC5Z,GAAD,OAAU,SAACtD,GAClC0rB,EAAQ,2BACDpB,GADA,IAEHU,uBAAuB,2BAChBV,EAAKU,wBADU,kBAEjB1nB,EAAOtD,EAAMwJ,OAAOpE,gBCxFrC,IAAMjN,GAAYC,aAAW,SAACJ,GAAD,YAAY,CACrCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJpB,QAAS,CACLD,QAASI,EAAMC,QAAQ,QAIhB,SAAS8zB,KACpB,IAAMnvB,EAAUzE,KAChB,OACI,6BACI,kBAACsN,GAAA,EAAD,CAAO3F,QAAM,EAAC9B,UAAWpB,EAAQ/E,SAC7B,kBAAC2zB,GAAD,QCbhB,IAAMrzB,GAAYC,aAAW,SAACJ,GAAD,YAAY,CACrCd,MAAI,mBACCc,EAAM2B,YAAYC,GAAG,MAAQ,CAC1BX,WAAY,MAFhB,6BAIc,IAJd,GAMJpB,QAAS,CACLD,QAASI,EAAMC,QAAQ,QAIhB,SAAS+zB,KACpB,IAAMpvB,EAAUzE,KACRgI,EAAO6e,cAAP7e,GACR,EAAwBrD,mBAAS,MAAjC,mBAAOwtB,EAAP,KAAaoB,EAAb,KAEMjuB,EAAWC,cACX8E,EAAiB5E,uBACnB,SAAC6E,EAAUC,EAAYC,EAAKtI,GAA5B,OACIoD,EAASmF,aAAeH,EAAUC,EAAYC,EAAKtI,MACvD,CAACoD,IAmBL,OAhBAK,qBAAU,WACN+E,KAAIC,IAAI,eAAiB3C,GACpB4C,MAAK,SAACC,GACHA,EAASC,KAAKooB,KAAOroB,EAASC,KAAKooB,KAAKxf,WACxC7I,EAASC,KAAK+nB,uBAAuBC,SAAWjoB,EAASC,KAAK+nB,uBAAuBC,SAASpf,WAC9F7I,EAASC,KAAK+nB,uBAAuBxC,QAAUxlB,EAASC,KAAK+nB,uBAAuBxC,QAAQ3c,WAC5F7I,EAASC,KAAK8nB,aAAe/nB,EAASC,KAAK8nB,aACrC,OACA,QACNW,EAAQ1oB,EAASC,SAEpBc,OAAM,SAACC,GACJxB,EAAe,MAAO,QAASwB,EAAMC,QAAS,cAEvD,CAAC9D,IAGA,6BACI,kBAACsF,GAAA,EAAD,CAAO3F,QAAM,EAAC9B,UAAWpB,EAAQ/E,SAC5ByyB,GAAQ,kBAACkB,GAAD,CAAWlB,KAAMA,M,yCCf1C,IAAMnyB,GAAYC,aAAW,SAACJ,GAAD,MAAY,CACrCd,KAAM,CACFI,QAAS,QAEbO,QAAS,CACLiC,SAAU,EACVlC,QAAS,EACTiJ,SAAU,GAEd9G,QAAS/B,EAAMkC,OAAOH,YAGpB/B,GAAQi0B,KACV,CACI3xB,QAAS,CACLK,WAAY,KAGpBuxB,SAGW,SAASC,KACpB,IAAMvvB,EAAUzE,KACVkF,EAAUC,cAChB,EAAwBR,oBAAS,GAAjC,mBAAOsvB,EAAP,KAAaC,EAAb,KAgBA,OAdAvuB,qBAAU,WACN,IAAM2F,EAAO6oB,KAAKC,UAClB,GAAI9oB,GAAQA,EAAKic,MACb,OAAsB,IAAlBjc,EAAKic,MAAMvf,QACX9C,EAAQkC,KAAK,cAGjB8sB,GAAQ,GAGZhvB,EAAQkC,KAAK,YAEd,IAGC,kBAAC,IAAMuI,SAAP,KACI,kBAAC0I,GAAA,EAAD,CAAexY,MAAOA,IAClB,yBAAKgG,UAAWpB,EAAQ1F,MACpB,kBAACs1B,EAAA,EAAD,MACA,kBAAC,IAAD,MACCJ,GACG,kBAACzvB,GAAD,CACI9E,QAAS,SAAC4D,GAAD,OACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,SAAkBgxB,OAAK,GAC9B,kBAACnrB,GAAD,OAGJ,kBAAC,IAAD,CAAO7F,KAAI,UAAKA,EAAL,WACP,kBAAC+M,GAAD,OAGJ,kBAAC,IAAD,CAAO/M,KAAI,UAAKA,EAAL,YACP,kBAACmP,GAAD,OAGJ,kBAAC,IAAD,CAAOnP,KAAI,UAAKA,EAAL,UACP,kBAAC,GAAD,OAGJ,kBAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,YACP,kBAACyS,GAAD,OAGJ,kBAAC,IAAD,CAAOzS,KAAI,UAAKA,EAAL,WACP,kBAACsV,GAAD,OAGJ,kBAAC,IAAD,CAAOtV,KAAI,UAAKA,EAAL,WACP,kBAACsX,GAAD,OAGJ,kBAAC,IAAD,CAAOtX,KAAI,UAAKA,EAAL,aACP,kBAACktB,GAAD,OAGJ,kBAAC,IAAD,CAAOltB,KAAI,UAAKA,EAAL,WAAoBgxB,OAAK,GAChC,kBAAC3X,GAAD,OAGJ,kBAAC,IAAD,CACIrZ,KAAI,UAAKA,EAAL,qBACJgxB,OAAK,GAEL,kBAAC,GAAD,OAGJ,kBAAC,IAAD,CACIhxB,KAAI,UAAKA,EAAL,0BACJgxB,OAAK,GAEL,kBAACvN,GAAD,OAGJ,kBAAC,IAAD,CAAOzjB,KAAI,UAAKA,EAAL,UAAmBgxB,OAAK,GAC/B,kBAAC,GAAD,OAGJ,kBAAC,IAAD,CAAOhxB,KAAI,UAAKA,EAAL,cAAuBgxB,OAAK,GACnC,kBAAChN,GAAD,OAGJ,kBAAC,IAAD,CACIhkB,KAAI,UAAKA,EAAL,mBACJgxB,OAAK,GAEL,kBAAC/L,GAAD,OAGJ,kBAAC,IAAD,CAAOjlB,KAAI,UAAKA,EAAL,SAAkBgxB,OAAK,GAC9B,kBAAC,GAAD,OAGJ,kBAAC,IAAD,CAAOhxB,KAAI,UAAKA,EAAL,aAAsBgxB,OAAK,GAClC,kBAAClJ,GAAD,OAGJ,kBAAC,IAAD,CAAO9nB,KAAI,UAAKA,EAAL,kBAA2BgxB,OAAK,GACvC,kBAAC5I,GAAD,OAGJ,kBAAC,IAAD,CAAOpoB,KAAI,UAAKA,EAAL,SAAkBgxB,OAAK,GAC9B,kBAACxI,GAAD,OAGJ,kBAAC,IAAD,CAAOxoB,KAAI,UAAKA,EAAL,gBAAyBgxB,OAAK,GACrC,kBAAChG,GAAD,OAGJ,kBAAC,IAAD,CAAOhrB,KAAI,UAAKA,EAAL,UAAmBgxB,OAAK,GAC/B,kBAAC,GAAD,OAGJ,kBAAC,IAAD,CAAOhxB,KAAI,UAAKA,EAAL,aAAsBgxB,OAAK,GAClC,kBAAClH,GAAD,OAGJ,kBAAC,IAAD,CAAO9pB,KAAI,UAAKA,EAAL,SAAkBgxB,OAAK,GAC9B,kBAAC1G,GAAD,OAGJ,kBAAC,IAAD,CAAOtqB,KAAI,UAAKA,EAAL,SAAkBgxB,OAAK,GAC9B,kBAAC9C,GAAD,OAGJ,kBAAC,IAAD,CAAOluB,KAAI,UAAKA,EAAL,aAAsBgxB,OAAK,GAClC,kBAACV,GAAD,OAGJ,kBAAC,IAAD,CAAOtwB,KAAI,UAAKA,EAAL,kBAA2BgxB,OAAK,GACvC,kBAACT,GAAD","file":"static/js/9.80b4a82b.chunk.js","sourcesContent":["import { withStyles } from \"@material-ui/core\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n    Assignment,\r\n    Category,\r\n    CloudDownload,\r\n    Contacts,\r\n    Group,\r\n    Home,\r\n    Image,\r\n    InsertDriveFile,\r\n    Language,\r\n    ListAlt,\r\n    Mail,\r\n    Palette,\r\n    Person,\r\n    Settings,\r\n    SettingsEthernet,\r\n    Share,\r\n    Storage,\r\n    Contactless,\r\n} from \"@material-ui/icons\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport clsx from \"clsx\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\r\nimport pathHelper from \"../../utils/page\";\r\nimport UserAvatar from \"../Navbar/UserAvatar\";\r\n\r\nconst ExpansionPanel = withStyles({\r\n    root: {\r\n        maxWidth: \"100%\",\r\n        boxShadow: \"none\",\r\n        \"&:not(:last-child)\": {\r\n            borderBottom: 0,\r\n        },\r\n        \"&:before\": {\r\n            display: \"none\",\r\n        },\r\n        \"&$expanded\": { margin: 0 },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanel);\r\n\r\nconst ExpansionPanelSummary = withStyles({\r\n    root: {\r\n        minHeight: 0,\r\n        padding: 0,\r\n\r\n        \"&$expanded\": {\r\n            minHeight: 0,\r\n        },\r\n    },\r\n    content: {\r\n        maxWidth: \"100%\",\r\n        margin: 0,\r\n        display: \"block\",\r\n        \"&$expanded\": {\r\n            margin: \"0\",\r\n        },\r\n    },\r\n    expanded: {},\r\n})(MuiExpansionPanelSummary);\r\n\r\nconst ExpansionPanelDetails = withStyles((theme) => ({\r\n    root: {\r\n        display: \"block\",\r\n        padding: theme.spacing(0),\r\n    },\r\n}))(MuiExpansionPanelDetails);\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: \"nowrap\",\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: \"hidden\",\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: theme.spacing(9) + 1,\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    toolbar: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    sub: {\r\n        paddingLeft: 36,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    subMenu: {\r\n        backgroundColor: theme.palette.background.default,\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n    },\r\n    active: {\r\n        backgroundColor: lighten(theme.palette.primary.main, 0.8),\r\n        color: theme.palette.primary.main,\r\n        \"&:hover\": {\r\n            backgroundColor: lighten(theme.palette.primary.main, 0.7),\r\n        },\r\n    },\r\n    activeText: {\r\n        fontWeight: 500,\r\n    },\r\n    activeIcon: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\nconst items = [\r\n    {\r\n        title: \"面板首页\",\r\n        icon: <Home />,\r\n        path: \"home\",\r\n    },\r\n    {\r\n        title: \"参数设置\",\r\n        icon: <Settings />,\r\n        sub: [\r\n            {\r\n                title: \"站点信息\",\r\n                path: \"basic\",\r\n                icon: <Language />,\r\n            },\r\n            {\r\n                title: \"注册与登录\",\r\n                path: \"access\",\r\n                icon: <Contacts />,\r\n            },\r\n            {\r\n                title: \"邮件\",\r\n                path: \"mail\",\r\n                icon: <Mail />,\r\n            },\r\n            {\r\n                title: \"传输与通信\",\r\n                path: \"upload\",\r\n                icon: <SettingsEthernet />,\r\n            },\r\n            {\r\n                title: \"外观\",\r\n                path: \"theme\",\r\n                icon: <Palette />,\r\n            },\r\n            {\r\n                title: \"图像与预览\",\r\n                path: \"image\",\r\n                icon: <Image />,\r\n            },\r\n            {\r\n                title: \"验证码\",\r\n                path: \"captcha\",\r\n                icon: <Category />,\r\n            },\r\n        ],\r\n    },\r\n    {\r\n        title: \"存储策略\",\r\n        icon: <Storage />,\r\n        path: \"policy\",\r\n    },\r\n    {\r\n        title: \"离线下载节点\",\r\n        icon: <Contactless />,\r\n        path: \"node\",\r\n    },\r\n    {\r\n        title: \"用户组\",\r\n        icon: <Group />,\r\n        path: \"group\",\r\n    },\r\n    {\r\n        title: \"用户\",\r\n        icon: <Person />,\r\n        path: \"user\",\r\n    },\r\n    {\r\n        title: \"文件\",\r\n        icon: <InsertDriveFile />,\r\n        path: \"file\",\r\n    },\r\n    {\r\n        title: \"分享\",\r\n        icon: <Share />,\r\n        path: \"share\",\r\n    },\r\n    {\r\n        title: \"持久任务\",\r\n        icon: <Assignment />,\r\n        sub: [\r\n            {\r\n                title: \"离线下载\",\r\n                path: \"download\",\r\n                icon: <CloudDownload />,\r\n            },\r\n            {\r\n                title: \"常规任务\",\r\n                path: \"task\",\r\n                icon: <ListAlt />,\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\nexport default function Dashboard({ content }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(!pathHelper.isMobile());\r\n    const [menuOpen, setMenuOpen] = useState(null);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const SetSubTitle = useCallback(\r\n        (title) => dispatch(changeSubTitle(title)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        SetSubTitle(\"仪表盘\");\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            SetSubTitle();\r\n        };\r\n    }, []);\r\n\r\n    const { path } = useRouteMatch();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, {\r\n                            [classes.hide]: open,\r\n                        })}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title} noWrap>\r\n                        Cloudreve 仪表盘\r\n                    </Typography>\r\n                    <UserAvatar />\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <div className={classes.toolbar}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === \"rtl\" ? (\r\n                            <ChevronRightIcon />\r\n                        ) : (\r\n                            <ChevronLeftIcon />\r\n                        )}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List className={classes.noPadding}>\r\n                    {items.map((item) => {\r\n                        if (item.path !== undefined) {\r\n                            return (\r\n                                <ListItem\r\n                                    onClick={() =>\r\n                                        history.push(\"/admin/\" + item.path)\r\n                                    }\r\n                                    button\r\n                                    className={clsx({\r\n                                        [classes.active]: location.pathname.startsWith(\r\n                                            \"/admin/\" + item.path\r\n                                        ),\r\n                                    })}\r\n                                    key={item.title}\r\n                                >\r\n                                    <ListItemIcon\r\n                                        className={clsx({\r\n                                            [classes.activeIcon]: location.pathname.startsWith(\r\n                                                \"/admin/\" + item.path\r\n                                            ),\r\n                                        })}\r\n                                    >\r\n                                        {item.icon}\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        className={clsx({\r\n                                            [classes.activeText]: location.pathname.startsWith(\r\n                                                \"/admin/\" + item.path\r\n                                            ),\r\n                                        })}\r\n                                        primary={item.title}\r\n                                    />\r\n                                </ListItem>\r\n                            );\r\n                        }\r\n                        return (\r\n                            <ExpansionPanel\r\n                                key={item.title}\r\n                                square\r\n                                expanded={menuOpen === item.title}\r\n                                onChange={(event, isExpanded) => {\r\n                                    setMenuOpen(isExpanded ? item.title : null);\r\n                                }}\r\n                            >\r\n                                <ExpansionPanelSummary\r\n                                    aria-controls=\"panel1d-content\"\r\n                                    id=\"panel1d-header\"\r\n                                >\r\n                                    <ListItem button key={item.title}>\r\n                                        <ListItemIcon>{item.icon}</ListItemIcon>\r\n                                        <ListItemText primary={item.title} />\r\n                                    </ListItem>\r\n                                </ExpansionPanelSummary>\r\n                                <ExpansionPanelDetails>\r\n                                    <List className={classes.subMenu}>\r\n                                        {item.sub.map((sub) => (\r\n                                            <ListItem\r\n                                                onClick={() =>\r\n                                                    history.push(\r\n                                                        \"/admin/\" + sub.path\r\n                                                    )\r\n                                                }\r\n                                                className={clsx({\r\n                                                    [classes.sub]: open,\r\n                                                    [classes.active]: location.pathname.startsWith(\r\n                                                        \"/admin/\" + sub.path\r\n                                                    ),\r\n                                                })}\r\n                                                button\r\n                                                key={sub.title}\r\n                                            >\r\n                                                <ListItemIcon\r\n                                                    className={clsx({\r\n                                                        [classes.activeIcon]: location.pathname.startsWith(\r\n                                                            \"/admin/\" + sub.path\r\n                                                        ),\r\n                                                    })}\r\n                                                >\r\n                                                    {sub.icon}\r\n                                                </ListItemIcon>\r\n                                                <ListItemText\r\n                                                    primary={sub.title}\r\n                                                />\r\n                                            </ListItem>\r\n                                        ))}\r\n                                    </List>\r\n                                </ExpansionPanelDetails>\r\n                            </ExpansionPanel>\r\n                        );\r\n                    })}\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                {content(path)}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { blue, green, red, yellow } from \"@material-ui/core/colors\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n    Description,\r\n    Favorite,\r\n    FileCopy,\r\n    Forum,\r\n    GitHub,\r\n    Home,\r\n    Launch,\r\n    Lock,\r\n    People,\r\n    Public,\r\n    Telegram,\r\n} from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n    CartesianGrid,\r\n    Legend,\r\n    Line,\r\n    LineChart,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis,\r\n} from \"recharts\";\r\nimport { ResponsiveContainer } from \"recharts/lib/component/ResponsiveContainer\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport { toggleSnackbar } from \"../../actions\";\r\nimport API from \"../../middleware/Api\";\r\nimport pathHelper from \"../../utils/page\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        height: \"100%\",\r\n    },\r\n    logo: {\r\n        width: 70,\r\n    },\r\n    logoContainer: {\r\n        padding: theme.spacing(3),\r\n        display: \"flex\",\r\n    },\r\n    title: {\r\n        marginLeft: 16,\r\n    },\r\n    cloudreve: {\r\n        fontSize: 25,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    version: {\r\n        color: theme.palette.text.hint,\r\n    },\r\n    links: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    iconRight: {\r\n        minWidth: 0,\r\n    },\r\n    userIcon: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n    },\r\n    fileIcon: {\r\n        backgroundColor: yellow[100],\r\n        color: yellow[800],\r\n    },\r\n    publicIcon: {\r\n        backgroundColor: green[100],\r\n        color: green[800],\r\n    },\r\n    secretIcon: {\r\n        backgroundColor: red[100],\r\n        color: red[800],\r\n    },\r\n}));\r\n\r\nexport default function Index() {\r\n    const classes = useStyles();\r\n    const [lineData, setLineData] = useState([]);\r\n    const [news, setNews] = useState([]);\r\n    const [newsUsers, setNewsUsers] = useState({});\r\n    const [open, setOpen] = React.useState(false);\r\n    const [siteURL, setSiteURL] = React.useState(\"\");\r\n    const [statistics, setStatistics] = useState({\r\n        fileTotal: 0,\r\n        userTotal: 0,\r\n        publicShareTotal: 0,\r\n        secretShareTotal: 0,\r\n    });\r\n    const [version, setVersion] = useState({\r\n        backend: \"-\",\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const ResetSiteURL = () => {\r\n        setOpen(false);\r\n        API.patch(\"/admin/setting\", {\r\n            options: [\r\n                {\r\n                    key: \"siteURL\",\r\n                    value: window.location.origin,\r\n                },\r\n            ],\r\n        })\r\n            .then(() => {\r\n                setSiteURL(window.location.origin);\r\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        API.get(\"/admin/summary\")\r\n            .then((response) => {\r\n                const data = [];\r\n                response.data.date.forEach((v, k) => {\r\n                    data.push({\r\n                        name: v,\r\n                        file: response.data.files[k],\r\n                        user: response.data.users[k],\r\n                        share: response.data.shares[k],\r\n                    });\r\n                });\r\n                setLineData(data);\r\n                setStatistics({\r\n                    fileTotal: response.data.fileTotal,\r\n                    userTotal: response.data.userTotal,\r\n                    publicShareTotal: response.data.publicShareTotal,\r\n                    secretShareTotal: response.data.secretShareTotal,\r\n                });\r\n                setVersion(response.data.version);\r\n                setSiteURL(response.data.siteURL);\r\n                if (\r\n                    response.data.siteURL === \"\" ||\r\n                    response.data.siteURL !== window.location.origin\r\n                ) {\r\n                    setOpen(true);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n\r\n        axios\r\n            .get(\"/api/v3/admin/news\")\r\n            .then((response) => {\r\n                setNews(response.data.data);\r\n                const res = {};\r\n                response.data.included.forEach((v) => {\r\n                    if (v.type === \"users\") {\r\n                        res[v.id] = v.attributes;\r\n                    }\r\n                });\r\n                setNewsUsers(res);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n            <Dialog\r\n                open={open}\r\n                onClose={() => setOpen(false)}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"确定站点URL设置\"}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Typography>\r\n                            {siteURL === \"\" &&\r\n                                \"您尚未设定站点URL，是否要将其设定为当前的 \" +\r\n                                    window.location.origin +\r\n                                    \" ?\"}\r\n                            {siteURL !== \"\" &&\r\n                                \"您设置的站点URL与当前实际不一致，是否要将其设定为当前的 \" +\r\n                                    window.location.origin +\r\n                                    \" ?\"}\r\n                        </Typography>\r\n                        <Typography>\r\n                            此设置非常重要，请确保其与您站点的实际地址一致。你可以在\r\n                            参数设置 - 站点信息 中更改此设置。\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setOpen(false)} color=\"default\">\r\n                        忽略\r\n                    </Button>\r\n                    <Button onClick={() => ResetSiteURL()} color=\"primary\">\r\n                        更改\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Grid alignContent={\"stretch\"} item xs={12} md={8} lg={9}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                        趋势\r\n                    </Typography>\r\n                    <ResponsiveContainer\r\n                        width=\"100%\"\r\n                        aspect={pathHelper.isMobile() ? 4.0 / 3.0 : 3.0 / 1.0}\r\n                    >\r\n                        <LineChart width={1200} height={300} data={lineData}>\r\n                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                            <XAxis dataKey=\"name\" />\r\n                            <YAxis />\r\n                            <Tooltip />\r\n                            <Legend />\r\n                            <Line\r\n                                name={\"文件\"}\r\n                                type=\"monotone\"\r\n                                dataKey=\"file\"\r\n                                stroke=\"#3f51b5\"\r\n                            />\r\n                            <Line\r\n                                name={\"用户\"}\r\n                                type=\"monotone\"\r\n                                dataKey=\"user\"\r\n                                stroke=\"#82ca9d\"\r\n                            />\r\n                            <Line\r\n                                name={\"分享\"}\r\n                                type=\"monotone\"\r\n                                dataKey=\"share\"\r\n                                stroke=\"#e91e63\"\r\n                            />\r\n                        </LineChart>\r\n                    </ResponsiveContainer>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={4} lg={3}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                        总计\r\n                    </Typography>\r\n                    <Divider />\r\n                    <List className={classes.root}>\r\n                        <ListItem>\r\n                            <ListItemAvatar>\r\n                                <Avatar className={classes.userIcon}>\r\n                                    <People />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={statistics.userTotal}\r\n                                secondary=\"注册用户\"\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListItemAvatar>\r\n                                <Avatar className={classes.fileIcon}>\r\n                                    <FileCopy />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={statistics.fileTotal}\r\n                                secondary=\"文件总数\"\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListItemAvatar>\r\n                                <Avatar className={classes.publicIcon}>\r\n                                    <Public />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={statistics.publicShareTotal}\r\n                                secondary=\"公开分享总数\"\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <ListItemAvatar>\r\n                                <Avatar className={classes.secretIcon}>\r\n                                    <Lock />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                                primary={statistics.secretShareTotal}\r\n                                secondary=\"私密分享总数\"\r\n                            />\r\n                        </ListItem>\r\n                    </List>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={4} lg={3}>\r\n                <Paper>\r\n                    <div className={classes.logoContainer}>\r\n                        <img\r\n                            alt=\"cloudreve\"\r\n                            className={classes.logo}\r\n                            src={\"/static/img/cloudreve.svg\"}\r\n                        />\r\n                        <div className={classes.title}>\r\n                            <Typography className={classes.cloudreve}>\r\n                                Cloudreve\r\n                            </Typography>\r\n                            <Typography className={classes.version}>\r\n                                {version.backend}{\" \"}\r\n                                {version.is_pro === \"true\" && (\r\n                                    <Chip size=\"small\" label=\"Pro\" />\r\n                                )}\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n                    <Divider />\r\n                    <div>\r\n                        <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    window.open(\"https://cloudreve.org\")\r\n                                }\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <Home />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"主页\" />\r\n                                <ListItemIcon className={classes.iconRight}>\r\n                                    <Launch />\r\n                                </ListItemIcon>\r\n                            </ListItem>\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    window.open(\r\n                                        \"https://github.com/cloudreve/cloudreve\"\r\n                                    )\r\n                                }\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <GitHub />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"GitHub\" />\r\n                                <ListItemIcon className={classes.iconRight}>\r\n                                    <Launch />\r\n                                </ListItemIcon>\r\n                            </ListItem>\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    window.open(\"https://docs.cloudreve.org/\")\r\n                                }\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <Description />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"文档\" />\r\n                                <ListItemIcon className={classes.iconRight}>\r\n                                    <Launch />\r\n                                </ListItemIcon>\r\n                            </ListItem>\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    window.open(\"https://forum.cloudreve.org\")\r\n                                }\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <Forum />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"讨论社区\" />\r\n                                <ListItemIcon className={classes.iconRight}>\r\n                                    <Launch />\r\n                                </ListItemIcon>\r\n                            </ListItem>\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    window.open(\r\n                                        \"https://t.me/cloudreve_official\"\r\n                                    )\r\n                                }\r\n                            >\r\n                                <ListItemIcon>\r\n                                    <Telegram />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Telegram 群组\" />\r\n                                <ListItemIcon className={classes.iconRight}>\r\n                                    <Launch />\r\n                                </ListItemIcon>\r\n                            </ListItem>\r\n                            <ListItem\r\n                                button\r\n                                onClick={() =>\r\n                                    window.open(\r\n                                        \"https://docs.cloudreve.org/use/pro/jie-shao\"\r\n                                    )\r\n                                }\r\n                            >\r\n                                <ListItemIcon style={{ color: \"#ff789d\" }}>\r\n                                    <Favorite />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"升级到捐助版\" />\r\n                                <ListItemIcon className={classes.iconRight}>\r\n                                    <Launch />\r\n                                </ListItemIcon>\r\n                            </ListItem>\r\n                        </List>\r\n                    </div>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={8} lg={9}>\r\n                <Paper className={classes.paper}>\r\n                    <List>\r\n                        {news &&\r\n                            news.map((v) => (\r\n                                <>\r\n                                    <ListItem\r\n                                        button\r\n                                        alignItems=\"flex-start\"\r\n                                        onClick={() =>\r\n                                            window.open(\r\n                                                \"https://forum.cloudreve.org/d/\" +\r\n                                                    v.id\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <ListItemAvatar>\r\n                                            <Avatar\r\n                                                alt=\"Travis Howard\"\r\n                                                src={\r\n                                                    newsUsers[\r\n                                                        v.relationships\r\n                                                            .startUser.data.id\r\n                                                    ] &&\r\n                                                    newsUsers[\r\n                                                        v.relationships\r\n                                                            .startUser.data.id\r\n                                                    ].avatarUrl\r\n                                                }\r\n                                            />\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={v.attributes.title}\r\n                                            secondary={\r\n                                                <React.Fragment>\r\n                                                    <Typography\r\n                                                        component=\"span\"\r\n                                                        variant=\"body2\"\r\n                                                        className={\r\n                                                            classes.inline\r\n                                                        }\r\n                                                        color=\"textPrimary\"\r\n                                                    >\r\n                                                        {newsUsers[\r\n                                                            v.relationships\r\n                                                                .startUser.data\r\n                                                                .id\r\n                                                        ] &&\r\n                                                            newsUsers[\r\n                                                                v.relationships\r\n                                                                    .startUser\r\n                                                                    .data.id\r\n                                                            ].username}{\" \"}\r\n                                                    </Typography>\r\n                                                    发表于{\" \"}\r\n                                                    <TimeAgo\r\n                                                        datetime={\r\n                                                            v.attributes\r\n                                                                .startTime\r\n                                                        }\r\n                                                        locale=\"zh_CN\"\r\n                                                    />\r\n                                                </React.Fragment>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                    <Divider />\r\n                                </>\r\n                            ))}\r\n                    </List>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport API from \"../../../middleware/Api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function SiteInformation() {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [options, setOptions] = useState({\r\n        siteURL: \"\",\r\n        siteName: \"\",\r\n        siteTitle: \"\",\r\n        siteDes: \"\",\r\n        siteICPId: \"\",\r\n        siteScript: \"\",\r\n        pwa_small_icon: \"\",\r\n        pwa_medium_icon: \"\",\r\n        pwa_large_icon: \"\",\r\n        pwa_display: \"\",\r\n        pwa_theme_color: \"\",\r\n        pwa_background_color: \"\",\r\n    });\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: Object.keys(options),\r\n        })\r\n            .then((response) => {\r\n                setOptions(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        基本信息\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    主标题\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.siteName}\r\n                                    onChange={handleChange(\"siteName\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    站点的主标题\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    副标题\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.siteTitle}\r\n                                    onChange={handleChange(\"siteTitle\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    站点的副标题\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    站点描述\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.siteDes}\r\n                                    onChange={handleChange(\"siteDes\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    站点描述信息，可能会在分享页面摘要内展示\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    站点URL\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"url\"}\r\n                                    value={options.siteURL}\r\n                                    onChange={handleChange(\"siteURL\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    非常重要，请确保与实际情况一致。使用云存储策略、支付平台时，请填入可以被外网访问的地址。\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    网站备案号\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.siteICPId}\r\n                                    onChange={handleChange(\"siteICPId\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    工信部网站ICP备案号\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    页脚代码\r\n                                </InputLabel>\r\n                                <Input\r\n                                    multiline\r\n                                    value={options.siteScript}\r\n                                    onChange={handleChange(\"siteScript\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    在页面底部插入的自定义HTML代码\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        渐进式应用 (PWA)\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    小图标\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.pwa_small_icon}\r\n                                    onChange={handleChange(\"pwa_small_icon\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    扩展名为 ico 的小图标地址\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    中图标\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.pwa_medium_icon}\r\n                                    onChange={handleChange(\"pwa_medium_icon\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    192x192 的中等图标地址，png 格式\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    大图标\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.pwa_large_icon}\r\n                                    onChange={handleChange(\"pwa_large_icon\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    512x512 的大图标地址，png 格式\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    展示模式\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={options.pwa_display}\r\n                                    onChange={handleChange(\"pwa_display\")}\r\n                                >\r\n                                    <MenuItem value={\"fullscreen\"}>\r\n                                        fullscreen\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"standalone\"}>\r\n                                        standalone\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"minimal-ui\"}>\r\n                                        minimal-ui\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"browser\"}>\r\n                                        browser\r\n                                    </MenuItem>\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    PWA 应用添加后的展示模式\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    主题色\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.pwa_theme_color}\r\n                                    onChange={handleChange(\"pwa_theme_color\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    CSS 色值，影响 PWA\r\n                                    启动画面上状态栏、内容页中状态栏、地址栏的颜色\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    背景色\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.pwa_background_color}\r\n                                    onChange={handleChange(\r\n                                        \"pwa_background_color\"\r\n                                    )}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    CSS 色值\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        保存\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\n\r\nexport default function AlertDialog({ title, msg, open, onClose }) {\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    <Typography>{msg}</Typography>\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose} color=\"primary\">\r\n                    知道了\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport API from \"../../../middleware/Api\";\r\nimport AlertDialog from \"../Dialogs/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Access() {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [options, setOptions] = useState({\r\n        register_enabled: \"1\",\r\n        default_group: \"1\",\r\n        email_active: \"0\",\r\n        login_captcha: \"0\",\r\n        reg_captcha: \"0\",\r\n        forget_captcha: \"0\",\r\n        authn_enabled: \"0\",\r\n    });\r\n    const [siteURL, setSiteURL] = useState(\"\");\r\n    const [groups, setGroups] = useState([]);\r\n    const [httpAlert, setHttpAlert] = useState(false);\r\n\r\n    const handleChange = (name) => (event) => {\r\n        let value = event.target.value;\r\n        if (event.target.checked !== undefined) {\r\n            value = event.target.checked ? \"1\" : \"0\";\r\n        }\r\n        setOptions({\r\n            ...options,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleInputChange = (name) => (event) => {\r\n        const value = event.target.value;\r\n        setOptions({\r\n            ...options,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: [...Object.keys(options), \"siteURL\"],\r\n        })\r\n            .then((response) => {\r\n                setSiteURL(response.data.siteURL);\r\n                delete response.data.siteURL;\r\n                setOptions(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n\r\n        API.get(\"/admin/groups\")\r\n            .then((response) => {\r\n                setGroups(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AlertDialog\r\n                title={\"提示\"}\r\n                msg={\r\n                    \"Web Authn 需要您的站点启用 HTTPS，并确认 参数设置 - 站点信息 - 站点URL 也使用了 HTTPS 后才能开启。\"\r\n                }\r\n                onClose={() => setHttpAlert(false)}\r\n                open={httpAlert}\r\n            />\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        注册与登录\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.register_enabled === \"1\"\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"register_enabled\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"允许新用户注册\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    关闭后，无法再通过前台注册新的用户\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.email_active === \"1\"\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"email_active\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"邮件激活\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    开启后，新用户注册需要点击邮件中的激活链接才能完成。请确认邮件发送设置是否正确，否则激活邮件无法送达\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.reg_captcha === \"1\"\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"reg_captcha\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"注册验证码\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    是否启用注册表单验证码\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.login_captcha === \"1\"\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"login_captcha\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"登录验证码\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    是否启用登录表单验证码\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.forget_captcha === \"1\"\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"forget_captcha\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"找回密码验证码\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    是否启用找回密码表单验证码\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.authn_enabled === \"1\"\r\n                                            }\r\n                                            onChange={(e) => {\r\n                                                if (\r\n                                                    !siteURL.startsWith(\r\n                                                        \"https://\"\r\n                                                    )\r\n                                                ) {\r\n                                                    setHttpAlert(true);\r\n                                                    return;\r\n                                                }\r\n                                                handleChange(\"authn_enabled\")(\r\n                                                    e\r\n                                                );\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                                    label=\"Web Authn\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    是否允许用户使用绑定的外部验证器登录，站点必须启动\r\n                                    HTTPS 才能使用。\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    默认用户组\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={options.default_group}\r\n                                    onChange={handleInputChange(\r\n                                        \"default_group\"\r\n                                    )}\r\n                                    required\r\n                                >\r\n                                    {groups.map((v) => {\r\n                                        if (v.ID === 3) {\r\n                                            return null;\r\n                                        }\r\n                                        return (\r\n                                            <MenuItem\r\n                                                key={v.ID}\r\n                                                value={v.ID.toString()}\r\n                                            >\r\n                                                {v.Name}\r\n                                            </MenuItem>\r\n                                        );\r\n                                    })}\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用户注册后的初始用户组\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        保存\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport API from \"../../../middleware/Api\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    buttonMargin: {\r\n        marginLeft: 8,\r\n    },\r\n}));\r\n\r\nexport default function Mail() {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [test, setTest] = useState(false);\r\n    const [tesInput, setTestInput] = useState(\"\");\r\n    const [options, setOptions] = useState({\r\n        fromName: \"\",\r\n        fromAdress: \"\",\r\n        smtpHost: \"\",\r\n        smtpPort: \"\",\r\n        replyTo: \"\",\r\n        smtpUser: \"\",\r\n        smtpPass: \"\",\r\n        smtpEncryption: \"\",\r\n        mail_keepalive: \"30\",\r\n        mail_activation_template: \"\",\r\n        mail_reset_pwd_template: \"\",\r\n    });\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleCheckChange = (name) => (event) => {\r\n        let value = event.target.value;\r\n        if (event.target.checked !== undefined) {\r\n            value = event.target.checked ? \"1\" : \"0\";\r\n        }\r\n        setOptions({\r\n            ...options,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: Object.keys(options),\r\n        })\r\n            .then((response) => {\r\n                setOptions(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const sendTestMail = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/mailTest\", {\r\n            to: tesInput,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"测试邮件已发送\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const reload = () => {\r\n        API.get(\"/admin/reload/email\")\r\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n            .then(() => {})\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n            .then(() => {});\r\n    };\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\r\n                reload();\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={test}\r\n                onClose={() => setTest(false)}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">发件测试</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Typography>\r\n                            发送测试邮件前，请先保存已更改的邮件设置；\r\n                        </Typography>\r\n                        <Typography>\r\n                            邮件发送结果不会立即反馈，如果您长时间未收到测试邮件，请检查\r\n                            Cloudreve 在终端输出的错误日志。\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"收件人地址\"\r\n                        value={tesInput}\r\n                        onChange={(e) => setTestInput(e.target.value)}\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setTest(false)} color=\"default\">\r\n                        取消\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => sendTestMail()}\r\n                        disabled={loading}\r\n                        color=\"primary\"\r\n                    >\r\n                        发送\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        发信\r\n                    </Typography>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    发件人名\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.fromName}\r\n                                    onChange={handleChange(\"fromName\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    邮件中展示的发件人姓名\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    发件人邮箱\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"email\"}\r\n                                    required\r\n                                    value={options.fromAdress}\r\n                                    onChange={handleChange(\"fromAdress\")}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    发件邮箱的地址\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    SMTP 服务器\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.smtpHost}\r\n                                    onChange={handleChange(\"smtpHost\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    发件服务器地址，不含端口号\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    SMTP 端口\r\n                                </InputLabel>\r\n                                <Input\r\n                                    inputProps={{ min: 1, step: 1 }}\r\n                                    type={\"number\"}\r\n                                    value={options.smtpPort}\r\n                                    onChange={handleChange(\"smtpPort\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    发件服务器地址端口号\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    SMTP 用户名\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.smtpUser}\r\n                                    onChange={handleChange(\"smtpUser\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    发信邮箱用户名，一般与邮箱地址相同\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    SMTP 密码\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"password\"}\r\n                                    value={options.smtpPass}\r\n                                    onChange={handleChange(\"smtpPass\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    发信邮箱密码\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    回信邮箱\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.replyTo}\r\n                                    onChange={handleChange(\"replyTo\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用户回复系统发送的邮件时，用于接收回信的邮箱\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.smtpEncryption === \"1\"\r\n                                            }\r\n                                            onChange={handleCheckChange(\r\n                                                \"smtpEncryption\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"强制使用 SSL 连接\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    是否强制使用 SSL\r\n                                    加密连接。如果无法发送邮件，可关闭此项，\r\n                                    Cloudreve 会尝试使用 STARTTLS\r\n                                    并决定是否使用加密连接\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    SMTP 连接有效期 (秒)\r\n                                </InputLabel>\r\n                                <Input\r\n                                    inputProps={{ min: 1, step: 1 }}\r\n                                    type={\"number\"}\r\n                                    value={options.mail_keepalive}\r\n                                    onChange={handleChange(\"mail_keepalive\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    有效期内建立的 SMTP\r\n                                    连接会被新邮件发送请求复用\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        邮件模板\r\n                    </Typography>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    新用户激活\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.mail_activation_template}\r\n                                    onChange={handleChange(\r\n                                        \"mail_activation_template\"\r\n                                    )}\r\n                                    multiline\r\n                                    rowsMax=\"10\"\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    新用户注册后激活邮件的模板\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    重置密码\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.mail_reset_pwd_template}\r\n                                    onChange={handleChange(\r\n                                        \"mail_reset_pwd_template\"\r\n                                    )}\r\n                                    multiline\r\n                                    rowsMax=\"10\"\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    密码重置邮件模板\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        保存\r\n                    </Button>\r\n                    {\"   \"}\r\n                    <Button\r\n                        className={classes.buttonMargin}\r\n                        variant={\"outlined\"}\r\n                        color={\"primary\"}\r\n                        onClick={() => setTest(true)}\r\n                    >\r\n                        发送测试邮件\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\n\r\nconst unitTransform = (v) => {\r\n    if (v < 1024) {\r\n        return [Math.round(v), 1];\r\n    }\r\n    if (v < 1024 * 1024) {\r\n        return [Math.round(v / 1024), 1024];\r\n    }\r\n    if (v < 1024 * 1024 * 1024) {\r\n        return [Math.round(v / (1024 * 1024)), 1024 * 1024];\r\n    }\r\n    if (v < 1024 * 1024 * 1024 * 1024) {\r\n        return [Math.round(v / (1024 * 1024 * 1024)), 1024 * 1024 * 1024];\r\n    }\r\n    return [\r\n        Math.round(v / (1024 * 1024 * 1024 * 1024)),\r\n        1024 * 1024 * 1024 * 1024,\r\n    ];\r\n};\r\n\r\nexport default function SizeInput({\r\n    onChange,\r\n    min,\r\n    value,\r\n    required,\r\n    label,\r\n    max,\r\n    suffix,\r\n}) {\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const [unit, setUnit] = useState(1);\r\n    let first = true;\r\n\r\n    const transform = useCallback(() => {\r\n        const res = unitTransform(value);\r\n        if (first && value !== 0) {\r\n            setUnit(res[1]);\r\n            first = false;\r\n        }\r\n        return res;\r\n    }, [value]);\r\n\r\n    return (\r\n        <FormControl>\r\n            <InputLabel htmlFor=\"component-helper\">{label}</InputLabel>\r\n            <Input\r\n                style={{ width: 200 }}\r\n                value={transform()[0]}\r\n                type={\"number\"}\r\n                inputProps={{ min: min, step: 1 }}\r\n                onChange={(e) => {\r\n                    if (e.target.value * unit < max) {\r\n                        onChange({\r\n                            target: {\r\n                                value: (e.target.value * unit).toString(),\r\n                            },\r\n                        });\r\n                    } else {\r\n                        ToggleSnackbar(\r\n                            \"top\",\r\n                            \"right\",\r\n                            \"超出最大尺寸限制\",\r\n                            \"warning\"\r\n                        );\r\n                    }\r\n                }}\r\n                required={required}\r\n                endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={unit}\r\n                            onChange={(e) => {\r\n                                if (transform()[0] * e.target.value < max) {\r\n                                    onChange({\r\n                                        target: {\r\n                                            value: (\r\n                                                transform()[0] * e.target.value\r\n                                            ).toString(),\r\n                                        },\r\n                                    });\r\n                                    setUnit(e.target.value);\r\n                                } else {\r\n                                    ToggleSnackbar(\r\n                                        \"top\",\r\n                                        \"right\",\r\n                                        \"超出最大尺寸限制\",\r\n                                        \"warning\"\r\n                                    );\r\n                                }\r\n                            }}\r\n                        >\r\n                            <MenuItem value={1}>B{suffix && suffix}</MenuItem>\r\n                            <MenuItem value={1024}>\r\n                                KB{suffix && suffix}\r\n                            </MenuItem>\r\n                            <MenuItem value={1024 * 1024}>\r\n                                MB{suffix && suffix}\r\n                            </MenuItem>\r\n                            <MenuItem value={1024 * 1024 * 1024}>\r\n                                GB{suffix && suffix}\r\n                            </MenuItem>\r\n                            <MenuItem value={1024 * 1024 * 1024 * 1024}>\r\n                                TB{suffix && suffix}\r\n                            </MenuItem>\r\n                        </Select>\r\n                    </InputAdornment>\r\n                }\r\n            />\r\n        </FormControl>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport API from \"../../../middleware/Api\";\r\nimport SizeInput from \"../Common/SizeInput\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function UploadDownload() {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [options, setOptions] = useState({\r\n        max_worker_num: \"1\",\r\n        max_parallel_transfer: \"1\",\r\n        temp_path: \"\",\r\n        maxEditSize: \"0\",\r\n        onedrive_chunk_retries: \"0\",\r\n        archive_timeout: \"0\",\r\n        download_timeout: \"0\",\r\n        preview_timeout: \"0\",\r\n        doc_preview_timeout: \"0\",\r\n        upload_credential_timeout: \"0\",\r\n        upload_session_timeout: \"0\",\r\n        slave_api_timeout: \"0\",\r\n        onedrive_monitor_timeout: \"0\",\r\n        share_download_session_timeout: \"0\",\r\n        onedrive_callback_check: \"0\",\r\n        reset_after_upload_failed: \"0\",\r\n        onedrive_source_timeout: \"0\",\r\n        slave_node_retry: \"0\",\r\n        slave_ping_interval: \"0\",\r\n        slave_recover_interval: \"0\",\r\n        slave_transfer_timeout: \"0\",\r\n    });\r\n\r\n    const handleCheckChange = (name) => (event) => {\r\n        const value = event.target.checked ? \"1\" : \"0\";\r\n        setOptions({\r\n            ...options,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: Object.keys(options),\r\n        })\r\n            .then((response) => {\r\n                setOptions(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        存储与传输\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    Worker 数量\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.max_worker_num}\r\n                                    onChange={handleChange(\"max_worker_num\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    任务队列最多并行执行的任务数，保存后需要重启\r\n                                    Cloudreve 生效\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    中转并行传输\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.max_parallel_transfer}\r\n                                    onChange={handleChange(\r\n                                        \"max_parallel_transfer\"\r\n                                    )}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    任务队列中转任务传输时，最大并行协程数\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    临时目录\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.temp_path}\r\n                                    onChange={handleChange(\"temp_path\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用于存放打包下载、解压缩、压缩等任务产生的临时文件的目录路径\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <SizeInput\r\n                                    value={options.maxEditSize}\r\n                                    onChange={handleChange(\"maxEditSize\")}\r\n                                    required\r\n                                    min={0}\r\n                                    max={2147483647}\r\n                                    label={\"文本文件在线编辑大小\"}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    文本文件可在线编辑的最大大小，超出此大小的文件无法在线编辑\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    OneDrive 分片错误重试\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 0,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.onedrive_chunk_retries}\r\n                                    onChange={handleChange(\r\n                                        \"onedrive_chunk_retries\"\r\n                                    )}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    OneDrive\r\n                                    存储策略分片上传失败后重试的最大次数，只适用于服务端上传或中转\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                options.reset_after_upload_failed ===\r\n                                                \"1\"\r\n                                            }\r\n                                            onChange={handleCheckChange(\r\n                                                \"reset_after_upload_failed\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"上传校验失败时强制重置连接\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    开启后，如果本次策略、头像等数据上传校验失败，服务器会强制重置连接\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        有效期 (秒)\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        {[\r\n                            {\r\n                                name: \"打包下载\",\r\n                                field: \"archive_timeout\",\r\n                            },\r\n                            {\r\n                                name: \"下载会话\",\r\n                                field: \"download_timeout\",\r\n                            },\r\n                            {\r\n                                name: \"预览链接\",\r\n                                field: \"preview_timeout\",\r\n                            },\r\n                            {\r\n                                name: \"Office 文档预览连接\",\r\n                                field: \"doc_preview_timeout\",\r\n                            },\r\n                            {\r\n                                name: \"上传凭证\",\r\n                                field: \"upload_credential_timeout\",\r\n                            },\r\n                            {\r\n                                name: \"上传会话\",\r\n                                field: \"upload_session_timeout\",\r\n                                des: \"超出后不再处理此上传的回调请求\",\r\n                            },\r\n                            {\r\n                                name: \"分享下载会话\",\r\n                                field: \"share_download_session_timeout\",\r\n                                des:\r\n                                    \"设定时间内重复下载分享文件，不会被记入总下载次数\",\r\n                            },\r\n                            {\r\n                                name: \"OneDrive 客户端上传监控间隔\",\r\n                                field: \"onedrive_monitor_timeout\",\r\n                                des:\r\n                                    \"每间隔所设定时间，Cloudreve 会向 OneDrive 请求检查客户端上传情况已确保客户端上传可控\",\r\n                            },\r\n                            {\r\n                                name: \"OneDrive 回调等待\",\r\n                                field: \"onedrive_callback_check\",\r\n                                des:\r\n                                    \"OneDrive 客户端上传完成后，等待回调的最大时间，如果超出会被认为上传失败\",\r\n                            },\r\n                            {\r\n                                name: \"OneDrive 下载请求缓存\",\r\n                                field: \"onedrive_source_timeout\",\r\n                                des:\r\n                                    \"OneDrive 获取文件下载 URL 后可将结果缓存，减轻热门文件下载API请求频率\",\r\n                            },\r\n                        ].map((input) => (\r\n                            <div key={input.name} className={classes.form}>\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {input.name}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        type={\"number\"}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1,\r\n                                        }}\r\n                                        value={options[input.field]}\r\n                                        onChange={handleChange(input.field)}\r\n                                        required\r\n                                    />\r\n                                    {input.des && (\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            {input.des}\r\n                                        </FormHelperText>\r\n                                    )}\r\n                                </FormControl>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        节点通信\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        {[\r\n                            {\r\n                                name: \"从机API请求超时（秒）\",\r\n                                field: \"slave_api_timeout\",\r\n                                des: \"主机等待从机API请求响应的超时时间\",\r\n                            },\r\n                            {\r\n                                name: \"节点心跳间隔（秒）\",\r\n                                field: \"slave_ping_interval\",\r\n                                des: \"主机节点向从机节点发送心跳的间隔\",\r\n                            },\r\n                            {\r\n                                name: \"心跳失败重试阈值\",\r\n                                field: \"slave_node_retry\",\r\n                                des:\r\n                                    \"主机向从机发送心跳失败后，主机可最大重试的次数。重试失败后，节点会进入恢复模式\",\r\n                            },\r\n                            {\r\n                                name: \"恢复模式心跳间隔（秒）\",\r\n                                field: \"slave_recover_interval\",\r\n                                des:\r\n                                    \"节点因异常被主机标记为恢复模式后，主机尝试重新连接节点的间隔\",\r\n                            },\r\n                            {\r\n                                name: \"从机中转超时（秒）\",\r\n                                field: \"slave_transfer_timeout\",\r\n                                des: \"从机执行文件中转任务可消耗的最长时间\",\r\n                            },\r\n                        ].map((input) => (\r\n                            <div key={input.name} className={classes.form}>\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        {input.name}\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        type={\"number\"}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1,\r\n                                        }}\r\n                                        value={options[input.field]}\r\n                                        onChange={handleChange(input.field)}\r\n                                        required\r\n                                    />\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        {input.des}\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        保存\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Add, Menu } from \"@material-ui/icons\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { CompactPicker } from \"react-color\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    picker: {\r\n        \"& div\": {\r\n            boxShadow: \"none !important\",\r\n        },\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    \"@global\": {\r\n        \".compact-picker:parent \": {\r\n            boxShadow: \"none !important\",\r\n        },\r\n    },\r\n    statusBar: {\r\n        height: 24,\r\n        width: \"100%\",\r\n    },\r\n    fab: {\r\n        textAlign: \"right\",\r\n    },\r\n}));\r\n\r\nexport default function CreateTheme({ open, onClose, onSubmit }) {\r\n    const classes = useStyles();\r\n    const [theme, setTheme] = useState({\r\n        palette: {\r\n            primary: {\r\n                main: \"#3f51b5\",\r\n                contrastText: \"#fff\",\r\n            },\r\n            secondary: {\r\n                main: \"#d81b60\",\r\n                contrastText: \"#fff\",\r\n            },\r\n        },\r\n    });\r\n\r\n    const subTheme = useCallback(() => {\r\n        return createMuiTheme(theme);\r\n    }, [theme]);\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} fullWidth maxWidth={\"md\"}>\r\n            <DialogContent>\r\n                <Grid container>\r\n                    <Grid spacing={2} md={8} xs={12} container>\r\n                        <Grid md={6} xs={12} item>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                主色调\r\n                            </Typography>\r\n                            <TextField\r\n                                value={theme.palette.primary.main}\r\n                                onChange={(e) => {\r\n                                    setTheme({\r\n                                        ...theme,\r\n                                        palette: {\r\n                                            ...theme.palette,\r\n                                            primary: {\r\n                                                ...theme.palette.primary,\r\n                                                main: e.target.value,\r\n                                            },\r\n                                        },\r\n                                    });\r\n                                }}\r\n                                fullWidth\r\n                            />\r\n                            <div className={classes.picker}>\r\n                                <CompactPicker\r\n                                    colors={[\r\n                                        \"#4D4D4D\",\r\n                                        \"#999999\",\r\n                                        \"#FFFFFF\",\r\n                                        \"#f44336\",\r\n                                        \"#ff9800\",\r\n                                        \"#ffeb3b\",\r\n                                        \"#cddc39\",\r\n                                        \"#A4DD00\",\r\n                                        \"#00bcd4\",\r\n                                        \"#03a9f4\",\r\n                                        \"#AEA1FF\",\r\n                                        \"#FDA1FF\",\r\n                                        \"#333333\",\r\n                                        \"#808080\",\r\n                                        \"#cccccc\",\r\n                                        \"#ff5722\",\r\n                                        \"#ffc107\",\r\n                                        \"#FCC400\",\r\n                                        \"#8bc34a\",\r\n                                        \"#4caf50\",\r\n                                        \"#009688\",\r\n                                        \"#2196f3\",\r\n                                        \"#3f51b5\",\r\n                                        \"#e91e63\",\r\n                                        \"#000000\",\r\n                                        \"#666666\",\r\n                                        \"#B3B3B3\",\r\n                                        \"#9F0500\",\r\n                                        \"#C45100\",\r\n                                        \"#FB9E00\",\r\n                                        \"#808900\",\r\n                                        \"#194D33\",\r\n                                        \"#0C797D\",\r\n                                        \"#0062B1\",\r\n                                        \"#673ab7\",\r\n                                        \"#9c27b0\",\r\n                                    ]}\r\n                                    color={theme.palette.primary.main}\r\n                                    onChangeComplete={(c) => {\r\n                                        setTheme({\r\n                                            ...theme,\r\n                                            palette: {\r\n                                                ...theme.palette,\r\n                                                primary: {\r\n                                                    ...theme.palette.primary,\r\n                                                    main: c.hex,\r\n                                                },\r\n                                            },\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid md={6} xs={12} item>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                辅色调\r\n                            </Typography>\r\n                            <TextField\r\n                                value={theme.palette.secondary.main}\r\n                                onChange={(e) => {\r\n                                    setTheme({\r\n                                        ...theme,\r\n                                        palette: {\r\n                                            ...theme.palette,\r\n                                            secondary: {\r\n                                                ...theme.palette.secondary,\r\n                                                main: e.target.value,\r\n                                            },\r\n                                        },\r\n                                    });\r\n                                }}\r\n                                fullWidth\r\n                            />\r\n                            <div className={classes.picker}>\r\n                                <CompactPicker\r\n                                    colors={[\r\n                                        \"#4D4D4D\",\r\n                                        \"#999999\",\r\n                                        \"#FFFFFF\",\r\n                                        \"#ff1744\",\r\n                                        \"#ff3d00\",\r\n                                        \"#ffeb3b\",\r\n                                        \"#cddc39\",\r\n                                        \"#A4DD00\",\r\n                                        \"#00bcd4\",\r\n                                        \"#00e5ff\",\r\n                                        \"#AEA1FF\",\r\n                                        \"#FDA1FF\",\r\n                                        \"#333333\",\r\n                                        \"#808080\",\r\n                                        \"#cccccc\",\r\n                                        \"#ff5722\",\r\n                                        \"#ffea00\",\r\n                                        \"#ffc400\",\r\n                                        \"#c6ff00\",\r\n                                        \"#00e676\",\r\n                                        \"#76ff03\",\r\n                                        \"#00b0ff\",\r\n                                        \"#2979ff\",\r\n                                        \"#f50057\",\r\n                                        \"#000000\",\r\n                                        \"#666666\",\r\n                                        \"#B3B3B3\",\r\n                                        \"#9F0500\",\r\n                                        \"#C45100\",\r\n                                        \"#FB9E00\",\r\n                                        \"#808900\",\r\n                                        \"#1de9b6\",\r\n                                        \"#0C797D\",\r\n                                        \"#3d5afe\",\r\n                                        \"#651fff\",\r\n                                        \"#d500f9\",\r\n                                    ]}\r\n                                    color={theme.palette.secondary.main}\r\n                                    onChangeComplete={(c) => {\r\n                                        setTheme({\r\n                                            ...theme,\r\n                                            palette: {\r\n                                                ...theme.palette,\r\n                                                secondary: {\r\n                                                    ...theme.palette.secondary,\r\n                                                    main: c.hex,\r\n                                                },\r\n                                            },\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid md={6} xs={12} item>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                主色调文字\r\n                            </Typography>\r\n                            <TextField\r\n                                value={theme.palette.primary.contrastText}\r\n                                onChange={(e) => {\r\n                                    setTheme({\r\n                                        ...theme,\r\n                                        palette: {\r\n                                            ...theme.palette,\r\n                                            primary: {\r\n                                                ...theme.palette.primary,\r\n                                                contrastText: e.target.value,\r\n                                            },\r\n                                        },\r\n                                    });\r\n                                }}\r\n                                fullWidth\r\n                            />\r\n                            <div className={classes.picker}>\r\n                                <CompactPicker\r\n                                    color={theme.palette.primary.contrastText}\r\n                                    onChangeComplete={(c) => {\r\n                                        setTheme({\r\n                                            ...theme,\r\n                                            palette: {\r\n                                                ...theme.palette,\r\n                                                primary: {\r\n                                                    ...theme.palette.primary,\r\n                                                    contrastText: c.hex,\r\n                                                },\r\n                                            },\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid md={6} xs={12} item>\r\n                            <Typography variant=\"h6\" gutterBottom>\r\n                                辅色调文字\r\n                            </Typography>\r\n                            <TextField\r\n                                value={theme.palette.secondary.contrastText}\r\n                                onChange={(e) => {\r\n                                    setTheme({\r\n                                        ...theme,\r\n                                        palette: {\r\n                                            ...theme.palette,\r\n                                            secondary: {\r\n                                                ...theme.palette.secondary,\r\n                                                contrastText: e.target.value,\r\n                                            },\r\n                                        },\r\n                                    });\r\n                                }}\r\n                                fullWidth\r\n                            />\r\n                            <div className={classes.picker}>\r\n                                <CompactPicker\r\n                                    color={theme.palette.secondary.contrastText}\r\n                                    onChangeComplete={(c) => {\r\n                                        setTheme({\r\n                                            ...theme,\r\n                                            palette: {\r\n                                                ...theme.palette,\r\n                                                secondary: {\r\n                                                    ...theme.palette.secondary,\r\n                                                    contrastText: c.hex,\r\n                                                },\r\n                                            },\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid spacing={2} md={4} xs={12}>\r\n                        <ThemeProvider theme={subTheme()}>\r\n                            <div\r\n                                className={classes.statusBar}\r\n                                style={{\r\n                                    backgroundColor: subTheme().palette.primary\r\n                                        .dark,\r\n                                }}\r\n                            />\r\n                            <AppBar position=\"static\">\r\n                                <Toolbar>\r\n                                    <IconButton\r\n                                        edge=\"start\"\r\n                                        className={classes.menuButton}\r\n                                        color=\"inherit\"\r\n                                        aria-label=\"menu\"\r\n                                    >\r\n                                        <Menu />\r\n                                    </IconButton>\r\n                                    <Typography\r\n                                        variant=\"h6\"\r\n                                        className={classes.title}\r\n                                    >\r\n                                        Color\r\n                                    </Typography>\r\n                                </Toolbar>\r\n                            </AppBar>\r\n                            <div style={{ padding: 16 }}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    color={\"secondary\"}\r\n                                    label={\"文字输入\"}\r\n                                />\r\n                                <div\r\n                                    className={classes.fab}\r\n                                    style={{ paddingTop: 64 }}\r\n                                >\r\n                                    <Fab color=\"secondary\" aria-label=\"add\">\r\n                                        <Add />\r\n                                    </Fab>\r\n                                </div>\r\n                            </div>\r\n                        </ThemeProvider>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose} color=\"default\">\r\n                    取消\r\n                </Button>\r\n                <Button onClick={() => onSubmit(theme)} color=\"primary\">\r\n                    创建\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport API from \"../../../middleware/Api\";\r\nimport CreateTheme from \"../Dialogs/CreateTheme\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 500,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    colorContainer: {\r\n        display: \"flex\",\r\n    },\r\n    colorDot: {\r\n        width: 20,\r\n        height: 20,\r\n        borderRadius: \"50%\",\r\n        marginLeft: 6,\r\n    },\r\n}));\r\n\r\nexport default function Theme() {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [theme, setTheme] = useState({});\r\n    const [options, setOptions] = useState({\r\n        themes: \"{}\",\r\n        defaultTheme: \"\",\r\n        home_view_method: \"icon\",\r\n        share_view_method: \"list\",\r\n    });\r\n    const [themeConfig, setThemeConfig] = useState({});\r\n    const [themeConfigError, setThemeConfigError] = useState({});\r\n    const [create, setCreate] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const deleteTheme = (color) => {\r\n        if (color === options.defaultTheme) {\r\n            ToggleSnackbar(\"top\", \"right\", \"不能删除默认配色\", \"warning\");\r\n            return;\r\n        }\r\n        if (Object.keys(theme).length <= 1) {\r\n            ToggleSnackbar(\"top\", \"right\", \"请至少保留一个配色方案\", \"warning\");\r\n            return;\r\n        }\r\n        const themeCopy = { ...theme };\r\n        delete themeCopy[color];\r\n        const resStr = JSON.stringify(themeCopy);\r\n        setOptions({\r\n            ...options,\r\n            themes: resStr,\r\n        });\r\n    };\r\n\r\n    const addTheme = (newTheme) => {\r\n        setCreate(false);\r\n        if (theme[newTheme.palette.primary.main] !== undefined) {\r\n            ToggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                \"主色调不能与已有配色重复\",\r\n                \"warning\"\r\n            );\r\n            return;\r\n        }\r\n        const res = {\r\n            ...theme,\r\n            [newTheme.palette.primary.main]: newTheme,\r\n        };\r\n        const resStr = JSON.stringify(res);\r\n        setOptions({\r\n            ...options,\r\n            themes: resStr,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const res = JSON.parse(options.themes);\r\n        const themeString = {};\r\n\r\n        Object.keys(res).forEach((k) => {\r\n            themeString[k] = JSON.stringify(res[k]);\r\n        });\r\n\r\n        setTheme(res);\r\n        setThemeConfig(themeString);\r\n    }, [options.themes]);\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: Object.keys(options),\r\n        })\r\n            .then((response) => {\r\n                setOptions(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        主题配色\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <Table aria-label=\"simple table\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>关键色</TableCell>\r\n                                        <TableCell>色彩配置</TableCell>\r\n                                        <TableCell>操作</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {Object.keys(theme).map((k) => (\r\n                                        <TableRow key={k}>\r\n                                            <TableCell\r\n                                                component=\"th\"\r\n                                                scope=\"row\"\r\n                                            >\r\n                                                <div\r\n                                                    className={\r\n                                                        classes.colorContainer\r\n                                                    }\r\n                                                >\r\n                                                    <div\r\n                                                        style={{\r\n                                                            backgroundColor:\r\n                                                                theme[k].palette\r\n                                                                    .primary\r\n                                                                    .main,\r\n                                                        }}\r\n                                                        className={\r\n                                                            classes.colorDot\r\n                                                        }\r\n                                                    />\r\n                                                    <div\r\n                                                        style={{\r\n                                                            backgroundColor:\r\n                                                                theme[k].palette\r\n                                                                    .secondary\r\n                                                                    .main,\r\n                                                        }}\r\n                                                        className={\r\n                                                            classes.colorDot\r\n                                                        }\r\n                                                    />\r\n                                                </div>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <TextField\r\n                                                    error={themeConfigError[k]}\r\n                                                    helperText={\r\n                                                        themeConfigError[k] &&\r\n                                                        \"格式不正确\"\r\n                                                    }\r\n                                                    fullWidth\r\n                                                    multiline\r\n                                                    onChange={(e) => {\r\n                                                        setThemeConfig({\r\n                                                            ...themeConfig,\r\n                                                            [k]: e.target.value,\r\n                                                        });\r\n                                                    }}\r\n                                                    onBlur={(e) => {\r\n                                                        try {\r\n                                                            const res = JSON.parse(\r\n                                                                e.target.value\r\n                                                            );\r\n                                                            if (\r\n                                                                !(\r\n                                                                    \"palette\" in\r\n                                                                    res\r\n                                                                ) ||\r\n                                                                !(\r\n                                                                    \"primary\" in\r\n                                                                    res.palette\r\n                                                                ) ||\r\n                                                                !(\r\n                                                                    \"main\" in\r\n                                                                    res.palette\r\n                                                                        .primary\r\n                                                                ) ||\r\n                                                                !(\r\n                                                                    \"secondary\" in\r\n                                                                    res.palette\r\n                                                                ) ||\r\n                                                                !(\r\n                                                                    \"main\" in\r\n                                                                    res.palette\r\n                                                                        .secondary\r\n                                                                )\r\n                                                            ) {\r\n                                                                throw e;\r\n                                                            }\r\n                                                            setTheme({\r\n                                                                ...theme,\r\n                                                                [k]: res,\r\n                                                            });\r\n                                                        } catch (e) {\r\n                                                            setThemeConfigError(\r\n                                                                {\r\n                                                                    ...themeConfigError,\r\n                                                                    [k]: true,\r\n                                                                }\r\n                                                            );\r\n                                                            return;\r\n                                                        }\r\n                                                        setThemeConfigError({\r\n                                                            ...themeConfigError,\r\n                                                            [k]: false,\r\n                                                        });\r\n                                                    }}\r\n                                                    value={themeConfig[k]}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <IconButton\r\n                                                    onClick={() =>\r\n                                                        deleteTheme(k)\r\n                                                    }\r\n                                                >\r\n                                                    <Delete />\r\n                                                </IconButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            <div>\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    style={{ marginTop: 8 }}\r\n                                    onClick={() => setCreate(true)}\r\n                                >\r\n                                    新建配色方案\r\n                                </Button>\r\n                            </div>\r\n                            <Alert severity=\"info\" style={{ marginTop: 8 }}>\r\n                                <Typography variant=\"body2\">\r\n                                    完整的配置项可在{\" \"}\r\n                                    <Link\r\n                                        href={\r\n                                            \"https://material-ui.com/zh/customization/default-theme/\"\r\n                                        }\r\n                                        target={\"_blank\"}\r\n                                    >\r\n                                        默认主题 - Material-UI\r\n                                    </Link>{\" \"}\r\n                                    查阅。\r\n                                </Typography>\r\n                            </Alert>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    默认配色\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={options.defaultTheme}\r\n                                    onChange={handleChange(\"defaultTheme\")}\r\n                                >\r\n                                    {Object.keys(theme).map((k) => (\r\n                                        <MenuItem key={k} value={k}>\r\n                                            <div\r\n                                                className={\r\n                                                    classes.colorContainer\r\n                                                }\r\n                                            >\r\n                                                <div\r\n                                                    style={{\r\n                                                        backgroundColor:\r\n                                                            theme[k].palette\r\n                                                                .primary.main,\r\n                                                    }}\r\n                                                    className={classes.colorDot}\r\n                                                />\r\n                                                <div\r\n                                                    style={{\r\n                                                        backgroundColor:\r\n                                                            theme[k].palette\r\n                                                                .secondary.main,\r\n                                                    }}\r\n                                                    className={classes.colorDot}\r\n                                                />\r\n                                            </div>\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用户未指定偏好配色时，站点默认使用的配色方案\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        界面\r\n                    </Typography>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    个人文件列表默认样式\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={options.home_view_method}\r\n                                    onChange={handleChange(\"home_view_method\")}\r\n                                    required\r\n                                >\r\n                                    <MenuItem value={\"icon\"}>大图标</MenuItem>\r\n                                    <MenuItem value={\"smallIcon\"}>\r\n                                        小图标\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"list\"}>列表</MenuItem>\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用户未指定偏好样式时，个人文件页面列表默认样式\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    目录分享页列表默认样式\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={options.share_view_method}\r\n                                    onChange={handleChange(\"share_view_method\")}\r\n                                    required\r\n                                >\r\n                                    <MenuItem value={\"icon\"}>大图标</MenuItem>\r\n                                    <MenuItem value={\"smallIcon\"}>\r\n                                        小图标\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"list\"}>列表</MenuItem>\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用户未指定偏好样式时，目录分享页面的默认样式\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        保存\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n\r\n            <CreateTheme\r\n                onSubmit={addTheme}\r\n                open={create}\r\n                onClose={() => setCreate(false)}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport API from \"../../../middleware/Api\";\r\nimport SizeInput from \"../Common/SizeInput\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function ImageSetting() {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [options, setOptions] = useState({\r\n        gravatar_server: \"\",\r\n        avatar_path: \"\",\r\n        avatar_size: \"\",\r\n        avatar_size_l: \"\",\r\n        avatar_size_m: \"\",\r\n        avatar_size_s: \"\",\r\n        thumb_width: \"\",\r\n        thumb_height: \"\",\r\n        office_preview_service: \"\",\r\n    });\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: Object.keys(options),\r\n        })\r\n            .then((response) => {\r\n                setOptions(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        头像\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    Gravatar 服务器\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"url\"}\r\n                                    value={options.gravatar_server}\r\n                                    onChange={handleChange(\"gravatar_server\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    Gravatar 服务器地址，可选择使用国内镜像\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    头像存储路径\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.avatar_path}\r\n                                    onChange={handleChange(\"avatar_path\")}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用户上传自定义头像的存储路径\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <SizeInput\r\n                                    value={options.avatar_size}\r\n                                    onChange={handleChange(\"avatar_size\")}\r\n                                    required\r\n                                    min={0}\r\n                                    max={2147483647}\r\n                                    label={\"头像文件大小限制\"}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用户可上传头像文件的最大大小\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    小头像尺寸\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.avatar_size_s}\r\n                                    onChange={handleChange(\"avatar_size_s\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    中头像尺寸\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.avatar_size_m}\r\n                                    onChange={handleChange(\"avatar_size_m\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    大头像尺寸\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.avatar_size_l}\r\n                                    onChange={handleChange(\"avatar_size_l\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        文件预览\r\n                    </Typography>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    缩略图宽度\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.thumb_width}\r\n                                    onChange={handleChange(\"thumb_width\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    缩略图高度\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        min: 1,\r\n                                        step: 1,\r\n                                    }}\r\n                                    value={options.thumb_height}\r\n                                    onChange={handleChange(\"thumb_height\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    Office 文档预览服务\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.office_preview_service}\r\n                                    onChange={handleChange(\r\n                                        \"office_preview_service\"\r\n                                    )}\r\n                                    required\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    可使用以下替换变量：\r\n                                    <br />\r\n                                    <code>{\"{$src}\"}</code> - 文件 URL\r\n                                    <br />\r\n                                    <code>{\"{$srcB64}\"}</code> - Base64\r\n                                    编码后的文件 URL\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        保存\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardContainer: {\r\n        display: \"flex\",\r\n    },\r\n    cover: {\r\n        width: 100,\r\n        height: 60,\r\n    },\r\n    card: {},\r\n    content: {\r\n        flex: \"1 0 auto\",\r\n    },\r\n    bg: {\r\n        backgroundColor: theme.palette.background.default,\r\n        padding: \"24px 24px\",\r\n    },\r\n    dialogFooter: {\r\n        justifyContent: \"space-between\",\r\n    },\r\n}));\r\n\r\nconst policies = [\r\n    {\r\n        name: \"本机存储\",\r\n        img: \"local.png\",\r\n        path: \"/admin/policy/add/local\",\r\n    },\r\n    {\r\n        name: \"从机存储\",\r\n        img: \"remote.png\",\r\n        path: \"/admin/policy/add/remote\",\r\n    },\r\n    {\r\n        name: \"七牛\",\r\n        img: \"qiniu.png\",\r\n        path: \"/admin/policy/add/qiniu\",\r\n    },\r\n    {\r\n        name: \"阿里云 OSS\",\r\n        img: \"oss.png\",\r\n        path: \"/admin/policy/add/oss\",\r\n    },\r\n    {\r\n        name: \"又拍云\",\r\n        img: \"upyun.png\",\r\n        path: \"/admin/policy/add/upyun\",\r\n    },\r\n    {\r\n        name: \"腾讯云 COS\",\r\n        img: \"cos.png\",\r\n        path: \"/admin/policy/add/cos\",\r\n    },\r\n    {\r\n        name: \"OneDrive\",\r\n        img: \"onedrive.png\",\r\n        path: \"/admin/policy/add/onedrive\",\r\n    },\r\n    {\r\n        name: \"Amazon S3\",\r\n        img: \"s3.png\",\r\n        path: \"/admin/policy/add/s3\",\r\n    },\r\n];\r\n\r\nexport default function AddPolicy({ open, onClose }) {\r\n    const classes = useStyles();\r\n\r\n    const location = useHistory();\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            maxWidth={\"sm\"}\r\n            fullWidth\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">选择存储方式</DialogTitle>\r\n            <DialogContent dividers className={classes.bg}>\r\n                <Grid container spacing={2}>\r\n                    {policies.map((v) => (\r\n                        <Grid item sm={12} md={6} key={v.path}>\r\n                            <Card className={classes.card}>\r\n                                <CardActionArea\r\n                                    onClick={() => {\r\n                                        location.push(v.path);\r\n                                        onClose();\r\n                                    }}\r\n                                    className={classes.cardContainer}\r\n                                >\r\n                                    <CardMedia\r\n                                        className={classes.cover}\r\n                                        image={\"/static/img/\" + v.img}\r\n                                    />\r\n                                    <CardContent className={classes.content}>\r\n                                        <Typography\r\n                                            variant=\"subtitle1\"\r\n                                            color=\"textSecondary\"\r\n                                        >\r\n                                            {v.name}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions className={classes.dialogFooter}>\r\n                <Button\r\n                    onClick={() =>\r\n                        window.open(\r\n                            \"https://docs.cloudreve.org/use/policy/compare\"\r\n                        )\r\n                    }\r\n                    color=\"primary\"\r\n                >\r\n                    存储策略对比\r\n                </Button>\r\n                <Button onClick={onClose} color=\"primary\">\r\n                    取消\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { Delete, Edit } from \"@material-ui/icons\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport { policyTypeMap } from \"../../../config\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { sizeToString } from \"../../../utils\";\r\nimport AddPolicy from \"../Dialogs/AddPolicy\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    headerRight: {},\r\n}));\r\n\r\nconst columns = [\r\n    { id: \"#\", label: \"#\", minWidth: 50 },\r\n    { id: \"name\", label: \"名称\", minWidth: 170 },\r\n    { id: \"type\", label: \"类型\", minWidth: 170 },\r\n    {\r\n        id: \"count\",\r\n        label: \"下属文件数\",\r\n        minWidth: 50,\r\n        align: \"right\",\r\n    },\r\n    {\r\n        id: \"size\",\r\n        label: \"数据量\",\r\n        minWidth: 100,\r\n        align: \"right\",\r\n    },\r\n    {\r\n        id: \"action\",\r\n        label: \"操作\",\r\n        minWidth: 170,\r\n        align: \"right\",\r\n    },\r\n];\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function Policy() {\r\n    const classes = useStyles();\r\n    // const [loading, setLoading] = useState(false);\r\n    // const [tab, setTab] = useState(0);\r\n    const [policies, setPolicies] = useState([]);\r\n    const [statics, setStatics] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [addDialog, setAddDialog] = useState(false);\r\n    const [filter, setFilter] = useState(\"all\");\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [editID, setEditID] = React.useState(0);\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const query = useQuery();\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (query.get(\"code\") === \"0\") {\r\n            ToggleSnackbar(\"top\", \"right\", \"授权成功\", \"success\");\r\n        } else if (query.get(\"msg\") && query.get(\"msg\") !== \"\") {\r\n            ToggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                query.get(\"msg\") + \", \" + query.get(\"err\"),\r\n                \"warning\"\r\n            );\r\n        }\r\n    }, [location]);\r\n\r\n    const loadList = () => {\r\n        API.post(\"/admin/policy/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: \"id desc\",\r\n            conditions: filter === \"all\" ? {} : { type: filter },\r\n        })\r\n            .then((response) => {\r\n                setPolicies(response.data.items);\r\n                setStatics(response.data.statics);\r\n                setTotal(response.data.total);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize, filter]);\r\n\r\n    const deletePolicy = (id) => {\r\n        API.delete(\"/admin/policy/\" + id)\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"存储策略已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n\r\n    return (\r\n        <div>\r\n            <AddPolicy open={addDialog} onClose={() => setAddDialog(false)} />\r\n            <div className={classes.header}>\r\n                <Button\r\n                    color={\"primary\"}\r\n                    onClick={() => setAddDialog(true)}\r\n                    variant={\"contained\"}\r\n                >\r\n                    添加存储策略\r\n                </Button>\r\n                <div className={classes.headerRight}>\r\n                    <Select\r\n                        style={{\r\n                            marginRight: 8,\r\n                        }}\r\n                        value={filter}\r\n                        onChange={(e) => setFilter(e.target.value)}\r\n                    >\r\n                        <MenuItem value={\"all\"}>全部</MenuItem>\r\n                        <MenuItem value={\"local\"}>本机</MenuItem>\r\n                        <MenuItem value={\"remote\"}>从机</MenuItem>\r\n                        <MenuItem value={\"qiniu\"}>七牛</MenuItem>\r\n                        <MenuItem value={\"upyun\"}>又拍云</MenuItem>\r\n                        <MenuItem value={\"oss\"}>阿里云 OSS</MenuItem>\r\n                        <MenuItem value={\"cos\"}>腾讯云 COS</MenuItem>\r\n                        <MenuItem value={\"onedrive\"}>OneDrive</MenuItem>\r\n                        <MenuItem value={\"s3\"}>Amazon S3</MenuItem>\r\n                    </Select>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => loadList()}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        刷新\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                        {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {policies.map((row) => (\r\n                                <TableRow hover key={row.ID}>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell>{row.Name}</TableCell>\r\n                                    <TableCell>\r\n                                        {policyTypeMap[row.Type] !==\r\n                                            undefined &&\r\n                                            policyTypeMap[row.Type]}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {statics[row.ID] !== undefined &&\r\n                                            statics[row.ID][0].toLocaleString()}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {statics[row.ID] !== undefined &&\r\n                                            sizeToString(statics[row.ID][1])}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        <Tooltip title={\"删除\"}>\r\n                                            <IconButton\r\n                                                onClick={() =>\r\n                                                    deletePolicy(row.ID)\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Tooltip title={\"编辑\"}>\r\n                                            <IconButton\r\n                                                onClick={(e) => {\r\n                                                    setEditID(row.ID);\r\n                                                    handleClick(e);\r\n                                                }}\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Edit />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n            <Menu\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                keepMounted\r\n            >\r\n                <MenuItem\r\n                    onClick={(e) => {\r\n                        handleClose(e);\r\n                        history.push(\"/admin/policy/edit/pro/\" + editID);\r\n                    }}\r\n                >\r\n                    专家模式编辑\r\n                </MenuItem>\r\n                <MenuItem\r\n                    onClick={(e) => {\r\n                        handleClose(e);\r\n                        history.push(\"/admin/policy/edit/guide/\" + editID);\r\n                    }}\r\n                >\r\n                    向导模式编辑\r\n                </MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\nexport default function DomainInput({ onChange, value, required, label }) {\r\n    const [domain, setDomain] = useState(\"\");\r\n    const [protocol, setProtocol] = useState(\"https://\");\r\n    const [error, setError] = useState();\r\n\r\n    useState(() => {\r\n        value = value ? value : \"\";\r\n        if (value.startsWith(\"https://\")) {\r\n            setDomain(value.replace(\"https://\", \"\"));\r\n            setProtocol(\"https://\");\r\n        } else {\r\n            if (value !== \"\") {\r\n                setDomain(value.replace(\"http://\", \"\"));\r\n                setProtocol(\"http://\");\r\n            }\r\n        }\r\n    }, [value]);\r\n\r\n    useEffect(() => {\r\n        if (protocol === \"http://\" && window.location.protocol === \"https:\") {\r\n            setError(\r\n                \"您当前站点启用了 HTTPS ，此处选择 HTTP 可能会导致无法连接。\"\r\n            );\r\n        } else {\r\n            setError(\"\");\r\n        }\r\n    }, [protocol]);\r\n\r\n    return (\r\n        <FormControl>\r\n            <InputLabel htmlFor=\"component-helper\">{label}</InputLabel>\r\n            <Input\r\n                error={error !== \"\"}\r\n                value={domain}\r\n                onChange={(e) => {\r\n                    setDomain(e.target.value);\r\n                    onChange({\r\n                        target: {\r\n                            value: protocol + e.target.value,\r\n                        },\r\n                    });\r\n                }}\r\n                required={required}\r\n                startAdornment={\r\n                    <InputAdornment position=\"start\">\r\n                        <Select\r\n                            value={protocol}\r\n                            onChange={(e) => {\r\n                                setProtocol(e.target.value);\r\n                                onChange({\r\n                                    target: {\r\n                                        value: e.target.value + domain,\r\n                                    },\r\n                                });\r\n                            }}\r\n                        >\r\n                            <MenuItem value={\"http://\"}>http://</MenuItem>\r\n                            <MenuItem value={\"https://\"}>https://</MenuItem>\r\n                        </Select>\r\n                    </InputAdornment>\r\n                }\r\n            />\r\n            {error !== \"\" && (\r\n                <FormHelperText error={error !== \"\"}>{error}</FormHelperText>\r\n            )}\r\n        </FormControl>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport React from \"react\";\r\n\r\nexport default function MagicVar({ isFile, open, onClose, isSlave }) {\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {isFile ? \"文件名魔法变量\" : \"路径魔法变量\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <TableContainer>\r\n                    <Table size=\"small\" aria-label=\"a dense table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>魔法变量</TableCell>\r\n                                <TableCell>描述</TableCell>\r\n                                <TableCell>示例</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{randomkey16}\"}\r\n                                </TableCell>\r\n                                <TableCell>16位随机字符</TableCell>\r\n                                <TableCell>N6IimT5XZP324ACK</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{randomkey8}\"}\r\n                                </TableCell>\r\n                                <TableCell>8位随机字符</TableCell>\r\n                                <TableCell>gWz78q30</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{timestamp}\"}\r\n                                </TableCell>\r\n                                <TableCell>秒级时间戳</TableCell>\r\n                                <TableCell>1582692933</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{timestamp_nano}\"}\r\n                                </TableCell>\r\n                                <TableCell>纳秒级时间戳</TableCell>\r\n                                <TableCell>1582692933231834600</TableCell>\r\n                            </TableRow>\r\n                            {!isSlave && (\r\n                                <TableRow>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {\"{uid}\"}\r\n                                    </TableCell>\r\n                                    <TableCell>用户ID</TableCell>\r\n                                    <TableCell>1</TableCell>\r\n                                </TableRow>\r\n                            )}\r\n                            {isFile && (\r\n                                <TableRow>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {\"{originname}\"}\r\n                                    </TableCell>\r\n                                    <TableCell>原始文件名</TableCell>\r\n                                    <TableCell>MyPico.mp4</TableCell>\r\n                                </TableRow>\r\n                            )}\r\n                            {!isFile && !isSlave && (\r\n                                <TableRow>\r\n                                    <TableCell component=\"th\" scope=\"row\">\r\n                                        {\"{path}\"}\r\n                                    </TableCell>\r\n                                    <TableCell>用户上传路径</TableCell>\r\n                                    <TableCell>/我的文件/学习资料/</TableCell>\r\n                                </TableRow>\r\n                            )}\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{date}\"}\r\n                                </TableCell>\r\n                                <TableCell>日期</TableCell>\r\n                                <TableCell>20060102</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{datetime}\"}\r\n                                </TableCell>\r\n                                <TableCell>日期时间</TableCell>\r\n                                <TableCell>20060102150405</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{year}\"}\r\n                                </TableCell>\r\n                                <TableCell>年份</TableCell>\r\n                                <TableCell>2006</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{month}\"}\r\n                                </TableCell>\r\n                                <TableCell>月份</TableCell>\r\n                                <TableCell>01</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{day}\"}\r\n                                </TableCell>\r\n                                <TableCell>日</TableCell>\r\n                                <TableCell>02</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{hour}\"}\r\n                                </TableCell>\r\n                                <TableCell>小时</TableCell>\r\n                                <TableCell>15</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{minute}\"}\r\n                                </TableCell>\r\n                                <TableCell>分钟</TableCell>\r\n                                <TableCell>04</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {\"{second}\"}\r\n                                </TableCell>\r\n                                <TableCell>秒</TableCell>\r\n                                <TableCell>05</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose} color=\"primary\">\r\n                    关闭\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../../actions\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport { getNumber } from \"../../../../utils\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    viewButtonLabel: { textTransform: \"none\" },\r\n    \"@global\": {\r\n        code: {\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            display: \"inline-block\",\r\n            padding: \"2px 6px\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"rgba(255,229,100,0.1)\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"存储空间\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传路径\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"直链设置\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传限制\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"跨域策略\",\r\n        optional: true,\r\n    },\r\n    {\r\n        title: \"云函数回调\",\r\n        optional: true,\r\n    },\r\n    {\r\n        title: \"完成\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nexport default function COSGuide(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [skipped, setSkipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    const [useCDN, setUseCDN] = useState(\"false\");\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"cos\",\r\n                  Name: \"\",\r\n                  SecretKey: \"\",\r\n                  AccessKey: \"\",\r\n                  BaseURL: \"\",\r\n                  Server: \"\",\r\n                  IsPrivate: \"true\",\r\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                  },\r\n              }\r\n    );\r\n    const [policyID, setPolicyID] = useState(\r\n        props.policy ? props.policy.ID : 0\r\n    );\r\n    const [region, setRegion] = useState(\"ap-chengdu\");\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        if (useCDN === \"false\") {\r\n            policyCopy.BaseURL = policy.Server;\r\n        }\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then((response) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(4);\r\n                setPolicyID(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    const createCORS = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/policy/cors\", {\r\n            id: policyID,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"跨域策略已添加\", \"success\");\r\n                setActiveStep(5);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const creatCallback = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/policy/scf\", {\r\n            id: policyID,\r\n            region: region,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"回调云函数已添加\", \"success\");\r\n                setActiveStep(6);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy ? \"修改\" : \"添加\"} 腾讯云 COS 存储策略\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">可选</Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label.title} {...stepProps}>\r\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(1);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>0</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在使用 腾讯云 COS 储策略前，请确保您在 参数设置\r\n                                - 站点信息 - 站点URL 中填写的\r\n                                地址与实际相符，并且\r\n                                <strong>能够被外网正常访问</strong>。\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                前往\r\n                                <Link\r\n                                    href={\r\n                                        \"https://console.cloud.tencent.com/cos5\"\r\n                                    }\r\n                                    target={\"_blank\"}\r\n                                >\r\n                                    COS 管理控制台\r\n                                </Link>\r\n                                创建存储桶。\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                转到所创建存储桶的基础配置页面，将\r\n                                <code>空间名称</code>填写在下方：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        空间名称\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        inputProps={{\r\n                                            pattern: \"[a-z0-9-]+-[0-9]+\",\r\n                                            title:\r\n                                                \"空间名格式不正确, 举例：ccc-1252109809\",\r\n                                        }}\r\n                                        required\r\n                                        value={policy.BucketName}\r\n                                        onChange={handleChange(\"BucketName\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>3</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在下方选择您创建的空间的访问权限类型，推荐选择\r\n                                <code>私有读写</code>\r\n                                以获得更高的安全性，私有空间无法开启“获取直链”功能。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsPrivate}\r\n                                        onChange={handleChange(\"IsPrivate\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"私有读写\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"公共读私有写\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>4</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                转到所创建 Bucket 的基础配置，填写\r\n                                <code>基本信息</code>栏目下 给出的{\" \"}\r\n                                <code>访问域名</code>\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <DomainInput\r\n                                    value={policy.Server}\r\n                                    onChange={handleChange(\"Server\")}\r\n                                    required\r\n                                    label={\"访问域名\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>5</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否要使用配套的 腾讯云CDN 加速 COS 访问？\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={useCDN}\r\n                                        onChange={(e) => {\r\n                                            setUseCDN(e.target.value);\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"使用\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不使用\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={useCDN === \"true\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>6</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    前往\r\n                                    <Link\r\n                                        href={\r\n                                            \"https://console.cloud.tencent.com/cdn/access/guid\"\r\n                                        }\r\n                                        target={\"_blank\"}\r\n                                    >\r\n                                        腾讯云 CDN 管理控制台\r\n                                    </Link>\r\n                                    创建 CDN 加速域名，并设定源站为刚创建的 COS\r\n                                    存储桶。在下方填写 CDN\r\n                                    加速域名，并选择是否使用 HTTPS：\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <DomainInput\r\n                                        value={policy.BaseURL}\r\n                                        onChange={handleChange(\"BaseURL\")}\r\n                                        required={useCDN === \"true\"}\r\n                                        label={\"CDN 加速域名\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(6, [useCDN === \"true\"])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在腾讯云\r\n                                <Link\r\n                                    href={\r\n                                        \"https://console.cloud.tencent.com/cam/capi\"\r\n                                    }\r\n                                    target={\"_blank\"}\r\n                                >\r\n                                    访问密钥\r\n                                </Link>\r\n                                页面获取\r\n                                一对访问密钥，并填写在下方。请确保这对密钥拥有\r\n                                COS 和 SCF 服务的访问权限。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        SecretId\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        inputProps={{\r\n                                            pattern: \"\\\\S+\",\r\n                                            title: \"不能含有空格\",\r\n                                        }}\r\n                                        value={policy.AccessKey}\r\n                                        onChange={handleChange(\"AccessKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        SecretKey\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        inputProps={{\r\n                                            pattern: \"\\\\S+\",\r\n                                            title: \"不能含有空格\",\r\n                                        }}\r\n                                        value={policy.SecretKey}\r\n                                        onChange={handleChange(\"SecretKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(7, [useCDN === \"true\"])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                为此存储策略命名：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储策略名\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContental}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\r\n                                从机的\r\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        setMagicVar(\"path\");\r\n                                    }}\r\n                                >\r\n                                    路径魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储目录\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\r\n                                文件名。文件名也可使用魔法变量，\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        setMagicVar(\"file\");\r\n                                    }}\r\n                                >\r\n                                    文件名魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"开启重命名\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不开启\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            命名规则\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            上一步\r\n                        </Button>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否允许获取文件永久直链？\r\n                                <br />\r\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={(e) => {\r\n                                            if (\r\n                                                policy.IsPrivate === \"true\" &&\r\n                                                e.target.value === \"true\"\r\n                                            ) {\r\n                                                ToggleSnackbar(\r\n                                                    \"top\",\r\n                                                    \"right\",\r\n                                                    \"私有空间无法开启此功能\",\r\n                                                    \"warning\"\r\n                                                );\r\n                                                return;\r\n                                            }\r\n                                            handleChange(\"IsOriginLinkEnable\")(\r\n                                                e\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"允许\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"禁止\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传的单文件大小？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入限制：\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={\"单文件大小限制\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传文件扩展名？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\r\n                                    隔开\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            扩展名列表\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(2)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <form className={classes.stepContent}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer} />\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                COS 存储桶 需要正确配置跨域策略后才能使用 Web\r\n                                端上传文件，Cloudreve\r\n                                可以帮您自动设置，您也可以参考文档步骤手动设置。如果您已设置过此\r\n                                Bucket 的跨域策略，此步骤可以跳过。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    color={\"secondary\"}\r\n                                    variant={\"contained\"}\r\n                                    className={classes.button}\r\n                                    onClick={() => createCORS()}\r\n                                    classes={{ label: classes.viewButtonLabel }}\r\n                                >\r\n                                    让 Cloudreve 帮我设置\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => {\r\n                                setActiveStep(\r\n                                    (prevActiveStep) => prevActiveStep + 1\r\n                                );\r\n                                setSkipped((prevSkipped) => {\r\n                                    const newSkipped = new Set(\r\n                                        prevSkipped.values()\r\n                                    );\r\n                                    newSkipped.add(activeStep);\r\n                                    return newSkipped;\r\n                                });\r\n                            }}\r\n                        >\r\n                            跳过\r\n                        </Button>{\" \"}\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 5 && (\r\n                <form className={classes.stepContent}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer} />\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                COS 存储桶 客户端直传需要借助腾讯云的\r\n                                <Link\r\n                                    href={\r\n                                        \"https://console.cloud.tencent.com/scf/index?rid=16\"\r\n                                    }\r\n                                    target={\"_blank\"}\r\n                                >\r\n                                    云函数\r\n                                </Link>\r\n                                产品以确保上传回调可控。如果您打算将此存储策略自用，或者分配给可信赖用户组，此步骤可以跳过。\r\n                                如果是作为公有使用，请务必创建回调云函数。\r\n                                <br />\r\n                                <br />\r\n                            </Typography>\r\n                            <Typography variant={\"body2\"}>\r\n                                Cloudreve 可以尝试帮你自动创建回调云函数，请选择\r\n                                COS 存储桶 所在地域后继续。\r\n                                创建可能会花费数秒钟，请耐心等待。创建前请确保您的腾讯云账号已开启云函数服务。\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储桶所在地区\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        value={region}\r\n                                        onChange={(e) =>\r\n                                            setRegion(e.target.value)\r\n                                        }\r\n                                        required\r\n                                    >\r\n                                        <MenuItem value={\"ap-beijing\"}>\r\n                                            华北地区(北京)\r\n                                        </MenuItem>\r\n                                        <MenuItem value={\"ap-chengdu\"}>\r\n                                            西南地区(成都)\r\n                                        </MenuItem>\r\n                                        <MenuItem value={\"ap-guangzhou\"}>\r\n                                            华南地区(广州)\r\n                                        </MenuItem>\r\n                                        <MenuItem value={\"ap-guangzhou-open\"}>\r\n                                            华南地区(广州Open)\r\n                                        </MenuItem>\r\n                                        <MenuItem value={\"ap-hongkong\"}>\r\n                                            港澳台地区(中国香港)\r\n                                        </MenuItem>\r\n                                        <MenuItem value={\"ap-mumbai\"}>\r\n                                            亚太南部(孟买)\r\n                                        </MenuItem>\r\n                                        <MenuItem value={\"ap-shanghai\"}>\r\n                                            华东地区(上海)\r\n                                        </MenuItem>\r\n                                        <MenuItem value={\"ap-singapore\"}>\r\n                                            亚太东南(新加坡)\r\n                                        </MenuItem>\r\n                                        <MenuItem value={\"na-siliconvalley\"}>\r\n                                            美国西部(硅谷)\r\n                                        </MenuItem>\r\n                                        <MenuItem value={\"na-toronto\"}>\r\n                                            北美地区(多伦多)\r\n                                        </MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <div className={classes.form}>\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    color={\"secondary\"}\r\n                                    variant={\"contained\"}\r\n                                    className={classes.button}\r\n                                    onClick={() => creatCallback()}\r\n                                    classes={{ label: classes.viewButtonLabel }}\r\n                                >\r\n                                    让 Cloudreve 帮我创建\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => {\r\n                                setActiveStep(\r\n                                    (prevActiveStep) => prevActiveStep + 1\r\n                                );\r\n                                setSkipped((prevSkipped) => {\r\n                                    const newSkipped = new Set(\r\n                                        prevSkipped.values()\r\n                                    );\r\n                                    newSkipped.add(activeStep);\r\n                                    return newSkipped;\r\n                                });\r\n                            }}\r\n                        >\r\n                            跳过\r\n                        </Button>{\" \"}\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 6 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>\r\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            返回存储策略列表\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../../actions\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"上传路径\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"直链设置\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传限制\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"完成\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nexport default function LocalGuide(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [skipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    const [useCDN, setUseCDN] = useState(\"false\");\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"local\",\r\n                  Name: \"\",\r\n                  DirNameRule: \"uploads/{uid}/{path}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  BaseURL: \"\",\r\n                  IsPrivate: \"true\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                  },\r\n              }\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const checkPathSetting = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        // 测试路径是否可用\r\n        API.post(\"/admin/policy/test/path\", {\r\n            path: policy.DirNameRule,\r\n        })\r\n            .then(() => {\r\n                setActiveStep(1);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        // 处理存储策略\r\n        if (useCDN === \"false\" || policy.IsOriginLinkEnable === \"false\") {\r\n            policyCopy.BaseURL = \"\";\r\n        }\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(4);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy ? \"修改\" : \"添加\"}本机存储策略\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">可选</Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label.title} {...stepProps}>\r\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={checkPathSetting}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\r\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        setMagicVar(\"path\");\r\n                                    }}\r\n                                >\r\n                                    路径魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储目录\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\r\n                                文件名。文件名也可使用魔法变量，\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        setMagicVar(\"file\");\r\n                                    }}\r\n                                >\r\n                                    文件名魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"开启重命名\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不开启\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            命名规则\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否允许获取文件永久直链？\r\n                                <br />\r\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={handleChange(\r\n                                            \"IsOriginLinkEnable\"\r\n                                        )}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"允许\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"禁止\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.IsOriginLinkEnable === \"true\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    是否要对下载/直链使用 CDN？\r\n                                    <br />\r\n                                    开启后，用户访问文件时的 URL\r\n                                    中的域名部分会被替换为 CDN 域名。\r\n                                </Typography>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl required component=\"fieldset\">\r\n                                        <RadioGroup\r\n                                            required\r\n                                            value={useCDN}\r\n                                            onChange={(e) => {\r\n                                                if (\r\n                                                    e.target.value === \"false\"\r\n                                                ) {\r\n                                                    setPolicy({\r\n                                                        ...policy,\r\n                                                        BaseURL: \"\",\r\n                                                    });\r\n                                                }\r\n                                                setUseCDN(e.target.value);\r\n                                            }}\r\n                                            row\r\n                                        >\r\n                                            <FormControlLabel\r\n                                                value={\"true\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label=\"使用\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                value={\"false\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label=\"不使用\"\r\n                                            />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Collapse in={useCDN === \"true\"}>\r\n                            <div className={classes.subStepContainer}>\r\n                                <div className={classes.stepNumberContainer}>\r\n                                    <div className={classes.stepNumber}>3</div>\r\n                                </div>\r\n                                <div className={classes.subStepContent}>\r\n                                    <Typography variant={\"body2\"}>\r\n                                        选择协议并填写 CDN 域名\r\n                                    </Typography>\r\n\r\n                                    <div className={classes.form}>\r\n                                        <DomainInput\r\n                                            value={policy.BaseURL}\r\n                                            onChange={handleChange(\"BaseURL\")}\r\n                                            required={\r\n                                                policy.IsOriginLinkEnable ===\r\n                                                    \"true\" && useCDN === \"true\"\r\n                                            }\r\n                                            label={\"CDN 前缀\"}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Collapse>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传的单文件大小？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入限制：\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={\"单文件大小限制\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传文件扩展名？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\r\n                                    隔开\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            扩展名列表\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}></div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                最后一步，为此存储策略命名：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储策略名\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(2)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            完成\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>\r\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            返回存储策略列表\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../../actions\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport AlertDialog from \"../../Dialogs/Alert\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    viewButtonLabel: { textTransform: \"none\" },\r\n    \"@global\": {\r\n        code: {\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            display: \"inline-block\",\r\n            padding: \"2px 6px\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"rgba(255,229,100,0.1)\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"应用授权\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传路径\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"直链设置\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传限制\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"账号授权\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"完成\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nexport default function OneDriveGuide(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [skipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    const [useCDN, setUseCDN] = useState(\r\n        props.policy && props.policy.OptionsSerialized.od_proxy\r\n            ? props.policy.OptionsSerialized.od_proxy !== \"\"\r\n            : false\r\n    );\r\n    const [useSharePoint, setUseSharePoint] = useState(\r\n        props.policy && props.policy.OptionsSerialized.od_driver\r\n            ? props.policy.OptionsSerialized.od_driver !== \"\"\r\n            : false\r\n    );\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"onedrive\",\r\n                  Name: \"\",\r\n                  BucketName: \"\",\r\n                  SecretKey: \"\",\r\n                  AccessKey: \"\",\r\n                  BaseURL: \"\",\r\n                  Server: \"https://graph.microsoft.com/v1.0\",\r\n                  IsPrivate: \"true\",\r\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                      od_redirect: \"\",\r\n                      od_proxy: \"\",\r\n                      od_driver: \"\",\r\n                  },\r\n              }\r\n    );\r\n    const [policyID, setPolicyID] = useState(\r\n        props.policy ? props.policy.ID : 0\r\n    );\r\n    const [httpsAlert, setHttpsAlert] = useState(false);\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: [\"siteURL\"],\r\n        })\r\n            .then((response) => {\r\n                if (!response.data.siteURL.startsWith(\"https://\")) {\r\n                    setHttpsAlert(true);\r\n                }\r\n                if (policy.OptionsSerialized.od_redirect === \"\") {\r\n                    setPolicy({\r\n                        ...policy,\r\n                        OptionsSerialized: {\r\n                            ...policy.OptionsSerialized,\r\n                            od_redirect: new URL(\r\n                                \"/api/v3/callback/onedrive/auth\",\r\n                                response.data.siteURL\r\n                            ).toString(),\r\n                        },\r\n                    });\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, []);\r\n\r\n    const statOAuth = () => {\r\n        setLoading(true);\r\n        API.get(\"/admin/policy/\" + policyID + \"/oauth\")\r\n            .then((response) => {\r\n                window.location.href = response.data;\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        // baseURL处理\r\n        if (policyCopy.Server === \"https://graph.microsoft.com/v1.0\") {\r\n            policyCopy.BaseURL =\r\n                \"https://login.microsoftonline.com/common/oauth2/v2.0\";\r\n        } else {\r\n            policyCopy.BaseURL = \"https://login.chinacloudapi.cn/common/oauth2\";\r\n        }\r\n\r\n        if (!useCDN) {\r\n            policyCopy.OptionsSerialized.od_proxy = \"\";\r\n        }\r\n\r\n        if (!useSharePoint) {\r\n            policyCopy.OptionsSerialized.od_driver = \"\";\r\n        }\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then((response) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(4);\r\n                setPolicyID(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AlertDialog\r\n                open={httpsAlert}\r\n                onClose={() => setHttpsAlert(false)}\r\n                title={\"警告\"}\r\n                msg={\r\n                    \"您必须启用 HTTPS 才能使用 OneDrive/SharePoint 存储策略；启用后同步更改 参数设置 - 站点信息 - 站点URL。\"\r\n                }\r\n            />\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy ? \"修改\" : \"添加\"} OneDrive/SharePoint 存储策略\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">可选</Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label.title} {...stepProps}>\r\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(1);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                前往\r\n                                <Link\r\n                                    href={\r\n                                        \"https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview\"\r\n                                    }\r\n                                    target={\"_blank\"}\r\n                                >\r\n                                    Azure Active Directory 控制台 (国际版账号)\r\n                                </Link>{\" \"}\r\n                                或者{\" \"}\r\n                                <Link\r\n                                    href={\r\n                                        \"https://portal.azure.cn/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Overview\"\r\n                                    }\r\n                                    target={\"_blank\"}\r\n                                >\r\n                                    Azure Active Directory 控制台 (世纪互联账号)\r\n                                </Link>\r\n                                并登录，登录后进入\r\n                                <code>Azure Active Directory</code>管理面板。\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                进入左侧 <code>应用注册</code> 菜单，并点击{\" \"}\r\n                                <code>新注册</code> 按钮。\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>3</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                填写应用注册表单。其中，名称可任取；\r\n                                <code>受支持的帐户类型</code> 选择为\r\n                                <code>\r\n                                    任何组织目录(任何 Azure AD 目录 -\r\n                                    多租户)中的帐户\r\n                                </code>\r\n                                ；<code>重定向 URI (可选)</code>\r\n                                请选择<code>Web</code>，并填写\r\n                                <code>\r\n                                    {policy.OptionsSerialized.od_redirect}\r\n                                </code>\r\n                                ； 其他保持默认即可\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>4</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                创建完成后进入应用管理的<code>概览</code>\r\n                                页面，复制<code>应用程序(客户端) ID</code>\r\n                                并填写在下方：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        应用程序(客户端) ID\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.BucketName}\r\n                                        onChange={handleChange(\"BucketName\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>5</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                进入应用管理页面左侧的<code>证书和密码</code>\r\n                                菜单，点击\r\n                                <code>新建客户端密码</code>\r\n                                按钮，<code>截止期限</code>选择为\r\n                                <code>从不</code>\r\n                                。创建完成后将客户端密码的值填写在下方：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        客户端密码\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.SecretKey}\r\n                                        onChange={handleChange(\"SecretKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>6</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                选择您的 Microsoft 365 账号类型：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.Server}\r\n                                        onChange={handleChange(\"Server\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\r\n                                                \"https://graph.microsoft.com/v1.0\"\r\n                                            }\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"国际版\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\r\n                                                \"https://microsoftgraph.chinacloudapi.cn/v1.0\"\r\n                                            }\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"世纪互联版\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>7</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否将文件存放在 SharePoint 中？\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={useSharePoint.toString()}\r\n                                        onChange={(e) => {\r\n                                            setUseSharePoint(\r\n                                                e.target.value === \"true\"\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"存到指定 SharePoint 中\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"存到账号默认 OneDrive 驱动器中\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                            <Collapse in={useSharePoint}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            SharePoint 站点地址\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            placeholder={\r\n                                                \"https://example.sharepoint.com/sites/demo\"\r\n                                            }\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .od_driver\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"od_driver\"\r\n                                            )}\r\n                                            required={useSharePoint}\r\n                                            label={\"SharePoint 站点地址\"}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>8</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否要在文件下载时替换为使用自建的反代服务器？\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={useCDN.toString()}\r\n                                        onChange={(e) => {\r\n                                            setUseCDN(\r\n                                                e.target.value === \"true\"\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"使用\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不使用\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                            <Collapse in={useCDN}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <DomainInput\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .od_proxy\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"od_proxy\"\r\n                                            )}\r\n                                            required={useCDN}\r\n                                            label={\"反代服务器地址\"}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>9</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                为此存储策略命名：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储策略名\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\r\n                                从机的\r\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        setMagicVar(\"path\");\r\n                                    }}\r\n                                >\r\n                                    路径魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储目录\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\r\n                                文件名。文件名也可使用魔法变量，\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        setMagicVar(\"file\");\r\n                                    }}\r\n                                >\r\n                                    文件名魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"开启重命名\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不开启\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            命名规则\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            上一步\r\n                        </Button>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否允许获取文件永久直链？\r\n                                <br />\r\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={(e) => {\r\n                                            handleChange(\"IsOriginLinkEnable\")(\r\n                                                e\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"允许\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"禁止\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传的单文件大小？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入限制：\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={\"单文件大小限制\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传文件扩展名？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\r\n                                    隔开\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            扩展名列表\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(2)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <form className={classes.stepContent}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer} />\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                存储策略已{props.policy ? \"保存\" : \"添加\"}\r\n                                ，但是你需要点击下方按钮，并使用 OneDrive\r\n                                登录授权以完成初始化后才能使用。\r\n                                日后你可以在存储策略列表页面重新进行授权。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    color={\"secondary\"}\r\n                                    variant={\"contained\"}\r\n                                    className={classes.button}\r\n                                    onClick={statOAuth}\r\n                                    classes={{ label: classes.viewButtonLabel }}\r\n                                >\r\n                                    转到授权页面\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}></div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 5 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>存储策略已添加！</Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            返回存储策略列表\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../../actions\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport { getNumber } from \"../../../../utils\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    viewButtonLabel: { textTransform: \"none\" },\r\n    \"@global\": {\r\n        code: {\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            display: \"inline-block\",\r\n            padding: \"2px 6px\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"rgba(255,229,100,0.1)\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"存储空间\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传路径\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"直链设置\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传限制\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"跨域策略\",\r\n        optional: true,\r\n    },\r\n    {\r\n        title: \"完成\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nexport default function OSSGuide(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [skipped, setSkipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    const [useCDN, setUseCDN] = useState(\"false\");\r\n    const [useLanEndpoint, setUseLanEndpoint] = useState(\r\n        props.policy && props.policy.OptionsSerialized.server_side_endpoint\r\n            ? props.policy.OptionsSerialized.server_side_endpoint !== \"\"\r\n            : false\r\n    );\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"oss\",\r\n                  Name: \"\",\r\n                  SecretKey: \"\",\r\n                  AccessKey: \"\",\r\n                  BaseURL: \"\",\r\n                  Server: \"\",\r\n                  IsPrivate: \"true\",\r\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                      server_side_endpoint: \"\",\r\n                  },\r\n              }\r\n    );\r\n    const [policyID, setPolicyID] = useState(\r\n        props.policy ? props.policy.ID : 0\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        if (useCDN === \"false\") {\r\n            policyCopy.BaseURL = \"\";\r\n        }\r\n\r\n        if (!useLanEndpoint) {\r\n            policyCopy.OptionsSerialized.server_side_endpoint = \"\";\r\n        }\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then((response) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(4);\r\n                setPolicyID(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    const createCORS = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/policy/cors\", {\r\n            id: policyID,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"跨域策略已添加\", \"success\");\r\n                setActiveStep(5);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy ? \"修改\" : \"添加\"} 阿里云 OSS 存储策略\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">可选</Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label.title} {...stepProps}>\r\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(1);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>0</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在使用 阿里云 OSS 储策略前，请确保您在 参数设置\r\n                                - 站点信息 - 站点URL 中填写的\r\n                                地址与实际相符，并且\r\n                                <strong>能够被外网正常访问</strong>。\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                前往\r\n                                <Link\r\n                                    href={\r\n                                        \"https://oss.console.aliyun.com/overview\"\r\n                                    }\r\n                                    target={\"_blank\"}\r\n                                >\r\n                                    OSS 管理控制台\r\n                                </Link>\r\n                                创建 Bucket。注意：创建空间类型只能选择\r\n                                <code>标准存储</code>或<code>低频访问</code>\r\n                                ，暂不支持<code>归档存储</code>\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在下方填写您创建 Bucket 时指定的\r\n                                <code>Bucket 名称</code>：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        Bucket 名称\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.BucketName}\r\n                                        onChange={handleChange(\"BucketName\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>3</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在下方选择您创建的空间的读写权限类型，推荐选择“私有”以获得更高的安全性，私有空间无法开启“获取直链”功能。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsPrivate}\r\n                                        onChange={handleChange(\"IsPrivate\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"私有\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"公共读\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>4</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                转到所创建 Bucket 的概览页面，填写\r\n                                <code>访问域名</code>栏目下\r\n                                <code>外网访问</code> 一行中间的{\" \"}\r\n                                <code>EndPoint（地域节点）</code>\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        EndPoint\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Server}\r\n                                        onChange={handleChange(\"Server\")}\r\n                                        inputProps={{\r\n                                            pattern:\r\n                                                \"(?:(?:(?<thld>[\\\\w\\\\-]*)(?:\\\\.))?(?<sld>[\\\\w\\\\-]*))\\\\.(?<tld>[\\\\w\\\\-]*)\",\r\n                                            title:\r\n                                                \"格式不合法，只需输入域名部分即可\",\r\n                                        }}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>5</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                如果您的 Cloudreve\r\n                                部署在阿里云计算服务中，并且与 OSS\r\n                                处在同一可用区下，您可以额外指定使用内网\r\n                                EndPoint\r\n                                以节省流量开始。是否要在服务端发送请求时使用 OSS\r\n                                内网 EndPoint？\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={useLanEndpoint.toString()}\r\n                                        onChange={(e) => {\r\n                                            setUseLanEndpoint(\r\n                                                e.target.value === \"true\"\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"使用\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不使用\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                            <Collapse in={useLanEndpoint}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            内网 EndPoint\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={useLanEndpoint}\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .server_side_endpoint\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"server_side_endpoint\"\r\n                                            )}\r\n                                            inputProps={{\r\n                                                pattern:\r\n                                                    \"(?:(?:(?<thld>[\\\\w\\\\-]*)(?:\\\\.))?(?<sld>[\\\\w\\\\-]*))\\\\.(?<tld>[\\\\w\\\\-]*)\",\r\n                                                title:\r\n                                                    \"格式不合法，只需输入域名部分即可\",\r\n                                            }}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>6</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否要使用配套的 阿里云CDN 加速 OSS 访问？\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={useCDN}\r\n                                        onChange={(e) => {\r\n                                            setUseCDN(e.target.value);\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"使用\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不使用\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={useCDN === \"true\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>7</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    前往\r\n                                    <Link\r\n                                        href={\r\n                                            \"https://cdn.console.aliyun.com/domain/list\"\r\n                                        }\r\n                                        target={\"_blank\"}\r\n                                    >\r\n                                        阿里云 CDN 管理控制台\r\n                                    </Link>\r\n                                    创建 CDN 加速域名，并设定源站为刚创建的 OSS\r\n                                    Bucket。在下方填写 CDN\r\n                                    加速域名，并选择是否使用 HTTPS：\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <DomainInput\r\n                                        value={policy.BaseURL}\r\n                                        onChange={handleChange(\"BaseURL\")}\r\n                                        required={useCDN === \"true\"}\r\n                                        label={\"CDN 加速域名\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(7, [useCDN === \"true\"])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在阿里云\r\n                                <Link\r\n                                    href={\r\n                                        \"https://usercenter.console.aliyun.com/#/manage/ak\"\r\n                                    }\r\n                                    target={\"_blank\"}\r\n                                >\r\n                                    安全信息管理\r\n                                </Link>\r\n                                页面获取 用户 AccessKey，并填写在下方。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        AccessKey ID\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        inputProps={{\r\n                                            pattern: \"\\\\S+\",\r\n                                            title: \"不能含有空格\",\r\n                                        }}\r\n                                        value={policy.AccessKey}\r\n                                        onChange={handleChange(\"AccessKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        Access Key Secret\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        inputProps={{\r\n                                            pattern: \"\\\\S+\",\r\n                                            title: \"不能含有空格\",\r\n                                        }}\r\n                                        value={policy.SecretKey}\r\n                                        onChange={handleChange(\"SecretKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(8, [useCDN === \"true\"])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                为此存储策略命名：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储策略名\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\r\n                                从机的\r\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        setMagicVar(\"path\");\r\n                                    }}\r\n                                >\r\n                                    路径魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储目录\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\r\n                                文件名。文件名也可使用魔法变量，\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        setMagicVar(\"file\");\r\n                                    }}\r\n                                >\r\n                                    文件名魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"开启重命名\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不开启\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            命名规则\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            上一步\r\n                        </Button>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否允许获取文件永久直链？\r\n                                <br />\r\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={(e) => {\r\n                                            if (\r\n                                                policy.IsPrivate === \"true\" &&\r\n                                                e.target.value === \"true\"\r\n                                            ) {\r\n                                                ToggleSnackbar(\r\n                                                    \"top\",\r\n                                                    \"right\",\r\n                                                    \"私有空间无法开启此功能\",\r\n                                                    \"warning\"\r\n                                                );\r\n                                                return;\r\n                                            }\r\n                                            handleChange(\"IsOriginLinkEnable\")(\r\n                                                e\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"允许\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"禁止\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传的单文件大小？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入限制：\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={\"单文件大小限制\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传文件扩展名？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\r\n                                    隔开\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            扩展名列表\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(2)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer} />\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                OSS Bucket 需要正确配置跨域策略后才能使用 Web\r\n                                端上传文件，Cloudreve\r\n                                可以帮您自动设置，您也可以参考文档步骤手动设置。如果您已设置过此\r\n                                Bucket 的跨域策略，此步骤可以跳过。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    color={\"secondary\"}\r\n                                    variant={\"contained\"}\r\n                                    className={classes.button}\r\n                                    onClick={() => createCORS()}\r\n                                    classes={{ label: classes.viewButtonLabel }}\r\n                                >\r\n                                    让 Cloudreve 帮我设置\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => {\r\n                                setActiveStep(\r\n                                    (prevActiveStep) => prevActiveStep + 1\r\n                                );\r\n                                setSkipped((prevSkipped) => {\r\n                                    const newSkipped = new Set(\r\n                                        prevSkipped.values()\r\n                                    );\r\n                                    newSkipped.add(activeStep);\r\n                                    return newSkipped;\r\n                                });\r\n                            }}\r\n                        >\r\n                            跳过\r\n                        </Button>{\" \"}\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 5 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>\r\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            返回存储策略列表\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../../actions\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport { getNumber } from \"../../../../utils\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"存储空间\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传路径\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"直链设置\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传限制\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"完成\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nexport default function RemoteGuide(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [skipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    // const [useCDN, setUseCDN] = useState(\"false\");\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"qiniu\",\r\n                  Name: \"\",\r\n                  SecretKey: \"\",\r\n                  AccessKey: \"\",\r\n                  BaseURL: \"\",\r\n                  IsPrivate: \"true\",\r\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                      mimetype: \"\",\r\n                  },\r\n              }\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(5);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy ? \"修改\" : \"添加\"} 七牛 存储策略\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">可选</Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label.title} {...stepProps}>\r\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(1);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>0</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在使用七牛存储策略前，请确保您在 参数设置 -\r\n                                站点信息 - 站点URL 中填写的 地址与实际相符，并且\r\n                                <strong>能够被外网正常访问</strong>。\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                前往\r\n                                <Link\r\n                                    href={\"https://portal.qiniu.com/create\"}\r\n                                    target={\"_blank\"}\r\n                                >\r\n                                    七牛控制面板\r\n                                </Link>\r\n                                创建对象存储资源。\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在下方填写您在七牛创建存储空间时指定的“存储空间名称”：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储空间名称\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.BucketName}\r\n                                        onChange={handleChange(\"BucketName\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>3</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在下方选择您创建的空间类型，推荐选择“私有空间”以获得更高的安全性，私有空间无法开启“获取直链”功能。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsPrivate}\r\n                                        onChange={handleChange(\"IsPrivate\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"私有\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"公有\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>4</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                填写您为存储空间绑定的 CDN 加速域名。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <DomainInput\r\n                                    value={policy.BaseURL}\r\n                                    onChange={handleChange(\"BaseURL\")}\r\n                                    required\r\n                                    label={\"CDN 加速域名\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>5</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在七牛控制面板进入 个人中心 -\r\n                                密钥管理，在下方填写获得到的 AK、SK。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        AK\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.AccessKey}\r\n                                        onChange={handleChange(\"AccessKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        SK\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.SecretKey}\r\n                                        onChange={handleChange(\"SecretKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\r\n                                从机的\r\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        setMagicVar(\"path\");\r\n                                    }}\r\n                                >\r\n                                    路径魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储目录\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\r\n                                文件名。文件名也可使用魔法变量，\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        setMagicVar(\"file\");\r\n                                    }}\r\n                                >\r\n                                    文件名魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"开启重命名\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不开启\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            命名规则\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            上一步\r\n                        </Button>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否允许获取文件永久直链？\r\n                                <br />\r\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={(e) => {\r\n                                            if (\r\n                                                policy.IsPrivate === \"true\" &&\r\n                                                e.target.value === \"true\"\r\n                                            ) {\r\n                                                ToggleSnackbar(\r\n                                                    \"top\",\r\n                                                    \"right\",\r\n                                                    \"私有空间无法开启此功能\",\r\n                                                    \"warning\"\r\n                                                );\r\n                                                return;\r\n                                            }\r\n                                            handleChange(\"IsOriginLinkEnable\")(\r\n                                                e\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"允许\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"禁止\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(4);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传的单文件大小？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入限制：\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={\"单文件大小限制\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传文件扩展名？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\r\n                                    隔开\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            扩展名列表\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(3, [\r\n                                    policy.MaxSize !== \"0\",\r\n                                    policy.OptionsSerialized.file_type !== \"\",\r\n                                ])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传文件 MimeType？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .mimetype === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        mimetype: \"image/*\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        mimetype: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.mimetype !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {getNumber(4, [\r\n                                        policy.MaxSize !== \"0\",\r\n                                        policy.OptionsSerialized.file_type !==\r\n                                            \"\",\r\n                                    ])}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入允许上传的 MimeType，多个请以半角逗号 ,\r\n                                    隔开。七牛服务器会侦测文件内容以判断\r\n                                    MimeType，再用判断值跟指定值进行匹配，匹配成功则允许上传\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            MimeType 列表\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .mimetype\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"mimetype\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(2)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}></div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                最后一步，为此存储策略命名：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储策略名\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(3)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            完成\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 5 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>\r\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            返回存储策略列表\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../../actions\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport { randomStr } from \"../../../../utils\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    \"@global\": {\r\n        code: {\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            display: \"inline-block\",\r\n            padding: \"2px 6px\",\r\n            fontSize: \"14px\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"rgba(255,229,100,0.1)\",\r\n        },\r\n        pre: {\r\n            margin: \"24px 0\",\r\n            padding: \"12px 18px\",\r\n            overflow: \"auto\",\r\n            direction: \"ltr\",\r\n            borderRadius: \"4px\",\r\n            backgroundColor: \"#272c34\",\r\n            color: \"#fff\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"存储端配置\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传路径\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"直链设置\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传限制\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"完成\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nexport default function RemoteGuide(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [skipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    const [useCDN, setUseCDN] = useState(\"false\");\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"remote\",\r\n                  Name: \"\",\r\n                  Server: \"https://example.com:5212\",\r\n                  SecretKey: randomStr(64),\r\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  BaseURL: \"\",\r\n                  IsPrivate: \"true\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                  },\r\n              }\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const testSlave = () => {\r\n        setLoading(true);\r\n\r\n        // 测试路径是否可用\r\n        API.post(\"/admin/policy/test/slave\", {\r\n            server: policy.Server,\r\n            secret: policy.SecretKey,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"通信正常\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        // 处理存储策略\r\n        if (useCDN === \"false\" || policy.IsOriginLinkEnable === \"false\") {\r\n            policyCopy.BaseURL = \"\";\r\n        }\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(5);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy ? \"修改\" : \"添加\"}从机存储策略\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">可选</Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label.title} {...stepProps}>\r\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(1);\r\n                    }}\r\n                >\r\n                    <Alert severity=\"info\" style={{ marginBottom: 10 }}>\r\n                        从机存储策略允许你使用同样运行了 Cloudreve\r\n                        的服务器作为存储端， 用户上传下载流量通过 HTTP 直传。\r\n                    </Alert>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                将和主站相同版本的 Cloudreve\r\n                                程序拷贝至要作为从机的服务器上。\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                下方为系统为您随机生成的从机端密钥，一般无需改动，如果有自定义需求，\r\n                                可将您的密钥填入下方：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        从机密钥\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        inputProps={{\r\n                                            minlength: 64,\r\n                                        }}\r\n                                        value={policy.SecretKey}\r\n                                        onChange={handleChange(\"SecretKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>3</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                修改从机配置文件。\r\n                                <br />\r\n                                在从机端 Cloudreve 的同级目录下新建\r\n                                <code>conf.ini</code>\r\n                                文件，填入从机配置，启动/重启从机端 Cloudreve。\r\n                                以下为一个可供参考的配置例子，其中密钥部分已帮您填写为上一步所生成的。\r\n                            </Typography>\r\n                            <pre>\r\n                                [System]\r\n                                <br />\r\n                                Mode = slave\r\n                                <br />\r\n                                Listen = :5212\r\n                                <br />\r\n                                <br />\r\n                                [Slave]\r\n                                <br />\r\n                                Secret = {policy.SecretKey}\r\n                                <br />\r\n                                <br />\r\n                                [CORS]\r\n                                <br />\r\n                                AllowOrigins = *<br />\r\n                                AllowMethods = OPTIONS,GET,POST\r\n                                <br />\r\n                                AllowHeaders = *<br />\r\n                            </pre>\r\n                            <Typography variant={\"body2\"}>\r\n                                从机端配置文件格式大致与主站端相同，区别在于：\r\n                                <ul>\r\n                                    <li>\r\n                                        <code>System</code>\r\n                                        分区下的\r\n                                        <code>mode</code>\r\n                                        字段必须更改为<code>slave</code>\r\n                                    </li>\r\n                                    <li>\r\n                                        必须指定<code>Slave</code>分区下的\r\n                                        <code>Secret</code>\r\n                                        字段，其值为第二步里填写或生成的密钥。\r\n                                    </li>\r\n                                    <li>\r\n                                        必须启动跨域配置，即<code>CORS</code>\r\n                                        字段的内容，\r\n                                        具体可参考上文范例或官方文档。如果配置不正确，用户将无法通过\r\n                                        Web 端向从机上传文件。\r\n                                    </li>\r\n                                </ul>\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>4</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                填写从机地址。\r\n                                <br />\r\n                                如果主站启用了\r\n                                HTTPS，从机也需要启用，并在下方填入 HTTPS\r\n                                协议的地址。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        从机地址\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        fullWidth\r\n                                        required\r\n                                        type={\"url\"}\r\n                                        value={policy.Server}\r\n                                        onChange={handleChange(\"Server\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>5</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                完成以上步骤后，你可以点击下方的测试按钮测试通信是否正常。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    onClick={() => testSlave()}\r\n                                    variant={\"outlined\"}\r\n                                    color={\"primary\"}\r\n                                >\r\n                                    测试从机通信\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\r\n                                从机的\r\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        setMagicVar(\"path\");\r\n                                    }}\r\n                                >\r\n                                    路径魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储目录\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\r\n                                文件名。文件名也可使用魔法变量，\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        setMagicVar(\"file\");\r\n                                    }}\r\n                                >\r\n                                    文件名魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"开启重命名\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不开启\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            命名规则\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            上一步\r\n                        </Button>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否允许获取文件永久直链？\r\n                                <br />\r\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={handleChange(\r\n                                            \"IsOriginLinkEnable\"\r\n                                        )}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"允许\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"禁止\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.IsOriginLinkEnable === \"true\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    是否要对下载/直链使用 CDN？\r\n                                    <br />\r\n                                    开启后，用户访问文件时的 URL\r\n                                    中的域名部分会被替换为 CDN 域名。\r\n                                </Typography>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl required component=\"fieldset\">\r\n                                        <RadioGroup\r\n                                            required\r\n                                            value={useCDN}\r\n                                            onChange={(e) => {\r\n                                                if (\r\n                                                    e.target.value === \"false\"\r\n                                                ) {\r\n                                                    setPolicy({\r\n                                                        ...policy,\r\n                                                        BaseURL: \"\",\r\n                                                    });\r\n                                                }\r\n                                                setUseCDN(e.target.value);\r\n                                            }}\r\n                                            row\r\n                                        >\r\n                                            <FormControlLabel\r\n                                                value={\"true\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label=\"使用\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                value={\"false\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label=\"不使用\"\r\n                                            />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Collapse in={useCDN === \"true\"}>\r\n                            <div className={classes.subStepContainer}>\r\n                                <div className={classes.stepNumberContainer}>\r\n                                    <div className={classes.stepNumber}>3</div>\r\n                                </div>\r\n                                <div className={classes.subStepContent}>\r\n                                    <Typography variant={\"body2\"}>\r\n                                        选择协议并填写 CDN 域名\r\n                                    </Typography>\r\n\r\n                                    <div className={classes.form}>\r\n                                        <DomainInput\r\n                                            value={policy.BaseURL}\r\n                                            onChange={handleChange(\"BaseURL\")}\r\n                                            required={\r\n                                                policy.IsOriginLinkEnable ===\r\n                                                    \"true\" && useCDN === \"true\"\r\n                                            }\r\n                                            label={\"CDN 前缀\"}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Collapse>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(4);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传的单文件大小？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入限制：\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={\"单文件大小限制\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传文件扩展名？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\r\n                                    隔开\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            扩展名列表\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(2)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}></div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                最后一步，为此存储策略命名：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储策略名\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(3)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            完成\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 5 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>\r\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            返回存储策略列表\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                isSlave\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                isSlave\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../../actions\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"存储空间\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传路径\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"直链设置\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传限制\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"完成\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nexport default function UpyunGuide(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [skipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"upyun\",\r\n                  Name: \"\",\r\n                  SecretKey: \"\",\r\n                  AccessKey: \"\",\r\n                  BaseURL: \"\",\r\n                  IsPrivate: \"false\",\r\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                      token: \"\",\r\n                  },\r\n              }\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(5);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy ? \"修改\" : \"添加\"} 又拍云 存储策略\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">可选</Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label.title} {...stepProps}>\r\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(1);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>0</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在使用又拍云存储策略前，请确保您在 参数设置 -\r\n                                站点信息 - 站点URL 中填写的 地址与实际相符，并且\r\n                                <strong>能够被外网正常访问</strong>。\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                前往\r\n                                <Link\r\n                                    href={\r\n                                        \"https://console.upyun.com/services/create/file/\"\r\n                                    }\r\n                                    target={\"_blank\"}\r\n                                >\r\n                                    又拍云面板\r\n                                </Link>\r\n                                创建云存储服务。\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在下方填写所创建的服务名称：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        服务名称\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.BucketName}\r\n                                        onChange={handleChange(\"BucketName\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>3</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                为此服务创建或授权有读取、写入、删除权限的操作员，然后将操作员信息填写在下方：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        操作员名\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.AccessKey}\r\n                                        onChange={handleChange(\"AccessKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        操作员密码\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.SecretKey}\r\n                                        onChange={handleChange(\"SecretKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>4</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                填写为云存储服务绑定的域名，并根据实际情况选择是否使用\r\n                                HTTPS：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <DomainInput\r\n                                    value={policy.BaseURL}\r\n                                    onChange={handleChange(\"BaseURL\")}\r\n                                    required\r\n                                    label={\"加速域名\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>5</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                此步骤可保持默认并跳过，但是强烈建议您跟随此步骤操作。\r\n                                <br />\r\n                                前往所创建云存储服务的 功能配置 面板，转到\r\n                                访问配置 选项卡，开启 Token 防盗链并设定密码。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsPrivate}\r\n                                        onChange={handleChange(\"IsPrivate\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"已开启 Token 防盗链\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"未开启 Token 防盗链\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.IsPrivate === \"true\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>6</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    填写您所设置的 Token 防盗链 密钥\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            Token 防盗链 密钥\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized.token\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"token\"\r\n                                            )}\r\n                                            required={\r\n                                                policy.IsPrivate === \"true\"\r\n                                            }\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\r\n                                从机的\r\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        setMagicVar(\"path\");\r\n                                    }}\r\n                                >\r\n                                    路径魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储目录\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\r\n                                文件名。文件名也可使用魔法变量，\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    onClick={(e) => {\r\n                                        e.preventDefault();\r\n                                        setMagicVar(\"file\");\r\n                                    }}\r\n                                >\r\n                                    文件名魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"开启重命名\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不开启\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            命名规则\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            上一步\r\n                        </Button>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否允许获取文件永久直链？\r\n                                <br />\r\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={(e) => {\r\n                                            if (\r\n                                                policy.IsPrivate === \"true\" &&\r\n                                                e.target.value === \"true\"\r\n                                            ) {\r\n                                                ToggleSnackbar(\r\n                                                    \"top\",\r\n                                                    \"right\",\r\n                                                    \"开启 Token 防盗链后无法使用直链功能\",\r\n                                                    \"warning\"\r\n                                                );\r\n                                                return;\r\n                                            }\r\n                                            handleChange(\"IsOriginLinkEnable\")(\r\n                                                e\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"允许\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"禁止\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(4);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传的单文件大小？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入限制：\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={\"单文件大小限制\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传文件扩展名？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\r\n                                    隔开\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            扩展名列表\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(2)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}></div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                最后一步，为此存储策略命名：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储策略名\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(3)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            完成\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 5 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>\r\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            返回存储策略列表\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../../actions\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport MagicVar from \"../../Dialogs/MagicVar\";\r\nimport DomainInput from \"../../Common/DomainInput\";\r\nimport SizeInput from \"../../Common/SizeInput\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getNumber } from \"../../../../utils\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AlertDialog from \"../../Dialogs/Alert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    viewButtonLabel: { textTransform: \"none\" },\r\n    \"@global\": {\r\n        code: {\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            display: \"inline-block\",\r\n            padding: \"2px 6px\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"rgba(255,229,100,0.1)\",\r\n        },\r\n        pre: {\r\n            margin: \"24px 0\",\r\n            padding: \"12px 18px\",\r\n            overflow: \"auto\",\r\n            direction: \"ltr\",\r\n            borderRadius: \"4px\",\r\n            backgroundColor: \"#272c34\",\r\n            color: \"#fff\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst steps = [\r\n    {\r\n        title: \"存储空间\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传路径\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"直链设置\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"上传限制\",\r\n        optional: false,\r\n    },\r\n    {\r\n        title: \"跨域策略\",\r\n        optional: true,\r\n    },\r\n    {\r\n        title: \"完成\",\r\n        optional: false,\r\n    },\r\n];\r\n\r\nconst regions = {\r\n    \"us-east-2\": \"US East (Ohio)\",\r\n    \"us-east-1\": \"US East (N. Virginia)\",\r\n    \"us-west-1\": \"US West (N. California)\",\r\n    \"us-west-2\": \"US West (Oregon)\",\r\n    \"af-south-1\": \"Africa (Cape Town)\",\r\n    \"ap-east-1\": \"Asia Pacific (Hong Kong)\",\r\n    \"ap-south-1\": \"Asia Pacific (Mumbai)\",\r\n    \"ap-northeast-3\": \"Asia Pacific (Osaka-Local)\",\r\n    \"ap-northeast-2\": \"Asia Pacific (Seoul)\",\r\n    \"ap-southeast-1\": \"Asia Pacific (Singapore)\",\r\n    \"ap-southeast-2\": \"Asia Pacific (Sydney)\",\r\n    \"ap-northeast-1\": \"Asia Pacific (Tokyo)\",\r\n    \"ca-central-1\": \"Canada (Central)\",\r\n    \"cn-north-1\": \"China (Beijing)\",\r\n    \"cn-northwest-1\": \"China (Ningxia)\",\r\n    \"eu-central-1\": \"Europe (Frankfurt)\",\r\n    \"eu-west-1\": \"Europe (Ireland)\",\r\n    \"eu-west-2\": \"Europe (London)\",\r\n    \"eu-south-1\": \"Europe (Milan)\",\r\n    \"eu-west-3\": \"Europe (Paris)\",\r\n    \"eu-north-1\": \"Europe (Stockholm)\",\r\n    \"me-south-1\": \"Middle East (Bahrain)\",\r\n    \"sa-east-1\": \"South America (São Paulo)\",\r\n};\r\n\r\nexport default function S3Guide(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [alertOpen, setAlertOpen] = useState(true);\r\n    const [skipped, setSkipped] = React.useState(new Set());\r\n    const [magicVar, setMagicVar] = useState(\"\");\r\n    const [useCDN, setUseCDN] = useState(\"false\");\r\n    const [policy, setPolicy] = useState(\r\n        props.policy\r\n            ? props.policy\r\n            : {\r\n                  Type: \"s3\",\r\n                  Name: \"\",\r\n                  SecretKey: \"\",\r\n                  AccessKey: \"\",\r\n                  BaseURL: \"\",\r\n                  Server: \"\",\r\n                  IsPrivate: \"true\",\r\n                  DirNameRule: \"uploads/{year}/{month}/{day}\",\r\n                  AutoRename: \"true\",\r\n                  FileNameRule: \"{randomkey8}_{originname}\",\r\n                  IsOriginLinkEnable: \"false\",\r\n                  MaxSize: \"0\",\r\n                  OptionsSerialized: {\r\n                      file_type: \"\",\r\n                      region: \"us-east-2\",\r\n                  },\r\n              }\r\n    );\r\n    const [policyID, setPolicyID] = useState(\r\n        props.policy ? props.policy.ID : 0\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        if (useCDN === \"false\") {\r\n            policyCopy.BaseURL = \"\";\r\n        }\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then((response) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\r\n                    \"success\"\r\n                );\r\n                setActiveStep(4);\r\n                setPolicyID(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    const createCORS = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/policy/cors\", {\r\n            id: policyID,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"跨域策略已添加\", \"success\");\r\n                setActiveStep(5);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <AlertDialog\r\n                open={alertOpen}\r\n                onClose={() => setAlertOpen(false)}\r\n                title={\"警告\"}\r\n                msg={\r\n                    \"S3 类型存储策略目前仅可用于自己使用，或者是给受信任的用户组使用。\"\r\n                }\r\n            />\r\n            <Typography variant={\"h6\"}>\r\n                {props.policy ? \"修改\" : \"添加\"} Amazon S3 存储策略\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">可选</Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    return (\r\n                        <Step key={label.title} {...stepProps}>\r\n                            <StepLabel {...labelProps}>{label.title}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n\r\n            {activeStep === 0 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(1);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>0</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                Cloudreve 主站需要启用 CORS 支持，具体步骤如下：\r\n                                <br />\r\n                                修改 Cloudreve 配置文件，新增以下 CORS\r\n                                配置项，保存并重启 Cloudreve。\r\n                                <pre>\r\n                                    [CORS]\r\n                                    <br />\r\n                                    AllowOrigins = *<br />\r\n                                    AllowMethods = OPTIONS,GET,POST\r\n                                    <br />\r\n                                    AllowHeaders = *<br />\r\n                                </pre>\r\n                            </Typography>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                前往 AWS S3\r\n                                控制台创建存储桶，在下方填写您创建存储桶时指定的\r\n                                <code>存储桶名称</code>：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储桶名称\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.BucketName}\r\n                                        onChange={handleChange(\"BucketName\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                在下方选择您创建的空间的公共访问权限类型，推荐选择“私有”以获得更高的安全性，私有空间无法开启“获取直链”功能。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsPrivate}\r\n                                        onChange={handleChange(\"IsPrivate\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"阻止全部公共访问权限\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"允许公共读取\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>3</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                (可选) 指定存储桶的 EndPoint（地域节点），\r\n                                填写为完整的 URL 格式，比如{\" \"}\r\n                                <code>https://bucket.region.example.com</code>。\r\n                                留空则将使用系统生成的默认接入点。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        EndPoint\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        value={policy.Server}\r\n                                        onChange={handleChange(\"Server\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>4</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                选择存储桶所在的区域，或者手动输入区域代码\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <Autocomplete\r\n                                        options={Object.keys(regions)}\r\n                                        freeSolo\r\n                                        value={policy.OptionsSerialized.region}\r\n                                        onInputChange={(_, value) =>\r\n                                            handleOptionChange(\"region\")({\r\n                                                target: { value: value },\r\n                                            })\r\n                                        }\r\n                                        renderOption={(option) => (\r\n                                            <React.Fragment>\r\n                                                {regions[option]}\r\n                                            </React.Fragment>\r\n                                        )}\r\n                                        renderInput={(params) => (\r\n                                            <TextField\r\n                                                style={{ width: \"100%\" }}\r\n                                                {...params}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>5</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否要使用 CDN 加速访问？\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={useCDN}\r\n                                        onChange={(e) => {\r\n                                            setUseCDN(e.target.value);\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"使用\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不使用\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={useCDN === \"true\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>6</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    CDN 加速域名\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <DomainInput\r\n                                        value={policy.BaseURL}\r\n                                        onChange={handleChange(\"BaseURL\")}\r\n                                        required={useCDN === \"true\"}\r\n                                        label={\"CDN 加速域名\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(6, [useCDN === \"true\"])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                获取访问密钥，并填写在下方。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        AccessKey\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        inputProps={{\r\n                                            pattern: \"\\\\S+\",\r\n                                            title: \"不能含有空格\",\r\n                                        }}\r\n                                        value={policy.AccessKey}\r\n                                        onChange={handleChange(\"AccessKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        SecretKey\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        inputProps={{\r\n                                            pattern: \"\\\\S+\",\r\n                                            title: \"不能含有空格\",\r\n                                        }}\r\n                                        value={policy.SecretKey}\r\n                                        onChange={handleChange(\"SecretKey\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {getNumber(7, [useCDN === \"true\"])}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                为此存储策略命名：\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储策略名\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.Name}\r\n                                        onChange={handleChange(\"Name\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 1 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(2);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                请在下方输入文件的存储目录路径，可以为绝对路径或相对路径（相对于\r\n                                从机的\r\n                                Cloudreve）。路径中可以使用魔法变量，文件在上传时会自动替换这些变量为相应值；\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    href={\"javascript:void()\"}\r\n                                    onClick={() => setMagicVar(\"path\")}\r\n                                >\r\n                                    路径魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        存储目录\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        required\r\n                                        value={policy.DirNameRule}\r\n                                        onChange={handleChange(\"DirNameRule\")}\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>2</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否需要对存储的物理文件进行重命名？此处的重命名不会影响最终呈现给用户的\r\n                                文件名。文件名也可使用魔法变量，\r\n                                可用魔法变量可参考{\" \"}\r\n                                <Link\r\n                                    color={\"secondary\"}\r\n                                    href={\"javascript:void()\"}\r\n                                    onClick={() => setMagicVar(\"file\")}\r\n                                >\r\n                                    文件名魔法变量列表\r\n                                </Link>{\" \"}\r\n                                。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        aria-label=\"gender\"\r\n                                        name=\"gender1\"\r\n                                        value={policy.AutoRename}\r\n                                        onChange={handleChange(\"AutoRename\")}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"开启重命名\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不开启\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <Collapse in={policy.AutoRename === \"true\"}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            命名规则\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required={\r\n                                                policy.AutoRename === \"true\"\r\n                                            }\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </Collapse>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(0)}\r\n                        >\r\n                            上一步\r\n                        </Button>\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 2 && (\r\n                <form\r\n                    className={classes.stepContent}\r\n                    onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        setActiveStep(3);\r\n                    }}\r\n                >\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否允许获取文件永久直链？\r\n                                <br />\r\n                                开启后，用户可以请求获得能直接访问到文件内容的直链，适用于图床应用或自用。\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={policy.IsOriginLinkEnable}\r\n                                        onChange={(e) => {\r\n                                            if (\r\n                                                policy.IsPrivate === \"true\" &&\r\n                                                e.target.value === \"true\"\r\n                                            ) {\r\n                                                ToggleSnackbar(\r\n                                                    \"top\",\r\n                                                    \"right\",\r\n                                                    \"私有空间无法开启此功能\",\r\n                                                    \"warning\"\r\n                                                );\r\n                                                return;\r\n                                            }\r\n                                            handleChange(\"IsOriginLinkEnable\")(\r\n                                                e\r\n                                            );\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"允许\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"禁止\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(1)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 3 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>1</div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传的单文件大小？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.MaxSize === \"0\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"10485760\",\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    MaxSize: \"0\",\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.MaxSize !== \"0\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>2</div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入限制：\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <SizeInput\r\n                                        value={policy.MaxSize}\r\n                                        onChange={handleChange(\"MaxSize\")}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={\"单文件大小限制\"}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer}>\r\n                            <div className={classes.stepNumber}>\r\n                                {policy.MaxSize !== \"0\" ? \"3\" : \"2\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                是否限制上传文件扩展名？\r\n                            </Typography>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl required component=\"fieldset\">\r\n                                    <RadioGroup\r\n                                        required\r\n                                        value={\r\n                                            policy.OptionsSerialized\r\n                                                .file_type === \"\"\r\n                                                ? \"false\"\r\n                                                : \"true\"\r\n                                        }\r\n                                        onChange={(e) => {\r\n                                            if (e.target.value === \"true\") {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type:\r\n                                                            \"jpg,png,mp4,zip,rar\",\r\n                                                    },\r\n                                                });\r\n                                            } else {\r\n                                                setPolicy({\r\n                                                    ...policy,\r\n                                                    OptionsSerialized: {\r\n                                                        ...policy.OptionsSerialized,\r\n                                                        file_type: \"\",\r\n                                                    },\r\n                                                });\r\n                                            }\r\n                                        }}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value={\"true\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"限制\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value={\"false\"}\r\n                                            control={\r\n                                                <Radio color={\"primary\"} />\r\n                                            }\r\n                                            label=\"不限制\"\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <Collapse in={policy.OptionsSerialized.file_type !== \"\"}>\r\n                        <div className={classes.subStepContainer}>\r\n                            <div className={classes.stepNumberContainer}>\r\n                                <div className={classes.stepNumber}>\r\n                                    {policy.MaxSize !== \"0\" ? \"4\" : \"3\"}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.subStepContent}>\r\n                                <Typography variant={\"body2\"}>\r\n                                    输入允许上传的文件扩展名，多个请以半角逗号 ,\r\n                                    隔开\r\n                                </Typography>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            扩展名列表\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Collapse>\r\n\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => setActiveStep(2)}\r\n                        >\r\n                            上一步\r\n                        </Button>{\" \"}\r\n                        <Button\r\n                            disabled={loading}\r\n                            type={\"submit\"}\r\n                            variant={\"contained\"}\r\n                            color={\"primary\"}\r\n                        >\r\n                            下一步\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 4 && (\r\n                <form className={classes.stepContent} onSubmit={submitPolicy}>\r\n                    <div className={classes.subStepContainer}>\r\n                        <div className={classes.stepNumberContainer} />\r\n                        <div className={classes.subStepContent}>\r\n                            <Typography variant={\"body2\"}>\r\n                                S3 Bucket 需要正确配置跨域策略后才能使用 Web\r\n                                端上传文件，Cloudreve\r\n                                可以帮您自动设置，您也可以参考文档步骤手动设置。如果您已设置过此\r\n                                Bucket 的跨域策略，此步骤可以跳过。\r\n                            </Typography>\r\n                            <div className={classes.form}>\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    color={\"secondary\"}\r\n                                    variant={\"contained\"}\r\n                                    className={classes.button}\r\n                                    onClick={() => createCORS()}\r\n                                    classes={{ label: classes.viewButtonLabel }}\r\n                                >\r\n                                    让 Cloudreve 帮我设置\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"default\"}\r\n                            className={classes.button}\r\n                            onClick={() => {\r\n                                setActiveStep(\r\n                                    (prevActiveStep) => prevActiveStep + 1\r\n                                );\r\n                                setSkipped((prevSkipped) => {\r\n                                    const newSkipped = new Set(\r\n                                        prevSkipped.values()\r\n                                    );\r\n                                    newSkipped.add(activeStep);\r\n                                    return newSkipped;\r\n                                });\r\n                            }}\r\n                        >\r\n                            跳过\r\n                        </Button>{\" \"}\r\n                    </div>\r\n                </form>\r\n            )}\r\n\r\n            {activeStep === 5 && (\r\n                <>\r\n                    <form className={classes.stepContent}>\r\n                        <Typography>\r\n                            存储策略已{props.policy ? \"保存\" : \"添加\"}！\r\n                        </Typography>\r\n                        <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                            要使用此存储策略，请到用户组管理页面，为相应用户组绑定此存储策略。\r\n                        </Typography>\r\n                    </form>\r\n                    <div className={classes.stepFooter}>\r\n                        <Button\r\n                            color={\"primary\"}\r\n                            className={classes.button}\r\n                            onClick={() => history.push(\"/admin/policy\")}\r\n                        >\r\n                            返回存储策略列表\r\n                        </Button>\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n            <MagicVar\r\n                open={magicVar === \"file\"}\r\n                isFile\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n            <MagicVar\r\n                open={magicVar === \"path\"}\r\n                onClose={() => setMagicVar(\"\")}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport COSGuide from \"./Guid/COSGuide\";\r\nimport LocalGuide from \"./Guid/LocalGuide\";\r\nimport OneDriveGuide from \"./Guid/OneDriveGuide\";\r\nimport OSSGuide from \"./Guid/OSSGuide\";\r\nimport QiniuGuide from \"./Guid/QiniuGuide\";\r\nimport RemoteGuide from \"./Guid/RemoteGuide\";\r\nimport UpyunGuide from \"./Guid/UpyunGuide\";\r\nimport S3Guide from \"./Guid/S3Guide\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function AddPolicyParent() {\r\n    const classes = useStyles();\r\n\r\n    const { type } = useParams();\r\n\r\n    return (\r\n        <div>\r\n            <Paper square className={classes.content}>\r\n                {type === \"local\" && <LocalGuide />}\r\n                {type === \"remote\" && <RemoteGuide />}\r\n                {type === \"qiniu\" && <QiniuGuide />}\r\n                {type === \"oss\" && <OSSGuide />}\r\n                {type === \"upyun\" && <UpyunGuide />}\r\n                {type === \"cos\" && <COSGuide />}\r\n                {type === \"onedrive\" && <OneDriveGuide />}\r\n                {type === \"s3\" && <S3Guide />}\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../../actions\";\r\nimport API from \"../../../../middleware/Api\";\r\n\r\nexport default function EditPro(props) {\r\n    const [, setLoading] = useState(false);\r\n    const [policy, setPolicy] = useState(props.policy);\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setPolicy({\r\n            ...policy,\r\n            OptionsSerialized: {\r\n                ...policy.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const submitPolicy = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        const policyCopy = { ...policy };\r\n        policyCopy.OptionsSerialized = { ...policyCopy.OptionsSerialized };\r\n\r\n        // 类型转换\r\n        policyCopy.AutoRename = policyCopy.AutoRename === \"true\";\r\n        policyCopy.IsPrivate = policyCopy.IsPrivate === \"true\";\r\n        policyCopy.IsOriginLinkEnable =\r\n            policyCopy.IsOriginLinkEnable === \"true\";\r\n        policyCopy.MaxSize = parseInt(policyCopy.MaxSize);\r\n        policyCopy.OptionsSerialized.file_type = policyCopy.OptionsSerialized.file_type.split(\r\n            \",\"\r\n        );\r\n        if (\r\n            policyCopy.OptionsSerialized.file_type.length === 1 &&\r\n            policyCopy.OptionsSerialized.file_type[0] === \"\"\r\n        ) {\r\n            policyCopy.OptionsSerialized.file_type = [];\r\n        }\r\n\r\n        API.post(\"/admin/policy\", {\r\n            policy: policyCopy,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"存储策略已\" + (props.policy ? \"保存\" : \"添加\"),\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>编辑存储策略</Typography>\r\n            <TableContainer>\r\n                <form onSubmit={submitPolicy}>\r\n                    <Table aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>设置项</TableCell>\r\n                                <TableCell>值</TableCell>\r\n                                <TableCell>描述</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    ID\r\n                                </TableCell>\r\n                                <TableCell>{policy.ID}</TableCell>\r\n                                <TableCell>存储策略编号</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    类型\r\n                                </TableCell>\r\n                                <TableCell>{policy.Type}</TableCell>\r\n                                <TableCell>存储策略类型</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    名称\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            required\r\n                                            value={policy.Name}\r\n                                            onChange={handleChange(\"Name\")}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>存储策名称</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Server\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            value={policy.Server}\r\n                                            onChange={handleChange(\"Server\")}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>存储端 Endpoint</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    BucketName\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            value={policy.BucketName}\r\n                                            onChange={handleChange(\r\n                                                \"BucketName\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>存储桶标识</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    私有空间\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <RadioGroup\r\n                                            required\r\n                                            value={policy.IsPrivate}\r\n                                            onChange={handleChange(\"IsPrivate\")}\r\n                                            row\r\n                                        >\r\n                                            <FormControlLabel\r\n                                                value={\"true\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label=\"是\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                value={\"false\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label=\"否\"\r\n                                            />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>是否为私有空间</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    文件资源根URL\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            value={policy.BaseURL}\r\n                                            onChange={handleChange(\"BaseURL\")}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    预览/获取文件外链时生成URL的前缀\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    AccessKey\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            rowsMax={10}\r\n                                            value={policy.AccessKey}\r\n                                            onChange={handleChange(\"AccessKey\")}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>AccessKey / 刷新Token</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    SecretKey\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            rowsMax={10}\r\n                                            value={policy.SecretKey}\r\n                                            onChange={handleChange(\"SecretKey\")}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>SecretKey</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    最大单文件尺寸 (Bytes)\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            type={\"number\"}\r\n                                            inputProps={{\r\n                                                min: 0,\r\n                                                step: 1,\r\n                                            }}\r\n                                            value={policy.MaxSize}\r\n                                            onChange={handleChange(\"MaxSize\")}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    最大可上传的文件尺寸，填写为0表示不限制\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    自动重命名\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <RadioGroup\r\n                                            required\r\n                                            value={policy.AutoRename}\r\n                                            onChange={handleChange(\r\n                                                \"AutoRename\"\r\n                                            )}\r\n                                            row\r\n                                        >\r\n                                            <FormControlLabel\r\n                                                value={\"true\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label=\"是\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                value={\"false\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label=\"否\"\r\n                                            />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    是否根据规则对上传物理文件重命名\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    存储路径\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={policy.DirNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"DirNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>文件物理存储路径</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    存储文件名\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={policy.FileNameRule}\r\n                                            onChange={handleChange(\r\n                                                \"FileNameRule\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>文件物理存储文件名</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    允许获取外链\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <RadioGroup\r\n                                            required\r\n                                            value={policy.IsOriginLinkEnable}\r\n                                            onChange={handleChange(\r\n                                                \"IsOriginLinkEnable\"\r\n                                            )}\r\n                                            row\r\n                                        >\r\n                                            <FormControlLabel\r\n                                                value={\"true\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label=\"是\"\r\n                                            />\r\n                                            <FormControlLabel\r\n                                                value={\"false\"}\r\n                                                control={\r\n                                                    <Radio color={\"primary\"} />\r\n                                                }\r\n                                                label=\"否\"\r\n                                            />\r\n                                        </RadioGroup>\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    是否允许获取外链。注意，某些存储策略类型不支持，即使在此开启，获取的外链也无法使用。\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    又拍云防盗链 Token\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized.token\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"token\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>仅对又拍云存储策略有效</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    允许文件扩展名\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .file_type\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"file_type\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>留空表示不限制</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    允许的 MimeType\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .mimetype\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"mimetype\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>仅对七牛存储策略有效</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    OneDrive 重定向地址\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .od_redirect\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"od_redirect\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>一般添加后无需修改</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    OneDrive 反代服务器地址\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .od_proxy\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"od_proxy\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    仅对 OneDrive 存储策略有效\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    OneDrive/SharePoint 驱动器资源标识\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .od_driver\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"od_driver\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    仅对 OneDrive\r\n                                    存储策略有效，留空则使用用户的默认 OneDrive\r\n                                    驱动器\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    Amazon S3 Region\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized.region\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"region\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    仅对 Amazon S3 存储策略有效\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    内网 EndPoint\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl>\r\n                                        <Input\r\n                                            multiline\r\n                                            value={\r\n                                                policy.OptionsSerialized\r\n                                                    .server_side_endpoint\r\n                                            }\r\n                                            onChange={handleOptionChange(\r\n                                                \"server_side_endpoint\"\r\n                                            )}\r\n                                        />\r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>仅对 OSS 存储策略有效</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                    <Button\r\n                        type={\"submit\"}\r\n                        color={\"primary\"}\r\n                        variant={\"contained\"}\r\n                        style={{ margin: 8 }}\r\n                    >\r\n                        保存更改\r\n                    </Button>\r\n                </form>\r\n            </TableContainer>\r\n        </div>\r\n    );\r\n}\r\n","import Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport API from \"../../../middleware/Api\";\r\nimport COSGuide from \"./Guid/COSGuide\";\r\nimport EditPro from \"./Guid/EditPro\";\r\nimport LocalGuide from \"./Guid/LocalGuide\";\r\nimport OneDriveGuide from \"./Guid/OneDriveGuide\";\r\nimport OSSGuide from \"./Guid/OSSGuide\";\r\nimport QiniuGuide from \"./Guid/QiniuGuide\";\r\nimport RemoteGuide from \"./Guid/RemoteGuide\";\r\nimport UpyunGuide from \"./Guid/UpyunGuide\";\r\nimport S3Guide from \"./Guid/S3Guide\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function EditPolicyPreload() {\r\n    const classes = useStyles();\r\n    const [type, setType] = useState(\"\");\r\n    const [policy, setPolicy] = useState({});\r\n\r\n    const { mode, id } = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        setType(\"\");\r\n        API.get(\"/admin/policy/\" + id)\r\n            .then((response) => {\r\n                response.data.IsOriginLinkEnable = response.data\r\n                    .IsOriginLinkEnable\r\n                    ? \"true\"\r\n                    : \"false\";\r\n                response.data.AutoRename = response.data.AutoRename\r\n                    ? \"true\"\r\n                    : \"false\";\r\n                response.data.MaxSize = response.data.MaxSize.toString();\r\n                response.data.IsPrivate = response.data.IsPrivate\r\n                    ? \"true\"\r\n                    : \"false\";\r\n                response.data.OptionsSerialized.file_type = response.data\r\n                    .OptionsSerialized.file_type\r\n                    ? response.data.OptionsSerialized.file_type.join(\",\")\r\n                    : \"\";\r\n                setPolicy(response.data);\r\n                setType(response.data.Type);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, [id]);\r\n\r\n    return (\r\n        <div>\r\n            <Paper square className={classes.content}>\r\n                {mode === \"guide\" && (\r\n                    <>\r\n                        {type === \"local\" && <LocalGuide policy={policy} />}\r\n                        {type === \"remote\" && <RemoteGuide policy={policy} />}\r\n                        {type === \"qiniu\" && <QiniuGuide policy={policy} />}\r\n                        {type === \"oss\" && <OSSGuide policy={policy} />}\r\n                        {type === \"upyun\" && <UpyunGuide policy={policy} />}\r\n                        {type === \"cos\" && <COSGuide policy={policy} />}\r\n                        {type === \"onedrive\" && (\r\n                            <OneDriveGuide policy={policy} />\r\n                        )}\r\n                        {type === \"s3\" && <S3Guide policy={policy} />}\r\n                    </>\r\n                )}\r\n\r\n                {mode === \"pro\" && type !== \"\" && <EditPro policy={policy} />}\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { Delete, Edit } from \"@material-ui/icons\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { sizeToString } from \"../../../utils\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    headerRight: {},\r\n}));\r\n\r\nconst columns = [\r\n    { id: \"#\", label: \"#\", minWidth: 50 },\r\n    { id: \"name\", label: \"名称\", minWidth: 170 },\r\n    { id: \"type\", label: \"存储策略\", minWidth: 170 },\r\n    {\r\n        id: \"count\",\r\n        label: \"下属用户数\",\r\n        minWidth: 50,\r\n        align: \"right\",\r\n    },\r\n    {\r\n        id: \"size\",\r\n        label: \"最大容量\",\r\n        minWidth: 100,\r\n        align: \"right\",\r\n    },\r\n    {\r\n        id: \"action\",\r\n        label: \"操作\",\r\n        minWidth: 170,\r\n        align: \"right\",\r\n    },\r\n];\r\n\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function Group() {\r\n    const classes = useStyles();\r\n    const [groups, setGroups] = useState([]);\r\n    const [statics, setStatics] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [policies, setPolicies] = React.useState({});\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const query = useQuery();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const loadList = () => {\r\n        API.post(\"/admin/group/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: \"id desc\",\r\n        })\r\n            .then((response) => {\r\n                setGroups(response.data.items);\r\n                setStatics(response.data.statics);\r\n                setTotal(response.data.total);\r\n                setPolicies(response.data.policies);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (query.get(\"code\") === \"0\") {\r\n            ToggleSnackbar(\"top\", \"right\", \"授权成功\", \"success\");\r\n        } else if (query.get(\"msg\") && query.get(\"msg\") !== \"\") {\r\n            ToggleSnackbar(\r\n                \"top\",\r\n                \"right\",\r\n                query.get(\"msg\") + \", \" + query.get(\"err\"),\r\n                \"warning\"\r\n            );\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize]);\r\n\r\n    const deletePolicy = (id) => {\r\n        API.delete(\"/admin/group/\" + id)\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"用户组已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.header}>\r\n                <Button\r\n                    color={\"primary\"}\r\n                    onClick={() => history.push(\"/admin/group/add\")}\r\n                    variant={\"contained\"}\r\n                >\r\n                    新建用户组\r\n                </Button>\r\n                <div className={classes.headerRight}>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => loadList()}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        刷新\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                        {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {groups.map((row) => (\r\n                                <TableRow hover key={row.ID}>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell>{row.Name}</TableCell>\r\n                                    <TableCell>\r\n                                        {row.PolicyList !== null &&\r\n                                            row.PolicyList.map((pid, key) => {\r\n                                                let res = \"\";\r\n                                                if (policies[pid]) {\r\n                                                    res += policies[pid].Name;\r\n                                                }\r\n                                                if (\r\n                                                    key !==\r\n                                                    row.PolicyList.length - 1\r\n                                                ) {\r\n                                                    res += \" / \";\r\n                                                }\r\n                                                return res;\r\n                                            })}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {statics[row.ID] !== undefined &&\r\n                                            statics[row.ID].toLocaleString()}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {statics[row.ID] !== undefined &&\r\n                                            sizeToString(row.MaxStorage)}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        <Tooltip title={\"编辑\"}>\r\n                                            <IconButton\r\n                                                onClick={() =>\r\n                                                    history.push(\r\n                                                        \"/admin/group/edit/\" +\r\n                                                            row.ID\r\n                                                    )\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Edit />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Tooltip title={\"删除\"}>\r\n                                            <IconButton\r\n                                                onClick={() =>\r\n                                                    deletePolicy(row.ID)\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport API from \"../../../middleware/Api\";\r\nimport SizeInput from \"../Common/SizeInput\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n}));\r\n\r\n// function getStyles(name, personName, theme) {\r\n//     return {\r\n//         fontWeight:\r\n//             personName.indexOf(name) === -1\r\n//                 ? theme.typography.fontWeightRegular\r\n//                 : theme.typography.fontWeightMedium\r\n//     };\r\n// }\r\n\r\nexport default function GroupForm(props) {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [group, setGroup] = useState(\r\n        props.group\r\n            ? props.group\r\n            : {\r\n                  ID: 0,\r\n                  Name: \"\",\r\n                  MaxStorage: \"1073741824\", // 转换类型\r\n                  ShareEnabled: \"true\", // 转换类型\r\n                  WebDAVEnabled: \"true\", // 转换类型\r\n                  SpeedLimit: \"0\", // 转换类型\r\n                  PolicyList: 1, // 转换类型,至少选择一个\r\n                  OptionsSerialized: {\r\n                      // 批量转换类型\r\n                      share_download: \"true\",\r\n                      aria2_options: \"{}\", // json decode\r\n                      compress_size: \"0\",\r\n                      decompress_size: \"0\",\r\n                  },\r\n              }\r\n    );\r\n    const [policies, setPolicies] = useState({});\r\n\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/policy/list\", {\r\n            page: 1,\r\n            page_size: 10000,\r\n            order_by: \"id asc\",\r\n            conditions: {},\r\n        })\r\n            .then((response) => {\r\n                const res = {};\r\n                response.data.items.forEach((v) => {\r\n                    res[v.ID] = v.Name;\r\n                });\r\n                setPolicies(res);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, []);\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setGroup({\r\n            ...group,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleCheckChange = (name) => (event) => {\r\n        const value = event.target.checked ? \"true\" : \"false\";\r\n        setGroup({\r\n            ...group,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleOptionCheckChange = (name) => (event) => {\r\n        const value = event.target.checked ? \"true\" : \"false\";\r\n        setGroup({\r\n            ...group,\r\n            OptionsSerialized: {\r\n                ...group.OptionsSerialized,\r\n                [name]: value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setGroup({\r\n            ...group,\r\n            OptionsSerialized: {\r\n                ...group.OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        const groupCopy = {\r\n            ...group,\r\n            OptionsSerialized: { ...group.OptionsSerialized },\r\n        };\r\n\r\n        // 布尔值转换\r\n        [\"ShareEnabled\", \"WebDAVEnabled\"].forEach((v) => {\r\n            groupCopy[v] = groupCopy[v] === \"true\";\r\n        });\r\n        [\r\n            \"archive_download\",\r\n            \"archive_task\",\r\n            \"one_time_download\",\r\n            \"share_download\",\r\n            \"aria2\",\r\n        ].forEach((v) => {\r\n            if (groupCopy.OptionsSerialized[v] !== undefined) {\r\n                groupCopy.OptionsSerialized[v] =\r\n                    groupCopy.OptionsSerialized[v] === \"true\";\r\n            }\r\n        });\r\n\r\n        // 整型转换\r\n        [\"MaxStorage\", \"SpeedLimit\"].forEach((v) => {\r\n            groupCopy[v] = parseInt(groupCopy[v]);\r\n        });\r\n        [\"compress_size\", \"decompress_size\"].forEach((v) => {\r\n            if (groupCopy.OptionsSerialized[v] !== undefined) {\r\n                groupCopy.OptionsSerialized[v] = parseInt(\r\n                    groupCopy.OptionsSerialized[v]\r\n                );\r\n            }\r\n        });\r\n        groupCopy.PolicyList = [parseInt(groupCopy.PolicyList)];\r\n        // JSON转换\r\n        try {\r\n            groupCopy.OptionsSerialized.aria2_options = JSON.parse(\r\n                groupCopy.OptionsSerialized.aria2_options\r\n            );\r\n        } catch (e) {\r\n            ToggleSnackbar(\"top\", \"right\", \"Aria2 设置项格式错误\", \"warning\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        API.post(\"/admin/group\", {\r\n            group: groupCopy,\r\n        })\r\n            .then(() => {\r\n                history.push(\"/admin/group\");\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"用户组已\" + (props.group ? \"保存\" : \"添加\"),\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {group.ID === 0 && \"新建用户组\"}\r\n                        {group.ID !== 0 && \"编辑 \" + group.Name}\r\n                    </Typography>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        {group.ID !== 3 && (\r\n                            <>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            用户组名\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            value={group.Name}\r\n                                            onChange={handleChange(\"Name\")}\r\n                                            required\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            用户组的名称\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            存储策略\r\n                                        </InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-mutiple-chip-label\"\r\n                                            id=\"demo-mutiple-chip\"\r\n                                            value={group.PolicyList}\r\n                                            onChange={handleChange(\r\n                                                \"PolicyList\"\r\n                                            )}\r\n                                            input={\r\n                                                <Input id=\"select-multiple-chip\" />\r\n                                            }\r\n                                        >\r\n                                            {Object.keys(policies).map(\r\n                                                (pid) => (\r\n                                                    <MenuItem\r\n                                                        key={pid}\r\n                                                        value={pid}\r\n                                                    >\r\n                                                        {policies[pid]}\r\n                                                    </MenuItem>\r\n                                                )\r\n                                            )}\r\n                                        </Select>\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            指定用户组的存储策略。\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <SizeInput\r\n                                            value={group.MaxStorage}\r\n                                            onChange={handleChange(\r\n                                                \"MaxStorage\"\r\n                                            )}\r\n                                            min={0}\r\n                                            max={9223372036854775807}\r\n                                            label={\"初始容量\"}\r\n                                            required\r\n                                        />\r\n                                    </FormControl>\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        用户组下的用户初始可用最大容量\r\n                                    </FormHelperText>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <SizeInput\r\n                                    value={group.SpeedLimit}\r\n                                    onChange={handleChange(\"SpeedLimit\")}\r\n                                    min={0}\r\n                                    max={9223372036854775807}\r\n                                    label={\"下载限速\"}\r\n                                    suffix={\"/s\"}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                            <FormHelperText id=\"component-helper-text\">\r\n                                填写为 0 表示不限制。开启限制后，\r\n                                此用户组下的用户下载所有支持限速的存储策略下的文件时，下载最大速度会被限制。\r\n                            </FormHelperText>\r\n                        </div>\r\n\r\n                        {group.ID !== 3 && (\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Switch\r\n                                                checked={\r\n                                                    group.ShareEnabled ===\r\n                                                    \"true\"\r\n                                                }\r\n                                                onChange={handleCheckChange(\r\n                                                    \"ShareEnabled\"\r\n                                                )}\r\n                                            />\r\n                                        }\r\n                                        label=\"允许创建分享\"\r\n                                    />\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        关闭后，用户无法创建分享链接\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                group.OptionsSerialized\r\n                                                    .share_download === \"true\"\r\n                                            }\r\n                                            onChange={handleOptionCheckChange(\r\n                                                \"share_download\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"允许下载分享\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    关闭后，用户无法下载别人创建的文件分享\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        {group.ID !== 3 && (\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Switch\r\n                                                checked={\r\n                                                    group.WebDAVEnabled ===\r\n                                                    \"true\"\r\n                                                }\r\n                                                onChange={handleCheckChange(\r\n                                                    \"WebDAVEnabled\"\r\n                                                )}\r\n                                            />\r\n                                        }\r\n                                        label=\"WebDAV\"\r\n                                    />\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        关闭后，用户无法通过 WebDAV\r\n                                        协议连接至网盘\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                group.OptionsSerialized\r\n                                                    .one_time_download ===\r\n                                                \"true\"\r\n                                            }\r\n                                            onChange={handleOptionCheckChange(\r\n                                                \"one_time_download\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"禁止多次下载请求\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    只针对本机存储策略有效。开启后，用户无法使用多线程下载工具。\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        {group.ID !== 3 && (\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Switch\r\n                                                checked={\r\n                                                    group.OptionsSerialized\r\n                                                        .aria2 === \"true\"\r\n                                                }\r\n                                                onChange={handleOptionCheckChange(\r\n                                                    \"aria2\"\r\n                                                )}\r\n                                            />\r\n                                        }\r\n                                        label=\"离线下载\"\r\n                                    />\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        是否允许用户创建离线下载任务\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                        )}\r\n\r\n                        <Collapse in={group.OptionsSerialized.aria2 === \"true\"}>\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        Aria2 任务参数\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        multiline\r\n                                        value={\r\n                                            group.OptionsSerialized\r\n                                                .aria2_options\r\n                                        }\r\n                                        onChange={handleOptionChange(\r\n                                            \"aria2_options\"\r\n                                        )}\r\n                                    />\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        此用户组创建离线下载任务时额外携带的参数，以\r\n                                        JSON\r\n                                        编码后的格式书写，您可也可以将这些设置写在\r\n                                        Aria2 配置文件里，可用参数请查阅官方文档\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                        </Collapse>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={\r\n                                                group.OptionsSerialized\r\n                                                    .archive_download === \"true\"\r\n                                            }\r\n                                            onChange={handleOptionCheckChange(\r\n                                                \"archive_download\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"打包下载\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    是否允许用户多选文件打包下载\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        {group.ID !== 3 && (\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Switch\r\n                                                checked={\r\n                                                    group.OptionsSerialized\r\n                                                        .archive_task === \"true\"\r\n                                                }\r\n                                                onChange={handleOptionCheckChange(\r\n                                                    \"archive_task\"\r\n                                                )}\r\n                                            />\r\n                                        }\r\n                                        label=\"压缩/解压缩 任务\"\r\n                                    />\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        是否用户创建 压缩/解压缩 任务\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                        )}\r\n\r\n                        <Collapse\r\n                            in={group.OptionsSerialized.archive_task === \"true\"}\r\n                        >\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <SizeInput\r\n                                        value={\r\n                                            group.OptionsSerialized\r\n                                                .compress_size\r\n                                        }\r\n                                        onChange={handleOptionChange(\r\n                                            \"compress_size\"\r\n                                        )}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={\"待压缩文件最大大小\"}\r\n                                    />\r\n                                </FormControl>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用户可创建的压缩任务的文件最大总大小，填写为\r\n                                    0 表示不限制\r\n                                </FormHelperText>\r\n                            </div>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl fullWidth>\r\n                                    <SizeInput\r\n                                        value={\r\n                                            group.OptionsSerialized\r\n                                                .decompress_size\r\n                                        }\r\n                                        onChange={handleOptionChange(\r\n                                            \"decompress_size\"\r\n                                        )}\r\n                                        min={0}\r\n                                        max={9223372036854775807}\r\n                                        label={\"待解压文件最大大小\"}\r\n                                    />\r\n                                </FormControl>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用户可创建的解压缩任务的文件最大总大小，填写为\r\n                                    0 表示不限制\r\n                                </FormHelperText>\r\n                            </div>\r\n                        </Collapse>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        保存\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport GroupForm from \"./GroupForm\";\r\n\r\nexport default function EditGroupPreload() {\r\n    const [group, setGroup] = useState({});\r\n\r\n    const { id } = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        setGroup({});\r\n        API.get(\"/admin/group/\" + id)\r\n            .then((response) => {\r\n                // 布尔值转换\r\n                [\"ShareEnabled\", \"WebDAVEnabled\"].forEach((v) => {\r\n                    response.data[v] = response.data[v] ? \"true\" : \"false\";\r\n                });\r\n                [\r\n                    \"archive_download\",\r\n                    \"archive_task\",\r\n                    \"one_time_download\",\r\n                    \"share_download\",\r\n                    \"aria2\",\r\n                ].forEach((v) => {\r\n                    if (response.data.OptionsSerialized[v] !== undefined) {\r\n                        response.data.OptionsSerialized[v] = response.data\r\n                            .OptionsSerialized[v]\r\n                            ? \"true\"\r\n                            : \"false\";\r\n                    }\r\n                });\r\n\r\n                // 整型转换\r\n                [\"MaxStorage\", \"SpeedLimit\"].forEach((v) => {\r\n                    response.data[v] = response.data[v].toString();\r\n                });\r\n                [\"compress_size\", \"decompress_size\"].forEach((v) => {\r\n                    if (response.data.OptionsSerialized[v] !== undefined) {\r\n                        response.data.OptionsSerialized[\r\n                            v\r\n                        ] = response.data.OptionsSerialized[v].toString();\r\n                    }\r\n                });\r\n                response.data.PolicyList = response.data.PolicyList[0];\r\n\r\n                // JSON转换\r\n                if (\r\n                    response.data.OptionsSerialized.aria2_options === undefined\r\n                ) {\r\n                    response.data.OptionsSerialized.aria2_options = \"{}\";\r\n                } else {\r\n                    try {\r\n                        response.data.OptionsSerialized.aria2_options = JSON.stringify(\r\n                            response.data.OptionsSerialized.aria2_options\r\n                        );\r\n                    } catch (e) {\r\n                        ToggleSnackbar(\r\n                            \"top\",\r\n                            \"right\",\r\n                            \"Aria2 设置项格式错误\",\r\n                            \"warning\"\r\n                        );\r\n                        return;\r\n                    }\r\n                }\r\n                setGroup(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, [id]);\r\n\r\n    return <div>{group.ID !== undefined && <GroupForm group={group} />}</div>;\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport API from \"../../../middleware/Api\";\r\n\r\nexport default function UserFilter({ setFilter, setSearch, open, onClose }) {\r\n    const [input, setInput] = useState({\r\n        group_id: \"all\",\r\n        status: \"all\",\r\n    });\r\n    const [groups, setGroups] = useState([]);\r\n    const [keywords, setKeywords] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setInput({ ...input, [name]: event.target.value });\r\n    };\r\n\r\n    useEffect(() => {\r\n        API.get(\"/admin/groups\")\r\n            .then((response) => {\r\n                setGroups(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, []);\r\n\r\n    const submit = () => {\r\n        const res = {};\r\n        Object.keys(input).forEach((v) => {\r\n            if (input[v] !== \"all\") {\r\n                res[v] = input[v];\r\n            }\r\n        });\r\n        setFilter(res);\r\n        if (keywords !== \"\") {\r\n            setSearch({\r\n                nick: keywords,\r\n                email: keywords,\r\n            });\r\n        } else {\r\n            setSearch({});\r\n        }\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            fullWidth\r\n            maxWidth={\"xs\"}\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">过滤条件</DialogTitle>\r\n            <DialogContent>\r\n                <FormControl fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                        用户组\r\n                    </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={input.group_id}\r\n                        onChange={handleChange(\"group_id\")}\r\n                    >\r\n                        <MenuItem value={\"all\"}>全部</MenuItem>\r\n                        {groups.map((v) => {\r\n                            if (v.ID === 3) {\r\n                                return null;\r\n                            }\r\n                            return (\r\n                                <MenuItem key={v.ID} value={v.ID.toString()}>\r\n                                    {v.Name}\r\n                                </MenuItem>\r\n                            );\r\n                        })}\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl fullWidth style={{ marginTop: 16 }}>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                        用户状态\r\n                    </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={input.status}\r\n                        onChange={handleChange(\"status\")}\r\n                    >\r\n                        <MenuItem value={\"all\"}>全部</MenuItem>\r\n                        <MenuItem value={\"0\"}>正常</MenuItem>\r\n                        <MenuItem value={\"1\"}>未激活</MenuItem>\r\n                        <MenuItem value={\"2\"}>被封禁</MenuItem>\r\n                        <MenuItem value={\"3\"}>超额使用被封禁</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl fullWidth style={{ marginTop: 16 }}>\r\n                    <TextField\r\n                        value={keywords}\r\n                        onChange={(e) => setKeywords(e.target.value)}\r\n                        id=\"standard-basic\"\r\n                        label=\"搜索 昵称 / 用户名\"\r\n                    />\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose} color=\"default\">\r\n                    取消\r\n                </Button>\r\n                <Button onClick={submit} color=\"primary\">\r\n                    应用\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { lighten } from \"@material-ui/core\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Block, Delete, Edit, FilterList } from \"@material-ui/icons\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { sizeToString } from \"../../../utils\";\r\nimport UserFilter from \"../Dialogs/UserFilter\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    headerRight: {},\r\n    highlight:\r\n        theme.palette.type === \"light\"\r\n            ? {\r\n                  color: theme.palette.secondary.main,\r\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n              }\r\n            : {\r\n                  color: theme.palette.text.primary,\r\n                  backgroundColor: theme.palette.secondary.dark,\r\n              },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function Group() {\r\n    const classes = useStyles();\r\n    const [users, setUsers] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [filter, setFilter] = useState({});\r\n    const [search, setSearch] = useState({});\r\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\r\n    const [filterDialog, setFilterDialog] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const history = useHistory();\r\n    const theme = useTheme();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const loadList = () => {\r\n        API.post(\"/admin/user/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: orderBy.join(\" \"),\r\n            conditions: filter,\r\n            searches: search,\r\n        })\r\n            .then((response) => {\r\n                setUsers(response.data.items);\r\n                setTotal(response.data.total);\r\n                setSelected([]);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize, orderBy, filter, search]);\r\n\r\n    const deletePolicy = (id) => {\r\n        setLoading(true);\r\n        API.post(\"/admin/user/delete\", { id: [id] })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"用户已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const deleteBatch = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/user/delete\", { id: selected })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"用户已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const block = (id) => {\r\n        setLoading(true);\r\n        API.patch(\"/admin/user/ban/\" + id)\r\n            .then((response) => {\r\n                setUsers(\r\n                    users.map((v) => {\r\n                        if (v.ID === id) {\r\n                            const newUser = { ...v, Status: response.data };\r\n                            return newUser;\r\n                        }\r\n                        return v;\r\n                    })\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = users.map((n) => n.ID);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1)\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n    return (\r\n        <div>\r\n            <UserFilter\r\n                filter={filter}\r\n                open={filterDialog}\r\n                onClose={() => setFilterDialog(false)}\r\n                setSearch={setSearch}\r\n                setFilter={setFilter}\r\n            />\r\n            <div className={classes.header}>\r\n                <Button\r\n                    style={{ alignSelf: \"center\" }}\r\n                    color={\"primary\"}\r\n                    onClick={() => history.push(\"/admin/user/add\")}\r\n                    variant={\"contained\"}\r\n                >\r\n                    新建用户\r\n                </Button>\r\n                <div className={classes.headerRight}>\r\n                    <Tooltip title=\"过滤\">\r\n                        <IconButton\r\n                            style={{ marginRight: 8 }}\r\n                            onClick={() => setFilterDialog(true)}\r\n                        >\r\n                            <Badge\r\n                                color=\"secondary\"\r\n                                variant=\"dot\"\r\n                                invisible={\r\n                                    Object.keys(search).length === 0 &&\r\n                                    Object.keys(filter).length === 0\r\n                                }\r\n                            >\r\n                                <FilterList />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => loadList()}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        刷新\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                {selected.length > 0 && (\r\n                    <Toolbar className={classes.highlight}>\r\n                        <Typography\r\n                            style={{ flex: \"1 1 100%\" }}\r\n                            color=\"inherit\"\r\n                            variant=\"subtitle1\"\r\n                        >\r\n                            已选择 {selected.length} 个对象\r\n                        </Typography>\r\n                        <Tooltip title=\"删除\">\r\n                            <IconButton\r\n                                onClick={deleteBatch}\r\n                                disabled={loading}\r\n                                aria-label=\"delete\"\r\n                            >\r\n                                <Delete />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Toolbar>\r\n                )}\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox\r\n                                        indeterminate={\r\n                                            selected.length > 0 &&\r\n                                            selected.length < users.length\r\n                                        }\r\n                                        checked={\r\n                                            users.length > 0 &&\r\n                                            selected.length === users.length\r\n                                        }\r\n                                        onChange={handleSelectAllClick}\r\n                                        inputProps={{\r\n                                            \"aria-label\": \"select all desserts\",\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 59 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"id\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"id\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        #\r\n                                        {orderBy[0] === \"id\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 120 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"nick\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"nick\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        昵称\r\n                                        {orderBy[0] === \"nick\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 170 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"email\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"email\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        Email\r\n                                        {orderBy[0] === \"email\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 70 }}>\r\n                                    用户组\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 50 }}>\r\n                                    状态\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    align={\"right\"}\r\n                                    style={{ minWidth: 80 }}\r\n                                >\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"storage\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"storage\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        已用空间\r\n                                        {orderBy[0] === \"storage\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 100 }}>\r\n                                    操作\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {users.map((row) => (\r\n                                <TableRow\r\n                                    hover\r\n                                    key={row.ID}\r\n                                    role=\"checkbox\"\r\n                                    selected={isSelected(row.ID)}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            onClick={(event) =>\r\n                                                handleClick(event, row.ID)\r\n                                            }\r\n                                            checked={isSelected(row.ID)}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell>{row.Nick}</TableCell>\r\n                                    <TableCell>{row.Email}</TableCell>\r\n                                    <TableCell>\r\n                                        <Link\r\n                                            href={\r\n                                                \"/admin/group/edit/\" +\r\n                                                row.Group.ID\r\n                                            }\r\n                                        >\r\n                                            {row.Group.Name}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {row.Status === 0 && (\r\n                                            <Typography\r\n                                                style={{\r\n                                                    color:\r\n                                                        theme.palette.success\r\n                                                            .main,\r\n                                                }}\r\n                                                variant={\"body2\"}\r\n                                            >\r\n                                                正常\r\n                                            </Typography>\r\n                                        )}\r\n                                        {row.Status === 1 && (\r\n                                            <Typography\r\n                                                color={\"textSecondary\"}\r\n                                                variant={\"body2\"}\r\n                                            >\r\n                                                未激活\r\n                                            </Typography>\r\n                                        )}\r\n                                        {row.Status === 2 && (\r\n                                            <Typography\r\n                                                color={\"error\"}\r\n                                                variant={\"body2\"}\r\n                                            >\r\n                                                被封禁\r\n                                            </Typography>\r\n                                        )}\r\n                                        {row.Status === 3 && (\r\n                                            <Typography\r\n                                                color={\"error\"}\r\n                                                variant={\"body2\"}\r\n                                            >\r\n                                                超额封禁\r\n                                            </Typography>\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {sizeToString(row.Storage)}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Tooltip title={\"编辑\"}>\r\n                                            <IconButton\r\n                                                onClick={() =>\r\n                                                    history.push(\r\n                                                        \"/admin/user/edit/\" +\r\n                                                            row.ID\r\n                                                    )\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Edit />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Tooltip title={\"封禁/解封\"}>\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() => block(row.ID)}\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Block />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Tooltip title={\"删除\"}>\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() =>\r\n                                                    deletePolicy(row.ID)\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport API from \"../../../middleware/Api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n}));\r\nexport default function UserForm(props) {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [user, setUser] = useState(\r\n        props.user\r\n            ? props.user\r\n            : {\r\n                  ID: 0,\r\n                  Email: \"\",\r\n                  Nick: \"\",\r\n                  Password: \"\", // 为空时只读\r\n                  Status: \"0\", // 转换类型\r\n                  GroupID: \"2\", // 转换类型\r\n              }\r\n    );\r\n    const [groups, setGroups] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.get(\"/admin/groups\")\r\n            .then((response) => {\r\n                setGroups(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, []);\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setUser({\r\n            ...user,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        const userCopy = { ...user };\r\n\r\n        // 整型转换\r\n        [\"Status\", \"GroupID\", \"Score\"].forEach((v) => {\r\n            userCopy[v] = parseInt(userCopy[v]);\r\n        });\r\n\r\n        setLoading(true);\r\n        API.post(\"/admin/user\", {\r\n            user: userCopy,\r\n            password: userCopy.Password,\r\n        })\r\n            .then(() => {\r\n                history.push(\"/admin/user\");\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"用户已\" + (props.user ? \"保存\" : \"添加\"),\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {user.ID === 0 && \"创建用户\"}\r\n                        {user.ID !== 0 && \"编辑 \" + user.Nick}\r\n                    </Typography>\r\n\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    邮箱\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={user.Email}\r\n                                    type={\"email\"}\r\n                                    onChange={handleChange(\"Email\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    昵称\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={user.Nick}\r\n                                    onChange={handleChange(\"Nick\")}\r\n                                    required\r\n                                />\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    密码\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"password\"}\r\n                                    value={user.Password}\r\n                                    onChange={handleChange(\"Password\")}\r\n                                    required={user.ID === 0}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    {user.ID !== 0 && \"留空表示不修改\"}\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    用户组\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={user.GroupID}\r\n                                    onChange={handleChange(\"GroupID\")}\r\n                                    required\r\n                                >\r\n                                    {groups.map((v) => {\r\n                                        if (v.ID === 3) {\r\n                                            return null;\r\n                                        }\r\n                                        return (\r\n                                            <MenuItem\r\n                                                key={v.ID}\r\n                                                value={v.ID.toString()}\r\n                                            >\r\n                                                {v.Name}\r\n                                            </MenuItem>\r\n                                        );\r\n                                    })}\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    用户所属用户组\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    状态\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={user.Status}\r\n                                    onChange={handleChange(\"Status\")}\r\n                                    required\r\n                                >\r\n                                    <MenuItem value={\"0\"}>正常</MenuItem>\r\n                                    <MenuItem value={\"1\"}>未激活</MenuItem>\r\n                                    <MenuItem value={\"2\"}>被封禁</MenuItem>\r\n                                    <MenuItem value={\"3\"}>\r\n                                        超额使用被封禁\r\n                                    </MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        保存\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport UserForm from \"./UserForm\";\r\n\r\nexport default function EditUserPreload() {\r\n    const [user, setUser] = useState({});\r\n\r\n    const { id } = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        setUser({});\r\n        API.get(\"/admin/user/\" + id)\r\n            .then((response) => {\r\n                // 整型转换\r\n                [\"Status\", \"GroupID\"].forEach((v) => {\r\n                    response.data[v] = response.data[v].toString();\r\n                });\r\n                setUser(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, [id]);\r\n\r\n    return <div>{user.ID !== undefined && <UserForm user={user} />}</div>;\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport API from \"../../../middleware/Api\";\r\n\r\nexport default function FileFilter({ setFilter, setSearch, open, onClose }) {\r\n    const [input, setInput] = useState({\r\n        policy_id: \"all\",\r\n        user_id: \"\",\r\n    });\r\n    const [policies, setPolicies] = useState([]);\r\n    const [keywords, setKeywords] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setInput({ ...input, [name]: event.target.value });\r\n    };\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/policy/list\", {\r\n            page: 1,\r\n            page_size: 10000,\r\n            order_by: \"id asc\",\r\n            conditions: {},\r\n        })\r\n            .then((response) => {\r\n                setPolicies(response.data.items);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, []);\r\n\r\n    const submit = () => {\r\n        const res = {};\r\n        Object.keys(input).forEach((v) => {\r\n            if (input[v] !== \"all\" && input[v] !== \"\") {\r\n                res[v] = input[v];\r\n            }\r\n        });\r\n        setFilter(res);\r\n        if (keywords !== \"\") {\r\n            setSearch({\r\n                name: keywords,\r\n            });\r\n        } else {\r\n            setSearch({});\r\n        }\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            fullWidth\r\n            maxWidth={\"xs\"}\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">过滤条件</DialogTitle>\r\n            <DialogContent>\r\n                <FormControl fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                        存储策略\r\n                    </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={input.policy_id}\r\n                        onChange={handleChange(\"policy_id\")}\r\n                    >\r\n                        <MenuItem value={\"all\"}>全部</MenuItem>\r\n                        {policies.map((v) => {\r\n                            if (v.ID === 3) {\r\n                                return null;\r\n                            }\r\n                            return (\r\n                                <MenuItem key={v.ID} value={v.ID.toString()}>\r\n                                    {v.Name}\r\n                                </MenuItem>\r\n                            );\r\n                        })}\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl fullWidth style={{ marginTop: 16 }}>\r\n                    <TextField\r\n                        value={input.user_id}\r\n                        onChange={handleChange(\"user_id\")}\r\n                        id=\"standard-basic\"\r\n                        label=\"上传者ID\"\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth style={{ marginTop: 16 }}>\r\n                    <TextField\r\n                        value={keywords}\r\n                        onChange={(e) => setKeywords(e.target.value)}\r\n                        id=\"standard-basic\"\r\n                        label=\"搜索 文件名\"\r\n                    />\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose} color=\"default\">\r\n                    取消\r\n                </Button>\r\n                <Button onClick={submit} color=\"primary\">\r\n                    应用\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { lighten } from \"@material-ui/core\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Delete, DeleteForever, FilterList } from \"@material-ui/icons\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { sizeToString } from \"../../../utils\";\r\nimport FileFilter from \"../Dialogs/FileFilter\";\r\nimport { formatLocalTime } from \"../../../utils/datetime\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"flex-start\",\r\n    },\r\n    headerRight: {},\r\n    highlight:\r\n        theme.palette.type === \"light\"\r\n            ? {\r\n                  color: theme.palette.secondary.main,\r\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n              }\r\n            : {\r\n                  color: theme.palette.text.primary,\r\n                  backgroundColor: theme.palette.secondary.dark,\r\n              },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function File() {\r\n    const classes = useStyles();\r\n    const [files, setFiles] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [filter, setFilter] = useState({});\r\n    const [users, setUsers] = useState({});\r\n    const [search, setSearch] = useState({});\r\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\r\n    const [filterDialog, setFilterDialog] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const loadList = () => {\r\n        API.post(\"/admin/file/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: orderBy.join(\" \"),\r\n            conditions: filter,\r\n            searches: search,\r\n        })\r\n            .then((response) => {\r\n                setFiles(response.data.items);\r\n                setTotal(response.data.total);\r\n                setSelected([]);\r\n                setUsers(response.data.users);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize, orderBy, filter, search]);\r\n\r\n    const deletePolicy = (id) => {\r\n        setLoading(true);\r\n        API.post(\"/admin/file/delete\", { id: [id] })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"删除任务将在后台执行\",\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const deleteBatch = (force) => () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/file/delete\", { id: selected, force: force })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"删除任务将在后台执行\",\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = files.map((n) => n.ID);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1)\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n    return (\r\n        <div>\r\n            <FileFilter\r\n                filter={filter}\r\n                open={filterDialog}\r\n                onClose={() => setFilterDialog(false)}\r\n                setSearch={setSearch}\r\n                setFilter={setFilter}\r\n            />\r\n            <div className={classes.header}>\r\n                <Button\r\n                    color={\"primary\"}\r\n                    onClick={() => history.push(\"/admin/file/import\")}\r\n                    variant={\"contained\"}\r\n                    style={{\r\n                        alignSelf: \"center\",\r\n                    }}\r\n                >\r\n                    从外部导入\r\n                </Button>\r\n                <div className={classes.headerRight}>\r\n                    <Tooltip title=\"过滤\">\r\n                        <IconButton\r\n                            style={{ marginRight: 8 }}\r\n                            onClick={() => setFilterDialog(true)}\r\n                        >\r\n                            <Badge\r\n                                color=\"secondary\"\r\n                                variant=\"dot\"\r\n                                invisible={\r\n                                    Object.keys(search).length === 0 &&\r\n                                    Object.keys(filter).length === 0\r\n                                }\r\n                            >\r\n                                <FilterList />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => loadList()}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        刷新\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                {selected.length > 0 && (\r\n                    <Toolbar className={classes.highlight}>\r\n                        <Typography\r\n                            style={{ flex: \"1 1 100%\" }}\r\n                            color=\"inherit\"\r\n                            variant=\"subtitle1\"\r\n                        >\r\n                            已选择 {selected.length} 个对象\r\n                        </Typography>\r\n                        <Tooltip title=\"删除\">\r\n                            <IconButton\r\n                                onClick={deleteBatch(false)}\r\n                                disabled={loading}\r\n                                aria-label=\"delete\"\r\n                            >\r\n                                <Delete />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"强制删除\">\r\n                            <IconButton\r\n                                onClick={deleteBatch(true)}\r\n                                disabled={loading}\r\n                                aria-label=\"delete\"\r\n                            >\r\n                                <DeleteForever />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Toolbar>\r\n                )}\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox\r\n                                        indeterminate={\r\n                                            selected.length > 0 &&\r\n                                            selected.length < files.length\r\n                                        }\r\n                                        checked={\r\n                                            files.length > 0 &&\r\n                                            selected.length === files.length\r\n                                        }\r\n                                        onChange={handleSelectAllClick}\r\n                                        inputProps={{\r\n                                            \"aria-label\": \"select all desserts\",\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 59 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"id\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"id\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        #\r\n                                        {orderBy[0] === \"id\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 250 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"name\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"name\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        文件名\r\n                                        {orderBy[0] === \"name\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    align={\"right\"}\r\n                                    style={{ minWidth: 70 }}\r\n                                >\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"size\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"size\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        大小\r\n                                        {orderBy[0] === \"size\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 120 }}>\r\n                                    上传者\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 150 }}>\r\n                                    上传于\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 100 }}>\r\n                                    操作\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {files.map((row) => (\r\n                                <TableRow\r\n                                    hover\r\n                                    key={row.ID}\r\n                                    role=\"checkbox\"\r\n                                    selected={isSelected(row.ID)}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            onClick={(event) =>\r\n                                                handleClick(event, row.ID)\r\n                                            }\r\n                                            checked={isSelected(row.ID)}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell>\r\n                                        <Link\r\n                                            target={\"_blank\"}\r\n                                            color=\"inherit\"\r\n                                            href={\r\n                                                \"/api/v3/admin/file/preview/\" +\r\n                                                row.ID\r\n                                            }\r\n                                        >\r\n                                            {row.Name}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {sizeToString(row.Size)}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Link\r\n                                            href={\r\n                                                \"/admin/user/edit/\" + row.UserID\r\n                                            }\r\n                                        >\r\n                                            {users[row.UserID]\r\n                                                ? users[row.UserID].Nick\r\n                                                : \"未知\"}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {formatLocalTime(\r\n                                            row.CreatedAt,\r\n                                            \"YYYY-MM-DD H:mm:ss\"\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Tooltip title={\"删除\"}>\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() =>\r\n                                                    deletePolicy(row.ID)\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 50, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function ShareFilter({ setFilter, setSearch, open, onClose }) {\r\n    const [input, setInput] = useState({\r\n        is_dir: \"all\",\r\n        user_id: \"\",\r\n    });\r\n    const [keywords, setKeywords] = useState(\"\");\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setInput({ ...input, [name]: event.target.value });\r\n    };\r\n\r\n    const submit = () => {\r\n        const res = {};\r\n        Object.keys(input).forEach((v) => {\r\n            if (input[v] !== \"all\" && input[v] !== \"\") {\r\n                res[v] = input[v];\r\n            }\r\n        });\r\n        setFilter(res);\r\n        if (keywords !== \"\") {\r\n            setSearch({\r\n                source_name: keywords,\r\n            });\r\n        } else {\r\n            setSearch({});\r\n        }\r\n        onClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n            fullWidth\r\n            maxWidth={\"xs\"}\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">过滤条件</DialogTitle>\r\n            <DialogContent>\r\n                <FormControl fullWidth>\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                        源文件类型\r\n                    </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={input.is_dir}\r\n                        onChange={handleChange(\"is_dir\")}\r\n                    >\r\n                        <MenuItem value={\"all\"}>全部</MenuItem>\r\n                        <MenuItem value={\"1\"}>目录</MenuItem>\r\n                        <MenuItem value={\"0\"}>文件</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl fullWidth style={{ marginTop: 16 }}>\r\n                    <TextField\r\n                        value={input.user_id}\r\n                        onChange={handleChange(\"user_id\")}\r\n                        id=\"standard-basic\"\r\n                        label=\"上传者ID\"\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth style={{ marginTop: 16 }}>\r\n                    <TextField\r\n                        value={keywords}\r\n                        onChange={(e) => setKeywords(e.target.value)}\r\n                        id=\"standard-basic\"\r\n                        label=\"搜索 文件名\"\r\n                    />\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={onClose} color=\"default\">\r\n                    取消\r\n                </Button>\r\n                <Button onClick={submit} color=\"primary\">\r\n                    应用\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { lighten } from \"@material-ui/core\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Delete, FilterList } from \"@material-ui/icons\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport API from \"../../../middleware/Api\";\r\nimport ShareFilter from \"../Dialogs/ShareFilter\";\r\nimport { formatLocalTime } from \"../../../utils/datetime\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    headerRight: {},\r\n    highlight:\r\n        theme.palette.type === \"light\"\r\n            ? {\r\n                  color: theme.palette.secondary.main,\r\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n              }\r\n            : {\r\n                  color: theme.palette.text.primary,\r\n                  backgroundColor: theme.palette.secondary.dark,\r\n              },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function Share() {\r\n    const classes = useStyles();\r\n    const [shares, setShares] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [filter, setFilter] = useState({});\r\n    const [users, setUsers] = useState({});\r\n    const [ids, setIds] = useState({});\r\n    const [search, setSearch] = useState({});\r\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\r\n    const [filterDialog, setFilterDialog] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n    const loadList = () => {\r\n        API.post(\"/admin/share/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: orderBy.join(\" \"),\r\n            conditions: filter,\r\n            searches: search,\r\n        })\r\n            .then((response) => {\r\n                setUsers(response.data.users);\r\n                setIds(response.data.ids);\r\n                setShares(response.data.items);\r\n                setTotal(response.data.total);\r\n                setSelected([]);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize, orderBy, filter, search]);\r\n\r\n    const deletePolicy = (id) => {\r\n        setLoading(true);\r\n        API.post(\"/admin/share/delete\", { id: [id] })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"分享已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const deleteBatch = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/share/delete\", { id: selected })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"分享已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = shares.map((n) => n.ID);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1)\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n    return (\r\n        <div>\r\n            <ShareFilter\r\n                filter={filter}\r\n                open={filterDialog}\r\n                onClose={() => setFilterDialog(false)}\r\n                setSearch={setSearch}\r\n                setFilter={setFilter}\r\n            />\r\n            <div className={classes.header}>\r\n                <div className={classes.headerRight}>\r\n                    <Tooltip title=\"过滤\">\r\n                        <IconButton\r\n                            style={{ marginRight: 8 }}\r\n                            onClick={() => setFilterDialog(true)}\r\n                        >\r\n                            <Badge\r\n                                color=\"secondary\"\r\n                                variant=\"dot\"\r\n                                invisible={\r\n                                    Object.keys(search).length === 0 &&\r\n                                    Object.keys(filter).length === 0\r\n                                }\r\n                            >\r\n                                <FilterList />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => loadList()}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        刷新\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                {selected.length > 0 && (\r\n                    <Toolbar className={classes.highlight}>\r\n                        <Typography\r\n                            style={{ flex: \"1 1 100%\" }}\r\n                            color=\"inherit\"\r\n                            variant=\"subtitle1\"\r\n                        >\r\n                            已选择 {selected.length} 个对象\r\n                        </Typography>\r\n                        <Tooltip title=\"删除\">\r\n                            <IconButton\r\n                                onClick={deleteBatch}\r\n                                disabled={loading}\r\n                                aria-label=\"delete\"\r\n                            >\r\n                                <Delete />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Toolbar>\r\n                )}\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox\r\n                                        indeterminate={\r\n                                            selected.length > 0 &&\r\n                                            selected.length < shares.length\r\n                                        }\r\n                                        checked={\r\n                                            shares.length > 0 &&\r\n                                            selected.length === shares.length\r\n                                        }\r\n                                        onChange={handleSelectAllClick}\r\n                                        inputProps={{\r\n                                            \"aria-label\": \"select all desserts\",\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 10 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"id\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"id\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        #\r\n                                        {orderBy[0] === \"id\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 200 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"source_name\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"source_name\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        对象名\r\n                                        {orderBy[0] === \"source_name\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 70 }}>\r\n                                    类型\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    style={{ minWidth: 100 }}\r\n                                    align={\"right\"}\r\n                                >\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"views\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"views\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        浏览\r\n                                        {orderBy[0] === \"views\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    style={{ minWidth: 100 }}\r\n                                    align={\"right\"}\r\n                                >\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"downloads\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"downloads\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        下载\r\n                                        {orderBy[0] === \"downloads\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 120 }}>\r\n                                    自动过期\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 120 }}>\r\n                                    分享者\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 150 }}>\r\n                                    分享于\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 100 }}>\r\n                                    操作\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {shares.map((row) => (\r\n                                <TableRow\r\n                                    hover\r\n                                    key={row.ID}\r\n                                    role=\"checkbox\"\r\n                                    selected={isSelected(row.ID)}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            onClick={(event) =>\r\n                                                handleClick(event, row.ID)\r\n                                            }\r\n                                            checked={isSelected(row.ID)}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell\r\n                                        style={{ wordBreak: \"break-all\" }}\r\n                                    >\r\n                                        <Link\r\n                                            target={\"_blank\"}\r\n                                            color=\"inherit\"\r\n                                            href={\r\n                                                \"/s/\" +\r\n                                                ids[row.ID] +\r\n                                                (row.Password === \"\"\r\n                                                    ? \"\"\r\n                                                    : \"?password=\" +\r\n                                                      row.Password)\r\n                                            }\r\n                                        >\r\n                                            {row.SourceName}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {row.Password === \"\" ? \"公开\" : \"私密\"}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {row.Views}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {row.Downloads}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {row.RemainDownloads > -1 &&\r\n                                            row.RemainDownloads + \" 次下载后\"}\r\n                                        {row.RemainDownloads === -1 && \"无\"}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Link\r\n                                            href={\r\n                                                \"/admin/user/edit/\" + row.UserID\r\n                                            }\r\n                                        >\r\n                                            {users[row.UserID]\r\n                                                ? users[row.UserID].Nick\r\n                                                : \"未知\"}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {formatLocalTime(\r\n                                            row.CreatedAt,\r\n                                            \"YYYY-MM-DD H:mm:ss\"\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Tooltip title={\"删除\"}>\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() =>\r\n                                                    deletePolicy(row.ID)\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 50, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    Link,\r\n} from \"@material-ui/core\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nexport default function Aria2Helper(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog\r\n            open={props.open}\r\n            onClose={props.onClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">\r\n                {\"如何配置离线下载？\"}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    Cloudreve 的离线下载支持主从分散模式。您可以配置多个\r\n                    Cloudreve\r\n                    从机节点，这些节点可以用来处理离线下载任务，分散主节点的压力。当然，您也可以配置只在主节点上处理离线下载任务，这是最简单的一种方式。\r\n                    <ul>\r\n                        <li>\r\n                            如果您只需要为主机启用离线下载功能，请{\" \"}\r\n                            <Link\r\n                                component={RouterLink}\r\n                                to={\"/admin/node/edit/1\"}\r\n                            >\r\n                                点击这里\r\n                            </Link>{\" \"}\r\n                            编辑主节点；\r\n                        </li>\r\n                        <li>\r\n                            如果您想要在从机节点上分散处理离线下载任务，请{\" \"}\r\n                            <Link component={RouterLink} to={\"/admin/node/add\"}>\r\n                                点击这里\r\n                            </Link>{\" \"}\r\n                            添加并配置新节点。\r\n                        </li>\r\n                    </ul>\r\n                    当你添加多个可用于离线下载的节点后，主节点会将离线下载请求轮流发送到这些节点处理。\r\n                    节点离线下载配置完成后，您可能还需要{\" \"}\r\n                    <Link component={RouterLink} to={\"/admin/group\"}>\r\n                        到这里\r\n                    </Link>{\" \"}\r\n                    编辑用户组，为对应用户组开启离线下载权限。\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={props.onClose} color=\"primary\" autoFocus>\r\n                    关闭\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { lighten } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { sizeToString } from \"../../../utils\";\r\nimport ShareFilter from \"../Dialogs/ShareFilter\";\r\nimport { formatLocalTime } from \"../../../utils/datetime\";\r\nimport Aria2Helper from \"./Aria2Helper\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    headerRight: {},\r\n    highlight:\r\n        theme.palette.type === \"light\"\r\n            ? {\r\n                  color: theme.palette.secondary.main,\r\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n              }\r\n            : {\r\n                  color: theme.palette.text.primary,\r\n                  backgroundColor: theme.palette.secondary.dark,\r\n              },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function Download() {\r\n    const classes = useStyles();\r\n    const [downloads, setDownloads] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [filter, setFilter] = useState({});\r\n    const [users, setUsers] = useState({});\r\n    const [search, setSearch] = useState({});\r\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\r\n    const [filterDialog, setFilterDialog] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [helperOpen, setHelperOpen] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const loadList = () => {\r\n        API.post(\"/admin/download/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: orderBy.join(\" \"),\r\n            conditions: filter,\r\n            searches: search,\r\n        })\r\n            .then((response) => {\r\n                setUsers(response.data.users);\r\n                setDownloads(response.data.items);\r\n                setTotal(response.data.total);\r\n                setSelected([]);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize, orderBy, filter, search]);\r\n\r\n    const deletePolicy = (id) => {\r\n        setLoading(true);\r\n        API.post(\"/admin/download/delete\", { id: [id] })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const deleteBatch = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/download/delete\", { id: selected })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = downloads.map((n) => n.ID);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1)\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n    return (\r\n        <div>\r\n            <Aria2Helper\r\n                open={helperOpen}\r\n                onClose={() => setHelperOpen(false)}\r\n            />\r\n            <ShareFilter\r\n                filter={filter}\r\n                open={filterDialog}\r\n                onClose={() => setFilterDialog(false)}\r\n                setSearch={setSearch}\r\n                setFilter={setFilter}\r\n            />\r\n            <div className={classes.header}>\r\n                <Button\r\n                    color={\"primary\"}\r\n                    onClick={() => loadList()}\r\n                    variant={\"outlined\"}\r\n                >\r\n                    刷新\r\n                </Button>\r\n                <div className={classes.headerRight}>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => setHelperOpen(true)}\r\n                    >\r\n                        <HelpIcon /> {\"  \"}如何配置离线下载\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                {selected.length > 0 && (\r\n                    <Toolbar className={classes.highlight}>\r\n                        <Typography\r\n                            style={{ flex: \"1 1 100%\" }}\r\n                            color=\"inherit\"\r\n                            variant=\"subtitle1\"\r\n                        >\r\n                            已选择 {selected.length} 个对象\r\n                        </Typography>\r\n                        <Tooltip title=\"删除\">\r\n                            <IconButton\r\n                                onClick={deleteBatch}\r\n                                disabled={loading}\r\n                                aria-label=\"delete\"\r\n                            >\r\n                                <Delete />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Toolbar>\r\n                )}\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox\r\n                                        indeterminate={\r\n                                            selected.length > 0 &&\r\n                                            selected.length < downloads.length\r\n                                        }\r\n                                        checked={\r\n                                            downloads.length > 0 &&\r\n                                            selected.length === downloads.length\r\n                                        }\r\n                                        onChange={handleSelectAllClick}\r\n                                        inputProps={{\r\n                                            \"aria-label\": \"select all desserts\",\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 10 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"id\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"id\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        #\r\n                                        {orderBy[0] === \"id\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 130 }}>\r\n                                    源地址\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 90 }}>\r\n                                    状态\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 90 }}>\r\n                                    处理节点\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    style={{ minWidth: 150 }}\r\n                                    align={\"right\"}\r\n                                >\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"total_size\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"total_size\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        大小\r\n                                        {orderBy[0] === \"total_size\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 100 }}>\r\n                                    创建者\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 150 }}>\r\n                                    创建于\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 80 }}>\r\n                                    操作\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {downloads.map((row) => (\r\n                                <TableRow\r\n                                    hover\r\n                                    key={row.ID}\r\n                                    role=\"checkbox\"\r\n                                    selected={isSelected(row.ID)}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            onClick={(event) =>\r\n                                                handleClick(event, row.ID)\r\n                                            }\r\n                                            checked={isSelected(row.ID)}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell\r\n                                        style={{ wordBreak: \"break-all\" }}\r\n                                    >\r\n                                        {row.Source}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {row.Status === 0 && \"就绪\"}\r\n                                        {row.Status === 1 && \"下载中\"}\r\n                                        {row.Status === 2 && \"暂停中\"}\r\n                                        {row.Status === 3 && \"出错\"}\r\n                                        {row.Status === 4 && \"完成\"}\r\n                                        {row.Status === 5 && \"取消/停止\"}\r\n                                        {row.Status === 6 && \"未知\"}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {row.NodeID <= 1 && (\r\n                                            <Link\r\n                                                component={RouterLink}\r\n                                                to={\"/admin/node/edit/1\"}\r\n                                            >\r\n                                                主机\r\n                                            </Link>\r\n                                        )}\r\n                                        {row.NodeID > 1 && (\r\n                                            <Link\r\n                                                component={RouterLink}\r\n                                                to={\r\n                                                    \"/admin/node/edit/\" +\r\n                                                    row.NodeID\r\n                                                }\r\n                                            >\r\n                                                从机#{row.NodeID}\r\n                                            </Link>\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell align={\"right\"}>\r\n                                        {sizeToString(row.TotalSize)}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Link\r\n                                            href={\r\n                                                \"/admin/user/edit/\" + row.UserID\r\n                                            }\r\n                                        >\r\n                                            {users[row.UserID]\r\n                                                ? users[row.UserID].Nick\r\n                                                : \"未知\"}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {formatLocalTime(\r\n                                            row.CreatedAt,\r\n                                            \"YYYY-MM-DD H:mm:ss\"\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Tooltip title={\"删除\"}>\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() =>\r\n                                                    deletePolicy(row.ID)\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 50, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import { lighten } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Delete } from \"@material-ui/icons\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport { getTaskProgress, getTaskStatus, getTaskType } from \"../../../config\";\r\nimport API from \"../../../middleware/Api\";\r\nimport ShareFilter from \"../Dialogs/ShareFilter\";\r\nimport { formatLocalTime } from \"../../../utils/datetime\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    headerRight: {},\r\n    highlight:\r\n        theme.palette.type === \"light\"\r\n            ? {\r\n                  color: theme.palette.secondary.main,\r\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n              }\r\n            : {\r\n                  color: theme.palette.text.primary,\r\n                  backgroundColor: theme.palette.secondary.dark,\r\n              },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1,\r\n    },\r\n}));\r\n\r\nexport default function Task() {\r\n    const classes = useStyles();\r\n    const [tasks, setTasks] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n    const [filter, setFilter] = useState({});\r\n    const [users, setUsers] = useState({});\r\n    const [search, setSearch] = useState({});\r\n    const [orderBy, setOrderBy] = useState([\"id\", \"desc\"]);\r\n    const [filterDialog, setFilterDialog] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const loadList = () => {\r\n        API.post(\"/admin/task/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: orderBy.join(\" \"),\r\n            conditions: filter,\r\n            searches: search,\r\n        })\r\n            .then((response) => {\r\n                setUsers(response.data.users);\r\n                setTasks(response.data.items);\r\n                setTotal(response.data.total);\r\n                setSelected([]);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize, orderBy, filter, search]);\r\n\r\n    const deletePolicy = (id) => {\r\n        setLoading(true);\r\n        API.post(\"/admin/task/delete\", { id: [id] })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const deleteBatch = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/task/delete\", { id: selected })\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"任务已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleSelectAllClick = (event) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = tasks.map((n) => n.ID);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1)\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const getError = (error) => {\r\n        if (error === \"\") {\r\n            return \"-\";\r\n        }\r\n        try {\r\n            const res = JSON.parse(error);\r\n            return res.msg;\r\n        } catch (e) {\r\n            return \"未知\";\r\n        }\r\n    };\r\n\r\n    const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n    return (\r\n        <div>\r\n            <ShareFilter\r\n                filter={filter}\r\n                open={filterDialog}\r\n                onClose={() => setFilterDialog(false)}\r\n                setSearch={setSearch}\r\n                setFilter={setFilter}\r\n            />\r\n            <div className={classes.header}>\r\n                <div className={classes.headerRight}>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => loadList()}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        刷新\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                {selected.length > 0 && (\r\n                    <Toolbar className={classes.highlight}>\r\n                        <Typography\r\n                            style={{ flex: \"1 1 100%\" }}\r\n                            color=\"inherit\"\r\n                            variant=\"subtitle1\"\r\n                        >\r\n                            已选择 {selected.length} 个对象\r\n                        </Typography>\r\n                        <Tooltip title=\"删除\">\r\n                            <IconButton\r\n                                onClick={deleteBatch}\r\n                                disabled={loading}\r\n                                aria-label=\"delete\"\r\n                            >\r\n                                <Delete />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </Toolbar>\r\n                )}\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                <TableCell padding=\"checkbox\">\r\n                                    <Checkbox\r\n                                        indeterminate={\r\n                                            selected.length > 0 &&\r\n                                            selected.length < tasks.length\r\n                                        }\r\n                                        checked={\r\n                                            tasks.length > 0 &&\r\n                                            selected.length === tasks.length\r\n                                        }\r\n                                        onChange={handleSelectAllClick}\r\n                                        inputProps={{\r\n                                            \"aria-label\": \"select all desserts\",\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 10 }}>\r\n                                    <TableSortLabel\r\n                                        active={orderBy[0] === \"id\"}\r\n                                        direction={orderBy[1]}\r\n                                        onClick={() =>\r\n                                            setOrderBy([\r\n                                                \"id\",\r\n                                                orderBy[1] === \"asc\"\r\n                                                    ? \"desc\"\r\n                                                    : \"asc\",\r\n                                            ])\r\n                                        }\r\n                                    >\r\n                                        #\r\n                                        {orderBy[0] === \"id\" ? (\r\n                                            <span\r\n                                                className={\r\n                                                    classes.visuallyHidden\r\n                                                }\r\n                                            >\r\n                                                {orderBy[1] === \"desc\"\r\n                                                    ? \"sorted descending\"\r\n                                                    : \"sorted ascending\"}\r\n                                            </span>\r\n                                        ) : null}\r\n                                    </TableSortLabel>\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 130 }}>\r\n                                    类型\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 90 }}>\r\n                                    状态\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 90 }}>\r\n                                    最后进度\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 150 }}>\r\n                                    错误信息\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 100 }}>\r\n                                    创建者\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 150 }}>\r\n                                    创建于\r\n                                </TableCell>\r\n                                <TableCell style={{ minWidth: 80 }}>\r\n                                    操作\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {tasks.map((row) => (\r\n                                <TableRow\r\n                                    hover\r\n                                    key={row.ID}\r\n                                    role=\"checkbox\"\r\n                                    selected={isSelected(row.ID)}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            onClick={(event) =>\r\n                                                handleClick(event, row.ID)\r\n                                            }\r\n                                            checked={isSelected(row.ID)}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell\r\n                                        style={{ wordBreak: \"break-all\" }}\r\n                                    >\r\n                                        {getTaskType(row.Type)}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {getTaskStatus(row.Status)}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {getTaskProgress(\r\n                                            row.Type,\r\n                                            row.Progress\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell className={classes.noWrap}>\r\n                                        {getError(row.Error)}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Link\r\n                                            href={\r\n                                                \"/admin/user/edit/\" + row.UserID\r\n                                            }\r\n                                        >\r\n                                            {users[row.UserID]\r\n                                                ? users[row.UserID].Nick\r\n                                                : \"未知\"}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {formatLocalTime(\r\n                                            row.CreatedAt,\r\n                                            \"YYYY-MM-DD H:mm:ss\"\r\n                                        )}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Tooltip title={\"删除\"}>\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() =>\r\n                                                    deletePolicy(row.ID)\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 50, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import { Dialog } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport API from \"../../../middleware/Api\";\r\nimport PathSelector from \"../../FileManager/PathSelector\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    userSelect: {\r\n        width: 400,\r\n        borderRadius: 0,\r\n    },\r\n}));\r\n\r\nfunction useDebounce(value, delay) {\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(() => {\r\n        const handler = setTimeout(() => {\r\n            setDebouncedValue(value);\r\n        }, delay);\r\n        return () => {\r\n            clearTimeout(handler);\r\n        };\r\n    }, [value]);\r\n\r\n    return debouncedValue;\r\n}\r\n\r\nexport default function Import() {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [options, setOptions] = useState({\r\n        policy: 1,\r\n        userInput: \"\",\r\n        src: \"\",\r\n        dst: \"\",\r\n        recursive: true,\r\n    });\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [policies, setPolicies] = useState({});\r\n    const [users, setUsers] = useState([]);\r\n    const [user, setUser] = useState(null);\r\n    const [selectRemote, setSelectRemote] = useState(false);\r\n    const [selectLocal, setSelectLocal] = useState(false);\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleCheckChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.checked,\r\n        });\r\n    };\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        if (user === null) {\r\n            ToggleSnackbar(\"top\", \"right\", \"请先选择目标用户\", \"warning\");\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        API.post(\"/admin/task/import\", {\r\n            uid: user.ID,\r\n            policy_id: parseInt(options.policy),\r\n            src: options.src,\r\n            dst: options.dst,\r\n            recursive: options.recursive,\r\n        })\r\n            .then(() => {\r\n                setLoading(false);\r\n                history.push(\"/admin/file\");\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"导入任务已创建，您可以在“持久任务”中查看执行情况\",\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const debouncedSearchTerm = useDebounce(options.userInput, 500);\r\n\r\n    useEffect(() => {\r\n        if (debouncedSearchTerm !== \"\") {\r\n            API.post(\"/admin/user/list\", {\r\n                page: 1,\r\n                page_size: 10000,\r\n                order_by: \"id asc\",\r\n                searches: {\r\n                    nick: debouncedSearchTerm,\r\n                    email: debouncedSearchTerm,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    setUsers(response.data.items);\r\n                })\r\n                .catch((error) => {\r\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                });\r\n        }\r\n    }, [debouncedSearchTerm]);\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/policy/list\", {\r\n            page: 1,\r\n            page_size: 10000,\r\n            order_by: \"id asc\",\r\n            conditions: {},\r\n        })\r\n            .then((response) => {\r\n                const res = {};\r\n                response.data.items.forEach((v) => {\r\n                    res[v.ID] = v;\r\n                });\r\n                setPolicies(res);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const selectUser = (u) => {\r\n        setOptions({\r\n            ...options,\r\n            userInput: \"\",\r\n        });\r\n        setUser(u);\r\n    };\r\n\r\n    const setMoveTarget = (setter) => (folder) => {\r\n        const path =\r\n            folder.path === \"/\"\r\n                ? folder.path + folder.name\r\n                : folder.path + \"/\" + folder.name;\r\n        setter(path === \"//\" ? \"/\" : path);\r\n    };\r\n\r\n    const openPathSelector = (isSrcSelect) => {\r\n        if (isSrcSelect) {\r\n            if (\r\n                !policies[options.policy] ||\r\n                policies[options.policy].Type === \"local\" ||\r\n                policies[options.policy].Type === \"remote\"\r\n            ) {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"选择的存储策略只支持手动输入路径\",\r\n                    \"warning\"\r\n                );\r\n                return;\r\n            }\r\n            setSelectRemote(true);\r\n        } else {\r\n            if (user === null) {\r\n                ToggleSnackbar(\"top\", \"right\", \"请先选择目标用户\", \"warning\");\r\n                return;\r\n            }\r\n            setSelectLocal(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={selectRemote}\r\n                onClose={() => setSelectRemote(false)}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">选择目录</DialogTitle>\r\n                <PathSelector\r\n                    presentPath=\"/\"\r\n                    api={\"/admin/file/folders/policy/\" + options.policy}\r\n                    selected={[]}\r\n                    onSelect={setMoveTarget((p) =>\r\n                        setOptions({\r\n                            ...options,\r\n                            src: p,\r\n                        })\r\n                    )}\r\n                />\r\n\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setSelectRemote(false)}\r\n                        color=\"primary\"\r\n                    >\r\n                        确定\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <Dialog\r\n                open={selectLocal}\r\n                onClose={() => setSelectLocal(false)}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">选择目录</DialogTitle>\r\n                <PathSelector\r\n                    presentPath=\"/\"\r\n                    api={\r\n                        \"/admin/file/folders/user/\" +\r\n                        (user === null ? 0 : user.ID)\r\n                    }\r\n                    selected={[]}\r\n                    onSelect={setMoveTarget((p) =>\r\n                        setOptions({\r\n                            ...options,\r\n                            dst: p,\r\n                        })\r\n                    )}\r\n                />\r\n\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setSelectLocal(false)}\r\n                        color=\"primary\"\r\n                    >\r\n                        确定\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        导入外部目录\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <Alert severity=\"info\">\r\n                                您可以将存储策略中已有文件、目录结构导入到\r\n                                Cloudreve\r\n                                中，导入操作不会额外占用物理存储空间，但仍会正常扣除用户已用容量空间，空间不足时将停止导入。\r\n                            </Alert>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    存储策略\r\n                                </InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-mutiple-chip-label\"\r\n                                    id=\"demo-mutiple-chip\"\r\n                                    value={options.policy}\r\n                                    onChange={handleChange(\"policy\")}\r\n                                    input={<Input id=\"select-multiple-chip\" />}\r\n                                >\r\n                                    {Object.keys(policies).map((pid) => (\r\n                                        <MenuItem key={pid} value={pid}>\r\n                                            {policies[pid].Name}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    选择要导入文件目前存储所在的存储策略\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    目标用户\r\n                                </InputLabel>\r\n                                <Input\r\n                                    value={options.userInput}\r\n                                    onChange={(e) => {\r\n                                        handleChange(\"userInput\")(e);\r\n                                        setAnchorEl(e.currentTarget);\r\n                                    }}\r\n                                    startAdornment={\r\n                                        user !== null && (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <Chip\r\n                                                    size=\"small\"\r\n                                                    onDelete={() => {\r\n                                                        setUser(null);\r\n                                                    }}\r\n                                                    label={user.Nick}\r\n                                                />\r\n                                            </InputAdornment>\r\n                                        )\r\n                                    }\r\n                                    disabled={user !== null}\r\n                                />\r\n                                <Popper\r\n                                    open={\r\n                                        options.userInput !== \"\" &&\r\n                                        users.length > 0\r\n                                    }\r\n                                    anchorEl={anchorEl}\r\n                                    placement={\"bottom\"}\r\n                                    transition\r\n                                >\r\n                                    {({ TransitionProps }) => (\r\n                                        <Fade\r\n                                            {...TransitionProps}\r\n                                            timeout={350}\r\n                                        >\r\n                                            <Paper\r\n                                                className={classes.userSelect}\r\n                                            >\r\n                                                {users.map((u) => (\r\n                                                    <MenuItem\r\n                                                        key={u.Email}\r\n                                                        onClick={() =>\r\n                                                            selectUser(u)\r\n                                                        }\r\n                                                    >\r\n                                                        {u.Nick}{\" \"}\r\n                                                        {\"<\" + u.Email + \">\"}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Paper>\r\n                                        </Fade>\r\n                                    )}\r\n                                </Popper>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    选择要将文件导入到哪个用户的文件系统中，可通过昵称、邮箱搜索用户\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    原始目录路径\r\n                                </InputLabel>\r\n\r\n                                <Input\r\n                                    value={options.src}\r\n                                    onChange={(e) => {\r\n                                        handleChange(\"src\")(e);\r\n                                        setAnchorEl(e.currentTarget);\r\n                                    }}\r\n                                    required\r\n                                    endAdornment={\r\n                                        <Button\r\n                                            onClick={() =>\r\n                                                openPathSelector(true)\r\n                                            }\r\n                                        >\r\n                                            选择\r\n                                        </Button>\r\n                                    }\r\n                                />\r\n\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    要导入的目录在存储端的路径\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    目的目录路径\r\n                                </InputLabel>\r\n\r\n                                <Input\r\n                                    value={options.dst}\r\n                                    onChange={(e) => {\r\n                                        handleChange(\"dst\")(e);\r\n                                        setAnchorEl(e.currentTarget);\r\n                                    }}\r\n                                    required\r\n                                    endAdornment={\r\n                                        <Button\r\n                                            onClick={() =>\r\n                                                openPathSelector(false)\r\n                                            }\r\n                                        >\r\n                                            选择\r\n                                        </Button>\r\n                                    }\r\n                                />\r\n\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    要将目录导入到用户文件系统中的路径\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Switch\r\n                                            checked={options.recursive}\r\n                                            onChange={handleCheckChange(\r\n                                                \"recursive\"\r\n                                            )}\r\n                                        />\r\n                                    }\r\n                                    label=\"递归导入子目录\"\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    是否将目录下的所有子目录递归导入\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        创建导入任务\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Captcha() {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(false);\r\n    const [options, setOptions] = useState({\r\n        captcha_type: \"normal\",\r\n        captcha_height: \"1\",\r\n        captcha_width: \"1\",\r\n        captcha_mode: \"3\",\r\n        captcha_CaptchaLen: \"\",\r\n        captcha_ReCaptchaKey: \"\",\r\n        captcha_ReCaptchaSecret: \"\",\r\n        captcha_TCaptcha_CaptchaAppId: \"\",\r\n        captcha_TCaptcha_AppSecretKey: \"\",\r\n        captcha_TCaptcha_SecretId: \"\",\r\n        captcha_TCaptcha_SecretKey: \"\",\r\n    });\r\n\r\n    const handleChange = (name) => (event) => {\r\n        setOptions({\r\n            ...options,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.post(\"/admin/setting\", {\r\n            keys: Object.keys(options),\r\n        })\r\n            .then((response) => {\r\n                setOptions(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const option = [];\r\n        Object.keys(options).forEach((k) => {\r\n            option.push({\r\n                key: k,\r\n                value: options[k],\r\n            });\r\n        });\r\n        API.patch(\"/admin/setting\", {\r\n            options: option,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"设置已更改\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit}>\r\n                <div className={classes.root}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        验证码\r\n                    </Typography>\r\n                    <div className={classes.formContainer}>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    验证码类型\r\n                                </InputLabel>\r\n                                <Select\r\n                                    value={options.captcha_type}\r\n                                    onChange={handleChange(\"captcha_type\")}\r\n                                    required\r\n                                >\r\n                                    <MenuItem value={\"normal\"}>普通</MenuItem>\r\n                                    <MenuItem value={\"recaptcha\"}>\r\n                                        reCAPTCHA V2\r\n                                    </MenuItem>\r\n                                    <MenuItem value={\"tcaptcha\"}>\r\n                                        腾讯云验证码\r\n                                    </MenuItem>\r\n                                </Select>\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    验证码类型\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {options.captcha_type === \"normal\" && (\r\n                    <div className={classes.root}>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            普通验证码\r\n                        </Typography>\r\n                        <div className={classes.formContainer}>\r\n                            <div className={classes.form}>\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        宽度\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        type={\"number\"}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1,\r\n                                        }}\r\n                                        value={options.captcha_width}\r\n                                        onChange={handleChange(\"captcha_width\")}\r\n                                        required\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        高度\r\n                                    </InputLabel>\r\n                                    <Input\r\n                                        type={\"number\"}\r\n                                        inputProps={{\r\n                                            min: 1,\r\n                                            step: 1,\r\n                                        }}\r\n                                        value={options.captcha_height}\r\n                                        onChange={handleChange(\r\n                                            \"captcha_height\"\r\n                                        )}\r\n                                        required\r\n                                    />\r\n                                </FormControl>\r\n                            </div>\r\n\r\n                            <div className={classes.form}>\r\n                                <FormControl>\r\n                                    <InputLabel htmlFor=\"component-helper\">\r\n                                        模式\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                        value={options.captcha_mode}\r\n                                        onChange={handleChange(\"captcha_mode\")}\r\n                                        required\r\n                                    >\r\n                                        <MenuItem value={\"0\"}>数字</MenuItem>\r\n                                        <MenuItem value={\"1\"}>字母</MenuItem>\r\n                                        <MenuItem value={\"2\"}>算数</MenuItem>\r\n                                        <MenuItem value={\"3\"}>\r\n                                            数字+字母\r\n                                        </MenuItem>\r\n                                    </Select>\r\n                                    <FormHelperText id=\"component-helper-text\">\r\n                                        验证码的形式\r\n                                    </FormHelperText>\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {options.captcha_type === \"recaptcha\" && (\r\n                    <div className={classes.root}>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            reCAPTCHA V2\r\n                        </Typography>\r\n                        <div className={classes.formContainer}>\r\n                            <div className={classes.form}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            Site KEY\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required\r\n                                            value={options.captcha_ReCaptchaKey}\r\n                                            onChange={handleChange(\r\n                                                \"captcha_ReCaptchaKey\"\r\n                                            )}\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            <Link\r\n                                                href={\r\n                                                    \"https://www.google.com/recaptcha/admin/create\"\r\n                                                }\r\n                                                target={\"_blank\"}\r\n                                            >\r\n                                                应用管理页面\r\n                                            </Link>{\" \"}\r\n                                            获取到的的 网站密钥\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            Secret\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required\r\n                                            value={\r\n                                                options.captcha_ReCaptchaSecret\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"captcha_ReCaptchaSecret\"\r\n                                            )}\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            <Link\r\n                                                href={\r\n                                                    \"https://www.google.com/recaptcha/admin/create\"\r\n                                                }\r\n                                                target={\"_blank\"}\r\n                                            >\r\n                                                应用管理页面\r\n                                            </Link>{\" \"}\r\n                                            获取到的的 秘钥\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {options.captcha_type === \"tcaptcha\" && (\r\n                    <div className={classes.root}>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            腾讯云验证码\r\n                        </Typography>\r\n                        <div className={classes.formContainer}>\r\n                            <div className={classes.form}>\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            SecretId\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required\r\n                                            value={\r\n                                                options.captcha_TCaptcha_SecretId\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"captcha_TCaptcha_SecretId\"\r\n                                            )}\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            <Link\r\n                                                href={\r\n                                                    \"https://console.cloud.tencent.com/capi\"\r\n                                                }\r\n                                                target={\"_blank\"}\r\n                                            >\r\n                                                访问密钥页面\r\n                                            </Link>{\" \"}\r\n                                            获取到的的 SecretId\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            SecretKey\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required\r\n                                            value={\r\n                                                options.captcha_TCaptcha_SecretKey\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"captcha_TCaptcha_SecretKey\"\r\n                                            )}\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            <Link\r\n                                                href={\r\n                                                    \"https://console.cloud.tencent.com/capi\"\r\n                                                }\r\n                                                target={\"_blank\"}\r\n                                            >\r\n                                                访问密钥页面\r\n                                            </Link>{\" \"}\r\n                                            获取到的的 SecretKey\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            APPID\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required\r\n                                            value={\r\n                                                options.captcha_TCaptcha_CaptchaAppId\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"captcha_TCaptcha_CaptchaAppId\"\r\n                                            )}\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            <Link\r\n                                                href={\r\n                                                    \"https://console.cloud.tencent.com/captcha/graphical\"\r\n                                                }\r\n                                                target={\"_blank\"}\r\n                                            >\r\n                                                图形验证页面\r\n                                            </Link>{\" \"}\r\n                                            获取到的的 APPID\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n\r\n                                <div className={classes.form}>\r\n                                    <FormControl fullWidth>\r\n                                        <InputLabel htmlFor=\"component-helper\">\r\n                                            App Secret Key\r\n                                        </InputLabel>\r\n                                        <Input\r\n                                            required\r\n                                            value={\r\n                                                options.captcha_TCaptcha_AppSecretKey\r\n                                            }\r\n                                            onChange={handleChange(\r\n                                                \"captcha_TCaptcha_AppSecretKey\"\r\n                                            )}\r\n                                        />\r\n                                        <FormHelperText id=\"component-helper-text\">\r\n                                            <Link\r\n                                                href={\r\n                                                    \"https://console.cloud.tencent.com/captcha/graphical\"\r\n                                                }\r\n                                                target={\"_blank\"}\r\n                                            >\r\n                                                图形验证页面\r\n                                            </Link>{\" \"}\r\n                                            获取到的的 App Secret Key\r\n                                        </FormHelperText>\r\n                                    </FormControl>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div className={classes.root}>\r\n                    <Button\r\n                        disabled={loading}\r\n                        type={\"submit\"}\r\n                        variant={\"contained\"}\r\n                        color={\"primary\"}\r\n                    >\r\n                        保存\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport API from \"../../../middleware/Api\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport { useHistory } from \"react-router\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {\r\n    Delete,\r\n    Edit,\r\n    Cancel,\r\n    CheckCircle,\r\n    PlayArrow,\r\n    Pause,\r\n} from \"@material-ui/icons\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport classNames from \"classnames\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    container: {\r\n        overflowX: \"auto\",\r\n    },\r\n    tableContainer: {\r\n        marginTop: 16,\r\n    },\r\n    header: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    disabledBadge: {\r\n        marginLeft: theme.spacing(1),\r\n        height: 18,\r\n    },\r\n    disabledCell: {\r\n        color: theme.palette.text.disabled,\r\n    },\r\n    verticalAlign: {\r\n        verticalAlign: \"middle\",\r\n        display: \"inline-block\",\r\n    },\r\n}));\r\n\r\nconst columns = [\r\n    { id: \"#\", label: \"#\", minWidth: 50 },\r\n    { id: \"name\", label: \"名称\", minWidth: 170 },\r\n    {\r\n        id: \"status\",\r\n        label: \"当前状态\",\r\n        minWidth: 50,\r\n    },\r\n    {\r\n        id: \"features\",\r\n        label: \"已启用功能\",\r\n        minWidth: 170,\r\n    },\r\n    {\r\n        id: \"action\",\r\n        label: \"操作\",\r\n        minWidth: 170,\r\n    },\r\n];\r\n\r\nconst features = [\r\n    {\r\n        field: \"Aria2Enabled\",\r\n        name: \"离线下载\",\r\n    },\r\n];\r\n\r\nexport default function Node() {\r\n    const classes = useStyles();\r\n    const [nodes, setNodes] = useState([]);\r\n    const [isActive, setIsActive] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n    const [page, setPage] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [total, setTotal] = useState(0);\r\n\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const loadList = () => {\r\n        API.post(\"/admin/node/list\", {\r\n            page: page,\r\n            page_size: pageSize,\r\n            order_by: \"id desc\",\r\n        })\r\n            .then((response) => {\r\n                setNodes(response.data.items);\r\n                setTotal(response.data.total);\r\n                setIsActive(response.data.active);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const toggleNode = (id, desired) => {\r\n        setLoading(true);\r\n        API.patch(\"/admin/node/enable/\" + id + \"/\" + desired)\r\n            .then((response) => {\r\n                loadList();\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"节点已\" + (desired === 1 ? \"暂停使用\" : \"启用\"),\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const deleteNode = (id) => {\r\n        setLoading(true);\r\n        API.delete(\"/admin/node/\" + id)\r\n            .then(() => {\r\n                loadList();\r\n                ToggleSnackbar(\"top\", \"right\", \"节点已删除\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadList();\r\n    }, [page, pageSize]);\r\n\r\n    const getStatusBadge = (status) => {\r\n        if (status === 1) {\r\n            return (\r\n                <Chip\r\n                    className={classes.disabledBadge}\r\n                    size=\"small\"\r\n                    label=\"未启用\"\r\n                />\r\n            );\r\n        }\r\n    };\r\n\r\n    const getFeatureBadge = (node) =>\r\n        features.map((feature) => {\r\n            if (node[feature.field]) {\r\n                return (\r\n                    <Chip\r\n                        className={classes.disabledBadge}\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        label={feature.name}\r\n                    />\r\n                );\r\n            }\r\n        });\r\n\r\n    const getRealStatusBadge = (status) =>\r\n        status ? (\r\n            <Box color=\"success.main\" fontSize=\"small\">\r\n                <CheckCircle\r\n                    className={classes.verticalAlign}\r\n                    fontSize=\"small\"\r\n                />{\" \"}\r\n                <span className={classes.verticalAlign}>在线</span>\r\n            </Box>\r\n        ) : (\r\n            <Box color=\"error.main\" fontSize=\"small\">\r\n                <Cancel className={classes.verticalAlign} fontSize=\"small\" />{\" \"}\r\n                <span className={classes.verticalAlign}>离线</span>\r\n            </Box>\r\n        );\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.header}>\r\n                <Button\r\n                    color={\"primary\"}\r\n                    onClick={() => history.push(\"/admin/node/add\")}\r\n                    variant={\"contained\"}\r\n                >\r\n                    接入新节点\r\n                </Button>\r\n                <div className={classes.headerRight}>\r\n                    <Button\r\n                        color={\"primary\"}\r\n                        onClick={() => loadList()}\r\n                        variant={\"outlined\"}\r\n                    >\r\n                        刷新\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <Paper square className={classes.tableContainer}>\r\n                <TableContainer className={classes.container}>\r\n                    <Table aria-label=\"sticky table\" size={\"small\"}>\r\n                        <TableHead>\r\n                            <TableRow style={{ height: 52 }}>\r\n                                {columns.map((column) => (\r\n                                    <TableCell\r\n                                        key={column.id}\r\n                                        align={column.align}\r\n                                        style={{\r\n                                            minWidth: column.minWidthclassNames,\r\n                                        }}\r\n                                    >\r\n                                        {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {nodes.map((row) => (\r\n                                <TableRow hover key={row.ID}>\r\n                                    <TableCell>{row.ID}</TableCell>\r\n                                    <TableCell\r\n                                        className={classNames({\r\n                                            [classes.disabledCell]:\r\n                                                row.Status === 1,\r\n                                        })}\r\n                                    >\r\n                                        {row.Name}\r\n                                        {getStatusBadge(row.Status)}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {getRealStatusBadge(isActive[row.ID])}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {getFeatureBadge(row)}\r\n                                    </TableCell>\r\n\r\n                                    <TableCell align={\"right\"}>\r\n                                        <Tooltip\r\n                                            title={\r\n                                                row.Status === 1\r\n                                                    ? \"启用节点\"\r\n                                                    : \"暂停使用节点\"\r\n                                            }\r\n                                        >\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() =>\r\n                                                    toggleNode(\r\n                                                        row.ID,\r\n                                                        1 - row.Status\r\n                                                    )\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                {row.Status === 1 && (\r\n                                                    <PlayArrow />\r\n                                                )}\r\n                                                {row.Status !== 1 && <Pause />}\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Tooltip title={\"编辑\"}>\r\n                                            <IconButton\r\n                                                disabled={loading}\r\n                                                onClick={() =>\r\n                                                    history.push(\r\n                                                        \"/admin/node/edit/\" +\r\n                                                            row.ID\r\n                                                    )\r\n                                                }\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Edit />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Tooltip title={\"删除\"}>\r\n                                            <IconButton\r\n                                                onClick={() =>\r\n                                                    deleteNode(row.ID)\r\n                                                }\r\n                                                disabled={loading}\r\n                                                size={\"small\"}\r\n                                            >\r\n                                                <Delete />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={total}\r\n                    rowsPerPage={pageSize}\r\n                    page={page - 1}\r\n                    onChangePage={(e, p) => setPage(p + 1)}\r\n                    onChangeRowsPerPage={(e) => {\r\n                        setPageSize(e.target.value);\r\n                        setPage(1);\r\n                    }}\r\n                />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../../actions\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    viewButtonLabel: { textTransform: \"none\" },\r\n    \"@global\": {\r\n        code: {\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            display: \"inline-block\",\r\n            padding: \"2px 6px\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"rgba(255,229,100,0.1)\",\r\n        },\r\n        pre: {\r\n            margin: \"24px 0\",\r\n            padding: \"12px 18px\",\r\n            overflow: \"auto\",\r\n            direction: \"ltr\",\r\n            borderRadius: \"4px\",\r\n            backgroundColor: \"#272c34\",\r\n            color: \"#fff\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Communication(props) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const testSlave = () => {\r\n        setLoading(true);\r\n\r\n        // 测试路径是否可用\r\n        API.post(\"/admin/policy/test/slave\", {\r\n            server: props.node.Server,\r\n            secret: props.node.SlaveKey,\r\n        })\r\n            .then(() => {\r\n                ToggleSnackbar(\"top\", \"right\", \"通信正常\", \"success\");\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <form\r\n            className={classes.stepContent}\r\n            onSubmit={(e) => {\r\n                e.preventDefault();\r\n                props.onSubmit(e);\r\n            }}\r\n        >\r\n            <Alert severity=\"info\" style={{ marginBottom: 10 }}>\r\n                您可以添加同样运行了 Cloudreve 的服务器作为从机端，\r\n                正常运行工作的从机端可以为主机分担某些异步任务（如离线下载）。\r\n                请参考下面向导部署并配置连接 Cloudreve 从机节点。\r\n                <Box fontWeight=\"fontWeightBold\">\r\n                    如果你已经在目标服务器上部署了从机存储策略，您可以跳过本页面的某些步骤，\r\n                    只将从机密钥、服务器地址在这里填写并保持与从机存储策略中一致即可。\r\n                </Box>\r\n                在后续版本中，从机存储策略的相关配置会合并到这里。\r\n            </Alert>\r\n\r\n            <div className={classes.subStepContainer}>\r\n                <div className={classes.stepNumberContainer}>\r\n                    <div className={classes.stepNumber}>1</div>\r\n                </div>\r\n                <div className={classes.subStepContent}>\r\n                    <Typography variant={\"body2\"}>\r\n                        将和主站相同版本的 Cloudreve\r\n                        程序拷贝至要作为从机的服务器上。\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.subStepContainer}>\r\n                <div className={classes.stepNumberContainer}>\r\n                    <div className={classes.stepNumber}>2</div>\r\n                </div>\r\n                <div className={classes.subStepContent}>\r\n                    <Typography variant={\"body2\"}>\r\n                        下方为系统为您随机生成的从机端密钥，一般无需改动，如果有自定义需求，\r\n                        可将您的密钥填入下方：\r\n                    </Typography>\r\n                    <div className={classes.form}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel htmlFor=\"component-helper\">\r\n                                从机密钥\r\n                            </InputLabel>\r\n                            <Input\r\n                                required\r\n                                inputProps={{\r\n                                    minlength: 64,\r\n                                }}\r\n                                value={props.node.SlaveKey}\r\n                                onChange={props.handleTextChange(\"SlaveKey\")}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.subStepContainer}>\r\n                <div className={classes.stepNumberContainer}>\r\n                    <div className={classes.stepNumber}>3</div>\r\n                </div>\r\n                <div className={classes.subStepContent}>\r\n                    <Typography variant={\"body2\"}>\r\n                        修改从机配置文件。\r\n                        <br />\r\n                        在从机端 Cloudreve 的同级目录下新建\r\n                        <code>conf.ini</code>\r\n                        文件，填入从机配置，启动/重启从机端 Cloudreve。\r\n                        以下为一个可供参考的配置例子，其中密钥部分已帮您填写为上一步所生成的。\r\n                    </Typography>\r\n                    <pre>\r\n                        [System]\r\n                        <br />\r\n                        Mode = slave\r\n                        <br />\r\n                        Listen = :5212\r\n                        <br />\r\n                        <br />\r\n                        [Slave]\r\n                        <br />\r\n                        Secret = {props.node.SlaveKey}\r\n                        <br />\r\n                    </pre>\r\n                    <Typography variant={\"body2\"}>\r\n                        从机端配置文件格式大致与主站端相同，区别在于：\r\n                        <ul>\r\n                            <li>\r\n                                <code>System</code>\r\n                                分区下的\r\n                                <code>mode</code>\r\n                                字段必须更改为<code>slave</code>\r\n                            </li>\r\n                            <li>\r\n                                必须指定<code>Slave</code>分区下的\r\n                                <code>Secret</code>\r\n                                字段，其值为第二步里填写或生成的密钥。\r\n                            </li>\r\n                        </ul>\r\n                        一个从机 Cloudreve 实例可以对接多个 Cloudreve\r\n                        主节点，只需在所有主节点中添加此从机节点并保持密钥一致即可。\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.subStepContainer}>\r\n                <div className={classes.stepNumberContainer}>\r\n                    <div className={classes.stepNumber}>4</div>\r\n                </div>\r\n                <div className={classes.subStepContent}>\r\n                    <Typography variant={\"body2\"}>\r\n                        填写从机地址。\r\n                        <br />\r\n                        如果主站启用了 HTTPS，从机也需要启用，并在下方填入 HTTPS\r\n                        协议的地址。\r\n                    </Typography>\r\n                    <div className={classes.form}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel htmlFor=\"component-helper\">\r\n                                从机地址\r\n                            </InputLabel>\r\n                            <Input\r\n                                fullWidth\r\n                                required\r\n                                type={\"url\"}\r\n                                value={props.node.Server}\r\n                                onChange={props.handleTextChange(\"Server\")}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.subStepContainer}>\r\n                <div className={classes.stepNumberContainer}>\r\n                    <div className={classes.stepNumber}>5</div>\r\n                </div>\r\n                <div className={classes.subStepContent}>\r\n                    <Typography variant={\"body2\"}>\r\n                        完成以上步骤后，你可以点击下方的测试按钮测试通信是否正常。\r\n                    </Typography>\r\n                    <div className={classes.form}>\r\n                        <Button\r\n                            disabled={loading}\r\n                            variant={\"outlined\"}\r\n                            onClick={() => testSlave()}\r\n                            color={\"primary\"}\r\n                        >\r\n                            测试从机通信\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.stepFooter}>\r\n                <Button\r\n                    disabled={loading || props.loading}\r\n                    type={\"submit\"}\r\n                    variant={\"contained\"}\r\n                    color={\"primary\"}\r\n                >\r\n                    下一步\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../../actions\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport API from \"../../../../middleware/Api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    viewButtonLabel: { textTransform: \"none\" },\r\n    \"@global\": {\r\n        code: {\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            display: \"inline-block\",\r\n            padding: \"2px 6px\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"rgba(255,229,100,0.1)\",\r\n        },\r\n        pre: {\r\n            margin: \"24px 0\",\r\n            padding: \"12px 18px\",\r\n            overflow: \"auto\",\r\n            direction: \"ltr\",\r\n            borderRadius: \"4px\",\r\n            backgroundColor: \"#272c34\",\r\n            color: \"#fff\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Aria2RPC(props) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const testAria2 = () => {\r\n        setLoading(true);\r\n        API.post(\"/admin/node/aria2/test\", {\r\n            type: props.node.Type,\r\n            server: props.node.Server,\r\n            secret: props.node.SlaveKey,\r\n            rpc: props.node.Aria2OptionsSerialized.server,\r\n            token: props.node.Aria2OptionsSerialized.token,\r\n        })\r\n            .then((response) => {\r\n                ToggleSnackbar(\r\n                    \"top\",\r\n                    \"right\",\r\n                    \"连接成功，Aria2 版本为：\" + response.data,\r\n                    \"success\"\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            })\r\n            .then(() => {\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const mode = props.node.Type === 0 ? \"从机\" : \"主机\";\r\n\r\n    return (\r\n        <form\r\n            className={classes.stepContent}\r\n            onSubmit={(e) => {\r\n                e.preventDefault();\r\n                props.onSubmit(e);\r\n            }}\r\n        >\r\n            <Alert severity=\"info\" style={{ marginBottom: 10 }}>\r\n                <Typography variant=\"body2\">\r\n                    Cloudreve 的离线下载功能由{\" \"}\r\n                    <Link href={\"https://aria2.github.io/\"} target={\"_blank\"}>\r\n                        Aria2\r\n                    </Link>{\" \"}\r\n                    驱动。如需使用，请在目标节点服务器上以和运行 Cloudreve\r\n                    相同的用户身份启动 Aria2， 并在 Aria2 的配置文件中开启 RPC\r\n                    服务，\r\n                    <Box component=\"span\" fontWeight=\"fontWeightBold\">\r\n                        Aria2 需要和{mode} Cloudreve 进程共用相同的文件系统。\r\n                    </Box>{\" \"}\r\n                    更多信息及指引请参考文档的{\" \"}\r\n                    <Link\r\n                        href={\"https://docs.cloudreve.org/use/aria2\"}\r\n                        target={\"_blank\"}\r\n                    >\r\n                        离线下载\r\n                    </Link>{\" \"}\r\n                    章节。\r\n                </Typography>\r\n            </Alert>\r\n\r\n            <div className={classes.subStepContainer}>\r\n                <div className={classes.stepNumberContainer}>\r\n                    <div className={classes.stepNumber}>1</div>\r\n                </div>\r\n                <div className={classes.subStepContent}>\r\n                    <Typography variant={\"body2\"}>\r\n                        {props.node.Type === 0\r\n                            ? \"是否需要此节点接管离线下载任务？\"\r\n                            : \"是否需要主机接管离线下载任务？\"}\r\n                        <br />\r\n                        {props.node.Type === 0\r\n                            ? \"开启后，用户的离线下载请求可以被分流到此节点处理。\"\r\n                            : \"开启后，用户的离线下载请求可以被分流到主机处理。\"}\r\n                    </Typography>\r\n\r\n                    <div className={classes.form}>\r\n                        <FormControl required component=\"fieldset\">\r\n                            <RadioGroup\r\n                                required\r\n                                value={props.node.Aria2Enabled}\r\n                                onChange={props.handleTextChange(\r\n                                    \"Aria2Enabled\"\r\n                                )}\r\n                                row\r\n                            >\r\n                                <FormControlLabel\r\n                                    value={\"true\"}\r\n                                    control={<Radio color={\"primary\"} />}\r\n                                    label=\"启用\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    value={\"false\"}\r\n                                    control={<Radio color={\"primary\"} />}\r\n                                    label=\"关闭\"\r\n                                />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Collapse in={props.node.Aria2Enabled === \"true\"}>\r\n                <div className={classes.subStepContainer}>\r\n                    <div className={classes.stepNumberContainer}>\r\n                        <div className={classes.stepNumber}>2</div>\r\n                    </div>\r\n                    <div className={classes.subStepContent}>\r\n                        <Typography variant={\"body2\"}>\r\n                            {props.node.Type === 0\r\n                                ? \" 在目标节点服务器上与节点 \"\r\n                                : \"在与 \"}\r\n                            Cloudreve 进程相同的文件系统环境下启动 Aria2\r\n                            进程。在启动 Aria2 时，需要在其配置文件中启用 RPC\r\n                            服务，并设定 RPC\r\n                            Secret，以便后续使用。以下为一个供参考的配置：\r\n                        </Typography>\r\n                        <pre>\r\n                            # 启用 RPC 服务\r\n                            <br />\r\n                            enable-rpc=true\r\n                            <br />\r\n                            # RPC 监听端口\r\n                            <br />\r\n                            rpc-listen-port=6800\r\n                            <br />\r\n                            # RPC 授权令牌，可自行设定\r\n                            <br />\r\n                            rpc-secret=\r\n                            {props.node.Aria2OptionsSerialized.token}\r\n                            <br />\r\n                        </pre>\r\n                        <Alert severity=\"info\" style={{ marginBottom: 10 }}>\r\n                            <Typography variant=\"body2\">\r\n                                推荐在日常启动流程中，先启动 Aria2，再启动节点\r\n                                Cloudreve，这样节点 Cloudreve 可以向 Aria2\r\n                                订阅事件通知，下载状态变更处理更及时。当然，如果没有这一流程，节点\r\n                                Cloudreve 也会通过轮询追踪任务状态。\r\n                            </Typography>\r\n                        </Alert>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.subStepContainer}>\r\n                    <div className={classes.stepNumberContainer}>\r\n                        <div className={classes.stepNumber}>3</div>\r\n                    </div>\r\n                    <div className={classes.subStepContent}>\r\n                        <Typography variant={\"body2\"}>\r\n                            在下方填写{mode} Cloudreve 与 Aria2 通信的 RPC\r\n                            服务地址。一般可填写为\r\n                            <code>http://127.0.0.1:6800/</code>,其中端口号\r\n                            <code>6800</code>与上文配置文件中\r\n                            <code>rpc-listen-port</code>保持一致。\r\n                        </Typography>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    RPC 服务器地址\r\n                                </InputLabel>\r\n                                <Input\r\n                                    required\r\n                                    type={\"url\"}\r\n                                    value={\r\n                                        props.node.Aria2OptionsSerialized.server\r\n                                    }\r\n                                    onChange={props.handleOptionChange(\r\n                                        \"server\"\r\n                                    )}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    包含端口的完整 RPC\r\n                                    服务器地址，例如：http://127.0.0.1:6800/，留空表示不启用\r\n                                    Aria2 服务\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.subStepContainer}>\r\n                    <div className={classes.stepNumberContainer}>\r\n                        <div className={classes.stepNumber}>4</div>\r\n                    </div>\r\n                    <div className={classes.subStepContent}>\r\n                        <Typography variant={\"body2\"}>\r\n                            RPC 授权令牌，与 Aria2 配置文件中\r\n                            <code>rpc-secret</code>保持一致，未设置请留空。\r\n                        </Typography>\r\n                        <div className={classes.form}>\r\n                            <Input\r\n                                value={props.node.Aria2OptionsSerialized.token}\r\n                                onChange={props.handleOptionChange(\"token\")}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.subStepContainer}>\r\n                    <div className={classes.stepNumberContainer}>\r\n                        <div className={classes.stepNumber}>5</div>\r\n                    </div>\r\n                    <div className={classes.subStepContent}>\r\n                        <Typography variant={\"body2\"}>\r\n                            在下方填写 Aria2 用作临时下载目录的 节点上的\r\n                            <strong>绝对路径</strong>，节点上的 Cloudreve\r\n                            进程需要此目录的读、写、执行权限。\r\n                        </Typography>\r\n                        <div className={classes.form}>\r\n                            <Input\r\n                                value={\r\n                                    props.node.Aria2OptionsSerialized.temp_path\r\n                                }\r\n                                onChange={props.handleOptionChange(\"temp_path\")}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.subStepContainer}>\r\n                    <div className={classes.stepNumberContainer}>\r\n                        <div className={classes.stepNumber}>5</div>\r\n                    </div>\r\n                    <div className={classes.subStepContent}>\r\n                        <Typography variant={\"body2\"}>\r\n                            在下方按需要填写一些 Aria2 额外参数信息。\r\n                        </Typography>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    状态刷新间隔 (秒)\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        step: 1,\r\n                                        min: 1,\r\n                                    }}\r\n                                    required\r\n                                    value={\r\n                                        props.node.Aria2OptionsSerialized\r\n                                            .interval\r\n                                    }\r\n                                    onChange={props.handleOptionChange(\r\n                                        \"interval\"\r\n                                    )}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    Cloudreve 向 Aria2 请求刷新任务状态的间隔。\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    RPC 调用超时 (秒)\r\n                                </InputLabel>\r\n                                <Input\r\n                                    type={\"number\"}\r\n                                    inputProps={{\r\n                                        step: 1,\r\n                                        min: 1,\r\n                                    }}\r\n                                    required\r\n                                    value={\r\n                                        props.node.Aria2OptionsSerialized\r\n                                            .timeout\r\n                                    }\r\n                                    onChange={props.handleOptionChange(\r\n                                        \"timeout\"\r\n                                    )}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    调用 RPC 服务时最长等待时间\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className={classes.form}>\r\n                            <FormControl fullWidth>\r\n                                <InputLabel htmlFor=\"component-helper\">\r\n                                    全局任务参数\r\n                                </InputLabel>\r\n                                <Input\r\n                                    multiline\r\n                                    required\r\n                                    value={\r\n                                        props.node.Aria2OptionsSerialized\r\n                                            .options\r\n                                    }\r\n                                    onChange={props.handleOptionChange(\r\n                                        \"options\"\r\n                                    )}\r\n                                />\r\n                                <FormHelperText id=\"component-helper-text\">\r\n                                    创建下载任务时携带的额外设置参数，以 JSON\r\n                                    编码后的格式书写，您可也可以将这些设置写在\r\n                                    Aria2 配置文件里，可用参数请查阅官方文档\r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.subStepContainer}>\r\n                    <div className={classes.stepNumberContainer}>\r\n                        <div className={classes.stepNumber}>6</div>\r\n                    </div>\r\n                    <div className={classes.subStepContent}>\r\n                        <Typography variant={\"body2\"}>\r\n                            完成以上步骤后，你可以点击下方的测试按钮测试\r\n                            {mode}\r\n                            Cloudreve 向 Aria2 通信是否正常。\r\n                            {props.node.Type === 0 &&\r\n                                \"在进行测试前请先确保您已进行并通过上一页面中的“从机通信测试”。\"}\r\n                        </Typography>\r\n                        <div className={classes.form}>\r\n                            <Button\r\n                                disabled={loading}\r\n                                variant={\"outlined\"}\r\n                                onClick={() => testAria2()}\r\n                                color={\"primary\"}\r\n                            >\r\n                                测试 Aria2 通信\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Collapse>\r\n\r\n            <div className={classes.stepFooter}>\r\n                {props.activeStep !== 0 && (\r\n                    <Button\r\n                        color={\"default\"}\r\n                        className={classes.button}\r\n                        onClick={props.onBack}\r\n                    >\r\n                        上一步\r\n                    </Button>\r\n                )}\r\n                <Button\r\n                    disabled={loading || props.loading}\r\n                    type={\"submit\"}\r\n                    variant={\"contained\"}\r\n                    color={\"primary\"}\r\n                    onClick={props.onSubmit}\r\n                >\r\n                    下一步\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../../actions\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    viewButtonLabel: { textTransform: \"none\" },\r\n    \"@global\": {\r\n        code: {\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            display: \"inline-block\",\r\n            padding: \"2px 6px\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"rgba(255,229,100,0.1)\",\r\n        },\r\n        pre: {\r\n            margin: \"24px 0\",\r\n            padding: \"12px 18px\",\r\n            overflow: \"auto\",\r\n            direction: \"ltr\",\r\n            borderRadius: \"4px\",\r\n            backgroundColor: \"#272c34\",\r\n            color: \"#fff\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Metainfo(props) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [loading, setLoading] = useState(false);\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    return (\r\n        <form\r\n            className={classes.stepContent}\r\n            onSubmit={(e) => {\r\n                e.preventDefault();\r\n                props.onSubmit(e);\r\n            }}\r\n        >\r\n            <div className={classes.subStepContainer}>\r\n                <div className={classes.stepNumberContainer}>\r\n                    <div className={classes.stepNumber}>1</div>\r\n                </div>\r\n                <div className={classes.subStepContent}>\r\n                    <Typography variant={\"body2\"}>为此节点命名：</Typography>\r\n                    <div className={classes.form}>\r\n                        <FormControl fullWidth>\r\n                            <Input\r\n                                required\r\n                                value={props.node.Name}\r\n                                onChange={props.handleTextChange(\"Name\")}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.subStepContainer}>\r\n                <div className={classes.stepNumberContainer}>\r\n                    <div className={classes.stepNumber}>2</div>\r\n                </div>\r\n                <div className={classes.subStepContent}>\r\n                    <Typography variant={\"body2\"}>\r\n                        为此节点指定负载均衡权重，数值为整数。某些负载均衡策略会根据此数值加权选择节点\r\n                    </Typography>\r\n                    <div className={classes.form}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel htmlFor=\"component-helper\">\r\n                                负载均衡权重\r\n                            </InputLabel>\r\n                            <Input\r\n                                type={\"number\"}\r\n                                required\r\n                                inputProps={{\r\n                                    step: 1,\r\n                                    min: 0,\r\n                                }}\r\n                                value={props.node.Rank}\r\n                                onChange={props.handleTextChange(\"Rank\")}\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.stepFooter}>\r\n                <Button\r\n                    disabled={loading || props.loading}\r\n                    type={\"submit\"}\r\n                    variant={\"contained\"}\r\n                    color={\"primary\"}\r\n                >\r\n                    下一步\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n","import { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../../actions\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    stepContent: {\r\n        padding: \"16px 32px 16px 32px\",\r\n    },\r\n    form: {\r\n        maxWidth: 400,\r\n        marginTop: 20,\r\n    },\r\n    formContainer: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            padding: \"0px 24px 0 24px\",\r\n        },\r\n    },\r\n    subStepContainer: {\r\n        display: \"flex\",\r\n        marginBottom: 20,\r\n        padding: 10,\r\n        transition: theme.transitions.create(\"background-color\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        \"&:focus-within\": {\r\n            backgroundColor: theme.palette.background.default,\r\n        },\r\n    },\r\n    stepNumber: {\r\n        width: 20,\r\n        height: 20,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.2),\r\n        color: theme.palette.secondary.contrastText,\r\n        textAlign: \"center\",\r\n        borderRadius: \" 50%\",\r\n    },\r\n    stepNumberContainer: {\r\n        marginRight: 10,\r\n    },\r\n    stepFooter: {\r\n        marginTop: 32,\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    viewButtonLabel: { textTransform: \"none\" },\r\n    \"@global\": {\r\n        code: {\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            display: \"inline-block\",\r\n            padding: \"2px 6px\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n            borderRadius: \"2px\",\r\n            backgroundColor: \"rgba(255,229,100,0.1)\",\r\n        },\r\n        pre: {\r\n            margin: \"24px 0\",\r\n            padding: \"12px 18px\",\r\n            overflow: \"auto\",\r\n            direction: \"ltr\",\r\n            borderRadius: \"4px\",\r\n            backgroundColor: \"#272c34\",\r\n            color: \"#fff\",\r\n            fontFamily:\r\n                ' Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function Completed(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <form className={classes.stepContent}>\r\n            <Typography>节点已保存！</Typography>\r\n            <Typography variant={\"body2\"} color={\"textSecondary\"}>\r\n                如果您添加了新节点，还需要在节点列表手动启动节点才能正常使用。\r\n            </Typography>\r\n\r\n            <div className={classes.stepFooter}>\r\n                <Button\r\n                    color={\"primary\"}\r\n                    className={classes.button}\r\n                    onClick={() => history.push(\"/admin/node\")}\r\n                >\r\n                    返回节点列表\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n","import React, { useCallback, useMemo, useState } from \"react\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../../actions\";\r\nimport { randomStr } from \"../../../../utils\";\r\nimport Communication from \"./Communication\";\r\nimport Aria2RPC from \"./Aria2RPC\";\r\nimport API from \"../../../../middleware/Api\";\r\nimport Metainfo from \"./Metainfo\";\r\nimport Completed from \"./Completed\";\r\n\r\nconst steps = [\r\n    {\r\n        slaveOnly: true,\r\n        title: \"通信配置\",\r\n        optional: false,\r\n        component: function show(p) {\r\n            return <Communication {...p} />;\r\n        },\r\n    },\r\n    {\r\n        slaveOnly: false,\r\n        title: \"离线下载\",\r\n        optional: false,\r\n        component: function show(p) {\r\n            return <Aria2RPC {...p} />;\r\n        },\r\n    },\r\n    {\r\n        slaveOnly: false,\r\n        title: \"杂项信息\",\r\n        optional: false,\r\n        component: function show(p) {\r\n            return <Metainfo {...p} />;\r\n        },\r\n    },\r\n    {\r\n        slaveOnly: false,\r\n        title: \"完成\",\r\n        optional: false,\r\n        component: function show(p) {\r\n            return <Completed {...p} />;\r\n        },\r\n    },\r\n];\r\n\r\nexport default function NodeGuide(props) {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [skipped, setSkipped] = React.useState(new Set());\r\n    const [loading, setLoading] = useState(false);\r\n    const [node, setNode] = useState(\r\n        props.node\r\n            ? props.node\r\n            : {\r\n                  Status: 1,\r\n                  Type: 0,\r\n                  Aria2Enabled: \"false\",\r\n                  Server: \"https://example.com:5212\",\r\n                  SlaveKey: randomStr(64),\r\n                  MasterKey: randomStr(64),\r\n                  Rank: \"0\",\r\n                  Aria2OptionsSerialized: {\r\n                      token: randomStr(32),\r\n                      options: \"{}\",\r\n                      interval: \"10\",\r\n                      timeout: \"10\",\r\n                  },\r\n              }\r\n    );\r\n\r\n    const usedSteps = useMemo(() => {\r\n        return steps.filter((step) => !(step.slaveOnly && node.Type === 1));\r\n    }, [node.Type]);\r\n\r\n    const isStepSkipped = (step) => {\r\n        return skipped.has(step);\r\n    };\r\n\r\n    const handleTextChange = (name) => (event) => {\r\n        setNode({\r\n            ...node,\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    const handleOptionChange = (name) => (event) => {\r\n        setNode({\r\n            ...node,\r\n            Aria2OptionsSerialized: {\r\n                ...node.Aria2OptionsSerialized,\r\n                [name]: event.target.value,\r\n            },\r\n        });\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    const nextStep = () => {\r\n        if (props.node || activeStep + 1 === steps.length - 1) {\r\n            setLoading(true);\r\n\r\n            const nodeCopy = { ...node };\r\n            nodeCopy.Aria2OptionsSerialized = {\r\n                ...node.Aria2OptionsSerialized,\r\n            };\r\n            nodeCopy.Rank = parseInt(nodeCopy.Rank);\r\n            nodeCopy.Aria2OptionsSerialized.interval = parseInt(\r\n                nodeCopy.Aria2OptionsSerialized.interval\r\n            );\r\n            nodeCopy.Aria2OptionsSerialized.timeout = parseInt(\r\n                nodeCopy.Aria2OptionsSerialized.timeout\r\n            );\r\n            nodeCopy.Aria2Enabled = nodeCopy.Aria2Enabled === \"true\";\r\n            API.post(\"/admin/node\", {\r\n                node: nodeCopy,\r\n            })\r\n                .then(() => {\r\n                    ToggleSnackbar(\r\n                        \"top\",\r\n                        \"right\",\r\n                        \"节点已\" + (props.node ? \"保存\" : \"添加\"),\r\n                        \"success\"\r\n                    );\r\n                    setActiveStep(activeStep + 1);\r\n                    setLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n                })\r\n                .then(() => {\r\n                    setLoading(false);\r\n                });\r\n        } else {\r\n            setActiveStep(activeStep + 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant={\"h6\"}>\r\n                {props.node ? \"修改\" : \"添加\"} 节点\r\n            </Typography>\r\n            <Stepper activeStep={activeStep}>\r\n                {usedSteps.map((label, index) => {\r\n                    const stepProps = {};\r\n                    const labelProps = {};\r\n                    if (label.optional) {\r\n                        labelProps.optional = (\r\n                            <Typography variant=\"caption\">可选</Typography>\r\n                        );\r\n                    }\r\n                    if (isStepSkipped(index)) {\r\n                        stepProps.completed = false;\r\n                    }\r\n                    if (!(label.slaveOnly && node.Type === 1)) {\r\n                        return (\r\n                            <Step key={label.title} {...stepProps}>\r\n                                <StepLabel {...labelProps}>\r\n                                    {label.title}\r\n                                </StepLabel>\r\n                            </Step>\r\n                        );\r\n                    }\r\n                })}\r\n            </Stepper>\r\n\r\n            {usedSteps[activeStep].component({\r\n                onSubmit: (e) => nextStep(),\r\n                node: node,\r\n                loading: loading,\r\n                onBack: (e) => setActiveStep(activeStep - 1),\r\n                handleTextChange: handleTextChange,\r\n                activeStep: activeStep,\r\n                handleOptionChange: handleOptionChange,\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport NodeGuide from \"./Guide/NodeGuide\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function AddNode() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Paper square className={classes.content}>\r\n                <NodeGuide />\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport NodeGuide from \"./Guide/NodeGuide\";\r\nimport { useParams } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleSnackbar } from \"../../../actions\";\r\nimport API from \"../../../middleware/Api\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            marginLeft: 100,\r\n        },\r\n        marginBottom: 40,\r\n    },\r\n    content: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function EditNode() {\r\n    const classes = useStyles();\r\n    const { id } = useParams();\r\n    const [node, setNode] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const ToggleSnackbar = useCallback(\r\n        (vertical, horizontal, msg, color) =>\r\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        API.get(\"/admin/node/\" + id)\r\n            .then((response) => {\r\n                response.data.Rank = response.data.Rank.toString();\r\n                response.data.Aria2OptionsSerialized.interval = response.data.Aria2OptionsSerialized.interval.toString();\r\n                response.data.Aria2OptionsSerialized.timeout = response.data.Aria2OptionsSerialized.timeout.toString();\r\n                response.data.Aria2Enabled = response.data.Aria2Enabled\r\n                    ? \"true\"\r\n                    : \"false\";\r\n                setNode(response.data);\r\n            })\r\n            .catch((error) => {\r\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\r\n            });\r\n    }, [id]);\r\n\r\n    return (\r\n        <div>\r\n            <Paper square className={classes.content}>\r\n                {node && <NodeGuide node={node} />}\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { CssBaseline, makeStyles } from \"@material-ui/core\";\r\nimport AlertBar from \"./component/Common/Snackbar\";\r\nimport Dashboard from \"./component/Admin/Dashboard\";\r\nimport { useHistory } from \"react-router\";\r\nimport Auth from \"./middleware/Auth\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport createTheme from \"@material-ui/core/styles/createMuiTheme\";\r\nimport { zhCN } from \"@material-ui/core/locale\";\r\n\r\nimport Index from \"./component/Admin/Index\";\r\nimport SiteInformation from \"./component/Admin/Setting/SiteInformation\";\r\nimport Access from \"./component/Admin/Setting/Access\";\r\nimport Mail from \"./component/Admin/Setting/Mail\";\r\nimport UploadDownload from \"./component/Admin/Setting/UploadDownload\";\r\nimport Theme from \"./component/Admin/Setting/Theme\";\r\nimport ImageSetting from \"./component/Admin/Setting/Image\";\r\nimport Policy from \"./component/Admin/Policy/Policy\";\r\nimport AddPolicy from \"./component/Admin/Policy/AddPolicy\";\r\nimport EditPolicyPreload from \"./component/Admin/Policy/EditPolicy\";\r\nimport Group from \"./component/Admin/Group/Group\";\r\nimport GroupForm from \"./component/Admin/Group/GroupForm\";\r\nimport EditGroupPreload from \"./component/Admin/Group/EditGroup\";\r\nimport User from \"./component/Admin/User/User\";\r\nimport UserForm from \"./component/Admin/User/UserForm\";\r\nimport EditUserPreload from \"./component/Admin/User/EditUser\";\r\nimport File from \"./component/Admin/File/File\";\r\nimport Share from \"./component/Admin/Share/Share\";\r\nimport Download from \"./component/Admin/Task/Download\";\r\nimport Task from \"./component/Admin/Task/Task\";\r\nimport Import from \"./component/Admin/File/Import\";\r\nimport Captcha from \"./component/Admin/Setting/Captcha\";\r\nimport Node from \"./component/Admin/Node/Node\";\r\nimport AddNode from \"./component/Admin/Node/AddNode\";\r\nimport EditNode from \"./component/Admin/Node/EditNode\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: 0,\r\n        minWidth: 0,\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n}));\r\n\r\nconst theme = createTheme(\r\n    {\r\n        palette: {\r\n            background: {},\r\n        },\r\n    },\r\n    zhCN\r\n);\r\n\r\nexport default function Admin() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [show, setShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const user = Auth.GetUser();\r\n        if (user && user.group) {\r\n            if (user.group.id !== 1) {\r\n                history.push(\"/home\");\r\n                return;\r\n            }\r\n            setShow(true);\r\n            return;\r\n        }\r\n        history.push(\"/login\");\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ThemeProvider theme={theme}>\r\n                <div className={classes.root}>\r\n                    <CssBaseline />\r\n                    <AlertBar />\r\n                    {show && (\r\n                        <Dashboard\r\n                            content={(path) => (\r\n                                <Switch>\r\n                                    <Route path={`${path}/home`} exact>\r\n                                        <Index />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/basic`}>\r\n                                        <SiteInformation />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/access`}>\r\n                                        <Access />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/mail`}>\r\n                                        <Mail />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/upload`}>\r\n                                        <UploadDownload />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/theme`}>\r\n                                        <Theme />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/image`}>\r\n                                        <ImageSetting />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/captcha`}>\r\n                                        <Captcha />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/policy`} exact>\r\n                                        <Policy />\r\n                                    </Route>\r\n\r\n                                    <Route\r\n                                        path={`${path}/policy/add/:type`}\r\n                                        exact\r\n                                    >\r\n                                        <AddPolicy />\r\n                                    </Route>\r\n\r\n                                    <Route\r\n                                        path={`${path}/policy/edit/:mode/:id`}\r\n                                        exact\r\n                                    >\r\n                                        <EditPolicyPreload />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/group`} exact>\r\n                                        <Group />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/group/add`} exact>\r\n                                        <GroupForm />\r\n                                    </Route>\r\n\r\n                                    <Route\r\n                                        path={`${path}/group/edit/:id`}\r\n                                        exact\r\n                                    >\r\n                                        <EditGroupPreload />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/user`} exact>\r\n                                        <User />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/user/add`} exact>\r\n                                        <UserForm />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/user/edit/:id`} exact>\r\n                                        <EditUserPreload />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/file`} exact>\r\n                                        <File />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/file/import`} exact>\r\n                                        <Import />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/share`} exact>\r\n                                        <Share />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/download`} exact>\r\n                                        <Download />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/task`} exact>\r\n                                        <Task />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/node`} exact>\r\n                                        <Node />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/node/add`} exact>\r\n                                        <AddNode />\r\n                                    </Route>\r\n\r\n                                    <Route path={`${path}/node/edit/:id`} exact>\r\n                                        <EditNode />\r\n                                    </Route>\r\n                                </Switch>\r\n                            )}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </ThemeProvider>\r\n        </React.Fragment>\r\n    );\r\n}\r\n"],"sourceRoot":""}